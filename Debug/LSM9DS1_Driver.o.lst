   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"LSM9DS1_Driver.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	TimerId,4,4
  20              		.comm	Status,4,4
  21              		.comm	WriteTimerId,4,4
  22              		.comm	WriteTimerStatus,4,4
  23              		.comm	TimerIdReadBytes,4,4
  24              		.comm	StatusReadBytes,4,4
  25              		.comm	settings,40,4
  26              		.comm	gBias,12,4
  27              		.comm	aBias,12,4
  28              		.comm	mBias,12,4
  29              		.comm	gBiasRaw,6,4
  30              		.comm	aBiasRaw,6,4
  31              		.comm	mBiasRaw,6,4
  32              		.comm	_autoCalc,1,1
  33              		.comm	_mAddress,1,1
  34              		.comm	_xgAddress,1,1
  35              		.comm	gRes,4,4
  36              		.comm	aRes,4,4
  37              		.comm	mRes,4,4
  38              		.comm	gx,2,2
  39              		.comm	gy,2,2
  40              		.comm	gz,2,2
  41              		.comm	ax,2,2
  42              		.comm	ay,2,2
  43              		.comm	az,2,2
  44              		.comm	mx,2,2
  45              		.comm	my,2,2
  46              		.comm	mz,2,2
  47              		.comm	temperature,2,2
  48              		.comm	accelOsX,100,4
  49              		.comm	accelOsY,100,4
  50              		.comm	accelOsZ,100,4
  51              		.global	TimerIdReadMeasurements
  52              		.bss
  53              		.align	2
  56              	TimerIdReadMeasurements:
  57 0000 00000000 		.space	4
  58              		.global	StatusTimerReadMeasurements
  59              		.data
  60              		.align	2
  63              	StatusTimerReadMeasurements:
  64 0000 02000000 		.word	2
  65              		.global	readingAllowed
  68              	readingAllowed:
  69 0004 01       		.byte	1
  70              		.comm	pomiaryAccel,600,4
  71              		.comm	pomiaryAccel1,600,4
  72              		.comm	adrAndData,23,4
  73              		.bss
  74              	sendMsgTimerExpired:
  75 0004 00       		.space	1
  76              		.global	TimerIDSendMsg
  77 0005 000000   		.align	2
  80              	TimerIDSendMsg:
  81 0008 00000000 		.space	4
  82              		.global	statusTimerSendMsg
  83              		.data
  84 0005 000000   		.align	2
  87              	statusTimerSendMsg:
  88 0008 02000000 		.word	2
  89              		.global	sendingInProgress
  90              		.bss
  93              	sendingInProgress:
  94 000c 00       		.space	1
  95              		.global	counter
  96 000d 000000   		.align	2
  99              	counter:
 100 0010 00000000 		.space	4
 101              		.global	magSensitivity
 102              		.data
 103              		.align	2
 106              	magSensitivity:
 107 000c F7CC1239 		.word	957533431
 108 0010 240B9839 		.word	966265636
 109 0014 9F71E139 		.word	971075999
 110 0018 240B183A 		.word	974654244
 111              		.global	accelX
 112              		.bss
 113              		.align	1
 116              	accelX:
 117 0014 0000     		.space	2
 118              		.global	accelY
 119              		.align	1
 122              	accelY:
 123 0016 0000     		.space	2
 124              		.global	accelZ
 125              		.align	1
 128              	accelZ:
 129 0018 0000     		.space	2
 130              		.global	gyroX
 131              		.align	1
 134              	gyroX:
 135 001a 0000     		.space	2
 136              		.global	gyroY
 137              		.align	1
 140              	gyroY:
 141 001c 0000     		.space	2
 142              		.global	gyroZ
 143              		.align	1
 146              	gyroZ:
 147 001e 0000     		.space	2
 148              		.section	.text.getAccelX,"ax",%progbits
 149              		.align	2
 150              		.global	getAccelX
 151              		.thumb
 152              		.thumb_func
 154              	getAccelX:
 155              	.LFB112:
 156              		.file 1 "../LSM9DS1_Driver.c"
   1:../LSM9DS1_Driver.c **** /*
   2:../LSM9DS1_Driver.c ****  * LSM9DS1_Driver.c
   3:../LSM9DS1_Driver.c ****  *
   4:../LSM9DS1_Driver.c ****  *  Created on: 12-02-2016
   5:../LSM9DS1_Driver.c ****  *      Author: Mateusz
   6:../LSM9DS1_Driver.c ****  */
   7:../LSM9DS1_Driver.c **** #include "LSM9DS1_Driver.h"
   8:../LSM9DS1_Driver.c **** #include "LSM9DS1_Registers.h"
   9:../LSM9DS1_Driver.c **** #include "LSM9DS1_Types.h"
  10:../LSM9DS1_Driver.c **** #include "FIFO_functions.h"
  11:../LSM9DS1_Driver.c **** 
  12:../LSM9DS1_Driver.c **** #include <stdint.h>
  13:../LSM9DS1_Driver.c **** #include <inttypes.h>
  14:../LSM9DS1_Driver.c **** #include <math.h>
  15:../LSM9DS1_Driver.c **** #include <stdlib.h>
  16:../LSM9DS1_Driver.c **** #include <string.h>
  17:../LSM9DS1_Driver.c **** 
  18:../LSM9DS1_Driver.c **** //#define DELAY 10000
  19:../LSM9DS1_Driver.c **** #define DELAY 10000
  20:../LSM9DS1_Driver.c **** 
  21:../LSM9DS1_Driver.c **** #define LSM9DS1_M	0x1E // Would be 0x1C if SDO_M is LOW
  22:../LSM9DS1_Driver.c **** #define LSM9DS1_AG	0x6B // Would be 0x6A if SDO_AG is LOW
  23:../LSM9DS1_Driver.c **** 
  24:../LSM9DS1_Driver.c **** char accelOsX[100];
  25:../LSM9DS1_Driver.c **** char accelOsY[100];
  26:../LSM9DS1_Driver.c **** char accelOsZ[100];
  27:../LSM9DS1_Driver.c **** 
  28:../LSM9DS1_Driver.c **** #define TRUE 1
  29:../LSM9DS1_Driver.c **** #define FALSE 0
  30:../LSM9DS1_Driver.c **** 
  31:../LSM9DS1_Driver.c **** handle_t TimerIdReadMeasurements = 0;
  32:../LSM9DS1_Driver.c **** uint32_t StatusTimerReadMeasurements = SYSTM001_ERROR;
  33:../LSM9DS1_Driver.c **** 
  34:../LSM9DS1_Driver.c **** volatile bool readingAllowed = TRUE;
  35:../LSM9DS1_Driver.c **** 
  36:../LSM9DS1_Driver.c **** accel pomiaryAccel[100];
  37:../LSM9DS1_Driver.c **** accel pomiaryAccel1[100];
  38:../LSM9DS1_Driver.c **** 
  39:../LSM9DS1_Driver.c **** addressAndData adrAndData;
  40:../LSM9DS1_Driver.c **** 
  41:../LSM9DS1_Driver.c **** //tools for sending MSG
  42:../LSM9DS1_Driver.c **** static bool sendMsgTimerExpired = FALSE;
  43:../LSM9DS1_Driver.c **** handle_t TimerIDSendMsg = 0;
  44:../LSM9DS1_Driver.c **** uint32_t statusTimerSendMsg = SYSTM001_ERROR;
  45:../LSM9DS1_Driver.c **** bool sendingInProgress = FALSE;
  46:../LSM9DS1_Driver.c **** //tools for sending MSG
  47:../LSM9DS1_Driver.c **** 
  48:../LSM9DS1_Driver.c **** int counter = 0;
  49:../LSM9DS1_Driver.c **** 
  50:../LSM9DS1_Driver.c **** float magSensitivity[4] = {0.00014, 0.00029, 0.00043, 0.00058};
  51:../LSM9DS1_Driver.c **** 
  52:../LSM9DS1_Driver.c **** //linear acceleration all axes
  53:../LSM9DS1_Driver.c **** int16_t accelX = 0;
  54:../LSM9DS1_Driver.c **** int16_t accelY = 0;
  55:../LSM9DS1_Driver.c **** int16_t accelZ = 0;
  56:../LSM9DS1_Driver.c **** //linear acceleration all axes
  57:../LSM9DS1_Driver.c **** 
  58:../LSM9DS1_Driver.c **** //gyroscope all axes
  59:../LSM9DS1_Driver.c **** int16_t gyroX = 0;
  60:../LSM9DS1_Driver.c **** int16_t gyroY = 0;
  61:../LSM9DS1_Driver.c **** int16_t gyroZ = 0;
  62:../LSM9DS1_Driver.c **** //gyroscope all axes
  63:../LSM9DS1_Driver.c **** 
  64:../LSM9DS1_Driver.c **** int16_t getAccelX(void)
  65:../LSM9DS1_Driver.c **** {
 157              		.loc 1 65 0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 1, uses_anonymous_args = 0
 161              		@ link register save eliminated.
 162 0000 80B4     		push	{r7}
 163              	.LCFI0:
 164              		.cfi_def_cfa_offset 4
 165              		.cfi_offset 7, -4
 166 0002 00AF     		add	r7, sp, #0
 167              	.LCFI1:
 168              		.cfi_def_cfa_register 7
  66:../LSM9DS1_Driver.c **** 	return accelX;
 169              		.loc 1 66 0
 170 0004 40F20003 		movw	r3, #:lower16:accelX
 171 0008 C0F20003 		movt	r3, #:upper16:accelX
 172 000c 1B88     		ldrh	r3, [r3, #0]
 173 000e 1BB2     		sxth	r3, r3
  67:../LSM9DS1_Driver.c **** }
 174              		.loc 1 67 0
 175 0010 1846     		mov	r0, r3
 176 0012 BD46     		mov	sp, r7
 177 0014 80BC     		pop	{r7}
 178 0016 7047     		bx	lr
 179              		.cfi_endproc
 180              	.LFE112:
 182              		.section	.text.getAccelY,"ax",%progbits
 183              		.align	2
 184              		.global	getAccelY
 185              		.thumb
 186              		.thumb_func
 188              	getAccelY:
 189              	.LFB113:
  68:../LSM9DS1_Driver.c **** 
  69:../LSM9DS1_Driver.c **** int16_t getAccelY(void)
  70:../LSM9DS1_Driver.c **** {
 190              		.loc 1 70 0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 1, uses_anonymous_args = 0
 194              		@ link register save eliminated.
 195 0000 80B4     		push	{r7}
 196              	.LCFI2:
 197              		.cfi_def_cfa_offset 4
 198              		.cfi_offset 7, -4
 199 0002 00AF     		add	r7, sp, #0
 200              	.LCFI3:
 201              		.cfi_def_cfa_register 7
  71:../LSM9DS1_Driver.c **** 	return accelY;
 202              		.loc 1 71 0
 203 0004 40F20003 		movw	r3, #:lower16:accelY
 204 0008 C0F20003 		movt	r3, #:upper16:accelY
 205 000c 1B88     		ldrh	r3, [r3, #0]
 206 000e 1BB2     		sxth	r3, r3
  72:../LSM9DS1_Driver.c **** }
 207              		.loc 1 72 0
 208 0010 1846     		mov	r0, r3
 209 0012 BD46     		mov	sp, r7
 210 0014 80BC     		pop	{r7}
 211 0016 7047     		bx	lr
 212              		.cfi_endproc
 213              	.LFE113:
 215              		.section	.text.getAccelZ,"ax",%progbits
 216              		.align	2
 217              		.global	getAccelZ
 218              		.thumb
 219              		.thumb_func
 221              	getAccelZ:
 222              	.LFB114:
  73:../LSM9DS1_Driver.c **** 
  74:../LSM9DS1_Driver.c **** int16_t getAccelZ(void)
  75:../LSM9DS1_Driver.c **** {
 223              		.loc 1 75 0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 0
 226              		@ frame_needed = 1, uses_anonymous_args = 0
 227              		@ link register save eliminated.
 228 0000 80B4     		push	{r7}
 229              	.LCFI4:
 230              		.cfi_def_cfa_offset 4
 231              		.cfi_offset 7, -4
 232 0002 00AF     		add	r7, sp, #0
 233              	.LCFI5:
 234              		.cfi_def_cfa_register 7
  76:../LSM9DS1_Driver.c **** 	return accelZ;
 235              		.loc 1 76 0
 236 0004 40F20003 		movw	r3, #:lower16:accelZ
 237 0008 C0F20003 		movt	r3, #:upper16:accelZ
 238 000c 1B88     		ldrh	r3, [r3, #0]
 239 000e 1BB2     		sxth	r3, r3
  77:../LSM9DS1_Driver.c **** }
 240              		.loc 1 77 0
 241 0010 1846     		mov	r0, r3
 242 0012 BD46     		mov	sp, r7
 243 0014 80BC     		pop	{r7}
 244 0016 7047     		bx	lr
 245              		.cfi_endproc
 246              	.LFE114:
 248              		.section	.text.startMeasurements,"ax",%progbits
 249              		.align	2
 250              		.global	startMeasurements
 251              		.thumb
 252              		.thumb_func
 254              	startMeasurements:
 255              	.LFB115:
  78:../LSM9DS1_Driver.c **** 
  79:../LSM9DS1_Driver.c **** void startMeasurements(void)
  80:../LSM9DS1_Driver.c **** {
 256              		.loc 1 80 0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 1, uses_anonymous_args = 0
 260 0000 80B5     		push	{r7, lr}
 261              	.LCFI6:
 262              		.cfi_def_cfa_offset 8
 263              		.cfi_offset 7, -8
 264              		.cfi_offset 14, -4
 265 0002 00AF     		add	r7, sp, #0
 266              	.LCFI7:
 267              		.cfi_def_cfa_register 7
  81:../LSM9DS1_Driver.c **** 	TimerIdReadMeasurements=SYSTM001_CreateTimer(2,SYSTM001_PERIODIC,timerHandlerReceiveOneMeasurement
 268              		.loc 1 81 0
 269 0004 4FF00200 		mov	r0, #2
 270 0008 4FF00101 		mov	r1, #1
 271 000c 40F20002 		movw	r2, #:lower16:timerHandlerReceiveOneMeasurementEachSensor
 272 0010 C0F20002 		movt	r2, #:upper16:timerHandlerReceiveOneMeasurementEachSensor
 273 0014 40F20003 		movw	r3, #:lower16:adrAndData
 274 0018 C0F20003 		movt	r3, #:upper16:adrAndData
 275 001c FFF7FEFF 		bl	SYSTM001_CreateTimer
 276 0020 0246     		mov	r2, r0
 277 0022 40F20003 		movw	r3, #:lower16:TimerIdReadMeasurements
 278 0026 C0F20003 		movt	r3, #:upper16:TimerIdReadMeasurements
 279 002a 1A60     		str	r2, [r3, #0]
  82:../LSM9DS1_Driver.c **** 	SYSTM001_StartTimer(TimerIdReadMeasurements);
 280              		.loc 1 82 0
 281 002c 40F20003 		movw	r3, #:lower16:TimerIdReadMeasurements
 282 0030 C0F20003 		movt	r3, #:upper16:TimerIdReadMeasurements
 283 0034 1B68     		ldr	r3, [r3, #0]
 284 0036 1846     		mov	r0, r3
 285 0038 FFF7FEFF 		bl	SYSTM001_StartTimer
  83:../LSM9DS1_Driver.c **** }
 286              		.loc 1 83 0
 287 003c 80BD     		pop	{r7, pc}
 288              		.cfi_endproc
 289              	.LFE115:
 291 003e 00BF     		.section	.text.readAndSendMeasurements,"ax",%progbits
 292              		.align	2
 293              		.global	readAndSendMeasurements
 294              		.thumb
 295              		.thumb_func
 297              	readAndSendMeasurements:
 298              	.LFB116:
  84:../LSM9DS1_Driver.c **** 
  85:../LSM9DS1_Driver.c **** 
  86:../LSM9DS1_Driver.c **** 
  87:../LSM9DS1_Driver.c **** void readAndSendMeasurements(void (*sendFunction)(char *str, int len))
  88:../LSM9DS1_Driver.c **** {
 299              		.loc 1 88 0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 16
 302              		@ frame_needed = 1, uses_anonymous_args = 0
 303 0000 80B5     		push	{r7, lr}
 304              	.LCFI8:
 305              		.cfi_def_cfa_offset 8
 306              		.cfi_offset 7, -8
 307              		.cfi_offset 14, -4
 308 0002 84B0     		sub	sp, sp, #16
 309              	.LCFI9:
 310              		.cfi_def_cfa_offset 24
 311 0004 00AF     		add	r7, sp, #0
 312              	.LCFI10:
 313              		.cfi_def_cfa_register 7
 314 0006 7860     		str	r0, [r7, #4]
  89:../LSM9DS1_Driver.c **** 	if(!readingAllowed && (counter < 1))
 315              		.loc 1 89 0
 316 0008 40F20003 		movw	r3, #:lower16:readingAllowed
 317 000c C0F20003 		movt	r3, #:upper16:readingAllowed
 318 0010 1B78     		ldrb	r3, [r3, #0]
 319 0012 DBB2     		uxtb	r3, r3
 320 0014 002B     		cmp	r3, #0
 321 0016 40F02182 		bne	.L9
 322              		.loc 1 89 0 is_stmt 0 discriminator 1
 323 001a 40F20003 		movw	r3, #:lower16:counter
 324 001e C0F20003 		movt	r3, #:upper16:counter
 325 0022 1B68     		ldr	r3, [r3, #0]
 326 0024 002B     		cmp	r3, #0
 327 0026 00F31982 		bgt	.L9
  90:../LSM9DS1_Driver.c **** 	{
  91:../LSM9DS1_Driver.c **** 
  92:../LSM9DS1_Driver.c **** 		accelX = (adrAndData.dane[1] << 8) | adrAndData.dane[0]; // Store x-axis values into gx
 328              		.loc 1 92 0 is_stmt 1
 329 002a 40F20003 		movw	r3, #:lower16:adrAndData
 330 002e C0F20003 		movt	r3, #:upper16:adrAndData
 331 0032 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 332 0034 4FEA0323 		lsl	r3, r3, #8
 333 0038 9AB2     		uxth	r2, r3
 334 003a 40F20003 		movw	r3, #:lower16:adrAndData
 335 003e C0F20003 		movt	r3, #:upper16:adrAndData
 336 0042 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 337 0044 1343     		orrs	r3, r3, r2
 338 0046 9AB2     		uxth	r2, r3
 339 0048 40F20003 		movw	r3, #:lower16:accelX
 340 004c C0F20003 		movt	r3, #:upper16:accelX
 341 0050 1A80     		strh	r2, [r3, #0]	@ movhi
  93:../LSM9DS1_Driver.c **** 
  94:../LSM9DS1_Driver.c **** 		accelY = (adrAndData.dane[3] << 8) | adrAndData.dane[2]; // Store y-axis values into gy
 342              		.loc 1 94 0
 343 0052 40F20003 		movw	r3, #:lower16:adrAndData
 344 0056 C0F20003 		movt	r3, #:upper16:adrAndData
 345 005a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 346 005c 4FEA0323 		lsl	r3, r3, #8
 347 0060 9AB2     		uxth	r2, r3
 348 0062 40F20003 		movw	r3, #:lower16:adrAndData
 349 0066 C0F20003 		movt	r3, #:upper16:adrAndData
 350 006a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 351 006c 1343     		orrs	r3, r3, r2
 352 006e 9AB2     		uxth	r2, r3
 353 0070 40F20003 		movw	r3, #:lower16:accelY
 354 0074 C0F20003 		movt	r3, #:upper16:accelY
 355 0078 1A80     		strh	r2, [r3, #0]	@ movhi
  95:../LSM9DS1_Driver.c **** 
  96:../LSM9DS1_Driver.c **** 		accelZ = (adrAndData.dane[5] << 8) | adrAndData.dane[4]; // Store z-axis values into gz
 356              		.loc 1 96 0
 357 007a 40F20003 		movw	r3, #:lower16:adrAndData
 358 007e C0F20003 		movt	r3, #:upper16:adrAndData
 359 0082 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 360 0084 4FEA0323 		lsl	r3, r3, #8
 361 0088 9AB2     		uxth	r2, r3
 362 008a 40F20003 		movw	r3, #:lower16:adrAndData
 363 008e C0F20003 		movt	r3, #:upper16:adrAndData
 364 0092 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 365 0094 1343     		orrs	r3, r3, r2
 366 0096 9AB2     		uxth	r2, r3
 367 0098 40F20003 		movw	r3, #:lower16:accelZ
 368 009c C0F20003 		movt	r3, #:upper16:accelZ
 369 00a0 1A80     		strh	r2, [r3, #0]	@ movhi
  97:../LSM9DS1_Driver.c **** 
  98:../LSM9DS1_Driver.c **** 		if (_autoCalc) //kalibracja
 370              		.loc 1 98 0
 371 00a2 40F20003 		movw	r3, #:lower16:_autoCalc
 372 00a6 C0F20003 		movt	r3, #:upper16:_autoCalc
 373 00aa 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 374 00ac 002B     		cmp	r3, #0
 375 00ae 3BD0     		beq	.L10
  99:../LSM9DS1_Driver.c **** 		{
 100:../LSM9DS1_Driver.c **** 			accelX -= aBiasRaw[X_AXIS];
 376              		.loc 1 100 0
 377 00b0 40F20003 		movw	r3, #:lower16:accelX
 378 00b4 C0F20003 		movt	r3, #:upper16:accelX
 379 00b8 1B88     		ldrh	r3, [r3, #0]
 380 00ba 9AB2     		uxth	r2, r3
 381 00bc 40F20003 		movw	r3, #:lower16:aBiasRaw
 382 00c0 C0F20003 		movt	r3, #:upper16:aBiasRaw
 383 00c4 1B88     		ldrh	r3, [r3, #0]
 384 00c6 9BB2     		uxth	r3, r3
 385 00c8 D31A     		subs	r3, r2, r3
 386 00ca 9BB2     		uxth	r3, r3
 387 00cc 9AB2     		uxth	r2, r3
 388 00ce 40F20003 		movw	r3, #:lower16:accelX
 389 00d2 C0F20003 		movt	r3, #:upper16:accelX
 390 00d6 1A80     		strh	r2, [r3, #0]	@ movhi
 101:../LSM9DS1_Driver.c **** 			accelX -= aBiasRaw[Y_AXIS];
 391              		.loc 1 101 0
 392 00d8 40F20003 		movw	r3, #:lower16:accelX
 393 00dc C0F20003 		movt	r3, #:upper16:accelX
 394 00e0 1B88     		ldrh	r3, [r3, #0]
 395 00e2 9AB2     		uxth	r2, r3
 396 00e4 40F20003 		movw	r3, #:lower16:aBiasRaw
 397 00e8 C0F20003 		movt	r3, #:upper16:aBiasRaw
 398 00ec 5B88     		ldrh	r3, [r3, #2]
 399 00ee 9BB2     		uxth	r3, r3
 400 00f0 D31A     		subs	r3, r2, r3
 401 00f2 9BB2     		uxth	r3, r3
 402 00f4 9AB2     		uxth	r2, r3
 403 00f6 40F20003 		movw	r3, #:lower16:accelX
 404 00fa C0F20003 		movt	r3, #:upper16:accelX
 405 00fe 1A80     		strh	r2, [r3, #0]	@ movhi
 102:../LSM9DS1_Driver.c **** 			accelX -= aBiasRaw[Z_AXIS];
 406              		.loc 1 102 0
 407 0100 40F20003 		movw	r3, #:lower16:accelX
 408 0104 C0F20003 		movt	r3, #:upper16:accelX
 409 0108 1B88     		ldrh	r3, [r3, #0]
 410 010a 9AB2     		uxth	r2, r3
 411 010c 40F20003 		movw	r3, #:lower16:aBiasRaw
 412 0110 C0F20003 		movt	r3, #:upper16:aBiasRaw
 413 0114 9B88     		ldrh	r3, [r3, #4]
 414 0116 9BB2     		uxth	r3, r3
 415 0118 D31A     		subs	r3, r2, r3
 416 011a 9BB2     		uxth	r3, r3
 417 011c 9AB2     		uxth	r2, r3
 418 011e 40F20003 		movw	r3, #:lower16:accelX
 419 0122 C0F20003 		movt	r3, #:upper16:accelX
 420 0126 1A80     		strh	r2, [r3, #0]	@ movhi
 421              	.L10:
 103:../LSM9DS1_Driver.c **** 		}
 104:../LSM9DS1_Driver.c **** 
 105:../LSM9DS1_Driver.c **** 		accelX = calcAccel(accelX);
 422              		.loc 1 105 0
 423 0128 40F20003 		movw	r3, #:lower16:accelX
 424 012c C0F20003 		movt	r3, #:upper16:accelX
 425 0130 1B88     		ldrh	r3, [r3, #0]
 426 0132 1BB2     		sxth	r3, r3
 427 0134 1846     		mov	r0, r3
 428 0136 FFF7FEFF 		bl	calcAccel
 429 013a 07EE900A 		fmsr	s15, r0
 430 013e FDEEE77A 		ftosizs	s15, s15
 431 0142 17EE903A 		fmrs	r3, s15	@ int
 432 0146 9AB2     		uxth	r2, r3
 433 0148 40F20003 		movw	r3, #:lower16:accelX
 434 014c C0F20003 		movt	r3, #:upper16:accelX
 435 0150 1A80     		strh	r2, [r3, #0]	@ movhi
 106:../LSM9DS1_Driver.c **** 		accelY = calcAccel(accelY);
 436              		.loc 1 106 0
 437 0152 40F20003 		movw	r3, #:lower16:accelY
 438 0156 C0F20003 		movt	r3, #:upper16:accelY
 439 015a 1B88     		ldrh	r3, [r3, #0]
 440 015c 1BB2     		sxth	r3, r3
 441 015e 1846     		mov	r0, r3
 442 0160 FFF7FEFF 		bl	calcAccel
 443 0164 07EE900A 		fmsr	s15, r0
 444 0168 FDEEE77A 		ftosizs	s15, s15
 445 016c 17EE903A 		fmrs	r3, s15	@ int
 446 0170 9AB2     		uxth	r2, r3
 447 0172 40F20003 		movw	r3, #:lower16:accelY
 448 0176 C0F20003 		movt	r3, #:upper16:accelY
 449 017a 1A80     		strh	r2, [r3, #0]	@ movhi
 107:../LSM9DS1_Driver.c **** 		accelZ = calcAccel(accelZ);
 450              		.loc 1 107 0
 451 017c 40F20003 		movw	r3, #:lower16:accelZ
 452 0180 C0F20003 		movt	r3, #:upper16:accelZ
 453 0184 1B88     		ldrh	r3, [r3, #0]
 454 0186 1BB2     		sxth	r3, r3
 455 0188 1846     		mov	r0, r3
 456 018a FFF7FEFF 		bl	calcAccel
 457 018e 07EE900A 		fmsr	s15, r0
 458 0192 FDEEE77A 		ftosizs	s15, s15
 459 0196 17EE903A 		fmrs	r3, s15	@ int
 460 019a 9AB2     		uxth	r2, r3
 461 019c 40F20003 		movw	r3, #:lower16:accelZ
 462 01a0 C0F20003 		movt	r3, #:upper16:accelZ
 463 01a4 1A80     		strh	r2, [r3, #0]	@ movhi
 108:../LSM9DS1_Driver.c **** 
 109:../LSM9DS1_Driver.c **** 		pomiaryAccel[counter].ax = accelX;
 464              		.loc 1 109 0
 465 01a6 40F20003 		movw	r3, #:lower16:counter
 466 01aa C0F20003 		movt	r3, #:upper16:counter
 467 01ae 1968     		ldr	r1, [r3, #0]
 468 01b0 40F20003 		movw	r3, #:lower16:accelX
 469 01b4 C0F20003 		movt	r3, #:upper16:accelX
 470 01b8 1888     		ldrh	r0, [r3, #0]
 471 01ba 40F20002 		movw	r2, #:lower16:pomiaryAccel
 472 01be C0F20002 		movt	r2, #:upper16:pomiaryAccel
 473 01c2 0B46     		mov	r3, r1
 474 01c4 4FEA4303 		lsl	r3, r3, #1
 475 01c8 5B18     		adds	r3, r3, r1
 476 01ca 4FEA4303 		lsl	r3, r3, #1
 477 01ce D318     		adds	r3, r2, r3
 478 01d0 0246     		mov	r2, r0	@ movhi
 479 01d2 1A80     		strh	r2, [r3, #0]	@ movhi
 110:../LSM9DS1_Driver.c **** 		pomiaryAccel[counter].ay = accelY;
 480              		.loc 1 110 0
 481 01d4 40F20003 		movw	r3, #:lower16:counter
 482 01d8 C0F20003 		movt	r3, #:upper16:counter
 483 01dc 1968     		ldr	r1, [r3, #0]
 484 01de 40F20003 		movw	r3, #:lower16:accelY
 485 01e2 C0F20003 		movt	r3, #:upper16:accelY
 486 01e6 1888     		ldrh	r0, [r3, #0]
 487 01e8 40F20002 		movw	r2, #:lower16:pomiaryAccel
 488 01ec C0F20002 		movt	r2, #:upper16:pomiaryAccel
 489 01f0 0B46     		mov	r3, r1
 490 01f2 4FEA4303 		lsl	r3, r3, #1
 491 01f6 5B18     		adds	r3, r3, r1
 492 01f8 4FEA4303 		lsl	r3, r3, #1
 493 01fc D318     		adds	r3, r2, r3
 494 01fe 0246     		mov	r2, r0	@ movhi
 495 0200 5A80     		strh	r2, [r3, #2]	@ movhi
 111:../LSM9DS1_Driver.c **** 		pomiaryAccel[counter].az = accelZ;
 496              		.loc 1 111 0
 497 0202 40F20003 		movw	r3, #:lower16:counter
 498 0206 C0F20003 		movt	r3, #:upper16:counter
 499 020a 1968     		ldr	r1, [r3, #0]
 500 020c 40F20003 		movw	r3, #:lower16:accelZ
 501 0210 C0F20003 		movt	r3, #:upper16:accelZ
 502 0214 1888     		ldrh	r0, [r3, #0]
 503 0216 40F20002 		movw	r2, #:lower16:pomiaryAccel
 504 021a C0F20002 		movt	r2, #:upper16:pomiaryAccel
 505 021e 0B46     		mov	r3, r1
 506 0220 4FEA4303 		lsl	r3, r3, #1
 507 0224 5B18     		adds	r3, r3, r1
 508 0226 4FEA4303 		lsl	r3, r3, #1
 509 022a D318     		adds	r3, r2, r3
 510 022c 0246     		mov	r2, r0	@ movhi
 511 022e 9A80     		strh	r2, [r3, #4]	@ movhi
 112:../LSM9DS1_Driver.c **** 
 113:../LSM9DS1_Driver.c **** 		gyroX = (adrAndData.dane[7] << 1) | adrAndData.dane[6];
 512              		.loc 1 113 0
 513 0230 40F20003 		movw	r3, #:lower16:adrAndData
 514 0234 C0F20003 		movt	r3, #:upper16:adrAndData
 515 0238 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 516 023a 4FEA4303 		lsl	r3, r3, #1
 517 023e 9AB2     		uxth	r2, r3
 518 0240 40F20003 		movw	r3, #:lower16:adrAndData
 519 0244 C0F20003 		movt	r3, #:upper16:adrAndData
 520 0248 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 521 024a 1343     		orrs	r3, r3, r2
 522 024c 9AB2     		uxth	r2, r3
 523 024e 40F20003 		movw	r3, #:lower16:gyroX
 524 0252 C0F20003 		movt	r3, #:upper16:gyroX
 525 0256 1A80     		strh	r2, [r3, #0]	@ movhi
 114:../LSM9DS1_Driver.c **** 		gyroY = (adrAndData.dane[9] << 1) | adrAndData.dane[8];
 526              		.loc 1 114 0
 527 0258 40F20003 		movw	r3, #:lower16:adrAndData
 528 025c C0F20003 		movt	r3, #:upper16:adrAndData
 529 0260 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 530 0262 4FEA4303 		lsl	r3, r3, #1
 531 0266 9AB2     		uxth	r2, r3
 532 0268 40F20003 		movw	r3, #:lower16:adrAndData
 533 026c C0F20003 		movt	r3, #:upper16:adrAndData
 534 0270 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 535 0272 1343     		orrs	r3, r3, r2
 536 0274 9AB2     		uxth	r2, r3
 537 0276 40F20003 		movw	r3, #:lower16:gyroY
 538 027a C0F20003 		movt	r3, #:upper16:gyroY
 539 027e 1A80     		strh	r2, [r3, #0]	@ movhi
 115:../LSM9DS1_Driver.c **** 		gyroZ = (adrAndData.dane[11] << 1) | adrAndData.dane[10];
 540              		.loc 1 115 0
 541 0280 40F20003 		movw	r3, #:lower16:adrAndData
 542 0284 C0F20003 		movt	r3, #:upper16:adrAndData
 543 0288 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 544 028a 4FEA4303 		lsl	r3, r3, #1
 545 028e 9AB2     		uxth	r2, r3
 546 0290 40F20003 		movw	r3, #:lower16:adrAndData
 547 0294 C0F20003 		movt	r3, #:upper16:adrAndData
 548 0298 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 549 029a 1343     		orrs	r3, r3, r2
 550 029c 9AB2     		uxth	r2, r3
 551 029e 40F20003 		movw	r3, #:lower16:gyroZ
 552 02a2 C0F20003 		movt	r3, #:upper16:gyroZ
 553 02a6 1A80     		strh	r2, [r3, #0]	@ movhi
 116:../LSM9DS1_Driver.c **** 
 117:../LSM9DS1_Driver.c **** 		if (_autoCalc) //kalibracja
 554              		.loc 1 117 0
 555 02a8 40F20003 		movw	r3, #:lower16:_autoCalc
 556 02ac C0F20003 		movt	r3, #:upper16:_autoCalc
 557 02b0 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 558 02b2 002B     		cmp	r3, #0
 559 02b4 3BD0     		beq	.L11
 118:../LSM9DS1_Driver.c **** 		{
 119:../LSM9DS1_Driver.c **** 			gyroX -= gBiasRaw[X_AXIS];
 560              		.loc 1 119 0
 561 02b6 40F20003 		movw	r3, #:lower16:gyroX
 562 02ba C0F20003 		movt	r3, #:upper16:gyroX
 563 02be 1B88     		ldrh	r3, [r3, #0]
 564 02c0 9AB2     		uxth	r2, r3
 565 02c2 40F20003 		movw	r3, #:lower16:gBiasRaw
 566 02c6 C0F20003 		movt	r3, #:upper16:gBiasRaw
 567 02ca 1B88     		ldrh	r3, [r3, #0]
 568 02cc 9BB2     		uxth	r3, r3
 569 02ce D31A     		subs	r3, r2, r3
 570 02d0 9BB2     		uxth	r3, r3
 571 02d2 9AB2     		uxth	r2, r3
 572 02d4 40F20003 		movw	r3, #:lower16:gyroX
 573 02d8 C0F20003 		movt	r3, #:upper16:gyroX
 574 02dc 1A80     		strh	r2, [r3, #0]	@ movhi
 120:../LSM9DS1_Driver.c **** 			gyroY -= gBiasRaw[Y_AXIS];
 575              		.loc 1 120 0
 576 02de 40F20003 		movw	r3, #:lower16:gyroY
 577 02e2 C0F20003 		movt	r3, #:upper16:gyroY
 578 02e6 1B88     		ldrh	r3, [r3, #0]
 579 02e8 9AB2     		uxth	r2, r3
 580 02ea 40F20003 		movw	r3, #:lower16:gBiasRaw
 581 02ee C0F20003 		movt	r3, #:upper16:gBiasRaw
 582 02f2 5B88     		ldrh	r3, [r3, #2]
 583 02f4 9BB2     		uxth	r3, r3
 584 02f6 D31A     		subs	r3, r2, r3
 585 02f8 9BB2     		uxth	r3, r3
 586 02fa 9AB2     		uxth	r2, r3
 587 02fc 40F20003 		movw	r3, #:lower16:gyroY
 588 0300 C0F20003 		movt	r3, #:upper16:gyroY
 589 0304 1A80     		strh	r2, [r3, #0]	@ movhi
 121:../LSM9DS1_Driver.c **** 			gyroZ -= gBiasRaw[Z_AXIS];
 590              		.loc 1 121 0
 591 0306 40F20003 		movw	r3, #:lower16:gyroZ
 592 030a C0F20003 		movt	r3, #:upper16:gyroZ
 593 030e 1B88     		ldrh	r3, [r3, #0]
 594 0310 9AB2     		uxth	r2, r3
 595 0312 40F20003 		movw	r3, #:lower16:gBiasRaw
 596 0316 C0F20003 		movt	r3, #:upper16:gBiasRaw
 597 031a 9B88     		ldrh	r3, [r3, #4]
 598 031c 9BB2     		uxth	r3, r3
 599 031e D31A     		subs	r3, r2, r3
 600 0320 9BB2     		uxth	r3, r3
 601 0322 9AB2     		uxth	r2, r3
 602 0324 40F20003 		movw	r3, #:lower16:gyroZ
 603 0328 C0F20003 		movt	r3, #:upper16:gyroZ
 604 032c 1A80     		strh	r2, [r3, #0]	@ movhi
 605              	.L11:
 122:../LSM9DS1_Driver.c **** 		}
 123:../LSM9DS1_Driver.c **** 		gyroX = calcGyro(gyroX);
 606              		.loc 1 123 0
 607 032e 40F20003 		movw	r3, #:lower16:gyroX
 608 0332 C0F20003 		movt	r3, #:upper16:gyroX
 609 0336 1B88     		ldrh	r3, [r3, #0]
 610 0338 1BB2     		sxth	r3, r3
 611 033a 1846     		mov	r0, r3
 612 033c FFF7FEFF 		bl	calcGyro
 613 0340 07EE900A 		fmsr	s15, r0
 614 0344 FDEEE77A 		ftosizs	s15, s15
 615 0348 17EE903A 		fmrs	r3, s15	@ int
 616 034c 9AB2     		uxth	r2, r3
 617 034e 40F20003 		movw	r3, #:lower16:gyroX
 618 0352 C0F20003 		movt	r3, #:upper16:gyroX
 619 0356 1A80     		strh	r2, [r3, #0]	@ movhi
 124:../LSM9DS1_Driver.c **** 		gyroY = calcGyro(gyroY);
 620              		.loc 1 124 0
 621 0358 40F20003 		movw	r3, #:lower16:gyroY
 622 035c C0F20003 		movt	r3, #:upper16:gyroY
 623 0360 1B88     		ldrh	r3, [r3, #0]
 624 0362 1BB2     		sxth	r3, r3
 625 0364 1846     		mov	r0, r3
 626 0366 FFF7FEFF 		bl	calcGyro
 627 036a 07EE900A 		fmsr	s15, r0
 628 036e FDEEE77A 		ftosizs	s15, s15
 629 0372 17EE903A 		fmrs	r3, s15	@ int
 630 0376 9AB2     		uxth	r2, r3
 631 0378 40F20003 		movw	r3, #:lower16:gyroY
 632 037c C0F20003 		movt	r3, #:upper16:gyroY
 633 0380 1A80     		strh	r2, [r3, #0]	@ movhi
 125:../LSM9DS1_Driver.c **** 		gyroZ = calcGyro(gyroZ);
 634              		.loc 1 125 0
 635 0382 40F20003 		movw	r3, #:lower16:gyroZ
 636 0386 C0F20003 		movt	r3, #:upper16:gyroZ
 637 038a 1B88     		ldrh	r3, [r3, #0]
 638 038c 1BB2     		sxth	r3, r3
 639 038e 1846     		mov	r0, r3
 640 0390 FFF7FEFF 		bl	calcGyro
 641 0394 07EE900A 		fmsr	s15, r0
 642 0398 FDEEE77A 		ftosizs	s15, s15
 643 039c 17EE903A 		fmrs	r3, s15	@ int
 644 03a0 9AB2     		uxth	r2, r3
 645 03a2 40F20003 		movw	r3, #:lower16:gyroZ
 646 03a6 C0F20003 		movt	r3, #:upper16:gyroZ
 647 03aa 1A80     		strh	r2, [r3, #0]	@ movhi
 126:../LSM9DS1_Driver.c **** 
 127:../LSM9DS1_Driver.c **** 		pomiaryAccel1[counter].ax = gyroX;
 648              		.loc 1 127 0
 649 03ac 40F20003 		movw	r3, #:lower16:counter
 650 03b0 C0F20003 		movt	r3, #:upper16:counter
 651 03b4 1968     		ldr	r1, [r3, #0]
 652 03b6 40F20003 		movw	r3, #:lower16:gyroX
 653 03ba C0F20003 		movt	r3, #:upper16:gyroX
 654 03be 1888     		ldrh	r0, [r3, #0]
 655 03c0 40F20002 		movw	r2, #:lower16:pomiaryAccel1
 656 03c4 C0F20002 		movt	r2, #:upper16:pomiaryAccel1
 657 03c8 0B46     		mov	r3, r1
 658 03ca 4FEA4303 		lsl	r3, r3, #1
 659 03ce 5B18     		adds	r3, r3, r1
 660 03d0 4FEA4303 		lsl	r3, r3, #1
 661 03d4 D318     		adds	r3, r2, r3
 662 03d6 0246     		mov	r2, r0	@ movhi
 663 03d8 1A80     		strh	r2, [r3, #0]	@ movhi
 128:../LSM9DS1_Driver.c **** 		pomiaryAccel1[counter].ay = gyroY;
 664              		.loc 1 128 0
 665 03da 40F20003 		movw	r3, #:lower16:counter
 666 03de C0F20003 		movt	r3, #:upper16:counter
 667 03e2 1968     		ldr	r1, [r3, #0]
 668 03e4 40F20003 		movw	r3, #:lower16:gyroY
 669 03e8 C0F20003 		movt	r3, #:upper16:gyroY
 670 03ec 1888     		ldrh	r0, [r3, #0]
 671 03ee 40F20002 		movw	r2, #:lower16:pomiaryAccel1
 672 03f2 C0F20002 		movt	r2, #:upper16:pomiaryAccel1
 673 03f6 0B46     		mov	r3, r1
 674 03f8 4FEA4303 		lsl	r3, r3, #1
 675 03fc 5B18     		adds	r3, r3, r1
 676 03fe 4FEA4303 		lsl	r3, r3, #1
 677 0402 D318     		adds	r3, r2, r3
 678 0404 0246     		mov	r2, r0	@ movhi
 679 0406 5A80     		strh	r2, [r3, #2]	@ movhi
 129:../LSM9DS1_Driver.c **** 		pomiaryAccel1[counter].az = gyroZ;
 680              		.loc 1 129 0
 681 0408 40F20003 		movw	r3, #:lower16:counter
 682 040c C0F20003 		movt	r3, #:upper16:counter
 683 0410 1968     		ldr	r1, [r3, #0]
 684 0412 40F20003 		movw	r3, #:lower16:gyroZ
 685 0416 C0F20003 		movt	r3, #:upper16:gyroZ
 686 041a 1888     		ldrh	r0, [r3, #0]
 687 041c 40F20002 		movw	r2, #:lower16:pomiaryAccel1
 688 0420 C0F20002 		movt	r2, #:upper16:pomiaryAccel1
 689 0424 0B46     		mov	r3, r1
 690 0426 4FEA4303 		lsl	r3, r3, #1
 691 042a 5B18     		adds	r3, r3, r1
 692 042c 4FEA4303 		lsl	r3, r3, #1
 693 0430 D318     		adds	r3, r2, r3
 694 0432 0246     		mov	r2, r0	@ movhi
 695 0434 9A80     		strh	r2, [r3, #4]	@ movhi
 130:../LSM9DS1_Driver.c **** 		counter++;
 696              		.loc 1 130 0
 697 0436 40F20003 		movw	r3, #:lower16:counter
 698 043a C0F20003 		movt	r3, #:upper16:counter
 699 043e 1B68     		ldr	r3, [r3, #0]
 700 0440 03F10102 		add	r2, r3, #1
 701 0444 40F20003 		movw	r3, #:lower16:counter
 702 0448 C0F20003 		movt	r3, #:upper16:counter
 703 044c 1A60     		str	r2, [r3, #0]
 131:../LSM9DS1_Driver.c **** 		readingAllowed = TRUE;
 704              		.loc 1 131 0
 705 044e 40F20003 		movw	r3, #:lower16:readingAllowed
 706 0452 C0F20003 		movt	r3, #:upper16:readingAllowed
 707 0456 4FF00102 		mov	r2, #1
 708 045a 1A70     		strb	r2, [r3, #0]
 709              	.L9:
 132:../LSM9DS1_Driver.c **** 	}
 133:../LSM9DS1_Driver.c **** 
 134:../LSM9DS1_Driver.c **** 	if(counter >= 1)
 710              		.loc 1 134 0
 711 045c 40F20003 		movw	r3, #:lower16:counter
 712 0460 C0F20003 		movt	r3, #:upper16:counter
 713 0464 1B68     		ldr	r3, [r3, #0]
 714 0466 002B     		cmp	r3, #0
 715 0468 09DD     		ble	.L8
 716              	.LBB2:
 135:../LSM9DS1_Driver.c **** 	{
 136:../LSM9DS1_Driver.c **** 		int i = 0;
 717              		.loc 1 136 0
 718 046a 4FF00003 		mov	r3, #0
 719 046e FB60     		str	r3, [r7, #12]
 137:../LSM9DS1_Driver.c **** 		/*for(int i = 0; i < 100; i++)
 138:../LSM9DS1_Driver.c **** 		{
 139:../LSM9DS1_Driver.c **** 			accelOsX[i] = pomiaryAccel[i].ax;
 140:../LSM9DS1_Driver.c **** 			accelOsY[i] = pomiaryAccel[i].ay;
 141:../LSM9DS1_Driver.c **** 			accelOsZ[i] = pomiaryAccel[i].az;
 142:../LSM9DS1_Driver.c **** 		}
 143:../LSM9DS1_Driver.c **** 
 144:../LSM9DS1_Driver.c **** 		for(i = 0; i < 100; i++)
 145:../LSM9DS1_Driver.c **** 		{
 146:../LSM9DS1_Driver.c **** 			(*sendFunction)(&accelOsX[i], strlen(&accelOsX[i]));
 147:../LSM9DS1_Driver.c **** 			(*sendFunction)(&accelOsY[i], strlen(&accelOsY[i]));
 148:../LSM9DS1_Driver.c **** 			(*sendFunction)(&accelOsZ[i], strlen(&accelOsZ[i]));
 149:../LSM9DS1_Driver.c **** 		}*/
 150:../LSM9DS1_Driver.c **** 		counter = 0;
 720              		.loc 1 150 0
 721 0470 40F20003 		movw	r3, #:lower16:counter
 722 0474 C0F20003 		movt	r3, #:upper16:counter
 723 0478 4FF00002 		mov	r2, #0
 724 047c 1A60     		str	r2, [r3, #0]
 725              	.L8:
 726              	.LBE2:
 151:../LSM9DS1_Driver.c **** 	}
 152:../LSM9DS1_Driver.c **** }
 727              		.loc 1 152 0
 728 047e 07F11007 		add	r7, r7, #16
 729 0482 BD46     		mov	sp, r7
 730 0484 80BD     		pop	{r7, pc}
 731              		.cfi_endproc
 732              	.LFE116:
 734 0486 00BF     		.section	.text.initAdrAndSubAdr,"ax",%progbits
 735              		.align	2
 736              		.global	initAdrAndSubAdr
 737              		.thumb
 738              		.thumb_func
 740              	initAdrAndSubAdr:
 741              	.LFB117:
 153:../LSM9DS1_Driver.c **** 
 154:../LSM9DS1_Driver.c **** void initAdrAndSubAdr(void)
 155:../LSM9DS1_Driver.c **** {
 742              		.loc 1 155 0
 743              		.cfi_startproc
 744              		@ args = 0, pretend = 0, frame = 0
 745              		@ frame_needed = 1, uses_anonymous_args = 0
 746              		@ link register save eliminated.
 747 0000 80B4     		push	{r7}
 748              	.LCFI11:
 749              		.cfi_def_cfa_offset 4
 750              		.cfi_offset 7, -4
 751 0002 00AF     		add	r7, sp, #0
 752              	.LCFI12:
 753              		.cfi_def_cfa_register 7
 156:../LSM9DS1_Driver.c **** 	adrAndData.adr.addressDevice[0] = 0x6B;
 754              		.loc 1 156 0
 755 0004 40F20003 		movw	r3, #:lower16:adrAndData
 756 0008 C0F20003 		movt	r3, #:upper16:adrAndData
 757 000c 4FF06B02 		mov	r2, #107
 758 0010 9A74     		strb	r2, [r3, #18]
 157:../LSM9DS1_Driver.c **** 	adrAndData.adr.addressDevice[1] = 0x1E;
 759              		.loc 1 157 0
 760 0012 40F20003 		movw	r3, #:lower16:adrAndData
 761 0016 C0F20003 		movt	r3, #:upper16:adrAndData
 762 001a 4FF01E02 		mov	r2, #30
 763 001e DA74     		strb	r2, [r3, #19]
 158:../LSM9DS1_Driver.c **** 	adrAndData.adr.subAddress[0] =  OUT_X_L_XL; //subaddres for accel
 764              		.loc 1 158 0
 765 0020 40F20003 		movw	r3, #:lower16:adrAndData
 766 0024 C0F20003 		movt	r3, #:upper16:adrAndData
 767 0028 4FF02802 		mov	r2, #40
 768 002c 1A75     		strb	r2, [r3, #20]
 159:../LSM9DS1_Driver.c **** 	adrAndData.adr.subAddress[1] =  OUT_X_L_G; //sub address for gyroscope
 769              		.loc 1 159 0
 770 002e 40F20003 		movw	r3, #:lower16:adrAndData
 771 0032 C0F20003 		movt	r3, #:upper16:adrAndData
 772 0036 4FF01802 		mov	r2, #24
 773 003a 5A75     		strb	r2, [r3, #21]
 160:../LSM9DS1_Driver.c **** 	adrAndData.adr.subAddress[2] =  OUT_X_L_M;
 774              		.loc 1 160 0
 775 003c 40F20003 		movw	r3, #:lower16:adrAndData
 776 0040 C0F20003 		movt	r3, #:upper16:adrAndData
 777 0044 4FF02802 		mov	r2, #40
 778 0048 9A75     		strb	r2, [r3, #22]
 161:../LSM9DS1_Driver.c **** }
 779              		.loc 1 161 0
 780 004a BD46     		mov	sp, r7
 781 004c 80BC     		pop	{r7}
 782 004e 7047     		bx	lr
 783              		.cfi_endproc
 784              	.LFE117:
 786              		.section	.text.initLSM9DS1,"ax",%progbits
 787              		.align	2
 788              		.global	initLSM9DS1
 789              		.thumb
 790              		.thumb_func
 792              	initLSM9DS1:
 793              	.LFB118:
 162:../LSM9DS1_Driver.c **** 
 163:../LSM9DS1_Driver.c **** void initLSM9DS1(void)
 164:../LSM9DS1_Driver.c **** {
 794              		.loc 1 164 0
 795              		.cfi_startproc
 796              		@ args = 0, pretend = 0, frame = 8
 797              		@ frame_needed = 1, uses_anonymous_args = 0
 798 0000 80B5     		push	{r7, lr}
 799              	.LCFI13:
 800              		.cfi_def_cfa_offset 8
 801              		.cfi_offset 7, -8
 802              		.cfi_offset 14, -4
 803 0002 82B0     		sub	sp, sp, #8
 804              	.LCFI14:
 805              		.cfi_def_cfa_offset 16
 806 0004 00AF     		add	r7, sp, #0
 807              	.LCFI15:
 808              		.cfi_def_cfa_register 7
 165:../LSM9DS1_Driver.c **** 	init(IMU_MODE_I2C, LSM9DS1_AG_ADDR(1), LSM9DS1_M_ADDR(1));
 809              		.loc 1 165 0
 810 0006 4FF00100 		mov	r0, #1
 811 000a 4FF06B01 		mov	r1, #107
 812 000e 4FF01E02 		mov	r2, #30
 813 0012 FFF7FEFF 		bl	init
 166:../LSM9DS1_Driver.c **** 
 167:../LSM9DS1_Driver.c **** 	settings.device.commInterface = IMU_MODE_I2C;
 814              		.loc 1 167 0
 815 0016 40F20003 		movw	r3, #:lower16:settings
 816 001a C0F20003 		movt	r3, #:upper16:settings
 817 001e 4FF00102 		mov	r2, #1
 818 0022 1A70     		strb	r2, [r3, #0]
 168:../LSM9DS1_Driver.c **** 	settings.device.mAddress = LSM9DS1_M;
 819              		.loc 1 168 0
 820 0024 40F20003 		movw	r3, #:lower16:settings
 821 0028 C0F20003 		movt	r3, #:upper16:settings
 822 002c 4FF01E02 		mov	r2, #30
 823 0030 9A70     		strb	r2, [r3, #2]
 169:../LSM9DS1_Driver.c **** 	settings.device.agAddress = LSM9DS1_AG;
 824              		.loc 1 169 0
 825 0032 40F20003 		movw	r3, #:lower16:settings
 826 0036 C0F20003 		movt	r3, #:upper16:settings
 827 003a 4FF06B02 		mov	r2, #107
 828 003e 5A70     		strb	r2, [r3, #1]
 170:../LSM9DS1_Driver.c **** 
 171:../LSM9DS1_Driver.c **** 	initAdrAndSubAdr();
 829              		.loc 1 171 0
 830 0040 FFF7FEFF 		bl	initAdrAndSubAdr
 172:../LSM9DS1_Driver.c **** 
 173:../LSM9DS1_Driver.c **** 	if(!begin())
 831              		.loc 1 173 0
 832 0044 FFF7FEFF 		bl	begin
 833 0048 0346     		mov	r3, r0
 834 004a 002B     		cmp	r3, #0
 835 004c 02D1     		bne	.L14
 836              	.LBB3:
 174:../LSM9DS1_Driver.c **** 	{
 175:../LSM9DS1_Driver.c **** 		int k = 0;
 837              		.loc 1 175 0
 838 004e 4FF00003 		mov	r3, #0
 839 0052 7B60     		str	r3, [r7, #4]
 840              	.L14:
 841              	.LBE3:
 176:../LSM9DS1_Driver.c **** 	}
 177:../LSM9DS1_Driver.c **** }
 842              		.loc 1 177 0
 843 0054 07F10807 		add	r7, r7, #8
 844 0058 BD46     		mov	sp, r7
 845 005a 80BD     		pop	{r7, pc}
 846              		.cfi_endproc
 847              	.LFE118:
 849              		.section	.text.init,"ax",%progbits
 850              		.align	2
 851              		.global	init
 852              		.thumb
 853              		.thumb_func
 855              	init:
 856              	.LFB119:
 178:../LSM9DS1_Driver.c **** 
 179:../LSM9DS1_Driver.c **** void init(interface_mode interface, uint8_t xgAddr, uint8_t mAddr)
 180:../LSM9DS1_Driver.c **** {
 857              		.loc 1 180 0
 858              		.cfi_startproc
 859              		@ args = 0, pretend = 0, frame = 16
 860              		@ frame_needed = 1, uses_anonymous_args = 0
 861              		@ link register save eliminated.
 862 0000 80B4     		push	{r7}
 863              	.LCFI16:
 864              		.cfi_def_cfa_offset 4
 865              		.cfi_offset 7, -4
 866 0002 85B0     		sub	sp, sp, #20
 867              	.LCFI17:
 868              		.cfi_def_cfa_offset 24
 869 0004 00AF     		add	r7, sp, #0
 870              	.LCFI18:
 871              		.cfi_def_cfa_register 7
 872 0006 1346     		mov	r3, r2
 873 0008 0246     		mov	r2, r0
 874 000a FA71     		strb	r2, [r7, #7]
 875 000c 0A46     		mov	r2, r1
 876 000e BA71     		strb	r2, [r7, #6]
 877 0010 7B71     		strb	r3, [r7, #5]
 181:../LSM9DS1_Driver.c **** 	//measurementsLSMRead = 0;
 182:../LSM9DS1_Driver.c **** 
 183:../LSM9DS1_Driver.c **** 	settings.device.commInterface = interface;
 878              		.loc 1 183 0
 879 0012 40F20003 		movw	r3, #:lower16:settings
 880 0016 C0F20003 		movt	r3, #:upper16:settings
 881 001a FA79     		ldrb	r2, [r7, #7]
 882 001c 1A70     		strb	r2, [r3, #0]
 184:../LSM9DS1_Driver.c **** 	settings.device.agAddress = xgAddr;
 883              		.loc 1 184 0
 884 001e 40F20003 		movw	r3, #:lower16:settings
 885 0022 C0F20003 		movt	r3, #:upper16:settings
 886 0026 BA79     		ldrb	r2, [r7, #6]
 887 0028 5A70     		strb	r2, [r3, #1]
 185:../LSM9DS1_Driver.c **** 	settings.device.mAddress = mAddr;
 888              		.loc 1 185 0
 889 002a 40F20003 		movw	r3, #:lower16:settings
 890 002e C0F20003 		movt	r3, #:upper16:settings
 891 0032 7A79     		ldrb	r2, [r7, #5]
 892 0034 9A70     		strb	r2, [r3, #2]
 186:../LSM9DS1_Driver.c **** 
 187:../LSM9DS1_Driver.c **** 	settings.gyro.enabled = TRUE;
 893              		.loc 1 187 0
 894 0036 40F20003 		movw	r3, #:lower16:settings
 895 003a C0F20003 		movt	r3, #:upper16:settings
 896 003e 4FF00102 		mov	r2, #1
 897 0042 1A71     		strb	r2, [r3, #4]
 188:../LSM9DS1_Driver.c **** 	settings.gyro.enableX = TRUE;
 898              		.loc 1 188 0
 899 0044 40F20003 		movw	r3, #:lower16:settings
 900 0048 C0F20003 		movt	r3, #:upper16:settings
 901 004c 4FF00102 		mov	r2, #1
 902 0050 5A74     		strb	r2, [r3, #17]
 189:../LSM9DS1_Driver.c **** 	settings.gyro.enableY = TRUE;
 903              		.loc 1 189 0
 904 0052 40F20003 		movw	r3, #:lower16:settings
 905 0056 C0F20003 		movt	r3, #:upper16:settings
 906 005a 4FF00102 		mov	r2, #1
 907 005e 9A74     		strb	r2, [r3, #18]
 190:../LSM9DS1_Driver.c **** 	settings.gyro.enableZ = TRUE;
 908              		.loc 1 190 0
 909 0060 40F20003 		movw	r3, #:lower16:settings
 910 0064 C0F20003 		movt	r3, #:upper16:settings
 911 0068 4FF00102 		mov	r2, #1
 912 006c DA74     		strb	r2, [r3, #19]
 191:../LSM9DS1_Driver.c **** 	// gyro scale can be 245, 500, or 2000
 192:../LSM9DS1_Driver.c **** 	settings.gyro.scale = 245;
 913              		.loc 1 192 0
 914 006e 40F20003 		movw	r3, #:lower16:settings
 915 0072 C0F20003 		movt	r3, #:upper16:settings
 916 0076 4FF0F502 		mov	r2, #245
 917 007a DA80     		strh	r2, [r3, #6]	@ movhi
 193:../LSM9DS1_Driver.c **** 	// gyro sample rate: value between 1-6
 194:../LSM9DS1_Driver.c **** 	// 1 = 14.9    4 = 238
 195:../LSM9DS1_Driver.c **** 	// 2 = 59.5    5 = 476
 196:../LSM9DS1_Driver.c **** 	// 3 = 119     6 = 952
 197:../LSM9DS1_Driver.c **** 	settings.gyro.sampleRate = 3;
 918              		.loc 1 197 0
 919 007c 40F20003 		movw	r3, #:lower16:settings
 920 0080 C0F20003 		movt	r3, #:upper16:settings
 921 0084 4FF00302 		mov	r2, #3
 922 0088 1A72     		strb	r2, [r3, #8]
 198:../LSM9DS1_Driver.c **** 	// gyro cutoff frequency: value between 0-3
 199:../LSM9DS1_Driver.c **** 	// Actual value of cutoff frequency depends
 200:../LSM9DS1_Driver.c **** 	// on sample rate.
 201:../LSM9DS1_Driver.c **** 	settings.gyro.bandwidth = 0;
 923              		.loc 1 201 0
 924 008a 40F20003 		movw	r3, #:lower16:settings
 925 008e C0F20003 		movt	r3, #:upper16:settings
 926 0092 4FF00002 		mov	r2, #0
 927 0096 5A72     		strb	r2, [r3, #9]
 202:../LSM9DS1_Driver.c **** 	settings.gyro.lowPowerEnable = FALSE;
 928              		.loc 1 202 0
 929 0098 40F20003 		movw	r3, #:lower16:settings
 930 009c C0F20003 		movt	r3, #:upper16:settings
 931 00a0 4FF00002 		mov	r2, #0
 932 00a4 9A72     		strb	r2, [r3, #10]
 203:../LSM9DS1_Driver.c **** 
 204:../LSM9DS1_Driver.c **** 	settings.gyro.HPFEnable = FALSE;
 933              		.loc 1 204 0
 934 00a6 40F20003 		movw	r3, #:lower16:settings
 935 00aa C0F20003 		movt	r3, #:upper16:settings
 936 00ae 4FF00002 		mov	r2, #0
 937 00b2 DA72     		strb	r2, [r3, #11]
 205:../LSM9DS1_Driver.c **** 	// Gyro HPF cutoff frequency: value between 0-9
 206:../LSM9DS1_Driver.c **** 	// Actual value depends on sample rate. Only applies
 207:../LSM9DS1_Driver.c **** 	// if gyroHPFEnable is TRUE.
 208:../LSM9DS1_Driver.c **** 	settings.gyro.HPFCutoff = 0;
 938              		.loc 1 208 0
 939 00b4 40F20003 		movw	r3, #:lower16:settings
 940 00b8 C0F20003 		movt	r3, #:upper16:settings
 941 00bc 4FF00002 		mov	r2, #0
 942 00c0 1A73     		strb	r2, [r3, #12]
 209:../LSM9DS1_Driver.c **** 	settings.gyro.flipX = FALSE;
 943              		.loc 1 209 0
 944 00c2 40F20003 		movw	r3, #:lower16:settings
 945 00c6 C0F20003 		movt	r3, #:upper16:settings
 946 00ca 4FF00002 		mov	r2, #0
 947 00ce 5A73     		strb	r2, [r3, #13]
 210:../LSM9DS1_Driver.c **** 	settings.gyro.flipY = FALSE;
 948              		.loc 1 210 0
 949 00d0 40F20003 		movw	r3, #:lower16:settings
 950 00d4 C0F20003 		movt	r3, #:upper16:settings
 951 00d8 4FF00002 		mov	r2, #0
 952 00dc 9A73     		strb	r2, [r3, #14]
 211:../LSM9DS1_Driver.c **** 	settings.gyro.flipZ = FALSE;
 953              		.loc 1 211 0
 954 00de 40F20003 		movw	r3, #:lower16:settings
 955 00e2 C0F20003 		movt	r3, #:upper16:settings
 956 00e6 4FF00002 		mov	r2, #0
 957 00ea DA73     		strb	r2, [r3, #15]
 212:../LSM9DS1_Driver.c **** 	settings.gyro.orientation = 0;
 958              		.loc 1 212 0
 959 00ec 40F20003 		movw	r3, #:lower16:settings
 960 00f0 C0F20003 		movt	r3, #:upper16:settings
 961 00f4 4FF00002 		mov	r2, #0
 962 00f8 1A74     		strb	r2, [r3, #16]
 213:../LSM9DS1_Driver.c **** 	settings.gyro.latchInterrupt = TRUE;
 963              		.loc 1 213 0
 964 00fa 40F20003 		movw	r3, #:lower16:settings
 965 00fe C0F20003 		movt	r3, #:upper16:settings
 966 0102 4FF00102 		mov	r2, #1
 967 0106 1A75     		strb	r2, [r3, #20]
 214:../LSM9DS1_Driver.c **** 
 215:../LSM9DS1_Driver.c **** 	settings.accel.enabled = TRUE;
 968              		.loc 1 215 0
 969 0108 40F20003 		movw	r3, #:lower16:settings
 970 010c C0F20003 		movt	r3, #:upper16:settings
 971 0110 4FF00102 		mov	r2, #1
 972 0114 9A75     		strb	r2, [r3, #22]
 216:../LSM9DS1_Driver.c **** 	settings.accel.enableX = TRUE;
 973              		.loc 1 216 0
 974 0116 40F20003 		movw	r3, #:lower16:settings
 975 011a C0F20003 		movt	r3, #:upper16:settings
 976 011e 4FF00102 		mov	r2, #1
 977 0122 5A76     		strb	r2, [r3, #25]
 217:../LSM9DS1_Driver.c **** 	settings.accel.enableY = TRUE;
 978              		.loc 1 217 0
 979 0124 40F20003 		movw	r3, #:lower16:settings
 980 0128 C0F20003 		movt	r3, #:upper16:settings
 981 012c 4FF00102 		mov	r2, #1
 982 0130 9A76     		strb	r2, [r3, #26]
 218:../LSM9DS1_Driver.c **** 	settings.accel.enableZ = TRUE;
 983              		.loc 1 218 0
 984 0132 40F20003 		movw	r3, #:lower16:settings
 985 0136 C0F20003 		movt	r3, #:upper16:settings
 986 013a 4FF00102 		mov	r2, #1
 987 013e DA76     		strb	r2, [r3, #27]
 219:../LSM9DS1_Driver.c **** 	// accel scale can be 2, 4, 8, or 16
 220:../LSM9DS1_Driver.c **** 	settings.accel.scale = 2;
 988              		.loc 1 220 0
 989 0140 40F20003 		movw	r3, #:lower16:settings
 990 0144 C0F20003 		movt	r3, #:upper16:settings
 991 0148 4FF00202 		mov	r2, #2
 992 014c DA75     		strb	r2, [r3, #23]
 221:../LSM9DS1_Driver.c **** 	// accel sample rate can be 1-6
 222:../LSM9DS1_Driver.c **** 	// 1 = 10 Hz    4 = 238 Hz
 223:../LSM9DS1_Driver.c **** 	// 2 = 50 Hz    5 = 476 Hz
 224:../LSM9DS1_Driver.c **** 	// 3 = 119 Hz   6 = 952 Hz
 225:../LSM9DS1_Driver.c **** 	settings.accel.sampleRate = 6;
 993              		.loc 1 225 0
 994 014e 40F20003 		movw	r3, #:lower16:settings
 995 0152 C0F20003 		movt	r3, #:upper16:settings
 996 0156 4FF00602 		mov	r2, #6
 997 015a 1A76     		strb	r2, [r3, #24]
 226:../LSM9DS1_Driver.c **** 	// Accel cutoff freqeuncy can be any value between -1 - 3.
 227:../LSM9DS1_Driver.c **** 	// -1 = bandwidth determined by sample rate
 228:../LSM9DS1_Driver.c **** 	// 0 = 408 Hz   2 = 105 Hz
 229:../LSM9DS1_Driver.c **** 	// 1 = 211 Hz   3 = 50 Hz
 230:../LSM9DS1_Driver.c **** 	settings.accel.bandwidth = -1;
 998              		.loc 1 230 0
 999 015c 40F20003 		movw	r3, #:lower16:settings
 1000 0160 C0F20003 		movt	r3, #:upper16:settings
 1001 0164 4FF0FF02 		mov	r2, #255
 1002 0168 1A77     		strb	r2, [r3, #28]
 231:../LSM9DS1_Driver.c **** 	settings.accel.highResEnable = FALSE;
 1003              		.loc 1 231 0
 1004 016a 40F20003 		movw	r3, #:lower16:settings
 1005 016e C0F20003 		movt	r3, #:upper16:settings
 1006 0172 4FF00002 		mov	r2, #0
 1007 0176 5A77     		strb	r2, [r3, #29]
 232:../LSM9DS1_Driver.c **** 	// accelHighResBandwidth can be any value between 0-3
 233:../LSM9DS1_Driver.c **** 	// LP cutoff is set to a factor of sample rate
 234:../LSM9DS1_Driver.c **** 	// 0 = ODR/50    2 = ODR/9
 235:../LSM9DS1_Driver.c **** 	// 1 = ODR/100   3 = ODR/400
 236:../LSM9DS1_Driver.c **** 	settings.accel.highResBandwidth = 0;
 1008              		.loc 1 236 0
 1009 0178 40F20003 		movw	r3, #:lower16:settings
 1010 017c C0F20003 		movt	r3, #:upper16:settings
 1011 0180 4FF00002 		mov	r2, #0
 1012 0184 9A77     		strb	r2, [r3, #30]
 237:../LSM9DS1_Driver.c **** 
 238:../LSM9DS1_Driver.c **** 	settings.mag.enabled = TRUE;
 1013              		.loc 1 238 0
 1014 0186 40F20003 		movw	r3, #:lower16:settings
 1015 018a C0F20003 		movt	r3, #:upper16:settings
 1016 018e 4FF00102 		mov	r2, #1
 1017 0192 DA77     		strb	r2, [r3, #31]
 239:../LSM9DS1_Driver.c **** 	// mag scale can be 4, 8, 12, or 16
 240:../LSM9DS1_Driver.c **** 	settings.mag.scale = 4;
 1018              		.loc 1 240 0
 1019 0194 40F20003 		movw	r3, #:lower16:settings
 1020 0198 C0F20003 		movt	r3, #:upper16:settings
 1021 019c 4FF00402 		mov	r2, #4
 1022 01a0 83F82020 		strb	r2, [r3, #32]
 241:../LSM9DS1_Driver.c **** 	// mag data rate can be 0-7
 242:../LSM9DS1_Driver.c **** 	// 0 = 0.625 Hz  4 = 10 Hz
 243:../LSM9DS1_Driver.c **** 	// 1 = 1.25 Hz   5 = 20 Hz
 244:../LSM9DS1_Driver.c **** 	// 2 = 2.5 Hz    6 = 40 Hz
 245:../LSM9DS1_Driver.c **** 	// 3 = 5 Hz      7 = 80 Hz
 246:../LSM9DS1_Driver.c **** 	settings.mag.sampleRate = 7;
 1023              		.loc 1 246 0
 1024 01a4 40F20003 		movw	r3, #:lower16:settings
 1025 01a8 C0F20003 		movt	r3, #:upper16:settings
 1026 01ac 4FF00702 		mov	r2, #7
 1027 01b0 83F82120 		strb	r2, [r3, #33]
 247:../LSM9DS1_Driver.c **** 	settings.mag.tempCompensationEnable = FALSE;
 1028              		.loc 1 247 0
 1029 01b4 40F20003 		movw	r3, #:lower16:settings
 1030 01b8 C0F20003 		movt	r3, #:upper16:settings
 1031 01bc 4FF00002 		mov	r2, #0
 1032 01c0 83F82220 		strb	r2, [r3, #34]
 248:../LSM9DS1_Driver.c **** 	// magPerformance can be any value between 0-3
 249:../LSM9DS1_Driver.c **** 	// 0 = Low power mode      2 = high performance
 250:../LSM9DS1_Driver.c **** 	// 1 = medium performance  3 = ultra-high performance
 251:../LSM9DS1_Driver.c **** 	settings.mag.XYPerformance = 3;
 1033              		.loc 1 251 0
 1034 01c4 40F20003 		movw	r3, #:lower16:settings
 1035 01c8 C0F20003 		movt	r3, #:upper16:settings
 1036 01cc 4FF00302 		mov	r2, #3
 1037 01d0 83F82320 		strb	r2, [r3, #35]
 252:../LSM9DS1_Driver.c **** 	settings.mag.ZPerformance = 3;
 1038              		.loc 1 252 0
 1039 01d4 40F20003 		movw	r3, #:lower16:settings
 1040 01d8 C0F20003 		movt	r3, #:upper16:settings
 1041 01dc 4FF00302 		mov	r2, #3
 1042 01e0 83F82420 		strb	r2, [r3, #36]
 253:../LSM9DS1_Driver.c **** 	settings.mag.lowPowerEnable = FALSE;
 1043              		.loc 1 253 0
 1044 01e4 40F20003 		movw	r3, #:lower16:settings
 1045 01e8 C0F20003 		movt	r3, #:upper16:settings
 1046 01ec 4FF00002 		mov	r2, #0
 1047 01f0 83F82520 		strb	r2, [r3, #37]
 254:../LSM9DS1_Driver.c **** 	// magOperatingMode can be 0-2
 255:../LSM9DS1_Driver.c **** 	// 0 = continuous conversion
 256:../LSM9DS1_Driver.c **** 	// 1 = single-conversion
 257:../LSM9DS1_Driver.c **** 	// 2 = power down
 258:../LSM9DS1_Driver.c **** 	settings.mag.operatingMode = 0;
 1048              		.loc 1 258 0
 1049 01f4 40F20003 		movw	r3, #:lower16:settings
 1050 01f8 C0F20003 		movt	r3, #:upper16:settings
 1051 01fc 4FF00002 		mov	r2, #0
 1052 0200 83F82620 		strb	r2, [r3, #38]
 259:../LSM9DS1_Driver.c **** 
 260:../LSM9DS1_Driver.c **** 	settings.temp.enabled = TRUE;
 1053              		.loc 1 260 0
 1054 0204 40F20003 		movw	r3, #:lower16:settings
 1055 0208 C0F20003 		movt	r3, #:upper16:settings
 1056 020c 4FF00102 		mov	r2, #1
 1057 0210 83F82720 		strb	r2, [r3, #39]
 1058              	.LBB4:
 261:../LSM9DS1_Driver.c **** 
 262:../LSM9DS1_Driver.c **** 	for (int i=0; i<3; i++)
 1059              		.loc 1 262 0
 1060 0214 4FF00003 		mov	r3, #0
 1061 0218 FB60     		str	r3, [r7, #12]
 1062 021a 3FE0     		b	.L17
 1063              	.L18:
 263:../LSM9DS1_Driver.c **** 	{
 264:../LSM9DS1_Driver.c **** 		gBias[i] = 0;
 1064              		.loc 1 264 0 discriminator 2
 1065 021c 40F20003 		movw	r3, #:lower16:gBias
 1066 0220 C0F20003 		movt	r3, #:upper16:gBias
 1067 0224 FA68     		ldr	r2, [r7, #12]
 1068 0226 4FEA8202 		lsl	r2, r2, #2
 1069 022a 9B18     		adds	r3, r3, r2
 1070 022c 4FF00002 		mov	r2, #0
 1071 0230 1A60     		str	r2, [r3, #0]	@ float
 265:../LSM9DS1_Driver.c **** 		aBias[i] = 0;
 1072              		.loc 1 265 0 discriminator 2
 1073 0232 40F20003 		movw	r3, #:lower16:aBias
 1074 0236 C0F20003 		movt	r3, #:upper16:aBias
 1075 023a FA68     		ldr	r2, [r7, #12]
 1076 023c 4FEA8202 		lsl	r2, r2, #2
 1077 0240 9B18     		adds	r3, r3, r2
 1078 0242 4FF00002 		mov	r2, #0
 1079 0246 1A60     		str	r2, [r3, #0]	@ float
 266:../LSM9DS1_Driver.c **** 		mBias[i] = 0;
 1080              		.loc 1 266 0 discriminator 2
 1081 0248 40F20003 		movw	r3, #:lower16:mBias
 1082 024c C0F20003 		movt	r3, #:upper16:mBias
 1083 0250 FA68     		ldr	r2, [r7, #12]
 1084 0252 4FEA8202 		lsl	r2, r2, #2
 1085 0256 9B18     		adds	r3, r3, r2
 1086 0258 4FF00002 		mov	r2, #0
 1087 025c 1A60     		str	r2, [r3, #0]	@ float
 267:../LSM9DS1_Driver.c **** 		gBiasRaw[i] = 0;
 1088              		.loc 1 267 0 discriminator 2
 1089 025e 40F20003 		movw	r3, #:lower16:gBiasRaw
 1090 0262 C0F20003 		movt	r3, #:upper16:gBiasRaw
 1091 0266 FA68     		ldr	r2, [r7, #12]
 1092 0268 4FF00001 		mov	r1, #0
 1093 026c 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 268:../LSM9DS1_Driver.c **** 		aBiasRaw[i] = 0;
 1094              		.loc 1 268 0 discriminator 2
 1095 0270 40F20003 		movw	r3, #:lower16:aBiasRaw
 1096 0274 C0F20003 		movt	r3, #:upper16:aBiasRaw
 1097 0278 FA68     		ldr	r2, [r7, #12]
 1098 027a 4FF00001 		mov	r1, #0
 1099 027e 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 269:../LSM9DS1_Driver.c **** 		mBiasRaw[i] = 0;
 1100              		.loc 1 269 0 discriminator 2
 1101 0282 40F20003 		movw	r3, #:lower16:mBiasRaw
 1102 0286 C0F20003 		movt	r3, #:upper16:mBiasRaw
 1103 028a FA68     		ldr	r2, [r7, #12]
 1104 028c 4FF00001 		mov	r1, #0
 1105 0290 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 262:../LSM9DS1_Driver.c **** 	for (int i=0; i<3; i++)
 1106              		.loc 1 262 0 discriminator 2
 1107 0294 FB68     		ldr	r3, [r7, #12]
 1108 0296 03F10103 		add	r3, r3, #1
 1109 029a FB60     		str	r3, [r7, #12]
 1110              	.L17:
 262:../LSM9DS1_Driver.c **** 	for (int i=0; i<3; i++)
 1111              		.loc 1 262 0 is_stmt 0 discriminator 1
 1112 029c FB68     		ldr	r3, [r7, #12]
 1113 029e 022B     		cmp	r3, #2
 1114 02a0 BCDD     		ble	.L18
 1115              	.LBE4:
 270:../LSM9DS1_Driver.c **** 	}
 271:../LSM9DS1_Driver.c **** 
 272:../LSM9DS1_Driver.c **** 	_autoCalc = FALSE;
 1116              		.loc 1 272 0 is_stmt 1
 1117 02a2 40F20003 		movw	r3, #:lower16:_autoCalc
 1118 02a6 C0F20003 		movt	r3, #:upper16:_autoCalc
 1119 02aa 4FF00002 		mov	r2, #0
 1120 02ae 1A70     		strb	r2, [r3, #0]
 273:../LSM9DS1_Driver.c **** }
 1121              		.loc 1 273 0
 1122 02b0 07F11407 		add	r7, r7, #20
 1123 02b4 BD46     		mov	sp, r7
 1124 02b6 80BC     		pop	{r7}
 1125 02b8 7047     		bx	lr
 1126              		.cfi_endproc
 1127              	.LFE119:
 1129 02ba 00BF     		.section	.text.begin,"ax",%progbits
 1130              		.align	2
 1131              		.global	begin
 1132              		.thumb
 1133              		.thumb_func
 1135              	begin:
 1136              	.LFB120:
 274:../LSM9DS1_Driver.c **** 
 275:../LSM9DS1_Driver.c **** uint16_t begin(void)
 276:../LSM9DS1_Driver.c **** {
 1137              		.loc 1 276 0
 1138              		.cfi_startproc
 1139              		@ args = 0, pretend = 0, frame = 8
 1140              		@ frame_needed = 1, uses_anonymous_args = 0
 1141 0000 80B5     		push	{r7, lr}
 1142              	.LCFI19:
 1143              		.cfi_def_cfa_offset 8
 1144              		.cfi_offset 7, -8
 1145              		.cfi_offset 14, -4
 1146 0002 82B0     		sub	sp, sp, #8
 1147              	.LCFI20:
 1148              		.cfi_def_cfa_offset 16
 1149 0004 00AF     		add	r7, sp, #0
 1150              	.LCFI21:
 1151              		.cfi_def_cfa_register 7
 277:../LSM9DS1_Driver.c **** 	//! Todo: don't use _xgAddress or _mAddress, duplicating memory
 278:../LSM9DS1_Driver.c **** 	_xgAddress = settings.device.agAddress;
 1152              		.loc 1 278 0
 1153 0006 40F20003 		movw	r3, #:lower16:settings
 1154 000a C0F20003 		movt	r3, #:upper16:settings
 1155 000e 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 1156 0010 40F20003 		movw	r3, #:lower16:_xgAddress
 1157 0014 C0F20003 		movt	r3, #:upper16:_xgAddress
 1158 0018 1A70     		strb	r2, [r3, #0]
 279:../LSM9DS1_Driver.c **** 	_mAddress = settings.device.mAddress;
 1159              		.loc 1 279 0
 1160 001a 40F20003 		movw	r3, #:lower16:settings
 1161 001e C0F20003 		movt	r3, #:upper16:settings
 1162 0022 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 1163 0024 40F20003 		movw	r3, #:lower16:_mAddress
 1164 0028 C0F20003 		movt	r3, #:upper16:_mAddress
 1165 002c 1A70     		strb	r2, [r3, #0]
 280:../LSM9DS1_Driver.c **** 
 281:../LSM9DS1_Driver.c **** 	constrainScales();
 1166              		.loc 1 281 0
 1167 002e FFF7FEFF 		bl	constrainScales
 282:../LSM9DS1_Driver.c **** 
 283:../LSM9DS1_Driver.c **** 	// Once we have the scale values, we can calculate the resolution
 284:../LSM9DS1_Driver.c **** 	// of each sensor. That's what these functions are for. One for each sensor
 285:../LSM9DS1_Driver.c **** 	calcgRes(); // Calculate DPS / ADC tick, stored in gRes variable
 1168              		.loc 1 285 0
 1169 0032 FFF7FEFF 		bl	calcgRes
 286:../LSM9DS1_Driver.c **** 	calcmRes(); // Calculate Gs / ADC tick, stored in mRes variable
 1170              		.loc 1 286 0
 1171 0036 FFF7FEFF 		bl	calcmRes
 287:../LSM9DS1_Driver.c **** 	calcaRes(); // Calculate g / ADC tick, stored in aRes variable
 1172              		.loc 1 287 0
 1173 003a FFF7FEFF 		bl	calcaRes
 288:../LSM9DS1_Driver.c **** 
 289:../LSM9DS1_Driver.c **** 	if (settings.device.commInterface == IMU_MODE_I2C)	// If we're using I2C
 1174              		.loc 1 289 0
 1175 003e 40F20003 		movw	r3, #:lower16:settings
 1176 0042 C0F20003 		movt	r3, #:upper16:settings
 1177 0046 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1178 0048 012B     		cmp	r3, #1
 1179 004a 02D1     		bne	.L20
 290:../LSM9DS1_Driver.c **** 		initI2C();	// Initialize I2C
 1180              		.loc 1 290 0
 1181 004c FFF7FEFF 		bl	initI2C
 1182 0050 08E0     		b	.L21
 1183              	.L20:
 291:../LSM9DS1_Driver.c **** 	else if (settings.device.commInterface == IMU_MODE_SPI) 	// else, if we're using SPI
 1184              		.loc 1 291 0
 1185 0052 40F20003 		movw	r3, #:lower16:settings
 1186 0056 C0F20003 		movt	r3, #:upper16:settings
 1187 005a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1188 005c 002B     		cmp	r3, #0
 1189 005e 01D1     		bne	.L21
 292:../LSM9DS1_Driver.c **** 		initSPI();	// Initialize SPI
 1190              		.loc 1 292 0
 1191 0060 FFF7FEFF 		bl	initSPI
 1192              	.L21:
 293:../LSM9DS1_Driver.c **** 
 294:../LSM9DS1_Driver.c **** 	// To verify communication, we can read from the WHO_AM_I register of
 295:../LSM9DS1_Driver.c **** 	// each device. Store those in a variable so we can return them.
 296:../LSM9DS1_Driver.c **** 	uint8_t mTest = mReadByte(WHO_AM_I_M);		// Read the gyro WHO_AM_I
 1193              		.loc 1 296 0
 1194 0064 4FF00F00 		mov	r0, #15
 1195 0068 FFF7FEFF 		bl	mReadByte
 1196 006c 0346     		mov	r3, r0
 1197 006e FB71     		strb	r3, [r7, #7]
 297:../LSM9DS1_Driver.c **** 	uint8_t xgTest = xgReadByte(WHO_AM_I_XG);	// Read the accel/mag WHO_AM_I
 1198              		.loc 1 297 0
 1199 0070 4FF00F00 		mov	r0, #15
 1200 0074 FFF7FEFF 		bl	xgReadByte
 1201 0078 0346     		mov	r3, r0
 1202 007a BB71     		strb	r3, [r7, #6]
 298:../LSM9DS1_Driver.c **** 
 299:../LSM9DS1_Driver.c **** 	uint16_t whoAmICombined = (xgTest << 8) | mTest;
 1203              		.loc 1 299 0
 1204 007c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1205 007e 4FEA0323 		lsl	r3, r3, #8
 1206 0082 9AB2     		uxth	r2, r3
 1207 0084 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1208 0086 9BB2     		uxth	r3, r3
 1209 0088 1343     		orrs	r3, r3, r2
 1210 008a 9BB2     		uxth	r3, r3
 1211 008c BB80     		strh	r3, [r7, #4]	@ movhi
 300:../LSM9DS1_Driver.c **** 
 301:../LSM9DS1_Driver.c **** 	if (whoAmICombined != ((WHO_AM_I_AG_RSP << 8) | WHO_AM_I_M_RSP))
 1212              		.loc 1 301 0
 1213 008e BA88     		ldrh	r2, [r7, #4]
 1214 0090 46F63D03 		movw	r3, #26685
 1215 0094 9A42     		cmp	r2, r3
 1216 0096 02D0     		beq	.L22
 302:../LSM9DS1_Driver.c **** 	{
 303:../LSM9DS1_Driver.c **** 		return 0;
 1217              		.loc 1 303 0
 1218 0098 4FF00003 		mov	r3, #0
 1219 009c 06E0     		b	.L23
 1220              	.L22:
 304:../LSM9DS1_Driver.c **** 	}
 305:../LSM9DS1_Driver.c **** 
 306:../LSM9DS1_Driver.c **** 	// Gyro initialization stuff:
 307:../LSM9DS1_Driver.c **** 	initGyro();	// This will "turn on" the gyro. Setting up interrupts, etc.
 1221              		.loc 1 307 0
 1222 009e FFF7FEFF 		bl	initGyro
 308:../LSM9DS1_Driver.c **** 
 309:../LSM9DS1_Driver.c **** 	// Accelerometer initialization stuff:
 310:../LSM9DS1_Driver.c **** 	initAccel(); // "Turn on" all axes of the accel. Set up interrupts, etc.
 1223              		.loc 1 310 0
 1224 00a2 FFF7FEFF 		bl	initAccel
 311:../LSM9DS1_Driver.c **** 
 312:../LSM9DS1_Driver.c **** 	// Magnetometer initialization stuff:
 313:../LSM9DS1_Driver.c **** 	initMag(); // "Turn on" all axes of the mag. Set up interrupts, etc.
 1225              		.loc 1 313 0
 1226 00a6 FFF7FEFF 		bl	initMag
 314:../LSM9DS1_Driver.c **** 
 315:../LSM9DS1_Driver.c **** 	// Once everything is initialized, return the WHO_AM_I registers we read:
 316:../LSM9DS1_Driver.c **** 	return whoAmICombined;
 1227              		.loc 1 316 0
 1228 00aa BB88     		ldrh	r3, [r7, #4]
 1229              	.L23:
 317:../LSM9DS1_Driver.c **** 
 318:../LSM9DS1_Driver.c **** }
 1230              		.loc 1 318 0
 1231 00ac 1846     		mov	r0, r3
 1232 00ae 07F10807 		add	r7, r7, #8
 1233 00b2 BD46     		mov	sp, r7
 1234 00b4 80BD     		pop	{r7, pc}
 1235              		.cfi_endproc
 1236              	.LFE120:
 1238 00b6 00BF     		.section	.text.constrainScales,"ax",%progbits
 1239              		.align	2
 1240              		.global	constrainScales
 1241              		.thumb
 1242              		.thumb_func
 1244              	constrainScales:
 1245              	.LFB121:
 319:../LSM9DS1_Driver.c **** 
 320:../LSM9DS1_Driver.c **** void constrainScales()
 321:../LSM9DS1_Driver.c **** {
 1246              		.loc 1 321 0
 1247              		.cfi_startproc
 1248              		@ args = 0, pretend = 0, frame = 0
 1249              		@ frame_needed = 1, uses_anonymous_args = 0
 1250              		@ link register save eliminated.
 1251 0000 80B4     		push	{r7}
 1252              	.LCFI22:
 1253              		.cfi_def_cfa_offset 4
 1254              		.cfi_offset 7, -4
 1255 0002 00AF     		add	r7, sp, #0
 1256              	.LCFI23:
 1257              		.cfi_def_cfa_register 7
 322:../LSM9DS1_Driver.c **** 	if ((settings.gyro.scale != 245) && (settings.gyro.scale != 500) && (settings.gyro.scale != 2000))
 1258              		.loc 1 322 0
 1259 0004 40F20003 		movw	r3, #:lower16:settings
 1260 0008 C0F20003 		movt	r3, #:upper16:settings
 1261 000c DB88     		ldrh	r3, [r3, #6]
 1262 000e F52B     		cmp	r3, #245
 1263 0010 16D0     		beq	.L25
 1264              		.loc 1 322 0 is_stmt 0 discriminator 1
 1265 0012 40F20003 		movw	r3, #:lower16:settings
 1266 0016 C0F20003 		movt	r3, #:upper16:settings
 1267 001a DB88     		ldrh	r3, [r3, #6]
 1268 001c B3F5FA7F 		cmp	r3, #500
 1269 0020 0ED0     		beq	.L25
 1270 0022 40F20003 		movw	r3, #:lower16:settings
 1271 0026 C0F20003 		movt	r3, #:upper16:settings
 1272 002a DB88     		ldrh	r3, [r3, #6]
 1273 002c B3F5FA6F 		cmp	r3, #2000
 1274 0030 06D0     		beq	.L25
 323:../LSM9DS1_Driver.c **** 	{
 324:../LSM9DS1_Driver.c **** 		settings.gyro.scale = 245;
 1275              		.loc 1 324 0 is_stmt 1
 1276 0032 40F20003 		movw	r3, #:lower16:settings
 1277 0036 C0F20003 		movt	r3, #:upper16:settings
 1278 003a 4FF0F502 		mov	r2, #245
 1279 003e DA80     		strh	r2, [r3, #6]	@ movhi
 1280              	.L25:
 325:../LSM9DS1_Driver.c **** 	}
 326:../LSM9DS1_Driver.c **** 
 327:../LSM9DS1_Driver.c **** 	if ((settings.accel.scale != 2) && (settings.accel.scale != 4) && (settings.accel.scale != 8) && (
 1281              		.loc 1 327 0
 1282 0040 40F20003 		movw	r3, #:lower16:settings
 1283 0044 C0F20003 		movt	r3, #:upper16:settings
 1284 0048 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 1285 004a 022B     		cmp	r3, #2
 1286 004c 1BD0     		beq	.L26
 1287              		.loc 1 327 0 is_stmt 0 discriminator 1
 1288 004e 40F20003 		movw	r3, #:lower16:settings
 1289 0052 C0F20003 		movt	r3, #:upper16:settings
 1290 0056 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 1291 0058 042B     		cmp	r3, #4
 1292 005a 14D0     		beq	.L26
 1293 005c 40F20003 		movw	r3, #:lower16:settings
 1294 0060 C0F20003 		movt	r3, #:upper16:settings
 1295 0064 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 1296 0066 082B     		cmp	r3, #8
 1297 0068 0DD0     		beq	.L26
 1298 006a 40F20003 		movw	r3, #:lower16:settings
 1299 006e C0F20003 		movt	r3, #:upper16:settings
 1300 0072 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 1301 0074 102B     		cmp	r3, #16
 1302 0076 06D0     		beq	.L26
 328:../LSM9DS1_Driver.c **** 	{
 329:../LSM9DS1_Driver.c **** 		settings.accel.scale = 2;
 1303              		.loc 1 329 0 is_stmt 1
 1304 0078 40F20003 		movw	r3, #:lower16:settings
 1305 007c C0F20003 		movt	r3, #:upper16:settings
 1306 0080 4FF00202 		mov	r2, #2
 1307 0084 DA75     		strb	r2, [r3, #23]
 1308              	.L26:
 330:../LSM9DS1_Driver.c **** 	}
 331:../LSM9DS1_Driver.c **** 
 332:../LSM9DS1_Driver.c **** 	if ((settings.mag.scale != 4) && (settings.mag.scale != 8) && (settings.mag.scale != 12) && (setti
 1309              		.loc 1 332 0
 1310 0086 40F20003 		movw	r3, #:lower16:settings
 1311 008a C0F20003 		movt	r3, #:upper16:settings
 1312 008e 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 1313 0092 042B     		cmp	r3, #4
 1314 0094 1FD0     		beq	.L24
 1315              		.loc 1 332 0 is_stmt 0 discriminator 1
 1316 0096 40F20003 		movw	r3, #:lower16:settings
 1317 009a C0F20003 		movt	r3, #:upper16:settings
 1318 009e 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 1319 00a2 082B     		cmp	r3, #8
 1320 00a4 17D0     		beq	.L24
 1321 00a6 40F20003 		movw	r3, #:lower16:settings
 1322 00aa C0F20003 		movt	r3, #:upper16:settings
 1323 00ae 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 1324 00b2 0C2B     		cmp	r3, #12
 1325 00b4 0FD0     		beq	.L24
 1326 00b6 40F20003 		movw	r3, #:lower16:settings
 1327 00ba C0F20003 		movt	r3, #:upper16:settings
 1328 00be 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 1329 00c2 102B     		cmp	r3, #16
 1330 00c4 07D0     		beq	.L24
 333:../LSM9DS1_Driver.c **** 	{
 334:../LSM9DS1_Driver.c **** 		settings.mag.scale = 4;
 1331              		.loc 1 334 0 is_stmt 1
 1332 00c6 40F20003 		movw	r3, #:lower16:settings
 1333 00ca C0F20003 		movt	r3, #:upper16:settings
 1334 00ce 4FF00402 		mov	r2, #4
 1335 00d2 83F82020 		strb	r2, [r3, #32]
 1336              	.L24:
 335:../LSM9DS1_Driver.c **** 	}
 336:../LSM9DS1_Driver.c **** }
 1337              		.loc 1 336 0
 1338 00d6 BD46     		mov	sp, r7
 1339 00d8 80BC     		pop	{r7}
 1340 00da 7047     		bx	lr
 1341              		.cfi_endproc
 1342              	.LFE121:
 1344              		.section	.text.initI2C,"ax",%progbits
 1345              		.align	2
 1346              		.global	initI2C
 1347              		.thumb
 1348              		.thumb_func
 1350              	initI2C:
 1351              	.LFB122:
 337:../LSM9DS1_Driver.c **** 
 338:../LSM9DS1_Driver.c **** 
 339:../LSM9DS1_Driver.c **** void initI2C(void)
 340:../LSM9DS1_Driver.c **** {
 1352              		.loc 1 340 0
 1353              		.cfi_startproc
 1354              		@ args = 0, pretend = 0, frame = 0
 1355              		@ frame_needed = 1, uses_anonymous_args = 0
 1356              		@ link register save eliminated.
 1357 0000 80B4     		push	{r7}
 1358              	.LCFI24:
 1359              		.cfi_def_cfa_offset 4
 1360              		.cfi_offset 7, -4
 1361 0002 00AF     		add	r7, sp, #0
 1362              	.LCFI25:
 1363              		.cfi_def_cfa_register 7
 341:../LSM9DS1_Driver.c **** 	;
 342:../LSM9DS1_Driver.c **** }
 1364              		.loc 1 342 0
 1365 0004 BD46     		mov	sp, r7
 1366 0006 80BC     		pop	{r7}
 1367 0008 7047     		bx	lr
 1368              		.cfi_endproc
 1369              	.LFE122:
 1371 000a 00BF     		.section	.text.initSPI,"ax",%progbits
 1372              		.align	2
 1373              		.global	initSPI
 1374              		.thumb
 1375              		.thumb_func
 1377              	initSPI:
 1378              	.LFB123:
 343:../LSM9DS1_Driver.c **** 
 344:../LSM9DS1_Driver.c **** void initSPI(void)
 345:../LSM9DS1_Driver.c **** {
 1379              		.loc 1 345 0
 1380              		.cfi_startproc
 1381              		@ args = 0, pretend = 0, frame = 0
 1382              		@ frame_needed = 1, uses_anonymous_args = 0
 1383              		@ link register save eliminated.
 1384 0000 80B4     		push	{r7}
 1385              	.LCFI26:
 1386              		.cfi_def_cfa_offset 4
 1387              		.cfi_offset 7, -4
 1388 0002 00AF     		add	r7, sp, #0
 1389              	.LCFI27:
 1390              		.cfi_def_cfa_register 7
 346:../LSM9DS1_Driver.c **** 	;
 347:../LSM9DS1_Driver.c **** }
 1391              		.loc 1 347 0
 1392 0004 BD46     		mov	sp, r7
 1393 0006 80BC     		pop	{r7}
 1394 0008 7047     		bx	lr
 1395              		.cfi_endproc
 1396              	.LFE123:
 1398 000a 00BF     		.section	.text.calcgRes,"ax",%progbits
 1399              		.align	2
 1400              		.global	calcgRes
 1401              		.thumb
 1402              		.thumb_func
 1404              	calcgRes:
 1405              	.LFB124:
 348:../LSM9DS1_Driver.c **** 
 349:../LSM9DS1_Driver.c **** void calcgRes()
 350:../LSM9DS1_Driver.c **** {
 1406              		.loc 1 350 0
 1407              		.cfi_startproc
 1408              		@ args = 0, pretend = 0, frame = 0
 1409              		@ frame_needed = 1, uses_anonymous_args = 0
 1410              		@ link register save eliminated.
 1411 0000 80B4     		push	{r7}
 1412              	.LCFI28:
 1413              		.cfi_def_cfa_offset 4
 1414              		.cfi_offset 7, -4
 1415 0002 00AF     		add	r7, sp, #0
 1416              	.LCFI29:
 1417              		.cfi_def_cfa_register 7
 351:../LSM9DS1_Driver.c **** 	gRes = ((float) settings.gyro.scale) / 32768.0;
 1418              		.loc 1 351 0
 1419 0004 40F20003 		movw	r3, #:lower16:settings
 1420 0008 C0F20003 		movt	r3, #:upper16:settings
 1421 000c DB88     		ldrh	r3, [r3, #6]
 1422 000e 07EE903A 		fmsr	s15, r3	@ int
 1423 0012 B8EE677A 		fuitos	s14, s15
 1424 0016 DFED067A 		flds	s15, .L31
 1425 001a C7EE277A 		fdivs	s15, s14, s15
 1426 001e 40F20003 		movw	r3, #:lower16:gRes
 1427 0022 C0F20003 		movt	r3, #:upper16:gRes
 1428 0026 C3ED007A 		fsts	s15, [r3, #0]
 352:../LSM9DS1_Driver.c **** }
 1429              		.loc 1 352 0
 1430 002a BD46     		mov	sp, r7
 1431 002c 80BC     		pop	{r7}
 1432 002e 7047     		bx	lr
 1433              	.L32:
 1434              		.align	2
 1435              	.L31:
 1436 0030 00000047 		.word	1191182336
 1437              		.cfi_endproc
 1438              	.LFE124:
 1440              		.section	.text.calcaRes,"ax",%progbits
 1441              		.align	2
 1442              		.global	calcaRes
 1443              		.thumb
 1444              		.thumb_func
 1446              	calcaRes:
 1447              	.LFB125:
 353:../LSM9DS1_Driver.c **** 
 354:../LSM9DS1_Driver.c **** void calcaRes()
 355:../LSM9DS1_Driver.c **** {
 1448              		.loc 1 355 0
 1449              		.cfi_startproc
 1450              		@ args = 0, pretend = 0, frame = 0
 1451              		@ frame_needed = 1, uses_anonymous_args = 0
 1452              		@ link register save eliminated.
 1453 0000 80B4     		push	{r7}
 1454              	.LCFI30:
 1455              		.cfi_def_cfa_offset 4
 1456              		.cfi_offset 7, -4
 1457 0002 00AF     		add	r7, sp, #0
 1458              	.LCFI31:
 1459              		.cfi_def_cfa_register 7
 356:../LSM9DS1_Driver.c **** 	aRes = ((float) settings.accel.scale) / 32768.0;
 1460              		.loc 1 356 0
 1461 0004 40F20003 		movw	r3, #:lower16:settings
 1462 0008 C0F20003 		movt	r3, #:upper16:settings
 1463 000c DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 1464 000e 07EE903A 		fmsr	s15, r3	@ int
 1465 0012 B8EE677A 		fuitos	s14, s15
 1466 0016 DFED067A 		flds	s15, .L34
 1467 001a C7EE277A 		fdivs	s15, s14, s15
 1468 001e 40F20003 		movw	r3, #:lower16:aRes
 1469 0022 C0F20003 		movt	r3, #:upper16:aRes
 1470 0026 C3ED007A 		fsts	s15, [r3, #0]
 357:../LSM9DS1_Driver.c **** }
 1471              		.loc 1 357 0
 1472 002a BD46     		mov	sp, r7
 1473 002c 80BC     		pop	{r7}
 1474 002e 7047     		bx	lr
 1475              	.L35:
 1476              		.align	2
 1477              	.L34:
 1478 0030 00000047 		.word	1191182336
 1479              		.cfi_endproc
 1480              	.LFE125:
 1482              		.section	.text.calcmRes,"ax",%progbits
 1483              		.align	2
 1484              		.global	calcmRes
 1485              		.thumb
 1486              		.thumb_func
 1488              	calcmRes:
 1489              	.LFB126:
 358:../LSM9DS1_Driver.c **** 
 359:../LSM9DS1_Driver.c **** 
 360:../LSM9DS1_Driver.c **** void calcmRes()
 361:../LSM9DS1_Driver.c **** {
 1490              		.loc 1 361 0
 1491              		.cfi_startproc
 1492              		@ args = 0, pretend = 0, frame = 0
 1493              		@ frame_needed = 1, uses_anonymous_args = 0
 1494              		@ link register save eliminated.
 1495 0000 80B4     		push	{r7}
 1496              	.LCFI32:
 1497              		.cfi_def_cfa_offset 4
 1498              		.cfi_offset 7, -4
 1499 0002 00AF     		add	r7, sp, #0
 1500              	.LCFI33:
 1501              		.cfi_def_cfa_register 7
 362:../LSM9DS1_Driver.c **** 	//mRes = ((float) settings.mag.scale) / 32768.0;
 363:../LSM9DS1_Driver.c **** 	switch (settings.mag.scale)
 1502              		.loc 1 363 0
 1503 0004 40F20003 		movw	r3, #:lower16:settings
 1504 0008 C0F20003 		movt	r3, #:upper16:settings
 1505 000c 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 1506 0010 A3F10403 		sub	r3, r3, #4
 1507 0014 0C2B     		cmp	r3, #12
 1508 0016 49D8     		bhi	.L36
 1509 0018 01A2     		adr	r2, .L42
 1510 001a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1511 001e 00BF     		.align	2
 1512              	.L42:
 1513 0020 55000000 		.word	.L38+1
 1514 0024 AD000000 		.word	.L36+1
 1515 0028 AD000000 		.word	.L36+1
 1516 002c AD000000 		.word	.L36+1
 1517 0030 6B000000 		.word	.L39+1
 1518 0034 AD000000 		.word	.L36+1
 1519 0038 AD000000 		.word	.L36+1
 1520 003c AD000000 		.word	.L36+1
 1521 0040 81000000 		.word	.L40+1
 1522 0044 AD000000 		.word	.L36+1
 1523 0048 AD000000 		.word	.L36+1
 1524 004c AD000000 		.word	.L36+1
 1525 0050 97000000 		.word	.L41+1
 1526              	.L38:
 364:../LSM9DS1_Driver.c **** 	{
 365:../LSM9DS1_Driver.c **** 		case 4:
 366:../LSM9DS1_Driver.c **** 			mRes = magSensitivity[0];
 1527              		.loc 1 366 0
 1528 0054 40F20003 		movw	r3, #:lower16:magSensitivity
 1529 0058 C0F20003 		movt	r3, #:upper16:magSensitivity
 1530 005c 1A68     		ldr	r2, [r3, #0]	@ float
 1531 005e 40F20003 		movw	r3, #:lower16:mRes
 1532 0062 C0F20003 		movt	r3, #:upper16:mRes
 1533 0066 1A60     		str	r2, [r3, #0]	@ float
 367:../LSM9DS1_Driver.c **** 			break;
 1534              		.loc 1 367 0
 1535 0068 20E0     		b	.L36
 1536              	.L39:
 368:../LSM9DS1_Driver.c **** 		case 8:
 369:../LSM9DS1_Driver.c **** 			mRes = magSensitivity[1];
 1537              		.loc 1 369 0
 1538 006a 40F20003 		movw	r3, #:lower16:magSensitivity
 1539 006e C0F20003 		movt	r3, #:upper16:magSensitivity
 1540 0072 5A68     		ldr	r2, [r3, #4]	@ float
 1541 0074 40F20003 		movw	r3, #:lower16:mRes
 1542 0078 C0F20003 		movt	r3, #:upper16:mRes
 1543 007c 1A60     		str	r2, [r3, #0]	@ float
 370:../LSM9DS1_Driver.c **** 			break;
 1544              		.loc 1 370 0
 1545 007e 15E0     		b	.L36
 1546              	.L40:
 371:../LSM9DS1_Driver.c **** 		case 12:
 372:../LSM9DS1_Driver.c **** 			mRes = magSensitivity[2];
 1547              		.loc 1 372 0
 1548 0080 40F20003 		movw	r3, #:lower16:magSensitivity
 1549 0084 C0F20003 		movt	r3, #:upper16:magSensitivity
 1550 0088 9A68     		ldr	r2, [r3, #8]	@ float
 1551 008a 40F20003 		movw	r3, #:lower16:mRes
 1552 008e C0F20003 		movt	r3, #:upper16:mRes
 1553 0092 1A60     		str	r2, [r3, #0]	@ float
 373:../LSM9DS1_Driver.c **** 			break;
 1554              		.loc 1 373 0
 1555 0094 0AE0     		b	.L36
 1556              	.L41:
 374:../LSM9DS1_Driver.c **** 		case 16:
 375:../LSM9DS1_Driver.c **** 			mRes = magSensitivity[3];
 1557              		.loc 1 375 0
 1558 0096 40F20003 		movw	r3, #:lower16:magSensitivity
 1559 009a C0F20003 		movt	r3, #:upper16:magSensitivity
 1560 009e DA68     		ldr	r2, [r3, #12]	@ float
 1561 00a0 40F20003 		movw	r3, #:lower16:mRes
 1562 00a4 C0F20003 		movt	r3, #:upper16:mRes
 1563 00a8 1A60     		str	r2, [r3, #0]	@ float
 376:../LSM9DS1_Driver.c **** 			break;
 1564              		.loc 1 376 0
 1565 00aa 00BF     		nop
 1566              	.L36:
 377:../LSM9DS1_Driver.c **** 	}
 378:../LSM9DS1_Driver.c **** 
 379:../LSM9DS1_Driver.c **** }
 1567              		.loc 1 379 0
 1568 00ac BD46     		mov	sp, r7
 1569 00ae 80BC     		pop	{r7}
 1570 00b0 7047     		bx	lr
 1571              		.cfi_endproc
 1572              	.LFE126:
 1574 00b2 00BF     		.section	.text.delay,"ax",%progbits
 1575              		.align	2
 1576              		.global	delay
 1577              		.thumb
 1578              		.thumb_func
 1580              	delay:
 1581              	.LFB127:
 380:../LSM9DS1_Driver.c **** 
 381:../LSM9DS1_Driver.c **** void delay(int d)
 382:../LSM9DS1_Driver.c **** {
 1582              		.loc 1 382 0
 1583              		.cfi_startproc
 1584              		@ args = 0, pretend = 0, frame = 16
 1585              		@ frame_needed = 1, uses_anonymous_args = 0
 1586              		@ link register save eliminated.
 1587 0000 80B4     		push	{r7}
 1588              	.LCFI34:
 1589              		.cfi_def_cfa_offset 4
 1590              		.cfi_offset 7, -4
 1591 0002 85B0     		sub	sp, sp, #20
 1592              	.LCFI35:
 1593              		.cfi_def_cfa_offset 24
 1594 0004 00AF     		add	r7, sp, #0
 1595              	.LCFI36:
 1596              		.cfi_def_cfa_register 7
 1597 0006 7860     		str	r0, [r7, #4]
 1598              	.LBB5:
 383:../LSM9DS1_Driver.c **** 	for(int i = 0; i < d; i++) i++;
 1599              		.loc 1 383 0
 1600 0008 4FF00003 		mov	r3, #0
 1601 000c FB60     		str	r3, [r7, #12]
 1602 000e 07E0     		b	.L44
 1603              	.L45:
 1604              		.loc 1 383 0 is_stmt 0 discriminator 2
 1605 0010 FB68     		ldr	r3, [r7, #12]
 1606 0012 03F10103 		add	r3, r3, #1
 1607 0016 FB60     		str	r3, [r7, #12]
 1608 0018 FB68     		ldr	r3, [r7, #12]
 1609 001a 03F10103 		add	r3, r3, #1
 1610 001e FB60     		str	r3, [r7, #12]
 1611              	.L44:
 1612              		.loc 1 383 0 discriminator 1
 1613 0020 FA68     		ldr	r2, [r7, #12]
 1614 0022 7B68     		ldr	r3, [r7, #4]
 1615 0024 9A42     		cmp	r2, r3
 1616 0026 F3DB     		blt	.L45
 1617              	.LBE5:
 384:../LSM9DS1_Driver.c **** }
 1618              		.loc 1 384 0 is_stmt 1
 1619 0028 07F11407 		add	r7, r7, #20
 1620 002c BD46     		mov	sp, r7
 1621 002e 80BC     		pop	{r7}
 1622 0030 7047     		bx	lr
 1623              		.cfi_endproc
 1624              	.LFE127:
 1626 0032 00BF     		.section	.text.I2CreadByte,"ax",%progbits
 1627              		.align	2
 1628              		.global	I2CreadByte
 1629              		.thumb
 1630              		.thumb_func
 1632              	I2CreadByte:
 1633              	.LFB128:
 385:../LSM9DS1_Driver.c **** 
 386:../LSM9DS1_Driver.c **** uint8_t I2CreadByte(uint8_t address, uint8_t subAddress)
 387:../LSM9DS1_Driver.c **** {
 1634              		.loc 1 387 0
 1635              		.cfi_startproc
 1636              		@ args = 0, pretend = 0, frame = 40
 1637              		@ frame_needed = 1, uses_anonymous_args = 0
 1638 0000 80B5     		push	{r7, lr}
 1639              	.LCFI37:
 1640              		.cfi_def_cfa_offset 8
 1641              		.cfi_offset 7, -8
 1642              		.cfi_offset 14, -4
 1643 0002 8AB0     		sub	sp, sp, #40
 1644              	.LCFI38:
 1645              		.cfi_def_cfa_offset 48
 1646 0004 00AF     		add	r7, sp, #0
 1647              	.LCFI39:
 1648              		.cfi_def_cfa_register 7
 1649 0006 0246     		mov	r2, r0
 1650 0008 0B46     		mov	r3, r1
 1651 000a FA71     		strb	r2, [r7, #7]
 1652 000c BB71     		strb	r3, [r7, #6]
 388:../LSM9DS1_Driver.c **** 	uint32_t stageOfReading = 0;
 1653              		.loc 1 388 0
 1654 000e 4FF00003 		mov	r3, #0
 1655 0012 7B62     		str	r3, [r7, #36]
 389:../LSM9DS1_Driver.c **** 
 390:../LSM9DS1_Driver.c **** 	//deviceAddress address = *((deviceAddress*)T);
 391:../LSM9DS1_Driver.c **** 
 392:../LSM9DS1_Driver.c **** 		I2C001_DataType data1;
 393:../LSM9DS1_Driver.c **** 		data1.Data1.TDF_Type = I2C_TDF_MStart;
 1656              		.loc 1 393 0
 1657 0014 4FF00403 		mov	r3, #4
 1658 0018 87F82130 		strb	r3, [r7, #33]
 394:../LSM9DS1_Driver.c **** 		data1.Data1.Data = ((address<<1) | I2C_WRITE);
 1659              		.loc 1 394 0
 1660 001c FB79     		ldrb	r3, [r7, #7]
 1661 001e 4FEA4303 		lsl	r3, r3, #1
 1662 0022 DBB2     		uxtb	r3, r3
 1663 0024 87F82030 		strb	r3, [r7, #32]
 395:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data1));
 1664              		.loc 1 395 0
 1665 0028 00BF     		nop
 1666              	.L47:
 1667              		.loc 1 395 0 is_stmt 0 discriminator 1
 1668 002a 07F12003 		add	r3, r7, #32
 1669 002e 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 1670 0032 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 1671 0036 1946     		mov	r1, r3
 1672 0038 FFF7FEFF 		bl	I2C001_WriteData
 1673 003c 0346     		mov	r3, r0
 1674 003e 002B     		cmp	r3, #0
 1675 0040 F3D0     		beq	.L47
 396:../LSM9DS1_Driver.c **** 
 397:../LSM9DS1_Driver.c **** 		delay(10000);
 1676              		.loc 1 397 0 is_stmt 1
 1677 0042 42F21070 		movw	r0, #10000
 1678 0046 FFF7FEFF 		bl	delay
 398:../LSM9DS1_Driver.c **** 
 399:../LSM9DS1_Driver.c **** 		I2C001_DataType data2;
 400:../LSM9DS1_Driver.c **** 		data2.Data1.TDF_Type = I2C_TDF_MTxData;
 1679              		.loc 1 400 0
 1680 004a 4FF00003 		mov	r3, #0
 1681 004e 7B77     		strb	r3, [r7, #29]
 401:../LSM9DS1_Driver.c **** 		data2.Data1.Data = subAddress;
 1682              		.loc 1 401 0
 1683 0050 BB79     		ldrb	r3, [r7, #6]
 1684 0052 3B77     		strb	r3, [r7, #28]
 402:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data2));
 1685              		.loc 1 402 0
 1686 0054 00BF     		nop
 1687              	.L48:
 1688              		.loc 1 402 0 is_stmt 0 discriminator 1
 1689 0056 07F11C03 		add	r3, r7, #28
 1690 005a 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 1691 005e C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 1692 0062 1946     		mov	r1, r3
 1693 0064 FFF7FEFF 		bl	I2C001_WriteData
 1694 0068 0346     		mov	r3, r0
 1695 006a 002B     		cmp	r3, #0
 1696 006c F3D0     		beq	.L48
 403:../LSM9DS1_Driver.c **** 
 404:../LSM9DS1_Driver.c **** 		delay(10000);
 1697              		.loc 1 404 0 is_stmt 1
 1698 006e 42F21070 		movw	r0, #10000
 1699 0072 FFF7FEFF 		bl	delay
 405:../LSM9DS1_Driver.c **** 
 406:../LSM9DS1_Driver.c **** 
 407:../LSM9DS1_Driver.c **** 		I2C001_DataType data3;
 408:../LSM9DS1_Driver.c **** 		data3.Data1.TDF_Type = I2C_TDF_MRStart;
 1700              		.loc 1 408 0
 1701 0076 4FF00503 		mov	r3, #5
 1702 007a 7B76     		strb	r3, [r7, #25]
 409:../LSM9DS1_Driver.c **** 		data3.Data1.Data = ((address<<1) | I2C_READ);
 1703              		.loc 1 409 0
 1704 007c FB79     		ldrb	r3, [r7, #7]
 1705 007e 4FEA4303 		lsl	r3, r3, #1
 1706 0082 DBB2     		uxtb	r3, r3
 1707 0084 43F00103 		orr	r3, r3, #1
 1708 0088 DBB2     		uxtb	r3, r3
 1709 008a 3B76     		strb	r3, [r7, #24]
 410:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data3));
 1710              		.loc 1 410 0
 1711 008c 00BF     		nop
 1712              	.L49:
 1713              		.loc 1 410 0 is_stmt 0 discriminator 1
 1714 008e 07F11803 		add	r3, r7, #24
 1715 0092 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 1716 0096 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 1717 009a 1946     		mov	r1, r3
 1718 009c FFF7FEFF 		bl	I2C001_WriteData
 1719 00a0 0346     		mov	r3, r0
 1720 00a2 002B     		cmp	r3, #0
 1721 00a4 F3D0     		beq	.L49
 411:../LSM9DS1_Driver.c **** 
 412:../LSM9DS1_Driver.c **** 		delay(10000);
 1722              		.loc 1 412 0 is_stmt 1
 1723 00a6 42F21070 		movw	r0, #10000
 1724 00aa FFF7FEFF 		bl	delay
 413:../LSM9DS1_Driver.c **** 
 414:../LSM9DS1_Driver.c **** 
 415:../LSM9DS1_Driver.c **** 		I2C001_DataType data4;
 416:../LSM9DS1_Driver.c **** 		data4.Data1.TDF_Type = I2C_TDF_MRxAck1;
 1725              		.loc 1 416 0
 1726 00ae 4FF00303 		mov	r3, #3
 1727 00b2 7B75     		strb	r3, [r7, #21]
 417:../LSM9DS1_Driver.c **** 		data4.Data1.Data = ubyteFF;
 1728              		.loc 1 417 0
 1729 00b4 4FF0FF03 		mov	r3, #255
 1730 00b8 3B75     		strb	r3, [r7, #20]
 418:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data4));
 1731              		.loc 1 418 0
 1732 00ba 00BF     		nop
 1733              	.L50:
 1734              		.loc 1 418 0 is_stmt 0 discriminator 1
 1735 00bc 07F11403 		add	r3, r7, #20
 1736 00c0 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 1737 00c4 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 1738 00c8 1946     		mov	r1, r3
 1739 00ca FFF7FEFF 		bl	I2C001_WriteData
 1740 00ce 0346     		mov	r3, r0
 1741 00d0 002B     		cmp	r3, #0
 1742 00d2 F3D0     		beq	.L50
 419:../LSM9DS1_Driver.c **** 
 420:../LSM9DS1_Driver.c **** 		delay(10000);
 1743              		.loc 1 420 0 is_stmt 1
 1744 00d4 42F21070 		movw	r0, #10000
 1745 00d8 FFF7FEFF 		bl	delay
 421:../LSM9DS1_Driver.c **** 
 422:../LSM9DS1_Driver.c **** 		I2C001_DataType data5;
 423:../LSM9DS1_Driver.c **** 		data5.Data1.TDF_Type = I2C_TDF_MStop;
 1746              		.loc 1 423 0
 1747 00dc 4FF00603 		mov	r3, #6
 1748 00e0 7B74     		strb	r3, [r7, #17]
 424:../LSM9DS1_Driver.c **** 		data5.Data1.Data = ubyteFF;
 1749              		.loc 1 424 0
 1750 00e2 4FF0FF03 		mov	r3, #255
 1751 00e6 3B74     		strb	r3, [r7, #16]
 425:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data5));
 1752              		.loc 1 425 0
 1753 00e8 00BF     		nop
 1754              	.L51:
 1755              		.loc 1 425 0 is_stmt 0 discriminator 1
 1756 00ea 07F11003 		add	r3, r7, #16
 1757 00ee 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 1758 00f2 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 1759 00f6 1946     		mov	r1, r3
 1760 00f8 FFF7FEFF 		bl	I2C001_WriteData
 1761 00fc 0346     		mov	r3, r0
 1762 00fe 002B     		cmp	r3, #0
 1763 0100 F3D0     		beq	.L51
 426:../LSM9DS1_Driver.c **** 		stageOfReading++;
 1764              		.loc 1 426 0 is_stmt 1
 1765 0102 7B6A     		ldr	r3, [r7, #36]
 1766 0104 03F10103 		add	r3, r3, #1
 1767 0108 7B62     		str	r3, [r7, #36]
 427:../LSM9DS1_Driver.c **** 
 428:../LSM9DS1_Driver.c **** 		delay(10000);
 1768              		.loc 1 428 0
 1769 010a 42F21070 		movw	r0, #10000
 1770 010e FFF7FEFF 		bl	delay
 429:../LSM9DS1_Driver.c **** 
 430:../LSM9DS1_Driver.c **** 		uint16_t DataReceive1 = 0;
 1771              		.loc 1 430 0
 1772 0112 4FF00003 		mov	r3, #0
 1773 0116 FB81     		strh	r3, [r7, #14]	@ movhi
 431:../LSM9DS1_Driver.c **** 		if(I2C001_ReadData(&I2C001_Handle0,&DataReceive1))
 1774              		.loc 1 431 0
 1775 0118 07F10E03 		add	r3, r7, #14
 1776 011c 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 1777 0120 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 1778 0124 1946     		mov	r1, r3
 1779 0126 FFF7FEFF 		bl	I2C001_ReadData
 1780 012a 0346     		mov	r3, r0
 1781 012c 002B     		cmp	r3, #0
 1782 012e 04D0     		beq	.L52
 432:../LSM9DS1_Driver.c **** 		{
 433:../LSM9DS1_Driver.c **** 			stageOfReading++;
 1783              		.loc 1 433 0
 1784 0130 7B6A     		ldr	r3, [r7, #36]
 1785 0132 03F10103 		add	r3, r3, #1
 1786 0136 7B62     		str	r3, [r7, #36]
 1787 0138 03E0     		b	.L53
 1788              	.L52:
 434:../LSM9DS1_Driver.c **** 		}
 435:../LSM9DS1_Driver.c **** 		else
 436:../LSM9DS1_Driver.c **** 		{
 437:../LSM9DS1_Driver.c **** 			stageOfReading--;
 1789              		.loc 1 437 0
 1790 013a 7B6A     		ldr	r3, [r7, #36]
 1791 013c 03F1FF33 		add	r3, r3, #-1
 1792 0140 7B62     		str	r3, [r7, #36]
 1793              	.L53:
 438:../LSM9DS1_Driver.c **** 		}
 439:../LSM9DS1_Driver.c **** 
 440:../LSM9DS1_Driver.c **** 		return (uint8_t)DataReceive1;
 1794              		.loc 1 440 0
 1795 0142 FB89     		ldrh	r3, [r7, #14]
 1796 0144 DBB2     		uxtb	r3, r3
 441:../LSM9DS1_Driver.c **** }
 1797              		.loc 1 441 0
 1798 0146 1846     		mov	r0, r3
 1799 0148 07F12807 		add	r7, r7, #40
 1800 014c BD46     		mov	sp, r7
 1801 014e 80BD     		pop	{r7, pc}
 1802              		.cfi_endproc
 1803              	.LFE128:
 1805              		.section	.text.mReadByte,"ax",%progbits
 1806              		.align	2
 1807              		.global	mReadByte
 1808              		.thumb
 1809              		.thumb_func
 1811              	mReadByte:
 1812              	.LFB129:
 442:../LSM9DS1_Driver.c **** 
 443:../LSM9DS1_Driver.c **** 
 444:../LSM9DS1_Driver.c **** uint8_t mReadByte(uint8_t subAddress)
 445:../LSM9DS1_Driver.c **** {
 1813              		.loc 1 445 0
 1814              		.cfi_startproc
 1815              		@ args = 0, pretend = 0, frame = 8
 1816              		@ frame_needed = 1, uses_anonymous_args = 0
 1817 0000 80B5     		push	{r7, lr}
 1818              	.LCFI40:
 1819              		.cfi_def_cfa_offset 8
 1820              		.cfi_offset 7, -8
 1821              		.cfi_offset 14, -4
 1822 0002 82B0     		sub	sp, sp, #8
 1823              	.LCFI41:
 1824              		.cfi_def_cfa_offset 16
 1825 0004 00AF     		add	r7, sp, #0
 1826              	.LCFI42:
 1827              		.cfi_def_cfa_register 7
 1828 0006 0346     		mov	r3, r0
 1829 0008 FB71     		strb	r3, [r7, #7]
 446:../LSM9DS1_Driver.c **** 	// Whether we're using I2C or SPI, read a byte using the
 447:../LSM9DS1_Driver.c **** 	// accelerometer-specific I2C address or SPI CS pin.
 448:../LSM9DS1_Driver.c **** 	if (settings.device.commInterface == IMU_MODE_I2C)
 1830              		.loc 1 448 0
 1831 000a 40F20003 		movw	r3, #:lower16:settings
 1832 000e C0F20003 		movt	r3, #:upper16:settings
 1833 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1834 0014 012B     		cmp	r3, #1
 1835 0016 0BD1     		bne	.L56
 449:../LSM9DS1_Driver.c **** 		return I2CreadByte(_mAddress, subAddress);
 1836              		.loc 1 449 0
 1837 0018 40F20003 		movw	r3, #:lower16:_mAddress
 1838 001c C0F20003 		movt	r3, #:upper16:_mAddress
 1839 0020 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1840 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1841 0024 1046     		mov	r0, r2
 1842 0026 1946     		mov	r1, r3
 1843 0028 FFF7FEFF 		bl	I2CreadByte
 1844 002c 0346     		mov	r3, r0
 1845 002e FFE7     		b	.L55
 1846              	.L56:
 1847              	.L55:
 450:../LSM9DS1_Driver.c **** 	/*else if (settings.device.commInterface == IMU_MODE_SPI)
 451:../LSM9DS1_Driver.c **** 		return SPIreadByte(_mAddress, subAddress);*/
 452:../LSM9DS1_Driver.c **** }
 1848              		.loc 1 452 0
 1849 0030 1846     		mov	r0, r3
 1850 0032 07F10807 		add	r7, r7, #8
 1851 0036 BD46     		mov	sp, r7
 1852 0038 80BD     		pop	{r7, pc}
 1853              		.cfi_endproc
 1854              	.LFE129:
 1856 003a 00BF     		.section	.text.xgReadByte,"ax",%progbits
 1857              		.align	2
 1858              		.global	xgReadByte
 1859              		.thumb
 1860              		.thumb_func
 1862              	xgReadByte:
 1863              	.LFB130:
 453:../LSM9DS1_Driver.c **** 
 454:../LSM9DS1_Driver.c **** uint8_t xgReadByte(uint8_t subAddress)
 455:../LSM9DS1_Driver.c **** {
 1864              		.loc 1 455 0
 1865              		.cfi_startproc
 1866              		@ args = 0, pretend = 0, frame = 8
 1867              		@ frame_needed = 1, uses_anonymous_args = 0
 1868 0000 80B5     		push	{r7, lr}
 1869              	.LCFI43:
 1870              		.cfi_def_cfa_offset 8
 1871              		.cfi_offset 7, -8
 1872              		.cfi_offset 14, -4
 1873 0002 82B0     		sub	sp, sp, #8
 1874              	.LCFI44:
 1875              		.cfi_def_cfa_offset 16
 1876 0004 00AF     		add	r7, sp, #0
 1877              	.LCFI45:
 1878              		.cfi_def_cfa_register 7
 1879 0006 0346     		mov	r3, r0
 1880 0008 FB71     		strb	r3, [r7, #7]
 456:../LSM9DS1_Driver.c **** 	// Whether we're using I2C or SPI, read a byte using the
 457:../LSM9DS1_Driver.c **** 	// gyro-specific I2C address or SPI CS pin.
 458:../LSM9DS1_Driver.c **** 	if (settings.device.commInterface == IMU_MODE_I2C)
 1881              		.loc 1 458 0
 1882 000a 40F20003 		movw	r3, #:lower16:settings
 1883 000e C0F20003 		movt	r3, #:upper16:settings
 1884 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1885 0014 012B     		cmp	r3, #1
 1886 0016 0BD1     		bne	.L59
 459:../LSM9DS1_Driver.c **** 		return I2CreadByte(_xgAddress, subAddress);
 1887              		.loc 1 459 0
 1888 0018 40F20003 		movw	r3, #:lower16:_xgAddress
 1889 001c C0F20003 		movt	r3, #:upper16:_xgAddress
 1890 0020 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1891 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1892 0024 1046     		mov	r0, r2
 1893 0026 1946     		mov	r1, r3
 1894 0028 FFF7FEFF 		bl	I2CreadByte
 1895 002c 0346     		mov	r3, r0
 1896 002e FFE7     		b	.L58
 1897              	.L59:
 1898              	.L58:
 460:../LSM9DS1_Driver.c **** 	/*else if (settings.device.commInterface == IMU_MODE_SPI)
 461:../LSM9DS1_Driver.c **** 		return SPIreadByte(_xgAddress, subAddress);*/
 462:../LSM9DS1_Driver.c **** }
 1899              		.loc 1 462 0
 1900 0030 1846     		mov	r0, r3
 1901 0032 07F10807 		add	r7, r7, #8
 1902 0036 BD46     		mov	sp, r7
 1903 0038 80BD     		pop	{r7, pc}
 1904              		.cfi_endproc
 1905              	.LFE130:
 1907 003a 00BF     		.section	.text.initGyro,"ax",%progbits
 1908              		.align	2
 1909              		.global	initGyro
 1910              		.thumb
 1911              		.thumb_func
 1913              	initGyro:
 1914              	.LFB131:
 463:../LSM9DS1_Driver.c **** 
 464:../LSM9DS1_Driver.c **** void initGyro(void)
 465:../LSM9DS1_Driver.c **** {
 1915              		.loc 1 465 0
 1916              		.cfi_startproc
 1917              		@ args = 0, pretend = 0, frame = 8
 1918              		@ frame_needed = 1, uses_anonymous_args = 0
 1919 0000 80B5     		push	{r7, lr}
 1920              	.LCFI46:
 1921              		.cfi_def_cfa_offset 8
 1922              		.cfi_offset 7, -8
 1923              		.cfi_offset 14, -4
 1924 0002 82B0     		sub	sp, sp, #8
 1925              	.LCFI47:
 1926              		.cfi_def_cfa_offset 16
 1927 0004 00AF     		add	r7, sp, #0
 1928              	.LCFI48:
 1929              		.cfi_def_cfa_register 7
 466:../LSM9DS1_Driver.c **** 	uint8_t tempRegValue = 0;
 1930              		.loc 1 466 0
 1931 0006 4FF00003 		mov	r3, #0
 1932 000a FB71     		strb	r3, [r7, #7]
 467:../LSM9DS1_Driver.c **** 
 468:../LSM9DS1_Driver.c **** 	// CTRL_REG1_G (Default value: 0x00)
 469:../LSM9DS1_Driver.c **** 	// [ODR_G2][ODR_G1][ODR_G0][FS_G1][FS_G0][0][BW_G1][BW_G0]
 470:../LSM9DS1_Driver.c **** 	// ODR_G[2:0] - Output data rate selection
 471:../LSM9DS1_Driver.c **** 	// FS_G[1:0] - Gyroscope full-scale selection
 472:../LSM9DS1_Driver.c **** 	// BW_G[1:0] - Gyroscope bandwidth selection
 473:../LSM9DS1_Driver.c **** 
 474:../LSM9DS1_Driver.c **** 	// To disable gyro, set sample rate bits to 0. We'll only set sample
 475:../LSM9DS1_Driver.c **** 	// rate if the gyro is enabled.
 476:../LSM9DS1_Driver.c **** 	if (settings.gyro.enabled)
 1933              		.loc 1 476 0
 1934 000c 40F20003 		movw	r3, #:lower16:settings
 1935 0010 C0F20003 		movt	r3, #:upper16:settings
 1936 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1937 0016 002B     		cmp	r3, #0
 1938 0018 07D0     		beq	.L62
 477:../LSM9DS1_Driver.c **** 	{
 478:../LSM9DS1_Driver.c **** 		tempRegValue = (settings.gyro.sampleRate & 0x07) << 5;
 1939              		.loc 1 478 0
 1940 001a 40F20003 		movw	r3, #:lower16:settings
 1941 001e C0F20003 		movt	r3, #:upper16:settings
 1942 0022 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 1943 0024 4FEA4313 		lsl	r3, r3, #5
 1944 0028 FB71     		strb	r3, [r7, #7]
 1945              	.L62:
 479:../LSM9DS1_Driver.c **** 	}
 480:../LSM9DS1_Driver.c **** 
 481:../LSM9DS1_Driver.c **** 	switch (settings.gyro.scale)
 1946              		.loc 1 481 0
 1947 002a 40F20003 		movw	r3, #:lower16:settings
 1948 002e C0F20003 		movt	r3, #:upper16:settings
 1949 0032 DB88     		ldrh	r3, [r3, #6]
 1950 0034 B3F5FA7F 		cmp	r3, #500
 1951 0038 03D0     		beq	.L64
 1952 003a B3F5FA6F 		cmp	r3, #2000
 1953 003e 05D0     		beq	.L65
 1954 0040 09E0     		b	.L63
 1955              	.L64:
 482:../LSM9DS1_Driver.c **** 	{
 483:../LSM9DS1_Driver.c **** 		case 500:
 484:../LSM9DS1_Driver.c **** 			tempRegValue |= (0x1 << 3);
 1956              		.loc 1 484 0
 1957 0042 FB79     		ldrb	r3, [r7, #7]
 1958 0044 43F00803 		orr	r3, r3, #8
 1959 0048 FB71     		strb	r3, [r7, #7]
 485:../LSM9DS1_Driver.c **** 			break;
 1960              		.loc 1 485 0
 1961 004a 04E0     		b	.L63
 1962              	.L65:
 486:../LSM9DS1_Driver.c **** 		case 2000:
 487:../LSM9DS1_Driver.c **** 			tempRegValue |= (0x3 << 3);
 1963              		.loc 1 487 0
 1964 004c FB79     		ldrb	r3, [r7, #7]
 1965 004e 43F01803 		orr	r3, r3, #24
 1966 0052 FB71     		strb	r3, [r7, #7]
 488:../LSM9DS1_Driver.c **** 			break;
 1967              		.loc 1 488 0
 1968 0054 00BF     		nop
 1969              	.L63:
 489:../LSM9DS1_Driver.c **** 		// Otherwise we'll set it to 245 dps (0x0 << 4)
 490:../LSM9DS1_Driver.c **** 	}
 491:../LSM9DS1_Driver.c **** 	tempRegValue |= (settings.gyro.bandwidth & 0x3);
 1970              		.loc 1 491 0
 1971 0056 40F20003 		movw	r3, #:lower16:settings
 1972 005a C0F20003 		movt	r3, #:upper16:settings
 1973 005e 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 1974 0060 DBB2     		uxtb	r3, r3
 1975 0062 03F00303 		and	r3, r3, #3
 1976 0066 DAB2     		uxtb	r2, r3
 1977 0068 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1978 006a 1343     		orrs	r3, r3, r2
 1979 006c DBB2     		uxtb	r3, r3
 1980 006e FB71     		strb	r3, [r7, #7]
 492:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG1_G, tempRegValue);
 1981              		.loc 1 492 0
 1982 0070 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1983 0072 4FF01000 		mov	r0, #16
 1984 0076 1946     		mov	r1, r3
 1985 0078 FFF7FEFF 		bl	xgWriteByte
 493:../LSM9DS1_Driver.c **** 
 494:../LSM9DS1_Driver.c **** 	// CTRL_REG2_G (Default value: 0x00)
 495:../LSM9DS1_Driver.c **** 	// [0][0][0][0][INT_SEL1][INT_SEL0][OUT_SEL1][OUT_SEL0]
 496:../LSM9DS1_Driver.c **** 	// INT_SEL[1:0] - INT selection configuration
 497:../LSM9DS1_Driver.c **** 	// OUT_SEL[1:0] - Out selection configuration
 498:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG2_G, 0x00);
 1986              		.loc 1 498 0
 1987 007c 4FF01100 		mov	r0, #17
 1988 0080 4FF00001 		mov	r1, #0
 1989 0084 FFF7FEFF 		bl	xgWriteByte
 499:../LSM9DS1_Driver.c **** 
 500:../LSM9DS1_Driver.c **** 	// CTRL_REG3_G (Default value: 0x00)
 501:../LSM9DS1_Driver.c **** 	// [LP_mode][HP_EN][0][0][HPCF3_G][HPCF2_G][HPCF1_G][HPCF0_G]
 502:../LSM9DS1_Driver.c **** 	// LP_mode - Low-power mode enable (0: disabled, 1: enabled)
 503:../LSM9DS1_Driver.c **** 	// HP_EN - HPF enable (0:disabled, 1: enabled)
 504:../LSM9DS1_Driver.c **** 	// HPCF_G[3:0] - HPF cutoff frequency
 505:../LSM9DS1_Driver.c **** 	tempRegValue = settings.gyro.lowPowerEnable ? (1<<7) : 0;
 1990              		.loc 1 505 0
 1991 0088 40F20003 		movw	r3, #:lower16:settings
 1992 008c C0F20003 		movt	r3, #:upper16:settings
 1993 0090 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 1994 0092 002B     		cmp	r3, #0
 1995 0094 02D0     		beq	.L66
 1996              		.loc 1 505 0 is_stmt 0 discriminator 1
 1997 0096 4FF08003 		mov	r3, #128
 1998 009a 01E0     		b	.L67
 1999              	.L66:
 2000              		.loc 1 505 0 discriminator 2
 2001 009c 4FF00003 		mov	r3, #0
 2002              	.L67:
 2003              		.loc 1 505 0 discriminator 3
 2004 00a0 FB71     		strb	r3, [r7, #7]
 506:../LSM9DS1_Driver.c **** 	if (settings.gyro.HPFEnable)
 2005              		.loc 1 506 0 is_stmt 1 discriminator 3
 2006 00a2 40F20003 		movw	r3, #:lower16:settings
 2007 00a6 C0F20003 		movt	r3, #:upper16:settings
 2008 00aa DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 2009 00ac 002B     		cmp	r3, #0
 2010 00ae 0FD0     		beq	.L68
 507:../LSM9DS1_Driver.c **** 	{
 508:../LSM9DS1_Driver.c **** 		tempRegValue |= ((1<<6) | (settings.gyro.HPFCutoff & 0x0F));
 2011              		.loc 1 508 0
 2012 00b0 40F20003 		movw	r3, #:lower16:settings
 2013 00b4 C0F20003 		movt	r3, #:upper16:settings
 2014 00b8 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 2015 00ba DBB2     		uxtb	r3, r3
 2016 00bc 03F00F03 		and	r3, r3, #15
 2017 00c0 DBB2     		uxtb	r3, r3
 2018 00c2 43F04003 		orr	r3, r3, #64
 2019 00c6 DAB2     		uxtb	r2, r3
 2020 00c8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2021 00ca 1343     		orrs	r3, r3, r2
 2022 00cc DBB2     		uxtb	r3, r3
 2023 00ce FB71     		strb	r3, [r7, #7]
 2024              	.L68:
 509:../LSM9DS1_Driver.c **** 	}
 510:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG3_G, tempRegValue);
 2025              		.loc 1 510 0
 2026 00d0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2027 00d2 4FF01200 		mov	r0, #18
 2028 00d6 1946     		mov	r1, r3
 2029 00d8 FFF7FEFF 		bl	xgWriteByte
 511:../LSM9DS1_Driver.c **** 
 512:../LSM9DS1_Driver.c **** 	// CTRL_REG4 (Default value: 0x38)
 513:../LSM9DS1_Driver.c **** 	// [0][0][Zen_G][Yen_G][Xen_G][0][LIR_XL1][4D_XL1]
 514:../LSM9DS1_Driver.c **** 	// Zen_G - Z-axis output enable (0:disable, 1:enable)
 515:../LSM9DS1_Driver.c **** 	// Yen_G - Y-axis output enable (0:disable, 1:enable)
 516:../LSM9DS1_Driver.c **** 	// Xen_G - X-axis output enable (0:disable, 1:enable)
 517:../LSM9DS1_Driver.c **** 	// LIR_XL1 - Latched interrupt (0:not latched, 1:latched)
 518:../LSM9DS1_Driver.c **** 	// 4D_XL1 - 4D option on interrupt (0:6D used, 1:4D used)
 519:../LSM9DS1_Driver.c **** 	tempRegValue = 0;
 2030              		.loc 1 519 0
 2031 00dc 4FF00003 		mov	r3, #0
 2032 00e0 FB71     		strb	r3, [r7, #7]
 520:../LSM9DS1_Driver.c **** 	if (settings.gyro.enableZ) tempRegValue |= (1<<5);
 2033              		.loc 1 520 0
 2034 00e2 40F20003 		movw	r3, #:lower16:settings
 2035 00e6 C0F20003 		movt	r3, #:upper16:settings
 2036 00ea DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
 2037 00ec 002B     		cmp	r3, #0
 2038 00ee 03D0     		beq	.L69
 2039              		.loc 1 520 0 is_stmt 0 discriminator 1
 2040 00f0 FB79     		ldrb	r3, [r7, #7]
 2041 00f2 43F02003 		orr	r3, r3, #32
 2042 00f6 FB71     		strb	r3, [r7, #7]
 2043              	.L69:
 521:../LSM9DS1_Driver.c **** 	if (settings.gyro.enableY) tempRegValue |= (1<<4);
 2044              		.loc 1 521 0 is_stmt 1
 2045 00f8 40F20003 		movw	r3, #:lower16:settings
 2046 00fc C0F20003 		movt	r3, #:upper16:settings
 2047 0100 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
 2048 0102 002B     		cmp	r3, #0
 2049 0104 03D0     		beq	.L70
 2050              		.loc 1 521 0 is_stmt 0 discriminator 1
 2051 0106 FB79     		ldrb	r3, [r7, #7]
 2052 0108 43F01003 		orr	r3, r3, #16
 2053 010c FB71     		strb	r3, [r7, #7]
 2054              	.L70:
 522:../LSM9DS1_Driver.c **** 	if (settings.gyro.enableX) tempRegValue |= (1<<3);
 2055              		.loc 1 522 0 is_stmt 1
 2056 010e 40F20003 		movw	r3, #:lower16:settings
 2057 0112 C0F20003 		movt	r3, #:upper16:settings
 2058 0116 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
 2059 0118 002B     		cmp	r3, #0
 2060 011a 03D0     		beq	.L71
 2061              		.loc 1 522 0 is_stmt 0 discriminator 1
 2062 011c FB79     		ldrb	r3, [r7, #7]
 2063 011e 43F00803 		orr	r3, r3, #8
 2064 0122 FB71     		strb	r3, [r7, #7]
 2065              	.L71:
 523:../LSM9DS1_Driver.c **** 	if (settings.gyro.latchInterrupt) tempRegValue |= (1<<1);
 2066              		.loc 1 523 0 is_stmt 1
 2067 0124 40F20003 		movw	r3, #:lower16:settings
 2068 0128 C0F20003 		movt	r3, #:upper16:settings
 2069 012c 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 2070 012e 002B     		cmp	r3, #0
 2071 0130 03D0     		beq	.L72
 2072              		.loc 1 523 0 is_stmt 0 discriminator 1
 2073 0132 FB79     		ldrb	r3, [r7, #7]
 2074 0134 43F00203 		orr	r3, r3, #2
 2075 0138 FB71     		strb	r3, [r7, #7]
 2076              	.L72:
 524:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG4, tempRegValue);
 2077              		.loc 1 524 0 is_stmt 1
 2078 013a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2079 013c 4FF01E00 		mov	r0, #30
 2080 0140 1946     		mov	r1, r3
 2081 0142 FFF7FEFF 		bl	xgWriteByte
 525:../LSM9DS1_Driver.c **** 
 526:../LSM9DS1_Driver.c **** 	// ORIENT_CFG_G (Default value: 0x00)
 527:../LSM9DS1_Driver.c **** 	// [0][0][SignX_G][SignY_G][SignZ_G][Orient_2][Orient_1][Orient_0]
 528:../LSM9DS1_Driver.c **** 	// SignX_G - Pitch axis (X) angular rate sign (0: positive, 1: negative)
 529:../LSM9DS1_Driver.c **** 	// Orient [2:0] - Directional user orientation selection
 530:../LSM9DS1_Driver.c **** 	tempRegValue = 0;
 2082              		.loc 1 530 0
 2083 0146 4FF00003 		mov	r3, #0
 2084 014a FB71     		strb	r3, [r7, #7]
 531:../LSM9DS1_Driver.c **** 	if (settings.gyro.flipX) tempRegValue |= (1<<5);
 2085              		.loc 1 531 0
 2086 014c 40F20003 		movw	r3, #:lower16:settings
 2087 0150 C0F20003 		movt	r3, #:upper16:settings
 2088 0154 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 2089 0156 002B     		cmp	r3, #0
 2090 0158 03D0     		beq	.L73
 2091              		.loc 1 531 0 is_stmt 0 discriminator 1
 2092 015a FB79     		ldrb	r3, [r7, #7]
 2093 015c 43F02003 		orr	r3, r3, #32
 2094 0160 FB71     		strb	r3, [r7, #7]
 2095              	.L73:
 532:../LSM9DS1_Driver.c **** 	if (settings.gyro.flipY) tempRegValue |= (1<<4);
 2096              		.loc 1 532 0 is_stmt 1
 2097 0162 40F20003 		movw	r3, #:lower16:settings
 2098 0166 C0F20003 		movt	r3, #:upper16:settings
 2099 016a 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 2100 016c 002B     		cmp	r3, #0
 2101 016e 03D0     		beq	.L74
 2102              		.loc 1 532 0 is_stmt 0 discriminator 1
 2103 0170 FB79     		ldrb	r3, [r7, #7]
 2104 0172 43F01003 		orr	r3, r3, #16
 2105 0176 FB71     		strb	r3, [r7, #7]
 2106              	.L74:
 533:../LSM9DS1_Driver.c **** 	if (settings.gyro.flipZ) tempRegValue |= (1<<3);
 2107              		.loc 1 533 0 is_stmt 1
 2108 0178 40F20003 		movw	r3, #:lower16:settings
 2109 017c C0F20003 		movt	r3, #:upper16:settings
 2110 0180 DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
 2111 0182 002B     		cmp	r3, #0
 2112 0184 03D0     		beq	.L75
 2113              		.loc 1 533 0 is_stmt 0 discriminator 1
 2114 0186 FB79     		ldrb	r3, [r7, #7]
 2115 0188 43F00803 		orr	r3, r3, #8
 2116 018c FB71     		strb	r3, [r7, #7]
 2117              	.L75:
 534:../LSM9DS1_Driver.c **** 	xgWriteByte(ORIENT_CFG_G, tempRegValue);
 2118              		.loc 1 534 0 is_stmt 1
 2119 018e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2120 0190 4FF01300 		mov	r0, #19
 2121 0194 1946     		mov	r1, r3
 2122 0196 FFF7FEFF 		bl	xgWriteByte
 535:../LSM9DS1_Driver.c **** }
 2123              		.loc 1 535 0
 2124 019a 07F10807 		add	r7, r7, #8
 2125 019e BD46     		mov	sp, r7
 2126 01a0 80BD     		pop	{r7, pc}
 2127              		.cfi_endproc
 2128              	.LFE131:
 2130 01a2 00BF     		.section	.text.xgWriteByte,"ax",%progbits
 2131              		.align	2
 2132              		.global	xgWriteByte
 2133              		.thumb
 2134              		.thumb_func
 2136              	xgWriteByte:
 2137              	.LFB132:
 536:../LSM9DS1_Driver.c **** 
 537:../LSM9DS1_Driver.c **** 
 538:../LSM9DS1_Driver.c **** void xgWriteByte(uint8_t subAddress, uint8_t data)
 539:../LSM9DS1_Driver.c **** {
 2138              		.loc 1 539 0
 2139              		.cfi_startproc
 2140              		@ args = 0, pretend = 0, frame = 8
 2141              		@ frame_needed = 1, uses_anonymous_args = 0
 2142 0000 80B5     		push	{r7, lr}
 2143              	.LCFI49:
 2144              		.cfi_def_cfa_offset 8
 2145              		.cfi_offset 7, -8
 2146              		.cfi_offset 14, -4
 2147 0002 82B0     		sub	sp, sp, #8
 2148              	.LCFI50:
 2149              		.cfi_def_cfa_offset 16
 2150 0004 00AF     		add	r7, sp, #0
 2151              	.LCFI51:
 2152              		.cfi_def_cfa_register 7
 2153 0006 0246     		mov	r2, r0
 2154 0008 0B46     		mov	r3, r1
 2155 000a FA71     		strb	r2, [r7, #7]
 2156 000c BB71     		strb	r3, [r7, #6]
 540:../LSM9DS1_Driver.c **** 	// Whether we're using I2C or SPI, write a byte using the
 541:../LSM9DS1_Driver.c **** 	// gyro-specific I2C address or SPI CS pin.
 542:../LSM9DS1_Driver.c **** 	if (settings.device.commInterface == IMU_MODE_I2C)
 2157              		.loc 1 542 0
 2158 000e 40F20003 		movw	r3, #:lower16:settings
 2159 0012 C0F20003 		movt	r3, #:upper16:settings
 2160 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2161 0018 012B     		cmp	r3, #1
 2162 001a 0BD1     		bne	.L76
 543:../LSM9DS1_Driver.c **** 	{
 544:../LSM9DS1_Driver.c **** 		I2CwriteByte(_xgAddress, subAddress, data);
 2163              		.loc 1 544 0
 2164 001c 40F20003 		movw	r3, #:lower16:_xgAddress
 2165 0020 C0F20003 		movt	r3, #:upper16:_xgAddress
 2166 0024 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 2167 0026 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2168 0028 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2169 002a 0846     		mov	r0, r1
 2170 002c 1146     		mov	r1, r2
 2171 002e 1A46     		mov	r2, r3
 2172 0030 FFF7FEFF 		bl	I2CwriteByte
 2173              	.L76:
 545:../LSM9DS1_Driver.c **** 	}
 546:../LSM9DS1_Driver.c **** }
 2174              		.loc 1 546 0
 2175 0034 07F10807 		add	r7, r7, #8
 2176 0038 BD46     		mov	sp, r7
 2177 003a 80BD     		pop	{r7, pc}
 2178              		.cfi_endproc
 2179              	.LFE132:
 2181              		.section	.text.I2CwriteByte,"ax",%progbits
 2182              		.align	2
 2183              		.global	I2CwriteByte
 2184              		.thumb
 2185              		.thumb_func
 2187              	I2CwriteByte:
 2188              	.LFB133:
 547:../LSM9DS1_Driver.c **** 
 548:../LSM9DS1_Driver.c **** void I2CwriteByte(uint8_t address, uint8_t subAddress, uint8_t data)
 549:../LSM9DS1_Driver.c **** {
 2189              		.loc 1 549 0
 2190              		.cfi_startproc
 2191              		@ args = 0, pretend = 0, frame = 24
 2192              		@ frame_needed = 1, uses_anonymous_args = 0
 2193 0000 80B5     		push	{r7, lr}
 2194              	.LCFI52:
 2195              		.cfi_def_cfa_offset 8
 2196              		.cfi_offset 7, -8
 2197              		.cfi_offset 14, -4
 2198 0002 86B0     		sub	sp, sp, #24
 2199              	.LCFI53:
 2200              		.cfi_def_cfa_offset 32
 2201 0004 00AF     		add	r7, sp, #0
 2202              	.LCFI54:
 2203              		.cfi_def_cfa_register 7
 2204 0006 1346     		mov	r3, r2
 2205 0008 0246     		mov	r2, r0
 2206 000a FA71     		strb	r2, [r7, #7]
 2207 000c 0A46     		mov	r2, r1
 2208 000e BA71     		strb	r2, [r7, #6]
 2209 0010 7B71     		strb	r3, [r7, #5]
 550:../LSM9DS1_Driver.c **** 
 551:../LSM9DS1_Driver.c **** 		I2C001_DataType data1;
 552:../LSM9DS1_Driver.c **** 		data1.Data1.TDF_Type = I2C_TDF_MStart;
 2210              		.loc 1 552 0
 2211 0012 4FF00403 		mov	r3, #4
 2212 0016 7B75     		strb	r3, [r7, #21]
 553:../LSM9DS1_Driver.c **** 		data1.Data1.Data = ((address<<1) | I2C_WRITE);
 2213              		.loc 1 553 0
 2214 0018 FB79     		ldrb	r3, [r7, #7]
 2215 001a 4FEA4303 		lsl	r3, r3, #1
 2216 001e DBB2     		uxtb	r3, r3
 2217 0020 3B75     		strb	r3, [r7, #20]
 554:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data1));
 2218              		.loc 1 554 0
 2219 0022 00BF     		nop
 2220              	.L79:
 2221              		.loc 1 554 0 is_stmt 0 discriminator 1
 2222 0024 07F11403 		add	r3, r7, #20
 2223 0028 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 2224 002c C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 2225 0030 1946     		mov	r1, r3
 2226 0032 FFF7FEFF 		bl	I2C001_WriteData
 2227 0036 0346     		mov	r3, r0
 2228 0038 002B     		cmp	r3, #0
 2229 003a F3D0     		beq	.L79
 555:../LSM9DS1_Driver.c **** 
 556:../LSM9DS1_Driver.c **** 		delay(10000);
 2230              		.loc 1 556 0 is_stmt 1
 2231 003c 42F21070 		movw	r0, #10000
 2232 0040 FFF7FEFF 		bl	delay
 557:../LSM9DS1_Driver.c **** 
 558:../LSM9DS1_Driver.c **** 		I2C001_DataType data2;
 559:../LSM9DS1_Driver.c **** 		data2.Data1.TDF_Type = I2C_TDF_MTxData;
 2233              		.loc 1 559 0
 2234 0044 4FF00003 		mov	r3, #0
 2235 0048 7B74     		strb	r3, [r7, #17]
 560:../LSM9DS1_Driver.c **** 		data2.Data1.Data = subAddress;
 2236              		.loc 1 560 0
 2237 004a BB79     		ldrb	r3, [r7, #6]
 2238 004c 3B74     		strb	r3, [r7, #16]
 561:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data2));
 2239              		.loc 1 561 0
 2240 004e 00BF     		nop
 2241              	.L80:
 2242              		.loc 1 561 0 is_stmt 0 discriminator 1
 2243 0050 07F11003 		add	r3, r7, #16
 2244 0054 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 2245 0058 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 2246 005c 1946     		mov	r1, r3
 2247 005e FFF7FEFF 		bl	I2C001_WriteData
 2248 0062 0346     		mov	r3, r0
 2249 0064 002B     		cmp	r3, #0
 2250 0066 F3D0     		beq	.L80
 562:../LSM9DS1_Driver.c **** 
 563:../LSM9DS1_Driver.c **** 		delay(10000);
 2251              		.loc 1 563 0 is_stmt 1
 2252 0068 42F21070 		movw	r0, #10000
 2253 006c FFF7FEFF 		bl	delay
 564:../LSM9DS1_Driver.c **** 
 565:../LSM9DS1_Driver.c **** 		I2C001_DataType data3;
 566:../LSM9DS1_Driver.c **** 		data3.Data1.TDF_Type = I2C_TDF_MTxData;
 2254              		.loc 1 566 0
 2255 0070 4FF00003 		mov	r3, #0
 2256 0074 7B73     		strb	r3, [r7, #13]
 567:../LSM9DS1_Driver.c **** 		data3.Data1.Data = data;
 2257              		.loc 1 567 0
 2258 0076 7B79     		ldrb	r3, [r7, #5]
 2259 0078 3B73     		strb	r3, [r7, #12]
 568:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data3));
 2260              		.loc 1 568 0
 2261 007a 00BF     		nop
 2262              	.L81:
 2263              		.loc 1 568 0 is_stmt 0 discriminator 1
 2264 007c 07F10C03 		add	r3, r7, #12
 2265 0080 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 2266 0084 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 2267 0088 1946     		mov	r1, r3
 2268 008a FFF7FEFF 		bl	I2C001_WriteData
 2269 008e 0346     		mov	r3, r0
 2270 0090 002B     		cmp	r3, #0
 2271 0092 F3D0     		beq	.L81
 569:../LSM9DS1_Driver.c **** 
 570:../LSM9DS1_Driver.c **** 		delay(10000);
 2272              		.loc 1 570 0 is_stmt 1
 2273 0094 42F21070 		movw	r0, #10000
 2274 0098 FFF7FEFF 		bl	delay
 571:../LSM9DS1_Driver.c **** 
 572:../LSM9DS1_Driver.c **** 		I2C001_DataType data4;
 573:../LSM9DS1_Driver.c **** 		data4.Data1.TDF_Type = I2C_TDF_MStop;
 2275              		.loc 1 573 0
 2276 009c 4FF00603 		mov	r3, #6
 2277 00a0 7B72     		strb	r3, [r7, #9]
 574:../LSM9DS1_Driver.c **** 		data4.Data1.Data = ubyteFF;
 2278              		.loc 1 574 0
 2279 00a2 4FF0FF03 		mov	r3, #255
 2280 00a6 3B72     		strb	r3, [r7, #8]
 575:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data4));
 2281              		.loc 1 575 0
 2282 00a8 00BF     		nop
 2283              	.L82:
 2284              		.loc 1 575 0 is_stmt 0 discriminator 1
 2285 00aa 07F10803 		add	r3, r7, #8
 2286 00ae 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 2287 00b2 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 2288 00b6 1946     		mov	r1, r3
 2289 00b8 FFF7FEFF 		bl	I2C001_WriteData
 2290 00bc 0346     		mov	r3, r0
 2291 00be 002B     		cmp	r3, #0
 2292 00c0 F3D0     		beq	.L82
 576:../LSM9DS1_Driver.c **** 
 577:../LSM9DS1_Driver.c **** 		delay(10000);
 2293              		.loc 1 577 0 is_stmt 1
 2294 00c2 42F21070 		movw	r0, #10000
 2295 00c6 FFF7FEFF 		bl	delay
 578:../LSM9DS1_Driver.c **** }
 2296              		.loc 1 578 0
 2297 00ca 07F11807 		add	r7, r7, #24
 2298 00ce BD46     		mov	sp, r7
 2299 00d0 80BD     		pop	{r7, pc}
 2300              		.cfi_endproc
 2301              	.LFE133:
 2303 00d2 00BF     		.section	.text.initAccel,"ax",%progbits
 2304              		.align	2
 2305              		.global	initAccel
 2306              		.thumb
 2307              		.thumb_func
 2309              	initAccel:
 2310              	.LFB134:
 579:../LSM9DS1_Driver.c **** 
 580:../LSM9DS1_Driver.c **** void initAccel(void)
 581:../LSM9DS1_Driver.c **** {
 2311              		.loc 1 581 0
 2312              		.cfi_startproc
 2313              		@ args = 0, pretend = 0, frame = 8
 2314              		@ frame_needed = 1, uses_anonymous_args = 0
 2315 0000 80B5     		push	{r7, lr}
 2316              	.LCFI55:
 2317              		.cfi_def_cfa_offset 8
 2318              		.cfi_offset 7, -8
 2319              		.cfi_offset 14, -4
 2320 0002 82B0     		sub	sp, sp, #8
 2321              	.LCFI56:
 2322              		.cfi_def_cfa_offset 16
 2323 0004 00AF     		add	r7, sp, #0
 2324              	.LCFI57:
 2325              		.cfi_def_cfa_register 7
 582:../LSM9DS1_Driver.c **** 	uint8_t tempRegValue = 0;
 2326              		.loc 1 582 0
 2327 0006 4FF00003 		mov	r3, #0
 2328 000a FB71     		strb	r3, [r7, #7]
 583:../LSM9DS1_Driver.c **** 
 584:../LSM9DS1_Driver.c **** 	//	CTRL_REG5_XL (0x1F) (Default value: 0x38)
 585:../LSM9DS1_Driver.c **** 	//	[DEC_1][DEC_0][Zen_XL][Yen_XL][Zen_XL][0][0][0]
 586:../LSM9DS1_Driver.c **** 	//	DEC[0:1] - Decimation of accel data on OUT REG and FIFO.
 587:../LSM9DS1_Driver.c **** 	//		00: None, 01: 2 samples, 10: 4 samples 11: 8 samples
 588:../LSM9DS1_Driver.c **** 	//	Zen_XL - Z-axis output enabled
 589:../LSM9DS1_Driver.c **** 	//	Yen_XL - Y-axis output enabled
 590:../LSM9DS1_Driver.c **** 	//	Xen_XL - X-axis output enabled
 591:../LSM9DS1_Driver.c **** 	if (settings.accel.enableZ) tempRegValue |= (1<<5);
 2329              		.loc 1 591 0
 2330 000c 40F20003 		movw	r3, #:lower16:settings
 2331 0010 C0F20003 		movt	r3, #:upper16:settings
 2332 0014 DB7E     		ldrb	r3, [r3, #27]	@ zero_extendqisi2
 2333 0016 002B     		cmp	r3, #0
 2334 0018 03D0     		beq	.L84
 2335              		.loc 1 591 0 is_stmt 0 discriminator 1
 2336 001a FB79     		ldrb	r3, [r7, #7]
 2337 001c 43F02003 		orr	r3, r3, #32
 2338 0020 FB71     		strb	r3, [r7, #7]
 2339              	.L84:
 592:../LSM9DS1_Driver.c **** 	if (settings.accel.enableY) tempRegValue |= (1<<4);
 2340              		.loc 1 592 0 is_stmt 1
 2341 0022 40F20003 		movw	r3, #:lower16:settings
 2342 0026 C0F20003 		movt	r3, #:upper16:settings
 2343 002a 9B7E     		ldrb	r3, [r3, #26]	@ zero_extendqisi2
 2344 002c 002B     		cmp	r3, #0
 2345 002e 03D0     		beq	.L85
 2346              		.loc 1 592 0 is_stmt 0 discriminator 1
 2347 0030 FB79     		ldrb	r3, [r7, #7]
 2348 0032 43F01003 		orr	r3, r3, #16
 2349 0036 FB71     		strb	r3, [r7, #7]
 2350              	.L85:
 593:../LSM9DS1_Driver.c **** 	if (settings.accel.enableX) tempRegValue |= (1<<3);
 2351              		.loc 1 593 0 is_stmt 1
 2352 0038 40F20003 		movw	r3, #:lower16:settings
 2353 003c C0F20003 		movt	r3, #:upper16:settings
 2354 0040 5B7E     		ldrb	r3, [r3, #25]	@ zero_extendqisi2
 2355 0042 002B     		cmp	r3, #0
 2356 0044 03D0     		beq	.L86
 2357              		.loc 1 593 0 is_stmt 0 discriminator 1
 2358 0046 FB79     		ldrb	r3, [r7, #7]
 2359 0048 43F00803 		orr	r3, r3, #8
 2360 004c FB71     		strb	r3, [r7, #7]
 2361              	.L86:
 594:../LSM9DS1_Driver.c **** 
 595:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG5_XL, tempRegValue);
 2362              		.loc 1 595 0 is_stmt 1
 2363 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2364 0050 4FF01F00 		mov	r0, #31
 2365 0054 1946     		mov	r1, r3
 2366 0056 FFF7FEFF 		bl	xgWriteByte
 596:../LSM9DS1_Driver.c **** 
 597:../LSM9DS1_Driver.c **** 	// CTRL_REG6_XL (0x20) (Default value: 0x00)
 598:../LSM9DS1_Driver.c **** 	// [ODR_XL2][ODR_XL1][ODR_XL0][FS1_XL][FS0_XL][BW_SCAL_ODR][BW_XL1][BW_XL0]
 599:../LSM9DS1_Driver.c **** 	// ODR_XL[2:0] - Output data rate & power mode selection
 600:../LSM9DS1_Driver.c **** 	// FS_XL[1:0] - Full-scale selection
 601:../LSM9DS1_Driver.c **** 	// BW_SCAL_ODR - Bandwidth selection
 602:../LSM9DS1_Driver.c **** 	// BW_XL[1:0] - Anti-aliasing filter bandwidth selection
 603:../LSM9DS1_Driver.c **** 	tempRegValue = 0;
 2367              		.loc 1 603 0
 2368 005a 4FF00003 		mov	r3, #0
 2369 005e FB71     		strb	r3, [r7, #7]
 604:../LSM9DS1_Driver.c **** 	// To disable the accel, set the sampleRate bits to 0.
 605:../LSM9DS1_Driver.c **** 	if (settings.accel.enabled)
 2370              		.loc 1 605 0
 2371 0060 40F20003 		movw	r3, #:lower16:settings
 2372 0064 C0F20003 		movt	r3, #:upper16:settings
 2373 0068 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 2374 006a 002B     		cmp	r3, #0
 2375 006c 0BD0     		beq	.L87
 606:../LSM9DS1_Driver.c **** 	{
 607:../LSM9DS1_Driver.c **** 		tempRegValue |= ((settings.accel.sampleRate & 0x07) << 5);
 2376              		.loc 1 607 0
 2377 006e 40F20003 		movw	r3, #:lower16:settings
 2378 0072 C0F20003 		movt	r3, #:upper16:settings
 2379 0076 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 2380 0078 4FEA4313 		lsl	r3, r3, #5
 2381 007c DAB2     		uxtb	r2, r3
 2382 007e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2383 0080 1343     		orrs	r3, r3, r2
 2384 0082 DBB2     		uxtb	r3, r3
 2385 0084 FB71     		strb	r3, [r7, #7]
 2386              	.L87:
 608:../LSM9DS1_Driver.c **** 	}
 609:../LSM9DS1_Driver.c **** 	switch (settings.accel.scale)
 2387              		.loc 1 609 0
 2388 0086 40F20003 		movw	r3, #:lower16:settings
 2389 008a C0F20003 		movt	r3, #:upper16:settings
 2390 008e DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 2391 0090 082B     		cmp	r3, #8
 2392 0092 08D0     		beq	.L90
 2393 0094 102B     		cmp	r3, #16
 2394 0096 0BD0     		beq	.L91
 2395 0098 042B     		cmp	r3, #4
 2396 009a 0ED1     		bne	.L88
 2397              	.L89:
 610:../LSM9DS1_Driver.c **** 	{
 611:../LSM9DS1_Driver.c **** 		case 4:
 612:../LSM9DS1_Driver.c **** 			tempRegValue |= (0x2 << 3);
 2398              		.loc 1 612 0
 2399 009c FB79     		ldrb	r3, [r7, #7]
 2400 009e 43F01003 		orr	r3, r3, #16
 2401 00a2 FB71     		strb	r3, [r7, #7]
 613:../LSM9DS1_Driver.c **** 			break;
 2402              		.loc 1 613 0
 2403 00a4 09E0     		b	.L88
 2404              	.L90:
 614:../LSM9DS1_Driver.c **** 		case 8:
 615:../LSM9DS1_Driver.c **** 			tempRegValue |= (0x3 << 3);
 2405              		.loc 1 615 0
 2406 00a6 FB79     		ldrb	r3, [r7, #7]
 2407 00a8 43F01803 		orr	r3, r3, #24
 2408 00ac FB71     		strb	r3, [r7, #7]
 616:../LSM9DS1_Driver.c **** 			break;
 2409              		.loc 1 616 0
 2410 00ae 04E0     		b	.L88
 2411              	.L91:
 617:../LSM9DS1_Driver.c **** 		case 16:
 618:../LSM9DS1_Driver.c **** 			tempRegValue |= (0x1 << 3);
 2412              		.loc 1 618 0
 2413 00b0 FB79     		ldrb	r3, [r7, #7]
 2414 00b2 43F00803 		orr	r3, r3, #8
 2415 00b6 FB71     		strb	r3, [r7, #7]
 619:../LSM9DS1_Driver.c **** 			break;
 2416              		.loc 1 619 0
 2417 00b8 00BF     		nop
 2418              	.L88:
 620:../LSM9DS1_Driver.c **** 		// Otherwise it'll be set to 2g (0x0 << 3)
 621:../LSM9DS1_Driver.c **** 	}
 622:../LSM9DS1_Driver.c **** 	if (settings.accel.bandwidth >= 0)
 2419              		.loc 1 622 0
 2420 00ba 40F20003 		movw	r3, #:lower16:settings
 2421 00be C0F20003 		movt	r3, #:upper16:settings
 2422 00c2 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 2423 00c4 5BB2     		sxtb	r3, r3
 2424 00c6 002B     		cmp	r3, #0
 2425 00c8 0FDB     		blt	.L92
 623:../LSM9DS1_Driver.c **** 	{
 624:../LSM9DS1_Driver.c **** 		tempRegValue |= (1<<2); // Set BW_SCAL_ODR
 2426              		.loc 1 624 0
 2427 00ca FB79     		ldrb	r3, [r7, #7]
 2428 00cc 43F00403 		orr	r3, r3, #4
 2429 00d0 FB71     		strb	r3, [r7, #7]
 625:../LSM9DS1_Driver.c **** 		tempRegValue |= (settings.accel.bandwidth & 0x03);
 2430              		.loc 1 625 0
 2431 00d2 40F20003 		movw	r3, #:lower16:settings
 2432 00d6 C0F20003 		movt	r3, #:upper16:settings
 2433 00da 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 2434 00dc 03F00303 		and	r3, r3, #3
 2435 00e0 DAB2     		uxtb	r2, r3
 2436 00e2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2437 00e4 1343     		orrs	r3, r3, r2
 2438 00e6 DBB2     		uxtb	r3, r3
 2439 00e8 FB71     		strb	r3, [r7, #7]
 2440              	.L92:
 626:../LSM9DS1_Driver.c **** 	}
 627:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG6_XL, tempRegValue);
 2441              		.loc 1 627 0
 2442 00ea FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2443 00ec 4FF02000 		mov	r0, #32
 2444 00f0 1946     		mov	r1, r3
 2445 00f2 FFF7FEFF 		bl	xgWriteByte
 628:../LSM9DS1_Driver.c **** 
 629:../LSM9DS1_Driver.c **** 	// CTRL_REG7_XL (0x21) (Default value: 0x00)
 630:../LSM9DS1_Driver.c **** 	// [HR][DCF1][DCF0][0][0][FDS][0][HPIS1]
 631:../LSM9DS1_Driver.c **** 	// HR - High resolution mode (0: disable, 1: enable)
 632:../LSM9DS1_Driver.c **** 	// DCF[1:0] - Digital filter cutoff frequency
 633:../LSM9DS1_Driver.c **** 	// FDS - Filtered data selection
 634:../LSM9DS1_Driver.c **** 	// HPIS1 - HPF enabled for interrupt function
 635:../LSM9DS1_Driver.c **** 	tempRegValue = 0;
 2446              		.loc 1 635 0
 2447 00f6 4FF00003 		mov	r3, #0
 2448 00fa FB71     		strb	r3, [r7, #7]
 636:../LSM9DS1_Driver.c **** 	if (settings.accel.highResEnable)
 2449              		.loc 1 636 0
 2450 00fc 40F20003 		movw	r3, #:lower16:settings
 2451 0100 C0F20003 		movt	r3, #:upper16:settings
 2452 0104 5B7F     		ldrb	r3, [r3, #29]	@ zero_extendqisi2
 2453 0106 002B     		cmp	r3, #0
 2454 0108 11D0     		beq	.L93
 637:../LSM9DS1_Driver.c **** 	{
 638:../LSM9DS1_Driver.c **** 		tempRegValue |= (1<<7); // Set HR bit
 2455              		.loc 1 638 0
 2456 010a FB79     		ldrb	r3, [r7, #7]
 2457 010c 63F07F03 		orn	r3, r3, #127
 2458 0110 FB71     		strb	r3, [r7, #7]
 639:../LSM9DS1_Driver.c **** 		tempRegValue |= (settings.accel.highResBandwidth & 0x3) << 5;
 2459              		.loc 1 639 0
 2460 0112 40F20003 		movw	r3, #:lower16:settings
 2461 0116 C0F20003 		movt	r3, #:upper16:settings
 2462 011a 9B7F     		ldrb	r3, [r3, #30]	@ zero_extendqisi2
 2463 011c 03F00303 		and	r3, r3, #3
 2464 0120 4FEA4313 		lsl	r3, r3, #5
 2465 0124 DAB2     		uxtb	r2, r3
 2466 0126 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2467 0128 1343     		orrs	r3, r3, r2
 2468 012a DBB2     		uxtb	r3, r3
 2469 012c FB71     		strb	r3, [r7, #7]
 2470              	.L93:
 640:../LSM9DS1_Driver.c **** 	}
 641:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG7_XL, tempRegValue);
 2471              		.loc 1 641 0
 2472 012e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2473 0130 4FF02100 		mov	r0, #33
 2474 0134 1946     		mov	r1, r3
 2475 0136 FFF7FEFF 		bl	xgWriteByte
 642:../LSM9DS1_Driver.c **** }
 2476              		.loc 1 642 0
 2477 013a 07F10807 		add	r7, r7, #8
 2478 013e BD46     		mov	sp, r7
 2479 0140 80BD     		pop	{r7, pc}
 2480              		.cfi_endproc
 2481              	.LFE134:
 2483 0142 00BF     		.section	.text.initMag,"ax",%progbits
 2484              		.align	2
 2485              		.global	initMag
 2486              		.thumb
 2487              		.thumb_func
 2489              	initMag:
 2490              	.LFB135:
 643:../LSM9DS1_Driver.c **** 
 644:../LSM9DS1_Driver.c **** void initMag(void)
 645:../LSM9DS1_Driver.c **** {
 2491              		.loc 1 645 0
 2492              		.cfi_startproc
 2493              		@ args = 0, pretend = 0, frame = 8
 2494              		@ frame_needed = 1, uses_anonymous_args = 0
 2495 0000 80B5     		push	{r7, lr}
 2496              	.LCFI58:
 2497              		.cfi_def_cfa_offset 8
 2498              		.cfi_offset 7, -8
 2499              		.cfi_offset 14, -4
 2500 0002 82B0     		sub	sp, sp, #8
 2501              	.LCFI59:
 2502              		.cfi_def_cfa_offset 16
 2503 0004 00AF     		add	r7, sp, #0
 2504              	.LCFI60:
 2505              		.cfi_def_cfa_register 7
 646:../LSM9DS1_Driver.c **** 	uint8_t tempRegValue = 0;
 2506              		.loc 1 646 0
 2507 0006 4FF00003 		mov	r3, #0
 2508 000a FB71     		strb	r3, [r7, #7]
 647:../LSM9DS1_Driver.c **** 
 648:../LSM9DS1_Driver.c **** 	// CTRL_REG1_M (Default value: 0x10)
 649:../LSM9DS1_Driver.c **** 	// [TEMP_COMP][OM1][OM0][DO2][DO1][DO0][0][ST]
 650:../LSM9DS1_Driver.c **** 	// TEMP_COMP - Temperature compensation
 651:../LSM9DS1_Driver.c **** 	// OM[1:0] - X & Y axes op mode selection
 652:../LSM9DS1_Driver.c **** 	//	00:low-power, 01:medium performance
 653:../LSM9DS1_Driver.c **** 	//	10: high performance, 11:ultra-high performance
 654:../LSM9DS1_Driver.c **** 	// DO[2:0] - Output data rate selection
 655:../LSM9DS1_Driver.c **** 	// ST - Self-test enable
 656:../LSM9DS1_Driver.c **** 	if (settings.mag.tempCompensationEnable) tempRegValue |= (1<<7);
 2509              		.loc 1 656 0
 2510 000c 40F20003 		movw	r3, #:lower16:settings
 2511 0010 C0F20003 		movt	r3, #:upper16:settings
 2512 0014 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 2513 0018 002B     		cmp	r3, #0
 2514 001a 03D0     		beq	.L95
 2515              		.loc 1 656 0 is_stmt 0 discriminator 1
 2516 001c FB79     		ldrb	r3, [r7, #7]
 2517 001e 63F07F03 		orn	r3, r3, #127
 2518 0022 FB71     		strb	r3, [r7, #7]
 2519              	.L95:
 657:../LSM9DS1_Driver.c **** 	tempRegValue |= (settings.mag.XYPerformance & 0x3) << 5;
 2520              		.loc 1 657 0 is_stmt 1
 2521 0024 40F20003 		movw	r3, #:lower16:settings
 2522 0028 C0F20003 		movt	r3, #:upper16:settings
 2523 002c 93F82330 		ldrb	r3, [r3, #35]	@ zero_extendqisi2
 2524 0030 03F00303 		and	r3, r3, #3
 2525 0034 4FEA4313 		lsl	r3, r3, #5
 2526 0038 DAB2     		uxtb	r2, r3
 2527 003a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2528 003c 1343     		orrs	r3, r3, r2
 2529 003e DBB2     		uxtb	r3, r3
 2530 0040 FB71     		strb	r3, [r7, #7]
 658:../LSM9DS1_Driver.c **** 	tempRegValue |= (settings.mag.sampleRate & 0x7) << 2;
 2531              		.loc 1 658 0
 2532 0042 40F20003 		movw	r3, #:lower16:settings
 2533 0046 C0F20003 		movt	r3, #:upper16:settings
 2534 004a 93F82130 		ldrb	r3, [r3, #33]	@ zero_extendqisi2
 2535 004e 03F00703 		and	r3, r3, #7
 2536 0052 4FEA8303 		lsl	r3, r3, #2
 2537 0056 DAB2     		uxtb	r2, r3
 2538 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2539 005a 1343     		orrs	r3, r3, r2
 2540 005c DBB2     		uxtb	r3, r3
 2541 005e FB71     		strb	r3, [r7, #7]
 659:../LSM9DS1_Driver.c **** 	mWriteByte(CTRL_REG1_M, tempRegValue);
 2542              		.loc 1 659 0
 2543 0060 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2544 0062 4FF02000 		mov	r0, #32
 2545 0066 1946     		mov	r1, r3
 2546 0068 FFF7FEFF 		bl	mWriteByte
 660:../LSM9DS1_Driver.c **** 
 661:../LSM9DS1_Driver.c **** 	// CTRL_REG2_M (Default value 0x00)
 662:../LSM9DS1_Driver.c **** 	// [0][FS1][FS0][0][REBOOT][SOFT_RST][0][0]
 663:../LSM9DS1_Driver.c **** 	// FS[1:0] - Full-scale configuration
 664:../LSM9DS1_Driver.c **** 	// REBOOT - Reboot memory content (0:normal, 1:reboot)
 665:../LSM9DS1_Driver.c **** 	// SOFT_RST - Reset config and user registers (0:default, 1:reset)
 666:../LSM9DS1_Driver.c **** 	tempRegValue = 0;
 2547              		.loc 1 666 0
 2548 006c 4FF00003 		mov	r3, #0
 2549 0070 FB71     		strb	r3, [r7, #7]
 667:../LSM9DS1_Driver.c **** 	switch (settings.mag.scale)
 2550              		.loc 1 667 0
 2551 0072 40F20003 		movw	r3, #:lower16:settings
 2552 0076 C0F20003 		movt	r3, #:upper16:settings
 2553 007a 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 2554 007e 0C2B     		cmp	r3, #12
 2555 0080 08D0     		beq	.L98
 2556 0082 102B     		cmp	r3, #16
 2557 0084 0BD0     		beq	.L99
 2558 0086 082B     		cmp	r3, #8
 2559 0088 0ED1     		bne	.L96
 2560              	.L97:
 668:../LSM9DS1_Driver.c **** 	{
 669:../LSM9DS1_Driver.c **** 	case 8:
 670:../LSM9DS1_Driver.c **** 		tempRegValue |= (0x1 << 5);
 2561              		.loc 1 670 0
 2562 008a FB79     		ldrb	r3, [r7, #7]
 2563 008c 43F02003 		orr	r3, r3, #32
 2564 0090 FB71     		strb	r3, [r7, #7]
 671:../LSM9DS1_Driver.c **** 		break;
 2565              		.loc 1 671 0
 2566 0092 09E0     		b	.L96
 2567              	.L98:
 672:../LSM9DS1_Driver.c **** 	case 12:
 673:../LSM9DS1_Driver.c **** 		tempRegValue |= (0x2 << 5);
 2568              		.loc 1 673 0
 2569 0094 FB79     		ldrb	r3, [r7, #7]
 2570 0096 43F04003 		orr	r3, r3, #64
 2571 009a FB71     		strb	r3, [r7, #7]
 674:../LSM9DS1_Driver.c **** 		break;
 2572              		.loc 1 674 0
 2573 009c 04E0     		b	.L96
 2574              	.L99:
 675:../LSM9DS1_Driver.c **** 	case 16:
 676:../LSM9DS1_Driver.c **** 		tempRegValue |= (0x3 << 5);
 2575              		.loc 1 676 0
 2576 009e FB79     		ldrb	r3, [r7, #7]
 2577 00a0 43F06003 		orr	r3, r3, #96
 2578 00a4 FB71     		strb	r3, [r7, #7]
 677:../LSM9DS1_Driver.c **** 		break;
 2579              		.loc 1 677 0
 2580 00a6 00BF     		nop
 2581              	.L96:
 678:../LSM9DS1_Driver.c **** 	// Otherwise we'll default to 4 gauss (00)
 679:../LSM9DS1_Driver.c **** 	}
 680:../LSM9DS1_Driver.c **** 	mWriteByte(CTRL_REG2_M, tempRegValue); // +/-4Gauss
 2582              		.loc 1 680 0
 2583 00a8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2584 00aa 4FF02100 		mov	r0, #33
 2585 00ae 1946     		mov	r1, r3
 2586 00b0 FFF7FEFF 		bl	mWriteByte
 681:../LSM9DS1_Driver.c **** 
 682:../LSM9DS1_Driver.c **** 	// CTRL_REG3_M (Default value: 0x03)
 683:../LSM9DS1_Driver.c **** 	// [I2C_DISABLE][0][LP][0][0][SIM][MD1][MD0]
 684:../LSM9DS1_Driver.c **** 	// I2C_DISABLE - Disable I2C interace (0:enable, 1:disable)
 685:../LSM9DS1_Driver.c **** 	// LP - Low-power mode cofiguration (1:enable)
 686:../LSM9DS1_Driver.c **** 	// SIM - SPI mode selection (0:write-only, 1:read/write enable)
 687:../LSM9DS1_Driver.c **** 	// MD[1:0] - Operating mode
 688:../LSM9DS1_Driver.c **** 	//	00:continuous conversion, 01:single-conversion,
 689:../LSM9DS1_Driver.c **** 	//  10,11: Power-down
 690:../LSM9DS1_Driver.c **** 	tempRegValue = 0;
 2587              		.loc 1 690 0
 2588 00b4 4FF00003 		mov	r3, #0
 2589 00b8 FB71     		strb	r3, [r7, #7]
 691:../LSM9DS1_Driver.c **** 	if (settings.mag.lowPowerEnable) tempRegValue |= (1<<5);
 2590              		.loc 1 691 0
 2591 00ba 40F20003 		movw	r3, #:lower16:settings
 2592 00be C0F20003 		movt	r3, #:upper16:settings
 2593 00c2 93F82530 		ldrb	r3, [r3, #37]	@ zero_extendqisi2
 2594 00c6 002B     		cmp	r3, #0
 2595 00c8 03D0     		beq	.L100
 2596              		.loc 1 691 0 is_stmt 0 discriminator 1
 2597 00ca FB79     		ldrb	r3, [r7, #7]
 2598 00cc 43F02003 		orr	r3, r3, #32
 2599 00d0 FB71     		strb	r3, [r7, #7]
 2600              	.L100:
 692:../LSM9DS1_Driver.c **** 	tempRegValue |= (settings.mag.operatingMode & 0x3);
 2601              		.loc 1 692 0 is_stmt 1
 2602 00d2 40F20003 		movw	r3, #:lower16:settings
 2603 00d6 C0F20003 		movt	r3, #:upper16:settings
 2604 00da 93F82630 		ldrb	r3, [r3, #38]	@ zero_extendqisi2
 2605 00de DBB2     		uxtb	r3, r3
 2606 00e0 03F00303 		and	r3, r3, #3
 2607 00e4 DAB2     		uxtb	r2, r3
 2608 00e6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2609 00e8 1343     		orrs	r3, r3, r2
 2610 00ea DBB2     		uxtb	r3, r3
 2611 00ec FB71     		strb	r3, [r7, #7]
 693:../LSM9DS1_Driver.c **** 	mWriteByte(CTRL_REG3_M, tempRegValue); // Continuous conversion mode
 2612              		.loc 1 693 0
 2613 00ee FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2614 00f0 4FF02200 		mov	r0, #34
 2615 00f4 1946     		mov	r1, r3
 2616 00f6 FFF7FEFF 		bl	mWriteByte
 694:../LSM9DS1_Driver.c **** 
 695:../LSM9DS1_Driver.c **** 	// CTRL_REG4_M (Default value: 0x00)
 696:../LSM9DS1_Driver.c **** 	// [0][0][0][0][OMZ1][OMZ0][BLE][0]
 697:../LSM9DS1_Driver.c **** 	// OMZ[1:0] - Z-axis operative mode selection
 698:../LSM9DS1_Driver.c **** 	//	00:low-power mode, 01:medium performance
 699:../LSM9DS1_Driver.c **** 	//	10:high performance, 10:ultra-high performance
 700:../LSM9DS1_Driver.c **** 	// BLE - Big/little endian data
 701:../LSM9DS1_Driver.c **** 	tempRegValue = 0;
 2617              		.loc 1 701 0
 2618 00fa 4FF00003 		mov	r3, #0
 2619 00fe FB71     		strb	r3, [r7, #7]
 702:../LSM9DS1_Driver.c **** 	tempRegValue = (settings.mag.ZPerformance & 0x3) << 2;
 2620              		.loc 1 702 0
 2621 0100 40F20003 		movw	r3, #:lower16:settings
 2622 0104 C0F20003 		movt	r3, #:upper16:settings
 2623 0108 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 2624 010c 03F00303 		and	r3, r3, #3
 2625 0110 DBB2     		uxtb	r3, r3
 2626 0112 4FEA8303 		lsl	r3, r3, #2
 2627 0116 FB71     		strb	r3, [r7, #7]
 703:../LSM9DS1_Driver.c **** 	mWriteByte(CTRL_REG4_M, tempRegValue);
 2628              		.loc 1 703 0
 2629 0118 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2630 011a 4FF02300 		mov	r0, #35
 2631 011e 1946     		mov	r1, r3
 2632 0120 FFF7FEFF 		bl	mWriteByte
 704:../LSM9DS1_Driver.c **** 
 705:../LSM9DS1_Driver.c **** 	// CTRL_REG5_M (Default value: 0x00)
 706:../LSM9DS1_Driver.c **** 	// [0][BDU][0][0][0][0][0][0]
 707:../LSM9DS1_Driver.c **** 	// BDU - Block data update for magnetic data
 708:../LSM9DS1_Driver.c **** 	//	0:continuous, 1:not updated until MSB/LSB are read
 709:../LSM9DS1_Driver.c **** 	tempRegValue = 0;
 2633              		.loc 1 709 0
 2634 0124 4FF00003 		mov	r3, #0
 2635 0128 FB71     		strb	r3, [r7, #7]
 710:../LSM9DS1_Driver.c **** 	mWriteByte(CTRL_REG5_M, tempRegValue);
 2636              		.loc 1 710 0
 2637 012a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2638 012c 4FF02400 		mov	r0, #36
 2639 0130 1946     		mov	r1, r3
 2640 0132 FFF7FEFF 		bl	mWriteByte
 711:../LSM9DS1_Driver.c **** }
 2641              		.loc 1 711 0
 2642 0136 07F10807 		add	r7, r7, #8
 2643 013a BD46     		mov	sp, r7
 2644 013c 80BD     		pop	{r7, pc}
 2645              		.cfi_endproc
 2646              	.LFE135:
 2648 013e 00BF     		.section	.text.mWriteByte,"ax",%progbits
 2649              		.align	2
 2650              		.global	mWriteByte
 2651              		.thumb
 2652              		.thumb_func
 2654              	mWriteByte:
 2655              	.LFB136:
 712:../LSM9DS1_Driver.c **** 
 713:../LSM9DS1_Driver.c **** void mWriteByte(uint8_t subAddress, uint8_t data)
 714:../LSM9DS1_Driver.c **** {
 2656              		.loc 1 714 0
 2657              		.cfi_startproc
 2658              		@ args = 0, pretend = 0, frame = 8
 2659              		@ frame_needed = 1, uses_anonymous_args = 0
 2660 0000 80B5     		push	{r7, lr}
 2661              	.LCFI61:
 2662              		.cfi_def_cfa_offset 8
 2663              		.cfi_offset 7, -8
 2664              		.cfi_offset 14, -4
 2665 0002 82B0     		sub	sp, sp, #8
 2666              	.LCFI62:
 2667              		.cfi_def_cfa_offset 16
 2668 0004 00AF     		add	r7, sp, #0
 2669              	.LCFI63:
 2670              		.cfi_def_cfa_register 7
 2671 0006 0246     		mov	r2, r0
 2672 0008 0B46     		mov	r3, r1
 2673 000a FA71     		strb	r2, [r7, #7]
 2674 000c BB71     		strb	r3, [r7, #6]
 715:../LSM9DS1_Driver.c **** 	// Whether we're using I2C or SPI, write a byte using the
 716:../LSM9DS1_Driver.c **** 	// accelerometer-specific I2C address or SPI CS pin.
 717:../LSM9DS1_Driver.c **** 	if (settings.device.commInterface == IMU_MODE_I2C)
 2675              		.loc 1 717 0
 2676 000e 40F20003 		movw	r3, #:lower16:settings
 2677 0012 C0F20003 		movt	r3, #:upper16:settings
 2678 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2679 0018 012B     		cmp	r3, #1
 2680 001a 0CD1     		bne	.L101
 718:../LSM9DS1_Driver.c **** 	{
 719:../LSM9DS1_Driver.c **** 		return I2CwriteByte(_mAddress, subAddress, data);
 2681              		.loc 1 719 0
 2682 001c 40F20003 		movw	r3, #:lower16:_mAddress
 2683 0020 C0F20003 		movt	r3, #:upper16:_mAddress
 2684 0024 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 2685 0026 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2686 0028 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2687 002a 0846     		mov	r0, r1
 2688 002c 1146     		mov	r1, r2
 2689 002e 1A46     		mov	r2, r3
 2690 0030 FFF7FEFF 		bl	I2CwriteByte
 2691 0034 00BF     		nop
 2692              	.L101:
 720:../LSM9DS1_Driver.c **** 	}
 721:../LSM9DS1_Driver.c **** }
 2693              		.loc 1 721 0
 2694 0036 07F10807 		add	r7, r7, #8
 2695 003a BD46     		mov	sp, r7
 2696 003c 80BD     		pop	{r7, pc}
 2697              		.cfi_endproc
 2698              	.LFE136:
 2700 003e 00BF     		.section	.text.enableFIFO,"ax",%progbits
 2701              		.align	2
 2702              		.global	enableFIFO
 2703              		.thumb
 2704              		.thumb_func
 2706              	enableFIFO:
 2707              	.LFB137:
 722:../LSM9DS1_Driver.c **** 
 723:../LSM9DS1_Driver.c **** void enableFIFO(bool enable)
 724:../LSM9DS1_Driver.c **** {
 2708              		.loc 1 724 0
 2709              		.cfi_startproc
 2710              		@ args = 0, pretend = 0, frame = 16
 2711              		@ frame_needed = 1, uses_anonymous_args = 0
 2712 0000 80B5     		push	{r7, lr}
 2713              	.LCFI64:
 2714              		.cfi_def_cfa_offset 8
 2715              		.cfi_offset 7, -8
 2716              		.cfi_offset 14, -4
 2717 0002 84B0     		sub	sp, sp, #16
 2718              	.LCFI65:
 2719              		.cfi_def_cfa_offset 24
 2720 0004 00AF     		add	r7, sp, #0
 2721              	.LCFI66:
 2722              		.cfi_def_cfa_register 7
 2723 0006 0346     		mov	r3, r0
 2724 0008 FB71     		strb	r3, [r7, #7]
 725:../LSM9DS1_Driver.c **** 	uint8_t temp = xgReadByte(CTRL_REG9);
 2725              		.loc 1 725 0
 2726 000a 4FF02300 		mov	r0, #35
 2727 000e FFF7FEFF 		bl	xgReadByte
 2728 0012 0346     		mov	r3, r0
 2729 0014 FB73     		strb	r3, [r7, #15]
 726:../LSM9DS1_Driver.c **** 	if(enable)
 2730              		.loc 1 726 0
 2731 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2732 0018 002B     		cmp	r3, #0
 2733 001a 04D0     		beq	.L104
 727:../LSM9DS1_Driver.c **** 	{
 728:../LSM9DS1_Driver.c **** 		temp |= (1<<1);
 2734              		.loc 1 728 0
 2735 001c FB7B     		ldrb	r3, [r7, #15]
 2736 001e 43F00203 		orr	r3, r3, #2
 2737 0022 FB73     		strb	r3, [r7, #15]
 2738 0024 03E0     		b	.L105
 2739              	.L104:
 729:../LSM9DS1_Driver.c **** 	}
 730:../LSM9DS1_Driver.c **** 	else
 731:../LSM9DS1_Driver.c **** 	{
 732:../LSM9DS1_Driver.c **** 		temp &= ~(1<<1);
 2740              		.loc 1 732 0
 2741 0026 FB7B     		ldrb	r3, [r7, #15]
 2742 0028 23F00203 		bic	r3, r3, #2
 2743 002c FB73     		strb	r3, [r7, #15]
 2744              	.L105:
 733:../LSM9DS1_Driver.c **** 	}
 734:../LSM9DS1_Driver.c **** 
 735:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG9, temp);
 2745              		.loc 1 735 0
 2746 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2747 0030 4FF02300 		mov	r0, #35
 2748 0034 1946     		mov	r1, r3
 2749 0036 FFF7FEFF 		bl	xgWriteByte
 736:../LSM9DS1_Driver.c **** }
 2750              		.loc 1 736 0
 2751 003a 07F11007 		add	r7, r7, #16
 2752 003e BD46     		mov	sp, r7
 2753 0040 80BD     		pop	{r7, pc}
 2754              		.cfi_endproc
 2755              	.LFE137:
 2757 0042 00BF     		.section	.text.setFIFO,"ax",%progbits
 2758              		.align	2
 2759              		.global	setFIFO
 2760              		.thumb
 2761              		.thumb_func
 2763              	setFIFO:
 2764              	.LFB138:
 737:../LSM9DS1_Driver.c **** 
 738:../LSM9DS1_Driver.c **** void setFIFO(fifoMode_type fifoMode, uint8_t fifoThs)
 739:../LSM9DS1_Driver.c **** {
 2765              		.loc 1 739 0
 2766              		.cfi_startproc
 2767              		@ args = 0, pretend = 0, frame = 16
 2768              		@ frame_needed = 1, uses_anonymous_args = 0
 2769 0000 80B5     		push	{r7, lr}
 2770              	.LCFI67:
 2771              		.cfi_def_cfa_offset 8
 2772              		.cfi_offset 7, -8
 2773              		.cfi_offset 14, -4
 2774 0002 84B0     		sub	sp, sp, #16
 2775              	.LCFI68:
 2776              		.cfi_def_cfa_offset 24
 2777 0004 00AF     		add	r7, sp, #0
 2778              	.LCFI69:
 2779              		.cfi_def_cfa_register 7
 2780 0006 0246     		mov	r2, r0
 2781 0008 0B46     		mov	r3, r1
 2782 000a FA71     		strb	r2, [r7, #7]
 2783 000c BB71     		strb	r3, [r7, #6]
 740:../LSM9DS1_Driver.c **** 	// Limit threshold - 0x1F (31) is the maximum. If more than that was asked
 741:../LSM9DS1_Driver.c **** 	// limit it to the maximum.
 742:../LSM9DS1_Driver.c **** 	uint8_t threshold = fifoThs <= 0x1F ? fifoThs : 0x1F;
 2784              		.loc 1 742 0
 2785 000e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2786 0010 1F2B     		cmp	r3, #31
 2787 0012 28BF     		it	cs
 2788 0014 1F23     		movcs	r3, #31
 2789 0016 FB73     		strb	r3, [r7, #15]
 743:../LSM9DS1_Driver.c **** 	xgWriteByte(FIFO_CTRL, ((fifoMode & 0x7) << 5) | (threshold & 0x1F));
 2790              		.loc 1 743 0
 2791 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2792 001a 4FEA4313 		lsl	r3, r3, #5
 2793 001e DAB2     		uxtb	r2, r3
 2794 0020 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2795 0022 03F01F03 		and	r3, r3, #31
 2796 0026 DBB2     		uxtb	r3, r3
 2797 0028 1343     		orrs	r3, r3, r2
 2798 002a DBB2     		uxtb	r3, r3
 2799 002c DBB2     		uxtb	r3, r3
 2800 002e 4FF02E00 		mov	r0, #46
 2801 0032 1946     		mov	r1, r3
 2802 0034 FFF7FEFF 		bl	xgWriteByte
 744:../LSM9DS1_Driver.c **** }
 2803              		.loc 1 744 0
 2804 0038 07F11007 		add	r7, r7, #16
 2805 003c BD46     		mov	sp, r7
 2806 003e 80BD     		pop	{r7, pc}
 2807              		.cfi_endproc
 2808              	.LFE138:
 2810              		.global	__aeabi_f2d
 2811              		.global	__aeabi_ddiv
 2812              		.global	__aeabi_d2iz
 2813              		.section	.text.calibrate,"ax",%progbits
 2814              		.align	2
 2815              		.global	calibrate
 2816              		.thumb
 2817              		.thumb_func
 2819              	calibrate:
 2820              	.LFB139:
 745:../LSM9DS1_Driver.c **** 
 746:../LSM9DS1_Driver.c **** void calibrate(bool autoCalc)
 747:../LSM9DS1_Driver.c **** {
 2821              		.loc 1 747 0
 2822              		.cfi_startproc
 2823              		@ args = 0, pretend = 0, frame = 48
 2824              		@ frame_needed = 1, uses_anonymous_args = 0
 2825 0000 B0B5     		push	{r4, r5, r7, lr}
 2826              	.LCFI70:
 2827              		.cfi_def_cfa_offset 16
 2828              		.cfi_offset 4, -16
 2829              		.cfi_offset 5, -12
 2830              		.cfi_offset 7, -8
 2831              		.cfi_offset 14, -4
 2832 0002 8CB0     		sub	sp, sp, #48
 2833              	.LCFI71:
 2834              		.cfi_def_cfa_offset 64
 2835 0004 00AF     		add	r7, sp, #0
 2836              	.LCFI72:
 2837              		.cfi_def_cfa_register 7
 2838 0006 0346     		mov	r3, r0
 2839 0008 FB71     		strb	r3, [r7, #7]
 748:../LSM9DS1_Driver.c **** 	uint8_t data[6] = {0, 0, 0, 0, 0, 0};
 2840              		.loc 1 748 0
 2841 000a 4FF00003 		mov	r3, #0
 2842 000e 87F82430 		strb	r3, [r7, #36]
 2843 0012 4FF00003 		mov	r3, #0
 2844 0016 87F82530 		strb	r3, [r7, #37]
 2845 001a 4FF00003 		mov	r3, #0
 2846 001e 87F82630 		strb	r3, [r7, #38]
 2847 0022 4FF00003 		mov	r3, #0
 2848 0026 87F82730 		strb	r3, [r7, #39]
 2849 002a 4FF00003 		mov	r3, #0
 2850 002e 87F82830 		strb	r3, [r7, #40]
 2851 0032 4FF00003 		mov	r3, #0
 2852 0036 87F82930 		strb	r3, [r7, #41]
 749:../LSM9DS1_Driver.c **** 	uint8_t samples = 0;
 2853              		.loc 1 749 0
 2854 003a 4FF00003 		mov	r3, #0
 2855 003e 87F82B30 		strb	r3, [r7, #43]
 750:../LSM9DS1_Driver.c **** 	int ii;
 751:../LSM9DS1_Driver.c **** 	int32_t aBiasRawTemp[3] = {0, 0, 0};
 2856              		.loc 1 751 0
 2857 0042 4FF00003 		mov	r3, #0
 2858 0046 BB61     		str	r3, [r7, #24]
 2859 0048 4FF00003 		mov	r3, #0
 2860 004c FB61     		str	r3, [r7, #28]
 2861 004e 4FF00003 		mov	r3, #0
 2862 0052 3B62     		str	r3, [r7, #32]
 752:../LSM9DS1_Driver.c **** 	int32_t gBiasRawTemp[3] = {0, 0, 0};
 2863              		.loc 1 752 0
 2864 0054 4FF00003 		mov	r3, #0
 2865 0058 FB60     		str	r3, [r7, #12]
 2866 005a 4FF00003 		mov	r3, #0
 2867 005e 3B61     		str	r3, [r7, #16]
 2868 0060 4FF00003 		mov	r3, #0
 2869 0064 7B61     		str	r3, [r7, #20]
 753:../LSM9DS1_Driver.c **** 
 754:../LSM9DS1_Driver.c **** 	// Turn on FIFO and set threshold to 32 samples
 755:../LSM9DS1_Driver.c **** 	enableFIFO(TRUE);
 2870              		.loc 1 755 0
 2871 0066 4FF00100 		mov	r0, #1
 2872 006a FFF7FEFF 		bl	enableFIFO
 756:../LSM9DS1_Driver.c **** 	setFIFO(FIFO_THS, 0x1F);
 2873              		.loc 1 756 0
 2874 006e 4FF00100 		mov	r0, #1
 2875 0072 4FF01F01 		mov	r1, #31
 2876 0076 FFF7FEFF 		bl	setFIFO
 757:../LSM9DS1_Driver.c **** 	/*while (samples < 29)
 758:../LSM9DS1_Driver.c **** 	{*/
 759:../LSM9DS1_Driver.c **** 		samples = (xgReadByte(FIFO_SRC) & 0x3F); // Read number of stored samples
 2877              		.loc 1 759 0
 2878 007a 4FF02F00 		mov	r0, #47
 2879 007e FFF7FEFF 		bl	xgReadByte
 2880 0082 0346     		mov	r3, r0
 2881 0084 03F03F03 		and	r3, r3, #63
 2882 0088 87F82B30 		strb	r3, [r7, #43]
 760:../LSM9DS1_Driver.c **** 		//samples = 10;
 761:../LSM9DS1_Driver.c **** 	//}
 762:../LSM9DS1_Driver.c **** 	for(ii = 0; ii < samples ; ii++)
 2883              		.loc 1 762 0
 2884 008c 4FF00003 		mov	r3, #0
 2885 0090 FB62     		str	r3, [r7, #44]
 2886 0092 59E0     		b	.L108
 2887              	.L109:
 763:../LSM9DS1_Driver.c **** 	{	// Read the gyro data stored in the FIFO
 764:../LSM9DS1_Driver.c **** 		readGyro1();
 2888              		.loc 1 764 0 discriminator 2
 2889 0094 FFF7FEFF 		bl	readGyro1
 765:../LSM9DS1_Driver.c **** 		gBiasRawTemp[0] += gx;
 2890              		.loc 1 765 0 discriminator 2
 2891 0098 FA68     		ldr	r2, [r7, #12]
 2892 009a 40F20003 		movw	r3, #:lower16:gx
 2893 009e C0F20003 		movt	r3, #:upper16:gx
 2894 00a2 1B88     		ldrh	r3, [r3, #0]
 2895 00a4 1BB2     		sxth	r3, r3
 2896 00a6 D318     		adds	r3, r2, r3
 2897 00a8 FB60     		str	r3, [r7, #12]
 766:../LSM9DS1_Driver.c **** 		gBiasRawTemp[1] += gy;
 2898              		.loc 1 766 0 discriminator 2
 2899 00aa 3A69     		ldr	r2, [r7, #16]
 2900 00ac 40F20003 		movw	r3, #:lower16:gy
 2901 00b0 C0F20003 		movt	r3, #:upper16:gy
 2902 00b4 1B88     		ldrh	r3, [r3, #0]
 2903 00b6 1BB2     		sxth	r3, r3
 2904 00b8 D318     		adds	r3, r2, r3
 2905 00ba 3B61     		str	r3, [r7, #16]
 767:../LSM9DS1_Driver.c **** 		gBiasRawTemp[2] += gz;
 2906              		.loc 1 767 0 discriminator 2
 2907 00bc 7A69     		ldr	r2, [r7, #20]
 2908 00be 40F20003 		movw	r3, #:lower16:gz
 2909 00c2 C0F20003 		movt	r3, #:upper16:gz
 2910 00c6 1B88     		ldrh	r3, [r3, #0]
 2911 00c8 1BB2     		sxth	r3, r3
 2912 00ca D318     		adds	r3, r2, r3
 2913 00cc 7B61     		str	r3, [r7, #20]
 768:../LSM9DS1_Driver.c **** 
 769:../LSM9DS1_Driver.c **** 		readAccel1();
 2914              		.loc 1 769 0 discriminator 2
 2915 00ce FFF7FEFF 		bl	readAccel1
 770:../LSM9DS1_Driver.c **** 		aBiasRawTemp[0] += ax;
 2916              		.loc 1 770 0 discriminator 2
 2917 00d2 BA69     		ldr	r2, [r7, #24]
 2918 00d4 40F20003 		movw	r3, #:lower16:ax
 2919 00d8 C0F20003 		movt	r3, #:upper16:ax
 2920 00dc 1B88     		ldrh	r3, [r3, #0]
 2921 00de 1BB2     		sxth	r3, r3
 2922 00e0 D318     		adds	r3, r2, r3
 2923 00e2 BB61     		str	r3, [r7, #24]
 771:../LSM9DS1_Driver.c **** 		aBiasRawTemp[1] += ay;
 2924              		.loc 1 771 0 discriminator 2
 2925 00e4 FA69     		ldr	r2, [r7, #28]
 2926 00e6 40F20003 		movw	r3, #:lower16:ay
 2927 00ea C0F20003 		movt	r3, #:upper16:ay
 2928 00ee 1B88     		ldrh	r3, [r3, #0]
 2929 00f0 1BB2     		sxth	r3, r3
 2930 00f2 D318     		adds	r3, r2, r3
 2931 00f4 FB61     		str	r3, [r7, #28]
 772:../LSM9DS1_Driver.c **** 		aBiasRawTemp[2] += az - (int16_t)(1./aRes); // Assumes sensor facing up!
 2932              		.loc 1 772 0 discriminator 2
 2933 00f6 3C6A     		ldr	r4, [r7, #32]
 2934 00f8 40F20003 		movw	r3, #:lower16:az
 2935 00fc C0F20003 		movt	r3, #:upper16:az
 2936 0100 1B88     		ldrh	r3, [r3, #0]
 2937 0102 1DB2     		sxth	r5, r3
 2938 0104 40F20003 		movw	r3, #:lower16:aRes
 2939 0108 C0F20003 		movt	r3, #:upper16:aRes
 2940 010c 1B68     		ldr	r3, [r3, #0]	@ float
 2941 010e 1846     		mov	r0, r3	@ float
 2942 0110 FFF7FEFF 		bl	__aeabi_f2d
 2943 0114 0246     		mov	r2, r0
 2944 0116 0B46     		mov	r3, r1
 2945 0118 4FF00000 		mov	r0, #0
 2946 011c 4FF00001 		mov	r1, #0
 2947 0120 C3F6F071 		movt	r1, 16368
 2948 0124 FFF7FEFF 		bl	__aeabi_ddiv
 2949 0128 0246     		mov	r2, r0
 2950 012a 0B46     		mov	r3, r1
 2951 012c 1046     		mov	r0, r2
 2952 012e 1946     		mov	r1, r3
 2953 0130 FFF7FEFF 		bl	__aeabi_d2iz
 2954 0134 0346     		mov	r3, r0
 2955 0136 9BB2     		uxth	r3, r3
 2956 0138 1BB2     		sxth	r3, r3
 2957 013a EB1A     		subs	r3, r5, r3
 2958 013c E318     		adds	r3, r4, r3
 2959 013e 3B62     		str	r3, [r7, #32]
 762:../LSM9DS1_Driver.c **** 	for(ii = 0; ii < samples ; ii++)
 2960              		.loc 1 762 0 discriminator 2
 2961 0140 FB6A     		ldr	r3, [r7, #44]
 2962 0142 03F10103 		add	r3, r3, #1
 2963 0146 FB62     		str	r3, [r7, #44]
 2964              	.L108:
 762:../LSM9DS1_Driver.c **** 	for(ii = 0; ii < samples ; ii++)
 2965              		.loc 1 762 0 is_stmt 0 discriminator 1
 2966 0148 97F82B20 		ldrb	r2, [r7, #43]	@ zero_extendqisi2
 2967 014c FB6A     		ldr	r3, [r7, #44]
 2968 014e 9A42     		cmp	r2, r3
 2969 0150 A0DC     		bgt	.L109
 773:../LSM9DS1_Driver.c **** 	}
 774:../LSM9DS1_Driver.c **** 	for (ii = 0; ii < samples/*3*/; ii++)
 2970              		.loc 1 774 0 is_stmt 1
 2971 0152 4FF00003 		mov	r3, #0
 2972 0156 FB62     		str	r3, [r7, #44]
 2973 0158 55E0     		b	.L110
 2974              	.L111:
 775:../LSM9DS1_Driver.c **** 	{
 776:../LSM9DS1_Driver.c **** 		gBiasRaw[ii] = gBiasRawTemp[ii] / samples;
 2975              		.loc 1 776 0 discriminator 2
 2976 015a FB6A     		ldr	r3, [r7, #44]
 2977 015c 4FEA8303 		lsl	r3, r3, #2
 2978 0160 07F13002 		add	r2, r7, #48
 2979 0164 D318     		adds	r3, r2, r3
 2980 0166 53F8242C 		ldr	r2, [r3, #-36]
 2981 016a 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 2982 016e 92FBF3F3 		sdiv	r3, r2, r3
 2983 0172 99B2     		uxth	r1, r3
 2984 0174 40F20003 		movw	r3, #:lower16:gBiasRaw
 2985 0178 C0F20003 		movt	r3, #:upper16:gBiasRaw
 2986 017c FA6A     		ldr	r2, [r7, #44]
 2987 017e 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 777:../LSM9DS1_Driver.c **** 		gBias[ii] = calcGyro(gBiasRaw[ii]);
 2988              		.loc 1 777 0 discriminator 2
 2989 0182 40F20003 		movw	r3, #:lower16:gBiasRaw
 2990 0186 C0F20003 		movt	r3, #:upper16:gBiasRaw
 2991 018a FA6A     		ldr	r2, [r7, #44]
 2992 018c 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 2993 0190 1BB2     		sxth	r3, r3
 2994 0192 1846     		mov	r0, r3
 2995 0194 FFF7FEFF 		bl	calcGyro
 2996 0198 0246     		mov	r2, r0	@ float
 2997 019a 40F20003 		movw	r3, #:lower16:gBias
 2998 019e C0F20003 		movt	r3, #:upper16:gBias
 2999 01a2 F96A     		ldr	r1, [r7, #44]
 3000 01a4 4FEA8101 		lsl	r1, r1, #2
 3001 01a8 5B18     		adds	r3, r3, r1
 3002 01aa 1A60     		str	r2, [r3, #0]	@ float
 778:../LSM9DS1_Driver.c **** 		aBiasRaw[ii] = aBiasRawTemp[ii] / samples;
 3003              		.loc 1 778 0 discriminator 2
 3004 01ac FB6A     		ldr	r3, [r7, #44]
 3005 01ae 4FEA8303 		lsl	r3, r3, #2
 3006 01b2 07F13002 		add	r2, r7, #48
 3007 01b6 D318     		adds	r3, r2, r3
 3008 01b8 53F8182C 		ldr	r2, [r3, #-24]
 3009 01bc 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 3010 01c0 92FBF3F3 		sdiv	r3, r2, r3
 3011 01c4 99B2     		uxth	r1, r3
 3012 01c6 40F20003 		movw	r3, #:lower16:aBiasRaw
 3013 01ca C0F20003 		movt	r3, #:upper16:aBiasRaw
 3014 01ce FA6A     		ldr	r2, [r7, #44]
 3015 01d0 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 779:../LSM9DS1_Driver.c **** 		aBias[ii] = calcAccel(aBiasRaw[ii]);
 3016              		.loc 1 779 0 discriminator 2
 3017 01d4 40F20003 		movw	r3, #:lower16:aBiasRaw
 3018 01d8 C0F20003 		movt	r3, #:upper16:aBiasRaw
 3019 01dc FA6A     		ldr	r2, [r7, #44]
 3020 01de 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 3021 01e2 1BB2     		sxth	r3, r3
 3022 01e4 1846     		mov	r0, r3
 3023 01e6 FFF7FEFF 		bl	calcAccel
 3024 01ea 0246     		mov	r2, r0	@ float
 3025 01ec 40F20003 		movw	r3, #:lower16:aBias
 3026 01f0 C0F20003 		movt	r3, #:upper16:aBias
 3027 01f4 F96A     		ldr	r1, [r7, #44]
 3028 01f6 4FEA8101 		lsl	r1, r1, #2
 3029 01fa 5B18     		adds	r3, r3, r1
 3030 01fc 1A60     		str	r2, [r3, #0]	@ float
 774:../LSM9DS1_Driver.c **** 	for (ii = 0; ii < samples/*3*/; ii++)
 3031              		.loc 1 774 0 discriminator 2
 3032 01fe FB6A     		ldr	r3, [r7, #44]
 3033 0200 03F10103 		add	r3, r3, #1
 3034 0204 FB62     		str	r3, [r7, #44]
 3035              	.L110:
 774:../LSM9DS1_Driver.c **** 	for (ii = 0; ii < samples/*3*/; ii++)
 3036              		.loc 1 774 0 is_stmt 0 discriminator 1
 3037 0206 97F82B20 		ldrb	r2, [r7, #43]	@ zero_extendqisi2
 3038 020a FB6A     		ldr	r3, [r7, #44]
 3039 020c 9A42     		cmp	r2, r3
 3040 020e A4DC     		bgt	.L111
 780:../LSM9DS1_Driver.c **** 	}
 781:../LSM9DS1_Driver.c **** 
 782:../LSM9DS1_Driver.c **** 	enableFIFO(FALSE);
 3041              		.loc 1 782 0 is_stmt 1
 3042 0210 4FF00000 		mov	r0, #0
 3043 0214 FFF7FEFF 		bl	enableFIFO
 783:../LSM9DS1_Driver.c **** 	setFIFO(FIFO_OFF, 0x00);
 3044              		.loc 1 783 0
 3045 0218 4FF00000 		mov	r0, #0
 3046 021c 4FF00001 		mov	r1, #0
 3047 0220 FFF7FEFF 		bl	setFIFO
 784:../LSM9DS1_Driver.c **** 
 785:../LSM9DS1_Driver.c **** 	if (autoCalc) _autoCalc = TRUE;
 3048              		.loc 1 785 0
 3049 0224 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3050 0226 002B     		cmp	r3, #0
 3051 0228 06D0     		beq	.L107
 3052              		.loc 1 785 0 is_stmt 0 discriminator 1
 3053 022a 40F20003 		movw	r3, #:lower16:_autoCalc
 3054 022e C0F20003 		movt	r3, #:upper16:_autoCalc
 3055 0232 4FF00102 		mov	r2, #1
 3056 0236 1A70     		strb	r2, [r3, #0]
 3057              	.L107:
 786:../LSM9DS1_Driver.c **** }
 3058              		.loc 1 786 0 is_stmt 1
 3059 0238 07F13007 		add	r7, r7, #48
 3060 023c BD46     		mov	sp, r7
 3061 023e B0BD     		pop	{r4, r5, r7, pc}
 3062              		.cfi_endproc
 3063              	.LFE139:
 3065              		.section	.text.xgReadBytes,"ax",%progbits
 3066              		.align	2
 3067              		.global	xgReadBytes
 3068              		.thumb
 3069              		.thumb_func
 3071              	xgReadBytes:
 3072              	.LFB140:
 787:../LSM9DS1_Driver.c **** 
 788:../LSM9DS1_Driver.c **** 
 789:../LSM9DS1_Driver.c **** void xgReadBytes(uint8_t subAddress, uint8_t * dest, uint8_t count)
 790:../LSM9DS1_Driver.c **** {
 3073              		.loc 1 790 0
 3074              		.cfi_startproc
 3075              		@ args = 0, pretend = 0, frame = 8
 3076              		@ frame_needed = 1, uses_anonymous_args = 0
 3077 0000 80B5     		push	{r7, lr}
 3078              	.LCFI73:
 3079              		.cfi_def_cfa_offset 8
 3080              		.cfi_offset 7, -8
 3081              		.cfi_offset 14, -4
 3082 0002 82B0     		sub	sp, sp, #8
 3083              	.LCFI74:
 3084              		.cfi_def_cfa_offset 16
 3085 0004 00AF     		add	r7, sp, #0
 3086              	.LCFI75:
 3087              		.cfi_def_cfa_register 7
 3088 0006 3960     		str	r1, [r7, #0]
 3089 0008 1346     		mov	r3, r2
 3090 000a 0246     		mov	r2, r0
 3091 000c FA71     		strb	r2, [r7, #7]
 3092 000e BB71     		strb	r3, [r7, #6]
 791:../LSM9DS1_Driver.c **** 	// Whether we're using I2C or SPI, read multiple bytes using the
 792:../LSM9DS1_Driver.c **** 	// gyro-specific I2C address or SPI CS pin.
 793:../LSM9DS1_Driver.c **** 	if (settings.device.commInterface == IMU_MODE_I2C)
 3093              		.loc 1 793 0
 3094 0010 40F20003 		movw	r3, #:lower16:settings
 3095 0014 C0F20003 		movt	r3, #:upper16:settings
 3096 0018 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3097 001a 012B     		cmp	r3, #1
 3098 001c 0CD1     		bne	.L114
 794:../LSM9DS1_Driver.c **** 		I2CreadBytes(_xgAddress, subAddress, dest, count);
 3099              		.loc 1 794 0
 3100 001e 40F20003 		movw	r3, #:lower16:_xgAddress
 3101 0022 C0F20003 		movt	r3, #:upper16:_xgAddress
 3102 0026 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 3103 0028 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3104 002a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3105 002c 0846     		mov	r0, r1
 3106 002e 1146     		mov	r1, r2
 3107 0030 3A68     		ldr	r2, [r7, #0]
 3108 0032 FFF7FEFF 		bl	I2CreadBytes
 3109 0036 12E0     		b	.L113
 3110              	.L114:
 795:../LSM9DS1_Driver.c **** 		//I2CreadBytes1(_xgAddress, subAddress, dest, count);
 796:../LSM9DS1_Driver.c **** 	else if (settings.device.commInterface == IMU_MODE_SPI)
 3111              		.loc 1 796 0
 3112 0038 40F20003 		movw	r3, #:lower16:settings
 3113 003c C0F20003 		movt	r3, #:upper16:settings
 3114 0040 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3115 0042 002B     		cmp	r3, #0
 3116 0044 0BD1     		bne	.L113
 797:../LSM9DS1_Driver.c **** 		SPIreadBytes(_xgAddress, subAddress, dest, count);
 3117              		.loc 1 797 0
 3118 0046 40F20003 		movw	r3, #:lower16:_xgAddress
 3119 004a C0F20003 		movt	r3, #:upper16:_xgAddress
 3120 004e 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 3121 0050 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3122 0052 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3123 0054 0846     		mov	r0, r1
 3124 0056 1146     		mov	r1, r2
 3125 0058 3A68     		ldr	r2, [r7, #0]
 3126 005a FFF7FEFF 		bl	SPIreadBytes
 3127              	.L113:
 798:../LSM9DS1_Driver.c **** }
 3128              		.loc 1 798 0
 3129 005e 07F10807 		add	r7, r7, #8
 3130 0062 BD46     		mov	sp, r7
 3131 0064 80BD     		pop	{r7, pc}
 3132              		.cfi_endproc
 3133              	.LFE140:
 3135              		.section	.text.SPIreadBytes,"ax",%progbits
 3136              		.align	2
 3137              		.global	SPIreadBytes
 3138              		.thumb
 3139              		.thumb_func
 3141              	SPIreadBytes:
 3142              	.LFB141:
 799:../LSM9DS1_Driver.c **** 
 800:../LSM9DS1_Driver.c **** void SPIreadBytes(uint8_t csPin, uint8_t subAddress, uint8_t * dest, uint8_t count)
 801:../LSM9DS1_Driver.c **** {
 3143              		.loc 1 801 0
 3144              		.cfi_startproc
 3145              		@ args = 0, pretend = 0, frame = 8
 3146              		@ frame_needed = 1, uses_anonymous_args = 0
 3147              		@ link register save eliminated.
 3148 0000 80B4     		push	{r7}
 3149              	.LCFI76:
 3150              		.cfi_def_cfa_offset 4
 3151              		.cfi_offset 7, -4
 3152 0002 83B0     		sub	sp, sp, #12
 3153              	.LCFI77:
 3154              		.cfi_def_cfa_offset 16
 3155 0004 00AF     		add	r7, sp, #0
 3156              	.LCFI78:
 3157              		.cfi_def_cfa_register 7
 3158 0006 3A60     		str	r2, [r7, #0]
 3159 0008 0246     		mov	r2, r0
 3160 000a FA71     		strb	r2, [r7, #7]
 3161 000c 0A46     		mov	r2, r1
 3162 000e BA71     		strb	r2, [r7, #6]
 3163 0010 7B71     		strb	r3, [r7, #5]
 802:../LSM9DS1_Driver.c **** 	;
 803:../LSM9DS1_Driver.c **** }
 3164              		.loc 1 803 0
 3165 0012 07F10C07 		add	r7, r7, #12
 3166 0016 BD46     		mov	sp, r7
 3167 0018 80BC     		pop	{r7}
 3168 001a 7047     		bx	lr
 3169              		.cfi_endproc
 3170              	.LFE141:
 3172              		.section	.text.readGyro1,"ax",%progbits
 3173              		.align	2
 3174              		.global	readGyro1
 3175              		.thumb
 3176              		.thumb_func
 3178              	readGyro1:
 3179              	.LFB142:
 804:../LSM9DS1_Driver.c **** 
 805:../LSM9DS1_Driver.c **** void readGyro1(void)
 806:../LSM9DS1_Driver.c **** {
 3180              		.loc 1 806 0
 3181              		.cfi_startproc
 3182              		@ args = 0, pretend = 0, frame = 8
 3183              		@ frame_needed = 1, uses_anonymous_args = 0
 3184 0000 90B5     		push	{r4, r7, lr}
 3185              	.LCFI79:
 3186              		.cfi_def_cfa_offset 12
 3187              		.cfi_offset 4, -12
 3188              		.cfi_offset 7, -8
 3189              		.cfi_offset 14, -4
 3190 0002 83B0     		sub	sp, sp, #12
 3191              	.LCFI80:
 3192              		.cfi_def_cfa_offset 24
 3193 0004 00AF     		add	r7, sp, #0
 3194              	.LCFI81:
 3195              		.cfi_def_cfa_register 7
 807:../LSM9DS1_Driver.c **** 	uint8_t i = 0; //licznik dla czytania
 3196              		.loc 1 807 0
 3197 0006 4FF00003 		mov	r3, #0
 3198 000a FB71     		strb	r3, [r7, #7]
 808:../LSM9DS1_Driver.c **** 	uint8_t temp[6]; // We'll read six bytes from the gyro into temp
 809:../LSM9DS1_Driver.c **** 	uint8_t subAddr = OUT_X_L_G;
 3199              		.loc 1 809 0
 3200 000c 4FF01803 		mov	r3, #24
 3201 0010 BB71     		strb	r3, [r7, #6]
 810:../LSM9DS1_Driver.c **** 
 811:../LSM9DS1_Driver.c **** 
 812:../LSM9DS1_Driver.c **** 	while(i < 6)
 3202              		.loc 1 812 0
 3203 0012 24E0     		b	.L118
 3204              	.L119:
 813:../LSM9DS1_Driver.c **** 	{
 814:../LSM9DS1_Driver.c **** 		subAddr = OUT_X_L_G;
 3205              		.loc 1 814 0
 3206 0014 4FF01803 		mov	r3, #24
 3207 0018 BB71     		strb	r3, [r7, #6]
 815:../LSM9DS1_Driver.c **** 		subAddr = subAddr + i;
 3208              		.loc 1 815 0
 3209 001a BA79     		ldrb	r2, [r7, #6]
 3210 001c FB79     		ldrb	r3, [r7, #7]
 3211 001e D318     		adds	r3, r2, r3
 3212 0020 BB71     		strb	r3, [r7, #6]
 816:../LSM9DS1_Driver.c **** 		temp[i] = I2CreadBytes(_xgAddress, subAddr, NULL, 0);
 3213              		.loc 1 816 0
 3214 0022 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 3215 0024 40F20003 		movw	r3, #:lower16:_xgAddress
 3216 0028 C0F20003 		movt	r3, #:upper16:_xgAddress
 3217 002c 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 3218 002e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3219 0030 1046     		mov	r0, r2
 3220 0032 1946     		mov	r1, r3
 3221 0034 4FF00002 		mov	r2, #0
 3222 0038 4FF00003 		mov	r3, #0
 3223 003c FFF7FEFF 		bl	I2CreadBytes
 3224 0040 0346     		mov	r3, r0
 3225 0042 1A46     		mov	r2, r3
 3226 0044 07F10801 		add	r1, r7, #8
 3227 0048 0B19     		adds	r3, r1, r4
 3228 004a 03F8082C 		strb	r2, [r3, #-8]
 817:../LSM9DS1_Driver.c **** 		delay(10000);
 3229              		.loc 1 817 0
 3230 004e 42F21070 		movw	r0, #10000
 3231 0052 FFF7FEFF 		bl	delay
 818:../LSM9DS1_Driver.c **** 		i++;
 3232              		.loc 1 818 0
 3233 0056 FB79     		ldrb	r3, [r7, #7]
 3234 0058 03F10103 		add	r3, r3, #1
 3235 005c FB71     		strb	r3, [r7, #7]
 3236              	.L118:
 812:../LSM9DS1_Driver.c **** 	while(i < 6)
 3237              		.loc 1 812 0 discriminator 1
 3238 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3239 0060 052B     		cmp	r3, #5
 3240 0062 D7D9     		bls	.L119
 819:../LSM9DS1_Driver.c **** 	}
 820:../LSM9DS1_Driver.c **** 
 821:../LSM9DS1_Driver.c **** 	gx = ((int8_t)temp[1] << 8) | (int8_t)temp[0]; // Store x-axis values into gx
 3241              		.loc 1 821 0
 3242 0064 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 3243 0066 DBB2     		uxtb	r3, r3
 3244 0068 5BB2     		sxtb	r3, r3
 3245 006a 4FEA0323 		lsl	r3, r3, #8
 3246 006e 9AB2     		uxth	r2, r3
 3247 0070 3B78     		ldrb	r3, [r7, #0]	@ zero_extendqisi2
 3248 0072 DBB2     		uxtb	r3, r3
 3249 0074 5BB2     		sxtb	r3, r3
 3250 0076 9BB2     		uxth	r3, r3
 3251 0078 1343     		orrs	r3, r3, r2
 3252 007a 9AB2     		uxth	r2, r3
 3253 007c 40F20003 		movw	r3, #:lower16:gx
 3254 0080 C0F20003 		movt	r3, #:upper16:gx
 3255 0084 1A80     		strh	r2, [r3, #0]	@ movhi
 822:../LSM9DS1_Driver.c **** 
 823:../LSM9DS1_Driver.c **** 	gy = (temp[3] << 8) | temp[2]; // Store y-axis values into gy
 3256              		.loc 1 823 0
 3257 0086 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3258 0088 4FEA0323 		lsl	r3, r3, #8
 3259 008c 9AB2     		uxth	r2, r3
 3260 008e BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 3261 0090 1343     		orrs	r3, r3, r2
 3262 0092 9AB2     		uxth	r2, r3
 3263 0094 40F20003 		movw	r3, #:lower16:gy
 3264 0098 C0F20003 		movt	r3, #:upper16:gy
 3265 009c 1A80     		strh	r2, [r3, #0]	@ movhi
 824:../LSM9DS1_Driver.c **** 
 825:../LSM9DS1_Driver.c **** 	gz = (temp[5] << 8) | temp[4]; // Store z-axis values into gz
 3266              		.loc 1 825 0
 3267 009e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3268 00a0 4FEA0323 		lsl	r3, r3, #8
 3269 00a4 9AB2     		uxth	r2, r3
 3270 00a6 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 3271 00a8 1343     		orrs	r3, r3, r2
 3272 00aa 9AB2     		uxth	r2, r3
 3273 00ac 40F20003 		movw	r3, #:lower16:gz
 3274 00b0 C0F20003 		movt	r3, #:upper16:gz
 3275 00b4 1A80     		strh	r2, [r3, #0]	@ movhi
 826:../LSM9DS1_Driver.c **** 
 827:../LSM9DS1_Driver.c **** 
 828:../LSM9DS1_Driver.c **** 
 829:../LSM9DS1_Driver.c **** 	if (_autoCalc) //kalibracja
 3276              		.loc 1 829 0
 3277 00b6 40F20003 		movw	r3, #:lower16:_autoCalc
 3278 00ba C0F20003 		movt	r3, #:upper16:_autoCalc
 3279 00be 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3280 00c0 002B     		cmp	r3, #0
 3281 00c2 3BD0     		beq	.L117
 830:../LSM9DS1_Driver.c **** 	{
 831:../LSM9DS1_Driver.c **** 		gx -= gBiasRaw[X_AXIS];
 3282              		.loc 1 831 0
 3283 00c4 40F20003 		movw	r3, #:lower16:gx
 3284 00c8 C0F20003 		movt	r3, #:upper16:gx
 3285 00cc 1B88     		ldrh	r3, [r3, #0]
 3286 00ce 9AB2     		uxth	r2, r3
 3287 00d0 40F20003 		movw	r3, #:lower16:gBiasRaw
 3288 00d4 C0F20003 		movt	r3, #:upper16:gBiasRaw
 3289 00d8 1B88     		ldrh	r3, [r3, #0]
 3290 00da 9BB2     		uxth	r3, r3
 3291 00dc D31A     		subs	r3, r2, r3
 3292 00de 9BB2     		uxth	r3, r3
 3293 00e0 9AB2     		uxth	r2, r3
 3294 00e2 40F20003 		movw	r3, #:lower16:gx
 3295 00e6 C0F20003 		movt	r3, #:upper16:gx
 3296 00ea 1A80     		strh	r2, [r3, #0]	@ movhi
 832:../LSM9DS1_Driver.c **** 		gy -= gBiasRaw[Y_AXIS];
 3297              		.loc 1 832 0
 3298 00ec 40F20003 		movw	r3, #:lower16:gy
 3299 00f0 C0F20003 		movt	r3, #:upper16:gy
 3300 00f4 1B88     		ldrh	r3, [r3, #0]
 3301 00f6 9AB2     		uxth	r2, r3
 3302 00f8 40F20003 		movw	r3, #:lower16:gBiasRaw
 3303 00fc C0F20003 		movt	r3, #:upper16:gBiasRaw
 3304 0100 5B88     		ldrh	r3, [r3, #2]
 3305 0102 9BB2     		uxth	r3, r3
 3306 0104 D31A     		subs	r3, r2, r3
 3307 0106 9BB2     		uxth	r3, r3
 3308 0108 9AB2     		uxth	r2, r3
 3309 010a 40F20003 		movw	r3, #:lower16:gy
 3310 010e C0F20003 		movt	r3, #:upper16:gy
 3311 0112 1A80     		strh	r2, [r3, #0]	@ movhi
 833:../LSM9DS1_Driver.c **** 		gz -= gBiasRaw[Z_AXIS];
 3312              		.loc 1 833 0
 3313 0114 40F20003 		movw	r3, #:lower16:gz
 3314 0118 C0F20003 		movt	r3, #:upper16:gz
 3315 011c 1B88     		ldrh	r3, [r3, #0]
 3316 011e 9AB2     		uxth	r2, r3
 3317 0120 40F20003 		movw	r3, #:lower16:gBiasRaw
 3318 0124 C0F20003 		movt	r3, #:upper16:gBiasRaw
 3319 0128 9B88     		ldrh	r3, [r3, #4]
 3320 012a 9BB2     		uxth	r3, r3
 3321 012c D31A     		subs	r3, r2, r3
 3322 012e 9BB2     		uxth	r3, r3
 3323 0130 9AB2     		uxth	r2, r3
 3324 0132 40F20003 		movw	r3, #:lower16:gz
 3325 0136 C0F20003 		movt	r3, #:upper16:gz
 3326 013a 1A80     		strh	r2, [r3, #0]	@ movhi
 3327              	.L117:
 834:../LSM9DS1_Driver.c **** 	}
 835:../LSM9DS1_Driver.c **** 	/*gx = calcGyro(gx);
 836:../LSM9DS1_Driver.c **** 	gy = calcGyro(gy);
 837:../LSM9DS1_Driver.c **** 	gz = calcGyro(gz);*/
 838:../LSM9DS1_Driver.c **** }
 3328              		.loc 1 838 0
 3329 013c 07F10C07 		add	r7, r7, #12
 3330 0140 BD46     		mov	sp, r7
 3331 0142 90BD     		pop	{r4, r7, pc}
 3332              		.cfi_endproc
 3333              	.LFE142:
 3335              		.section	.text.readAccel1,"ax",%progbits
 3336              		.align	2
 3337              		.global	readAccel1
 3338              		.thumb
 3339              		.thumb_func
 3341              	readAccel1:
 3342              	.LFB143:
 839:../LSM9DS1_Driver.c **** 
 840:../LSM9DS1_Driver.c **** void readAccel1(void)
 841:../LSM9DS1_Driver.c **** {
 3343              		.loc 1 841 0
 3344              		.cfi_startproc
 3345              		@ args = 0, pretend = 0, frame = 8
 3346              		@ frame_needed = 1, uses_anonymous_args = 0
 3347 0000 90B5     		push	{r4, r7, lr}
 3348              	.LCFI82:
 3349              		.cfi_def_cfa_offset 12
 3350              		.cfi_offset 4, -12
 3351              		.cfi_offset 7, -8
 3352              		.cfi_offset 14, -4
 3353 0002 83B0     		sub	sp, sp, #12
 3354              	.LCFI83:
 3355              		.cfi_def_cfa_offset 24
 3356 0004 00AF     		add	r7, sp, #0
 3357              	.LCFI84:
 3358              		.cfi_def_cfa_register 7
 842:../LSM9DS1_Driver.c **** 	uint8_t i = 0; //licznik dla czytania
 3359              		.loc 1 842 0
 3360 0006 4FF00003 		mov	r3, #0
 3361 000a FB71     		strb	r3, [r7, #7]
 843:../LSM9DS1_Driver.c **** 	uint8_t temp[6]; // We'll read six bytes from the gyro into temp
 844:../LSM9DS1_Driver.c **** 	uint8_t subAddr = OUT_X_L_XL;
 3362              		.loc 1 844 0
 3363 000c 4FF02803 		mov	r3, #40
 3364 0010 BB71     		strb	r3, [r7, #6]
 845:../LSM9DS1_Driver.c **** 
 846:../LSM9DS1_Driver.c **** 	while(i < 6)
 3365              		.loc 1 846 0
 3366 0012 20E0     		b	.L122
 3367              	.L123:
 847:../LSM9DS1_Driver.c **** 	{
 848:../LSM9DS1_Driver.c **** 		subAddr = OUT_X_L_XL;
 3368              		.loc 1 848 0
 3369 0014 4FF02803 		mov	r3, #40
 3370 0018 BB71     		strb	r3, [r7, #6]
 849:../LSM9DS1_Driver.c **** 		subAddr = subAddr + i;
 3371              		.loc 1 849 0
 3372 001a BA79     		ldrb	r2, [r7, #6]
 3373 001c FB79     		ldrb	r3, [r7, #7]
 3374 001e D318     		adds	r3, r2, r3
 3375 0020 BB71     		strb	r3, [r7, #6]
 850:../LSM9DS1_Driver.c **** 		temp[i] = I2CreadBytes(_xgAddress, subAddr, NULL, 0);
 3376              		.loc 1 850 0
 3377 0022 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 3378 0024 40F20003 		movw	r3, #:lower16:_xgAddress
 3379 0028 C0F20003 		movt	r3, #:upper16:_xgAddress
 3380 002c 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 3381 002e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3382 0030 1046     		mov	r0, r2
 3383 0032 1946     		mov	r1, r3
 3384 0034 4FF00002 		mov	r2, #0
 3385 0038 4FF00003 		mov	r3, #0
 3386 003c FFF7FEFF 		bl	I2CreadBytes
 3387 0040 0346     		mov	r3, r0
 3388 0042 1A46     		mov	r2, r3
 3389 0044 07F10801 		add	r1, r7, #8
 3390 0048 0B19     		adds	r3, r1, r4
 3391 004a 03F8082C 		strb	r2, [r3, #-8]
 851:../LSM9DS1_Driver.c **** 		i++;
 3392              		.loc 1 851 0
 3393 004e FB79     		ldrb	r3, [r7, #7]
 3394 0050 03F10103 		add	r3, r3, #1
 3395 0054 FB71     		strb	r3, [r7, #7]
 3396              	.L122:
 846:../LSM9DS1_Driver.c **** 	while(i < 6)
 3397              		.loc 1 846 0 discriminator 1
 3398 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3399 0058 052B     		cmp	r3, #5
 3400 005a DBD9     		bls	.L123
 852:../LSM9DS1_Driver.c **** 	}
 853:../LSM9DS1_Driver.c **** 
 854:../LSM9DS1_Driver.c **** 	ax = (temp[1] << 8) | temp[0]; // Store x-axis values into ax
 3401              		.loc 1 854 0
 3402 005c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 3403 005e 4FEA0323 		lsl	r3, r3, #8
 3404 0062 9AB2     		uxth	r2, r3
 3405 0064 3B78     		ldrb	r3, [r7, #0]	@ zero_extendqisi2
 3406 0066 1343     		orrs	r3, r3, r2
 3407 0068 9AB2     		uxth	r2, r3
 3408 006a 40F20003 		movw	r3, #:lower16:ax
 3409 006e C0F20003 		movt	r3, #:upper16:ax
 3410 0072 1A80     		strh	r2, [r3, #0]	@ movhi
 855:../LSM9DS1_Driver.c **** 	ay = (temp[3] << 8) | temp[2]; // Store y-axis values into ay
 3411              		.loc 1 855 0
 3412 0074 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3413 0076 4FEA0323 		lsl	r3, r3, #8
 3414 007a 9AB2     		uxth	r2, r3
 3415 007c BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 3416 007e 1343     		orrs	r3, r3, r2
 3417 0080 9AB2     		uxth	r2, r3
 3418 0082 40F20003 		movw	r3, #:lower16:ay
 3419 0086 C0F20003 		movt	r3, #:upper16:ay
 3420 008a 1A80     		strh	r2, [r3, #0]	@ movhi
 856:../LSM9DS1_Driver.c **** 	az = (temp[5] << 8) | temp[4]; // Store z-axis values into az
 3421              		.loc 1 856 0
 3422 008c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3423 008e 4FEA0323 		lsl	r3, r3, #8
 3424 0092 9AB2     		uxth	r2, r3
 3425 0094 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 3426 0096 1343     		orrs	r3, r3, r2
 3427 0098 9AB2     		uxth	r2, r3
 3428 009a 40F20003 		movw	r3, #:lower16:az
 3429 009e C0F20003 		movt	r3, #:upper16:az
 3430 00a2 1A80     		strh	r2, [r3, #0]	@ movhi
 857:../LSM9DS1_Driver.c **** 
 858:../LSM9DS1_Driver.c **** 	if (_autoCalc) //kalibracja
 3431              		.loc 1 858 0
 3432 00a4 40F20003 		movw	r3, #:lower16:_autoCalc
 3433 00a8 C0F20003 		movt	r3, #:upper16:_autoCalc
 3434 00ac 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3435 00ae 002B     		cmp	r3, #0
 3436 00b0 3BD0     		beq	.L121
 859:../LSM9DS1_Driver.c **** 	{
 860:../LSM9DS1_Driver.c **** 		ax -= aBiasRaw[X_AXIS];
 3437              		.loc 1 860 0
 3438 00b2 40F20003 		movw	r3, #:lower16:ax
 3439 00b6 C0F20003 		movt	r3, #:upper16:ax
 3440 00ba 1B88     		ldrh	r3, [r3, #0]
 3441 00bc 9AB2     		uxth	r2, r3
 3442 00be 40F20003 		movw	r3, #:lower16:aBiasRaw
 3443 00c2 C0F20003 		movt	r3, #:upper16:aBiasRaw
 3444 00c6 1B88     		ldrh	r3, [r3, #0]
 3445 00c8 9BB2     		uxth	r3, r3
 3446 00ca D31A     		subs	r3, r2, r3
 3447 00cc 9BB2     		uxth	r3, r3
 3448 00ce 9AB2     		uxth	r2, r3
 3449 00d0 40F20003 		movw	r3, #:lower16:ax
 3450 00d4 C0F20003 		movt	r3, #:upper16:ax
 3451 00d8 1A80     		strh	r2, [r3, #0]	@ movhi
 861:../LSM9DS1_Driver.c **** 		ay -= aBiasRaw[Y_AXIS];
 3452              		.loc 1 861 0
 3453 00da 40F20003 		movw	r3, #:lower16:ay
 3454 00de C0F20003 		movt	r3, #:upper16:ay
 3455 00e2 1B88     		ldrh	r3, [r3, #0]
 3456 00e4 9AB2     		uxth	r2, r3
 3457 00e6 40F20003 		movw	r3, #:lower16:aBiasRaw
 3458 00ea C0F20003 		movt	r3, #:upper16:aBiasRaw
 3459 00ee 5B88     		ldrh	r3, [r3, #2]
 3460 00f0 9BB2     		uxth	r3, r3
 3461 00f2 D31A     		subs	r3, r2, r3
 3462 00f4 9BB2     		uxth	r3, r3
 3463 00f6 9AB2     		uxth	r2, r3
 3464 00f8 40F20003 		movw	r3, #:lower16:ay
 3465 00fc C0F20003 		movt	r3, #:upper16:ay
 3466 0100 1A80     		strh	r2, [r3, #0]	@ movhi
 862:../LSM9DS1_Driver.c **** 		az -= aBiasRaw[Z_AXIS];
 3467              		.loc 1 862 0
 3468 0102 40F20003 		movw	r3, #:lower16:az
 3469 0106 C0F20003 		movt	r3, #:upper16:az
 3470 010a 1B88     		ldrh	r3, [r3, #0]
 3471 010c 9AB2     		uxth	r2, r3
 3472 010e 40F20003 		movw	r3, #:lower16:aBiasRaw
 3473 0112 C0F20003 		movt	r3, #:upper16:aBiasRaw
 3474 0116 9B88     		ldrh	r3, [r3, #4]
 3475 0118 9BB2     		uxth	r3, r3
 3476 011a D31A     		subs	r3, r2, r3
 3477 011c 9BB2     		uxth	r3, r3
 3478 011e 9AB2     		uxth	r2, r3
 3479 0120 40F20003 		movw	r3, #:lower16:az
 3480 0124 C0F20003 		movt	r3, #:upper16:az
 3481 0128 1A80     		strh	r2, [r3, #0]	@ movhi
 3482              	.L121:
 863:../LSM9DS1_Driver.c **** 	}
 864:../LSM9DS1_Driver.c **** 
 865:../LSM9DS1_Driver.c **** 	/*ax = calcAccel(ax);
 866:../LSM9DS1_Driver.c **** 	ay = calcAccel(ay);
 867:../LSM9DS1_Driver.c **** 	az = calcAccel(az);*/
 868:../LSM9DS1_Driver.c **** }
 3483              		.loc 1 868 0
 3484 012a 07F10C07 		add	r7, r7, #12
 3485 012e BD46     		mov	sp, r7
 3486 0130 90BD     		pop	{r4, r7, pc}
 3487              		.cfi_endproc
 3488              	.LFE143:
 3490 0132 00BF     		.section	.text.readAccelToSensor,"ax",%progbits
 3491              		.align	2
 3492              		.global	readAccelToSensor
 3493              		.thumb
 3494              		.thumb_func
 3496              	readAccelToSensor:
 3497              	.LFB144:
 869:../LSM9DS1_Driver.c **** 
 870:../LSM9DS1_Driver.c **** void readAccelToSensor(accel *pomiar)
 871:../LSM9DS1_Driver.c **** {
 3498              		.loc 1 871 0
 3499              		.cfi_startproc
 3500              		@ args = 0, pretend = 0, frame = 16
 3501              		@ frame_needed = 1, uses_anonymous_args = 0
 3502 0000 90B5     		push	{r4, r7, lr}
 3503              	.LCFI85:
 3504              		.cfi_def_cfa_offset 12
 3505              		.cfi_offset 4, -12
 3506              		.cfi_offset 7, -8
 3507              		.cfi_offset 14, -4
 3508 0002 85B0     		sub	sp, sp, #20
 3509              	.LCFI86:
 3510              		.cfi_def_cfa_offset 32
 3511 0004 00AF     		add	r7, sp, #0
 3512              	.LCFI87:
 3513              		.cfi_def_cfa_register 7
 3514 0006 7860     		str	r0, [r7, #4]
 872:../LSM9DS1_Driver.c **** 	uint8_t i = 0; //licznik dla czytania
 3515              		.loc 1 872 0
 3516 0008 4FF00003 		mov	r3, #0
 3517 000c FB73     		strb	r3, [r7, #15]
 873:../LSM9DS1_Driver.c **** 	uint8_t temp[6]; // We'll read six bytes from the gyro into temp
 874:../LSM9DS1_Driver.c **** 	uint8_t subAddr = OUT_X_L_XL;
 3518              		.loc 1 874 0
 3519 000e 4FF02803 		mov	r3, #40
 3520 0012 BB73     		strb	r3, [r7, #14]
 875:../LSM9DS1_Driver.c **** 
 876:../LSM9DS1_Driver.c **** 	while(i < 6)
 3521              		.loc 1 876 0
 3522 0014 20E0     		b	.L126
 3523              	.L127:
 877:../LSM9DS1_Driver.c **** 	{
 878:../LSM9DS1_Driver.c **** 		subAddr = OUT_X_L_XL;
 3524              		.loc 1 878 0
 3525 0016 4FF02803 		mov	r3, #40
 3526 001a BB73     		strb	r3, [r7, #14]
 879:../LSM9DS1_Driver.c **** 		subAddr = subAddr + i;
 3527              		.loc 1 879 0
 3528 001c BA7B     		ldrb	r2, [r7, #14]
 3529 001e FB7B     		ldrb	r3, [r7, #15]
 3530 0020 D318     		adds	r3, r2, r3
 3531 0022 BB73     		strb	r3, [r7, #14]
 880:../LSM9DS1_Driver.c **** 		temp[i] = I2CreadBytes(_xgAddress, subAddr, NULL, 0);
 3532              		.loc 1 880 0
 3533 0024 FC7B     		ldrb	r4, [r7, #15]	@ zero_extendqisi2
 3534 0026 40F20003 		movw	r3, #:lower16:_xgAddress
 3535 002a C0F20003 		movt	r3, #:upper16:_xgAddress
 3536 002e 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 3537 0030 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3538 0032 1046     		mov	r0, r2
 3539 0034 1946     		mov	r1, r3
 3540 0036 4FF00002 		mov	r2, #0
 3541 003a 4FF00003 		mov	r3, #0
 3542 003e FFF7FEFF 		bl	I2CreadBytes
 3543 0042 0346     		mov	r3, r0
 3544 0044 1A46     		mov	r2, r3
 3545 0046 07F11001 		add	r1, r7, #16
 3546 004a 0B19     		adds	r3, r1, r4
 3547 004c 03F8082C 		strb	r2, [r3, #-8]
 881:../LSM9DS1_Driver.c **** 		i++;
 3548              		.loc 1 881 0
 3549 0050 FB7B     		ldrb	r3, [r7, #15]
 3550 0052 03F10103 		add	r3, r3, #1
 3551 0056 FB73     		strb	r3, [r7, #15]
 3552              	.L126:
 876:../LSM9DS1_Driver.c **** 	while(i < 6)
 3553              		.loc 1 876 0 discriminator 1
 3554 0058 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3555 005a 052B     		cmp	r3, #5
 3556 005c DBD9     		bls	.L127
 882:../LSM9DS1_Driver.c **** 	}
 883:../LSM9DS1_Driver.c **** 
 884:../LSM9DS1_Driver.c **** 	ax = (temp[1] << 8) | temp[0]; // Store x-axis values into ax
 3557              		.loc 1 884 0
 3558 005e 7B7A     		ldrb	r3, [r7, #9]	@ zero_extendqisi2
 3559 0060 4FEA0323 		lsl	r3, r3, #8
 3560 0064 9AB2     		uxth	r2, r3
 3561 0066 3B7A     		ldrb	r3, [r7, #8]	@ zero_extendqisi2
 3562 0068 1343     		orrs	r3, r3, r2
 3563 006a 9AB2     		uxth	r2, r3
 3564 006c 40F20003 		movw	r3, #:lower16:ax
 3565 0070 C0F20003 		movt	r3, #:upper16:ax
 3566 0074 1A80     		strh	r2, [r3, #0]	@ movhi
 885:../LSM9DS1_Driver.c **** 	ay = (temp[3] << 8) | temp[2]; // Store y-axis values into ay
 3567              		.loc 1 885 0
 3568 0076 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 3569 0078 4FEA0323 		lsl	r3, r3, #8
 3570 007c 9AB2     		uxth	r2, r3
 3571 007e BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 3572 0080 1343     		orrs	r3, r3, r2
 3573 0082 9AB2     		uxth	r2, r3
 3574 0084 40F20003 		movw	r3, #:lower16:ay
 3575 0088 C0F20003 		movt	r3, #:upper16:ay
 3576 008c 1A80     		strh	r2, [r3, #0]	@ movhi
 886:../LSM9DS1_Driver.c **** 	az = (temp[5] << 8) | temp[4]; // Store z-axis values into az
 3577              		.loc 1 886 0
 3578 008e 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 3579 0090 4FEA0323 		lsl	r3, r3, #8
 3580 0094 9AB2     		uxth	r2, r3
 3581 0096 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 3582 0098 1343     		orrs	r3, r3, r2
 3583 009a 9AB2     		uxth	r2, r3
 3584 009c 40F20003 		movw	r3, #:lower16:az
 3585 00a0 C0F20003 		movt	r3, #:upper16:az
 3586 00a4 1A80     		strh	r2, [r3, #0]	@ movhi
 887:../LSM9DS1_Driver.c **** 
 888:../LSM9DS1_Driver.c **** 	if (_autoCalc) //kalibracja
 3587              		.loc 1 888 0
 3588 00a6 40F20003 		movw	r3, #:lower16:_autoCalc
 3589 00aa C0F20003 		movt	r3, #:upper16:_autoCalc
 3590 00ae 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3591 00b0 002B     		cmp	r3, #0
 3592 00b2 3BD0     		beq	.L128
 889:../LSM9DS1_Driver.c **** 	{
 890:../LSM9DS1_Driver.c **** 		ax -= aBiasRaw[X_AXIS];
 3593              		.loc 1 890 0
 3594 00b4 40F20003 		movw	r3, #:lower16:ax
 3595 00b8 C0F20003 		movt	r3, #:upper16:ax
 3596 00bc 1B88     		ldrh	r3, [r3, #0]
 3597 00be 9AB2     		uxth	r2, r3
 3598 00c0 40F20003 		movw	r3, #:lower16:aBiasRaw
 3599 00c4 C0F20003 		movt	r3, #:upper16:aBiasRaw
 3600 00c8 1B88     		ldrh	r3, [r3, #0]
 3601 00ca 9BB2     		uxth	r3, r3
 3602 00cc D31A     		subs	r3, r2, r3
 3603 00ce 9BB2     		uxth	r3, r3
 3604 00d0 9AB2     		uxth	r2, r3
 3605 00d2 40F20003 		movw	r3, #:lower16:ax
 3606 00d6 C0F20003 		movt	r3, #:upper16:ax
 3607 00da 1A80     		strh	r2, [r3, #0]	@ movhi
 891:../LSM9DS1_Driver.c **** 		ay -= aBiasRaw[Y_AXIS];
 3608              		.loc 1 891 0
 3609 00dc 40F20003 		movw	r3, #:lower16:ay
 3610 00e0 C0F20003 		movt	r3, #:upper16:ay
 3611 00e4 1B88     		ldrh	r3, [r3, #0]
 3612 00e6 9AB2     		uxth	r2, r3
 3613 00e8 40F20003 		movw	r3, #:lower16:aBiasRaw
 3614 00ec C0F20003 		movt	r3, #:upper16:aBiasRaw
 3615 00f0 5B88     		ldrh	r3, [r3, #2]
 3616 00f2 9BB2     		uxth	r3, r3
 3617 00f4 D31A     		subs	r3, r2, r3
 3618 00f6 9BB2     		uxth	r3, r3
 3619 00f8 9AB2     		uxth	r2, r3
 3620 00fa 40F20003 		movw	r3, #:lower16:ay
 3621 00fe C0F20003 		movt	r3, #:upper16:ay
 3622 0102 1A80     		strh	r2, [r3, #0]	@ movhi
 892:../LSM9DS1_Driver.c **** 		az -= aBiasRaw[Z_AXIS];
 3623              		.loc 1 892 0
 3624 0104 40F20003 		movw	r3, #:lower16:az
 3625 0108 C0F20003 		movt	r3, #:upper16:az
 3626 010c 1B88     		ldrh	r3, [r3, #0]
 3627 010e 9AB2     		uxth	r2, r3
 3628 0110 40F20003 		movw	r3, #:lower16:aBiasRaw
 3629 0114 C0F20003 		movt	r3, #:upper16:aBiasRaw
 3630 0118 9B88     		ldrh	r3, [r3, #4]
 3631 011a 9BB2     		uxth	r3, r3
 3632 011c D31A     		subs	r3, r2, r3
 3633 011e 9BB2     		uxth	r3, r3
 3634 0120 9AB2     		uxth	r2, r3
 3635 0122 40F20003 		movw	r3, #:lower16:az
 3636 0126 C0F20003 		movt	r3, #:upper16:az
 3637 012a 1A80     		strh	r2, [r3, #0]	@ movhi
 3638              	.L128:
 893:../LSM9DS1_Driver.c **** 	}
 894:../LSM9DS1_Driver.c **** 
 895:../LSM9DS1_Driver.c **** 	ax = calcAccel(ax);
 3639              		.loc 1 895 0
 3640 012c 40F20003 		movw	r3, #:lower16:ax
 3641 0130 C0F20003 		movt	r3, #:upper16:ax
 3642 0134 1B88     		ldrh	r3, [r3, #0]
 3643 0136 1BB2     		sxth	r3, r3
 3644 0138 1846     		mov	r0, r3
 3645 013a FFF7FEFF 		bl	calcAccel
 3646 013e 07EE900A 		fmsr	s15, r0
 3647 0142 FDEEE77A 		ftosizs	s15, s15
 3648 0146 17EE903A 		fmrs	r3, s15	@ int
 3649 014a 9AB2     		uxth	r2, r3
 3650 014c 40F20003 		movw	r3, #:lower16:ax
 3651 0150 C0F20003 		movt	r3, #:upper16:ax
 3652 0154 1A80     		strh	r2, [r3, #0]	@ movhi
 896:../LSM9DS1_Driver.c **** 	ay = calcAccel(ay);
 3653              		.loc 1 896 0
 3654 0156 40F20003 		movw	r3, #:lower16:ay
 3655 015a C0F20003 		movt	r3, #:upper16:ay
 3656 015e 1B88     		ldrh	r3, [r3, #0]
 3657 0160 1BB2     		sxth	r3, r3
 3658 0162 1846     		mov	r0, r3
 3659 0164 FFF7FEFF 		bl	calcAccel
 3660 0168 07EE900A 		fmsr	s15, r0
 3661 016c FDEEE77A 		ftosizs	s15, s15
 3662 0170 17EE903A 		fmrs	r3, s15	@ int
 3663 0174 9AB2     		uxth	r2, r3
 3664 0176 40F20003 		movw	r3, #:lower16:ay
 3665 017a C0F20003 		movt	r3, #:upper16:ay
 3666 017e 1A80     		strh	r2, [r3, #0]	@ movhi
 897:../LSM9DS1_Driver.c **** 	az = calcAccel(az);
 3667              		.loc 1 897 0
 3668 0180 40F20003 		movw	r3, #:lower16:az
 3669 0184 C0F20003 		movt	r3, #:upper16:az
 3670 0188 1B88     		ldrh	r3, [r3, #0]
 3671 018a 1BB2     		sxth	r3, r3
 3672 018c 1846     		mov	r0, r3
 3673 018e FFF7FEFF 		bl	calcAccel
 3674 0192 07EE900A 		fmsr	s15, r0
 3675 0196 FDEEE77A 		ftosizs	s15, s15
 3676 019a 17EE903A 		fmrs	r3, s15	@ int
 3677 019e 9AB2     		uxth	r2, r3
 3678 01a0 40F20003 		movw	r3, #:lower16:az
 3679 01a4 C0F20003 		movt	r3, #:upper16:az
 3680 01a8 1A80     		strh	r2, [r3, #0]	@ movhi
 898:../LSM9DS1_Driver.c **** 
 899:../LSM9DS1_Driver.c **** 	pomiar->ax = ax;
 3681              		.loc 1 899 0
 3682 01aa 40F20003 		movw	r3, #:lower16:ax
 3683 01ae C0F20003 		movt	r3, #:upper16:ax
 3684 01b2 1A88     		ldrh	r2, [r3, #0]
 3685 01b4 7B68     		ldr	r3, [r7, #4]
 3686 01b6 1A80     		strh	r2, [r3, #0]	@ movhi
 900:../LSM9DS1_Driver.c **** 	pomiar->ay = ay;
 3687              		.loc 1 900 0
 3688 01b8 40F20003 		movw	r3, #:lower16:ay
 3689 01bc C0F20003 		movt	r3, #:upper16:ay
 3690 01c0 1A88     		ldrh	r2, [r3, #0]
 3691 01c2 7B68     		ldr	r3, [r7, #4]
 3692 01c4 5A80     		strh	r2, [r3, #2]	@ movhi
 901:../LSM9DS1_Driver.c **** 	pomiar->az = az;
 3693              		.loc 1 901 0
 3694 01c6 40F20003 		movw	r3, #:lower16:az
 3695 01ca C0F20003 		movt	r3, #:upper16:az
 3696 01ce 1A88     		ldrh	r2, [r3, #0]
 3697 01d0 7B68     		ldr	r3, [r7, #4]
 3698 01d2 9A80     		strh	r2, [r3, #4]	@ movhi
 902:../LSM9DS1_Driver.c **** }
 3699              		.loc 1 902 0
 3700 01d4 07F11407 		add	r7, r7, #20
 3701 01d8 BD46     		mov	sp, r7
 3702 01da 90BD     		pop	{r4, r7, pc}
 3703              		.cfi_endproc
 3704              	.LFE144:
 3706              		.section	.text.I2CreadBytes,"ax",%progbits
 3707              		.align	2
 3708              		.global	I2CreadBytes
 3709              		.thumb
 3710              		.thumb_func
 3712              	I2CreadBytes:
 3713              	.LFB145:
 903:../LSM9DS1_Driver.c **** 
 904:../LSM9DS1_Driver.c **** uint8_t I2CreadBytes(uint8_t address, uint8_t subAddress, uint8_t * dest, uint8_t count)
 905:../LSM9DS1_Driver.c **** {
 3714              		.loc 1 905 0
 3715              		.cfi_startproc
 3716              		@ args = 0, pretend = 0, frame = 40
 3717              		@ frame_needed = 1, uses_anonymous_args = 0
 3718 0000 80B5     		push	{r7, lr}
 3719              	.LCFI88:
 3720              		.cfi_def_cfa_offset 8
 3721              		.cfi_offset 7, -8
 3722              		.cfi_offset 14, -4
 3723 0002 8AB0     		sub	sp, sp, #40
 3724              	.LCFI89:
 3725              		.cfi_def_cfa_offset 48
 3726 0004 00AF     		add	r7, sp, #0
 3727              	.LCFI90:
 3728              		.cfi_def_cfa_register 7
 3729 0006 3A60     		str	r2, [r7, #0]
 3730 0008 0246     		mov	r2, r0
 3731 000a FA71     		strb	r2, [r7, #7]
 3732 000c 0A46     		mov	r2, r1
 3733 000e BA71     		strb	r2, [r7, #6]
 3734 0010 7B71     		strb	r3, [r7, #5]
 906:../LSM9DS1_Driver.c **** 		USIC_CH_TypeDef* I2CRegs = I2C001_Handle0.I2CRegs;
 3735              		.loc 1 906 0
 3736 0012 40F20003 		movw	r3, #:lower16:I2C001_Handle0
 3737 0016 C0F20003 		movt	r3, #:upper16:I2C001_Handle0
 3738 001a 5B68     		ldr	r3, [r3, #4]
 3739 001c 7B62     		str	r3, [r7, #36]
 907:../LSM9DS1_Driver.c **** 
 908:../LSM9DS1_Driver.c **** 		I2C001_DataType data1;
 909:../LSM9DS1_Driver.c **** 		data1.Data1.TDF_Type = I2C_TDF_MStart;
 3740              		.loc 1 909 0
 3741 001e 4FF00403 		mov	r3, #4
 3742 0022 7B77     		strb	r3, [r7, #29]
 910:../LSM9DS1_Driver.c **** 		data1.Data1.Data = ((address<<1) | I2C_WRITE);
 3743              		.loc 1 910 0
 3744 0024 FB79     		ldrb	r3, [r7, #7]
 3745 0026 4FEA4303 		lsl	r3, r3, #1
 3746 002a DBB2     		uxtb	r3, r3
 3747 002c 3B77     		strb	r3, [r7, #28]
 911:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data1))
 3748              		.loc 1 911 0
 3749 002e 07E0     		b	.L130
 3750              	.L131:
 912:../LSM9DS1_Driver.c **** 		{
 913:../LSM9DS1_Driver.c **** 			USIC_FlushTxFIFO(I2CRegs);
 3751              		.loc 1 913 0
 3752 0030 7B6A     		ldr	r3, [r7, #36]
 3753 0032 D3F81831 		ldr	r3, [r3, #280]
 3754 0036 43F40042 		orr	r2, r3, #32768
 3755 003a 7B6A     		ldr	r3, [r7, #36]
 3756 003c C3F81821 		str	r2, [r3, #280]
 3757              	.L130:
 911:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data1))
 3758              		.loc 1 911 0 discriminator 1
 3759 0040 07F11C03 		add	r3, r7, #28
 3760 0044 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 3761 0048 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 3762 004c 1946     		mov	r1, r3
 3763 004e FFF7FEFF 		bl	I2C001_WriteData
 3764 0052 0346     		mov	r3, r0
 3765 0054 002B     		cmp	r3, #0
 3766 0056 EBD0     		beq	.L131
 914:../LSM9DS1_Driver.c **** 		}
 915:../LSM9DS1_Driver.c **** 		delay(10000);
 3767              		.loc 1 915 0
 3768 0058 42F21070 		movw	r0, #10000
 3769 005c FFF7FEFF 		bl	delay
 916:../LSM9DS1_Driver.c **** 
 917:../LSM9DS1_Driver.c **** 		I2C001_DataType data2;
 918:../LSM9DS1_Driver.c **** 		data2.Data1.TDF_Type = I2C_TDF_MTxData;
 3770              		.loc 1 918 0
 3771 0060 4FF00003 		mov	r3, #0
 3772 0064 7B76     		strb	r3, [r7, #25]
 919:../LSM9DS1_Driver.c **** 		data2.Data1.Data = (subAddress);
 3773              		.loc 1 919 0
 3774 0066 BB79     		ldrb	r3, [r7, #6]
 3775 0068 3B76     		strb	r3, [r7, #24]
 920:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data2))
 3776              		.loc 1 920 0
 3777 006a 07E0     		b	.L132
 3778              	.L133:
 921:../LSM9DS1_Driver.c **** 		{
 922:../LSM9DS1_Driver.c **** 			USIC_FlushTxFIFO(I2CRegs);
 3779              		.loc 1 922 0
 3780 006c 7B6A     		ldr	r3, [r7, #36]
 3781 006e D3F81831 		ldr	r3, [r3, #280]
 3782 0072 43F40042 		orr	r2, r3, #32768
 3783 0076 7B6A     		ldr	r3, [r7, #36]
 3784 0078 C3F81821 		str	r2, [r3, #280]
 3785              	.L132:
 920:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data2))
 3786              		.loc 1 920 0 discriminator 1
 3787 007c 07F11803 		add	r3, r7, #24
 3788 0080 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 3789 0084 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 3790 0088 1946     		mov	r1, r3
 3791 008a FFF7FEFF 		bl	I2C001_WriteData
 3792 008e 0346     		mov	r3, r0
 3793 0090 002B     		cmp	r3, #0
 3794 0092 EBD0     		beq	.L133
 923:../LSM9DS1_Driver.c **** 		}
 924:../LSM9DS1_Driver.c **** 		delay(10000);
 3795              		.loc 1 924 0
 3796 0094 42F21070 		movw	r0, #10000
 3797 0098 FFF7FEFF 		bl	delay
 925:../LSM9DS1_Driver.c **** 
 926:../LSM9DS1_Driver.c **** 		I2C001_DataType data3;
 927:../LSM9DS1_Driver.c **** 		data3.Data1.TDF_Type = I2C_TDF_MRStart;
 3798              		.loc 1 927 0
 3799 009c 4FF00503 		mov	r3, #5
 3800 00a0 7B75     		strb	r3, [r7, #21]
 928:../LSM9DS1_Driver.c **** 		data3.Data1.Data = ((address<<1) | I2C_READ);
 3801              		.loc 1 928 0
 3802 00a2 FB79     		ldrb	r3, [r7, #7]
 3803 00a4 4FEA4303 		lsl	r3, r3, #1
 3804 00a8 DBB2     		uxtb	r3, r3
 3805 00aa 43F00103 		orr	r3, r3, #1
 3806 00ae DBB2     		uxtb	r3, r3
 3807 00b0 3B75     		strb	r3, [r7, #20]
 929:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data3))
 3808              		.loc 1 929 0
 3809 00b2 07E0     		b	.L134
 3810              	.L135:
 930:../LSM9DS1_Driver.c **** 		{
 931:../LSM9DS1_Driver.c **** 			USIC_FlushTxFIFO(I2CRegs);
 3811              		.loc 1 931 0
 3812 00b4 7B6A     		ldr	r3, [r7, #36]
 3813 00b6 D3F81831 		ldr	r3, [r3, #280]
 3814 00ba 43F40042 		orr	r2, r3, #32768
 3815 00be 7B6A     		ldr	r3, [r7, #36]
 3816 00c0 C3F81821 		str	r2, [r3, #280]
 3817              	.L134:
 929:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data3))
 3818              		.loc 1 929 0 discriminator 1
 3819 00c4 07F11403 		add	r3, r7, #20
 3820 00c8 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 3821 00cc C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 3822 00d0 1946     		mov	r1, r3
 3823 00d2 FFF7FEFF 		bl	I2C001_WriteData
 3824 00d6 0346     		mov	r3, r0
 3825 00d8 002B     		cmp	r3, #0
 3826 00da EBD0     		beq	.L135
 932:../LSM9DS1_Driver.c **** 		}
 933:../LSM9DS1_Driver.c **** 		delay(10000);
 3827              		.loc 1 933 0
 3828 00dc 42F21070 		movw	r0, #10000
 3829 00e0 FFF7FEFF 		bl	delay
 934:../LSM9DS1_Driver.c **** 
 935:../LSM9DS1_Driver.c **** 		I2C001_DataType data4;
 936:../LSM9DS1_Driver.c **** 		data4.Data1.TDF_Type = I2C_TDF_MRxAck1;
 3830              		.loc 1 936 0
 3831 00e4 4FF00303 		mov	r3, #3
 3832 00e8 7B74     		strb	r3, [r7, #17]
 937:../LSM9DS1_Driver.c **** 		data4.Data1.Data = ubyteFF;
 3833              		.loc 1 937 0
 3834 00ea 4FF0FF03 		mov	r3, #255
 3835 00ee 3B74     		strb	r3, [r7, #16]
 938:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data4))
 3836              		.loc 1 938 0
 3837 00f0 07E0     		b	.L136
 3838              	.L137:
 939:../LSM9DS1_Driver.c **** 		{
 940:../LSM9DS1_Driver.c **** 			USIC_FlushTxFIFO(I2CRegs);
 3839              		.loc 1 940 0
 3840 00f2 7B6A     		ldr	r3, [r7, #36]
 3841 00f4 D3F81831 		ldr	r3, [r3, #280]
 3842 00f8 43F40042 		orr	r2, r3, #32768
 3843 00fc 7B6A     		ldr	r3, [r7, #36]
 3844 00fe C3F81821 		str	r2, [r3, #280]
 3845              	.L136:
 938:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data4))
 3846              		.loc 1 938 0 discriminator 1
 3847 0102 07F11003 		add	r3, r7, #16
 3848 0106 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 3849 010a C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 3850 010e 1946     		mov	r1, r3
 3851 0110 FFF7FEFF 		bl	I2C001_WriteData
 3852 0114 0346     		mov	r3, r0
 3853 0116 002B     		cmp	r3, #0
 3854 0118 EBD0     		beq	.L137
 941:../LSM9DS1_Driver.c **** 		}
 942:../LSM9DS1_Driver.c **** 		delay(10000);
 3855              		.loc 1 942 0
 3856 011a 42F21070 		movw	r0, #10000
 3857 011e FFF7FEFF 		bl	delay
 943:../LSM9DS1_Driver.c **** 
 944:../LSM9DS1_Driver.c **** 		I2C001_DataType data5;
 945:../LSM9DS1_Driver.c **** 		data5.Data1.TDF_Type = I2C_TDF_MStop;
 3858              		.loc 1 945 0
 3859 0122 4FF00603 		mov	r3, #6
 3860 0126 7B73     		strb	r3, [r7, #13]
 946:../LSM9DS1_Driver.c **** 		data5.Data1.Data = ubyteFF;
 3861              		.loc 1 946 0
 3862 0128 4FF0FF03 		mov	r3, #255
 3863 012c 3B73     		strb	r3, [r7, #12]
 947:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data5))
 3864              		.loc 1 947 0
 3865 012e 07E0     		b	.L138
 3866              	.L139:
 948:../LSM9DS1_Driver.c **** 		{
 949:../LSM9DS1_Driver.c **** 			USIC_FlushTxFIFO(I2CRegs);
 3867              		.loc 1 949 0
 3868 0130 7B6A     		ldr	r3, [r7, #36]
 3869 0132 D3F81831 		ldr	r3, [r3, #280]
 3870 0136 43F40042 		orr	r2, r3, #32768
 3871 013a 7B6A     		ldr	r3, [r7, #36]
 3872 013c C3F81821 		str	r2, [r3, #280]
 3873              	.L138:
 947:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data5))
 3874              		.loc 1 947 0 discriminator 1
 3875 0140 07F10C03 		add	r3, r7, #12
 3876 0144 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 3877 0148 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 3878 014c 1946     		mov	r1, r3
 3879 014e FFF7FEFF 		bl	I2C001_WriteData
 3880 0152 0346     		mov	r3, r0
 3881 0154 002B     		cmp	r3, #0
 3882 0156 EBD0     		beq	.L139
 950:../LSM9DS1_Driver.c **** 		}
 951:../LSM9DS1_Driver.c **** 		delay(10000);
 3883              		.loc 1 951 0
 3884 0158 42F21070 		movw	r0, #10000
 3885 015c FFF7FEFF 		bl	delay
 952:../LSM9DS1_Driver.c **** 
 953:../LSM9DS1_Driver.c **** 		int k = 0;
 3886              		.loc 1 953 0
 3887 0160 4FF00003 		mov	r3, #0
 3888 0164 3B62     		str	r3, [r7, #32]
 954:../LSM9DS1_Driver.c **** 
 955:../LSM9DS1_Driver.c **** 		uint16_t buffer = 0;
 3889              		.loc 1 955 0
 3890 0166 4FF00003 		mov	r3, #0
 3891 016a 7B81     		strh	r3, [r7, #10]	@ movhi
 956:../LSM9DS1_Driver.c **** 		if(I2C001_ReadData(&I2C001_Handle0,&buffer))
 3892              		.loc 1 956 0
 3893 016c 07F10A03 		add	r3, r7, #10
 3894 0170 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 3895 0174 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 3896 0178 1946     		mov	r1, r3
 3897 017a FFF7FEFF 		bl	I2C001_ReadData
 3898 017e 0346     		mov	r3, r0
 3899 0180 002B     		cmp	r3, #0
 3900 0182 04D0     		beq	.L140
 957:../LSM9DS1_Driver.c **** 		{
 958:../LSM9DS1_Driver.c **** 			k++;
 3901              		.loc 1 958 0
 3902 0184 3B6A     		ldr	r3, [r7, #32]
 3903 0186 03F10103 		add	r3, r3, #1
 3904 018a 3B62     		str	r3, [r7, #32]
 3905 018c 03E0     		b	.L141
 3906              	.L140:
 959:../LSM9DS1_Driver.c **** 		}
 960:../LSM9DS1_Driver.c **** 		else
 961:../LSM9DS1_Driver.c **** 		{
 962:../LSM9DS1_Driver.c **** 			k--;
 3907              		.loc 1 962 0
 3908 018e 3B6A     		ldr	r3, [r7, #32]
 3909 0190 03F1FF33 		add	r3, r3, #-1
 3910 0194 3B62     		str	r3, [r7, #32]
 3911              	.L141:
 963:../LSM9DS1_Driver.c **** 		}
 964:../LSM9DS1_Driver.c **** 		delay(10000);
 3912              		.loc 1 964 0
 3913 0196 42F21070 		movw	r0, #10000
 3914 019a FFF7FEFF 		bl	delay
 965:../LSM9DS1_Driver.c **** 		return (uint8_t)buffer;
 3915              		.loc 1 965 0
 3916 019e 7B89     		ldrh	r3, [r7, #10]
 3917 01a0 DBB2     		uxtb	r3, r3
 966:../LSM9DS1_Driver.c **** }
 3918              		.loc 1 966 0
 3919 01a2 1846     		mov	r0, r3
 3920 01a4 07F12807 		add	r7, r7, #40
 3921 01a8 BD46     		mov	sp, r7
 3922 01aa 80BD     		pop	{r7, pc}
 3923              		.cfi_endproc
 3924              	.LFE145:
 3926              		.section	.text.magAvailable,"ax",%progbits
 3927              		.align	2
 3928              		.global	magAvailable
 3929              		.thumb
 3930              		.thumb_func
 3932              	magAvailable:
 3933              	.LFB146:
 967:../LSM9DS1_Driver.c **** 
 968:../LSM9DS1_Driver.c **** uint8_t magAvailable(lsm9ds1_axis axis)
 969:../LSM9DS1_Driver.c **** {
 3934              		.loc 1 969 0
 3935              		.cfi_startproc
 3936              		@ args = 0, pretend = 0, frame = 16
 3937              		@ frame_needed = 1, uses_anonymous_args = 0
 3938 0000 80B5     		push	{r7, lr}
 3939              	.LCFI91:
 3940              		.cfi_def_cfa_offset 8
 3941              		.cfi_offset 7, -8
 3942              		.cfi_offset 14, -4
 3943 0002 84B0     		sub	sp, sp, #16
 3944              	.LCFI92:
 3945              		.cfi_def_cfa_offset 24
 3946 0004 00AF     		add	r7, sp, #0
 3947              	.LCFI93:
 3948              		.cfi_def_cfa_register 7
 3949 0006 0346     		mov	r3, r0
 3950 0008 FB71     		strb	r3, [r7, #7]
 970:../LSM9DS1_Driver.c **** 	uint8_t status;
 971:../LSM9DS1_Driver.c **** 	status = mReadByte(STATUS_REG_M);
 3951              		.loc 1 971 0
 3952 000a 4FF02700 		mov	r0, #39
 3953 000e FFF7FEFF 		bl	mReadByte
 3954 0012 0346     		mov	r3, r0
 3955 0014 FB73     		strb	r3, [r7, #15]
 972:../LSM9DS1_Driver.c **** 
 973:../LSM9DS1_Driver.c **** 	return ((status & (1<<axis)) >> axis);
 3956              		.loc 1 973 0
 3957 0016 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 3958 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3959 001a 4FF00101 		mov	r1, #1
 3960 001e 01FA03F3 		lsl	r3, r1, r3
 3961 0022 1A40     		ands	r2, r2, r3
 3962 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3963 0026 42FA03F3 		asr	r3, r2, r3
 3964 002a DBB2     		uxtb	r3, r3
 974:../LSM9DS1_Driver.c **** }
 3965              		.loc 1 974 0
 3966 002c 1846     		mov	r0, r3
 3967 002e 07F11007 		add	r7, r7, #16
 3968 0032 BD46     		mov	sp, r7
 3969 0034 80BD     		pop	{r7, pc}
 3970              		.cfi_endproc
 3971              	.LFE146:
 3973 0036 00BF     		.section	.text.readMag1,"ax",%progbits
 3974              		.align	2
 3975              		.global	readMag1
 3976              		.thumb
 3977              		.thumb_func
 3979              	readMag1:
 3980              	.LFB147:
 975:../LSM9DS1_Driver.c **** 
 976:../LSM9DS1_Driver.c **** void readMag1(void)
 977:../LSM9DS1_Driver.c **** {
 3981              		.loc 1 977 0
 3982              		.cfi_startproc
 3983              		@ args = 0, pretend = 0, frame = 8
 3984              		@ frame_needed = 1, uses_anonymous_args = 0
 3985 0000 90B5     		push	{r4, r7, lr}
 3986              	.LCFI94:
 3987              		.cfi_def_cfa_offset 12
 3988              		.cfi_offset 4, -12
 3989              		.cfi_offset 7, -8
 3990              		.cfi_offset 14, -4
 3991 0002 83B0     		sub	sp, sp, #12
 3992              	.LCFI95:
 3993              		.cfi_def_cfa_offset 24
 3994 0004 00AF     		add	r7, sp, #0
 3995              	.LCFI96:
 3996              		.cfi_def_cfa_register 7
 978:../LSM9DS1_Driver.c **** 	//for(int kl = 0; kl < 10; kl++){
 979:../LSM9DS1_Driver.c **** 	uint8_t temp[6]; // We'll read six bytes from the mag into temp
 980:../LSM9DS1_Driver.c **** 	uint8_t subAddress = OUT_X_L_M;
 3997              		.loc 1 980 0
 3998 0006 4FF02803 		mov	r3, #40
 3999 000a BB71     		strb	r3, [r7, #6]
 981:../LSM9DS1_Driver.c **** 	uint8_t i = 0;
 4000              		.loc 1 981 0
 4001 000c 4FF00003 		mov	r3, #0
 4002 0010 FB71     		strb	r3, [r7, #7]
 982:../LSM9DS1_Driver.c **** 
 983:../LSM9DS1_Driver.c **** 	while(i < 6)
 4003              		.loc 1 983 0
 4004 0012 19E0     		b	.L146
 4005              	.L147:
 984:../LSM9DS1_Driver.c **** 	{
 985:../LSM9DS1_Driver.c **** 		temp[i] = I2CreadBytes(_mAddress, subAddress, NULL, 0);
 4006              		.loc 1 985 0
 4007 0014 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 4008 0016 40F20003 		movw	r3, #:lower16:_mAddress
 4009 001a C0F20003 		movt	r3, #:upper16:_mAddress
 4010 001e 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 4011 0020 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4012 0022 1046     		mov	r0, r2
 4013 0024 1946     		mov	r1, r3
 4014 0026 4FF00002 		mov	r2, #0
 4015 002a 4FF00003 		mov	r3, #0
 4016 002e FFF7FEFF 		bl	I2CreadBytes
 4017 0032 0346     		mov	r3, r0
 4018 0034 1A46     		mov	r2, r3
 4019 0036 07F10801 		add	r1, r7, #8
 4020 003a 0B19     		adds	r3, r1, r4
 4021 003c 03F8082C 		strb	r2, [r3, #-8]
 986:../LSM9DS1_Driver.c **** 		i++;
 4022              		.loc 1 986 0
 4023 0040 FB79     		ldrb	r3, [r7, #7]
 4024 0042 03F10103 		add	r3, r3, #1
 4025 0046 FB71     		strb	r3, [r7, #7]
 4026              	.L146:
 983:../LSM9DS1_Driver.c **** 	while(i < 6)
 4027              		.loc 1 983 0 discriminator 1
 4028 0048 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4029 004a 052B     		cmp	r3, #5
 4030 004c E2D9     		bls	.L147
 987:../LSM9DS1_Driver.c **** 	}
 988:../LSM9DS1_Driver.c **** 
 989:../LSM9DS1_Driver.c **** 	mx = (temp[1] << 8) | temp[0]; // Store x-axis values into mx
 4031              		.loc 1 989 0
 4032 004e 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 4033 0050 4FEA0323 		lsl	r3, r3, #8
 4034 0054 9AB2     		uxth	r2, r3
 4035 0056 3B78     		ldrb	r3, [r7, #0]	@ zero_extendqisi2
 4036 0058 1343     		orrs	r3, r3, r2
 4037 005a 9AB2     		uxth	r2, r3
 4038 005c 40F20003 		movw	r3, #:lower16:mx
 4039 0060 C0F20003 		movt	r3, #:upper16:mx
 4040 0064 1A80     		strh	r2, [r3, #0]	@ movhi
 990:../LSM9DS1_Driver.c **** 	my = (temp[3] << 8) | temp[2]; // Store y-axis values into my
 4041              		.loc 1 990 0
 4042 0066 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4043 0068 4FEA0323 		lsl	r3, r3, #8
 4044 006c 9AB2     		uxth	r2, r3
 4045 006e BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 4046 0070 1343     		orrs	r3, r3, r2
 4047 0072 9AB2     		uxth	r2, r3
 4048 0074 40F20003 		movw	r3, #:lower16:my
 4049 0078 C0F20003 		movt	r3, #:upper16:my
 4050 007c 1A80     		strh	r2, [r3, #0]	@ movhi
 991:../LSM9DS1_Driver.c **** 	mz = (temp[5] << 8) | temp[4]; // Store z-axis values into mz
 4051              		.loc 1 991 0
 4052 007e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4053 0080 4FEA0323 		lsl	r3, r3, #8
 4054 0084 9AB2     		uxth	r2, r3
 4055 0086 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 4056 0088 1343     		orrs	r3, r3, r2
 4057 008a 9AB2     		uxth	r2, r3
 4058 008c 40F20003 		movw	r3, #:lower16:mz
 4059 0090 C0F20003 		movt	r3, #:upper16:mz
 4060 0094 1A80     		strh	r2, [r3, #0]	@ movhi
 992:../LSM9DS1_Driver.c **** 
 993:../LSM9DS1_Driver.c **** 	/*mx = calcMag(mx);
 994:../LSM9DS1_Driver.c **** 	my = calcMag(my);
 995:../LSM9DS1_Driver.c **** 	mz = calcMag(mz);*?
 996:../LSM9DS1_Driver.c **** 	/*}*/
 997:../LSM9DS1_Driver.c **** 
 998:../LSM9DS1_Driver.c **** 
 999:../LSM9DS1_Driver.c **** }
 4061              		.loc 1 999 0
 4062 0096 07F10C07 		add	r7, r7, #12
 4063 009a BD46     		mov	sp, r7
 4064 009c 90BD     		pop	{r4, r7, pc}
 4065              		.cfi_endproc
 4066              	.LFE147:
 4068 009e 00BF     		.section	.text.calibrateMag,"ax",%progbits
 4069              		.align	2
 4070              		.global	calibrateMag
 4071              		.thumb
 4072              		.thumb_func
 4074              	calibrateMag:
 4075              	.LFB148:
1000:../LSM9DS1_Driver.c **** 
1001:../LSM9DS1_Driver.c **** 
1002:../LSM9DS1_Driver.c **** void calibrateMag(bool loadIn)
1003:../LSM9DS1_Driver.c **** {
 4076              		.loc 1 1003 0
 4077              		.cfi_startproc
 4078              		@ args = 0, pretend = 0, frame = 40
 4079              		@ frame_needed = 1, uses_anonymous_args = 0
 4080 0000 80B5     		push	{r7, lr}
 4081              	.LCFI97:
 4082              		.cfi_def_cfa_offset 8
 4083              		.cfi_offset 7, -8
 4084              		.cfi_offset 14, -4
 4085 0002 8AB0     		sub	sp, sp, #40
 4086              	.LCFI98:
 4087              		.cfi_def_cfa_offset 48
 4088 0004 00AF     		add	r7, sp, #0
 4089              	.LCFI99:
 4090              		.cfi_def_cfa_register 7
 4091 0006 0346     		mov	r3, r0
 4092 0008 FB71     		strb	r3, [r7, #7]
1004:../LSM9DS1_Driver.c **** 	int i, j;
1005:../LSM9DS1_Driver.c **** 	int16_t magMin[3] = {0, 0, 0};
 4093              		.loc 1 1005 0
 4094 000a 4FF00003 		mov	r3, #0
 4095 000e 3B83     		strh	r3, [r7, #24]	@ movhi
 4096 0010 4FF00003 		mov	r3, #0
 4097 0014 7B83     		strh	r3, [r7, #26]	@ movhi
 4098 0016 4FF00003 		mov	r3, #0
 4099 001a BB83     		strh	r3, [r7, #28]	@ movhi
1006:../LSM9DS1_Driver.c **** 	int16_t magMax[3] = {0, 0, 0}; // The road warrior
 4100              		.loc 1 1006 0
 4101 001c 4FF00003 		mov	r3, #0
 4102 0020 3B82     		strh	r3, [r7, #16]	@ movhi
 4103 0022 4FF00003 		mov	r3, #0
 4104 0026 7B82     		strh	r3, [r7, #18]	@ movhi
 4105 0028 4FF00003 		mov	r3, #0
 4106 002c BB82     		strh	r3, [r7, #20]	@ movhi
1007:../LSM9DS1_Driver.c **** 
1008:../LSM9DS1_Driver.c **** 	for (i=0; i<128; i++)
 4107              		.loc 1 1008 0
 4108 002e 4FF00003 		mov	r3, #0
 4109 0032 7B62     		str	r3, [r7, #36]
 4110 0034 7CE0     		b	.L149
 4111              	.L159:
 4112              	.LBB6:
1009:../LSM9DS1_Driver.c **** 	{
1010:../LSM9DS1_Driver.c **** 		//tu nie wiem
1011:../LSM9DS1_Driver.c **** 		while (!magAvailable(i))
 4113              		.loc 1 1011 0
 4114 0036 00BF     		nop
 4115              	.L150:
 4116              		.loc 1 1011 0 is_stmt 0 discriminator 1
 4117 0038 7B6A     		ldr	r3, [r7, #36]
 4118 003a DBB2     		uxtb	r3, r3
 4119 003c 1846     		mov	r0, r3
 4120 003e FFF7FEFF 		bl	magAvailable
 4121 0042 0346     		mov	r3, r0
 4122 0044 002B     		cmp	r3, #0
 4123 0046 F7D0     		beq	.L150
1012:../LSM9DS1_Driver.c **** 			;
1013:../LSM9DS1_Driver.c **** 		readMag1();
 4124              		.loc 1 1013 0 is_stmt 1
 4125 0048 FFF7FEFF 		bl	readMag1
1014:../LSM9DS1_Driver.c **** 		int16_t magTemp[3] = {0, 0, 0};
 4126              		.loc 1 1014 0
 4127 004c 4FF00003 		mov	r3, #0
 4128 0050 3B81     		strh	r3, [r7, #8]	@ movhi
 4129 0052 4FF00003 		mov	r3, #0
 4130 0056 7B81     		strh	r3, [r7, #10]	@ movhi
 4131 0058 4FF00003 		mov	r3, #0
 4132 005c BB81     		strh	r3, [r7, #12]	@ movhi
1015:../LSM9DS1_Driver.c **** 		magTemp[0] = mx;
 4133              		.loc 1 1015 0
 4134 005e 40F20003 		movw	r3, #:lower16:mx
 4135 0062 C0F20003 		movt	r3, #:upper16:mx
 4136 0066 1B88     		ldrh	r3, [r3, #0]
 4137 0068 3B81     		strh	r3, [r7, #8]	@ movhi
1016:../LSM9DS1_Driver.c **** 		magTemp[1] = my;
 4138              		.loc 1 1016 0
 4139 006a 40F20003 		movw	r3, #:lower16:my
 4140 006e C0F20003 		movt	r3, #:upper16:my
 4141 0072 1B88     		ldrh	r3, [r3, #0]
 4142 0074 7B81     		strh	r3, [r7, #10]	@ movhi
1017:../LSM9DS1_Driver.c **** 		magTemp[2] = mz;
 4143              		.loc 1 1017 0
 4144 0076 40F20003 		movw	r3, #:lower16:mz
 4145 007a C0F20003 		movt	r3, #:upper16:mz
 4146 007e 1B88     		ldrh	r3, [r3, #0]
 4147 0080 BB81     		strh	r3, [r7, #12]	@ movhi
1018:../LSM9DS1_Driver.c **** 		for (j = 0; j < 3; j++)
 4148              		.loc 1 1018 0
 4149 0082 4FF00003 		mov	r3, #0
 4150 0086 3B62     		str	r3, [r7, #32]
 4151 0088 4BE0     		b	.L151
 4152              	.L154:
1019:../LSM9DS1_Driver.c **** 		{
1020:../LSM9DS1_Driver.c **** 			if (magTemp[j] > magMax[j]) magMax[j] = magTemp[j];
 4153              		.loc 1 1020 0
 4154 008a 3B6A     		ldr	r3, [r7, #32]
 4155 008c 4FEA4303 		lsl	r3, r3, #1
 4156 0090 07F12801 		add	r1, r7, #40
 4157 0094 CB18     		adds	r3, r1, r3
 4158 0096 33F8202C 		ldrh	r2, [r3, #-32]
 4159 009a 3B6A     		ldr	r3, [r7, #32]
 4160 009c 4FEA4303 		lsl	r3, r3, #1
 4161 00a0 07F12801 		add	r1, r7, #40
 4162 00a4 CB18     		adds	r3, r1, r3
 4163 00a6 33F8183C 		ldrh	r3, [r3, #-24]
 4164 00aa 12B2     		sxth	r2, r2
 4165 00ac 1BB2     		sxth	r3, r3
 4166 00ae 9A42     		cmp	r2, r3
 4167 00b0 0FDD     		ble	.L152
 4168              		.loc 1 1020 0 is_stmt 0 discriminator 1
 4169 00b2 3B6A     		ldr	r3, [r7, #32]
 4170 00b4 4FEA4303 		lsl	r3, r3, #1
 4171 00b8 07F12802 		add	r2, r7, #40
 4172 00bc D318     		adds	r3, r2, r3
 4173 00be 33F8202C 		ldrh	r2, [r3, #-32]
 4174 00c2 3B6A     		ldr	r3, [r7, #32]
 4175 00c4 4FEA4303 		lsl	r3, r3, #1
 4176 00c8 07F12801 		add	r1, r7, #40
 4177 00cc CB18     		adds	r3, r1, r3
 4178 00ce 23F8182C 		strh	r2, [r3, #-24]	@ movhi
 4179              	.L152:
1021:../LSM9DS1_Driver.c **** 			if (magTemp[j] < magMin[j]) magMin[j] = magTemp[j];
 4180              		.loc 1 1021 0 is_stmt 1
 4181 00d2 3B6A     		ldr	r3, [r7, #32]
 4182 00d4 4FEA4303 		lsl	r3, r3, #1
 4183 00d8 07F12802 		add	r2, r7, #40
 4184 00dc D318     		adds	r3, r2, r3
 4185 00de 33F8202C 		ldrh	r2, [r3, #-32]
 4186 00e2 3B6A     		ldr	r3, [r7, #32]
 4187 00e4 4FEA4303 		lsl	r3, r3, #1
 4188 00e8 07F12801 		add	r1, r7, #40
 4189 00ec CB18     		adds	r3, r1, r3
 4190 00ee 33F8103C 		ldrh	r3, [r3, #-16]
 4191 00f2 12B2     		sxth	r2, r2
 4192 00f4 1BB2     		sxth	r3, r3
 4193 00f6 9A42     		cmp	r2, r3
 4194 00f8 0FDA     		bge	.L153
 4195              		.loc 1 1021 0 is_stmt 0 discriminator 1
 4196 00fa 3B6A     		ldr	r3, [r7, #32]
 4197 00fc 4FEA4303 		lsl	r3, r3, #1
 4198 0100 07F12802 		add	r2, r7, #40
 4199 0104 D318     		adds	r3, r2, r3
 4200 0106 33F8202C 		ldrh	r2, [r3, #-32]
 4201 010a 3B6A     		ldr	r3, [r7, #32]
 4202 010c 4FEA4303 		lsl	r3, r3, #1
 4203 0110 07F12801 		add	r1, r7, #40
 4204 0114 CB18     		adds	r3, r1, r3
 4205 0116 23F8102C 		strh	r2, [r3, #-16]	@ movhi
 4206              	.L153:
1018:../LSM9DS1_Driver.c **** 		for (j = 0; j < 3; j++)
 4207              		.loc 1 1018 0 is_stmt 1
 4208 011a 3B6A     		ldr	r3, [r7, #32]
 4209 011c 03F10103 		add	r3, r3, #1
 4210 0120 3B62     		str	r3, [r7, #32]
 4211              	.L151:
1018:../LSM9DS1_Driver.c **** 		for (j = 0; j < 3; j++)
 4212              		.loc 1 1018 0 is_stmt 0 discriminator 1
 4213 0122 3B6A     		ldr	r3, [r7, #32]
 4214 0124 022B     		cmp	r3, #2
 4215 0126 B0DD     		ble	.L154
 4216              	.LBE6:
1008:../LSM9DS1_Driver.c **** 	for (i=0; i<128; i++)
 4217              		.loc 1 1008 0 is_stmt 1
 4218 0128 7B6A     		ldr	r3, [r7, #36]
 4219 012a 03F10103 		add	r3, r3, #1
 4220 012e 7B62     		str	r3, [r7, #36]
 4221              	.L149:
1008:../LSM9DS1_Driver.c **** 	for (i=0; i<128; i++)
 4222              		.loc 1 1008 0 is_stmt 0 discriminator 1
 4223 0130 7B6A     		ldr	r3, [r7, #36]
 4224 0132 7F2B     		cmp	r3, #127
 4225 0134 7FF77FAF 		ble	.L159
1022:../LSM9DS1_Driver.c **** 		}
1023:../LSM9DS1_Driver.c **** 	}
1024:../LSM9DS1_Driver.c **** 	for (j = 0; j < 3; j++)
 4226              		.loc 1 1024 0 is_stmt 1
 4227 0138 4FF00003 		mov	r3, #0
 4228 013c 3B62     		str	r3, [r7, #32]
 4229 013e 49E0     		b	.L156
 4230              	.L158:
1025:../LSM9DS1_Driver.c **** 	{
1026:../LSM9DS1_Driver.c **** 		mBiasRaw[j] = (magMax[j] + magMin[j]) / 2;
 4231              		.loc 1 1026 0
 4232 0140 3B6A     		ldr	r3, [r7, #32]
 4233 0142 4FEA4303 		lsl	r3, r3, #1
 4234 0146 07F12802 		add	r2, r7, #40
 4235 014a D318     		adds	r3, r2, r3
 4236 014c 33F8183C 		ldrh	r3, [r3, #-24]
 4237 0150 1AB2     		sxth	r2, r3
 4238 0152 3B6A     		ldr	r3, [r7, #32]
 4239 0154 4FEA4303 		lsl	r3, r3, #1
 4240 0158 07F12801 		add	r1, r7, #40
 4241 015c CB18     		adds	r3, r1, r3
 4242 015e 33F8103C 		ldrh	r3, [r3, #-16]
 4243 0162 1BB2     		sxth	r3, r3
 4244 0164 D318     		adds	r3, r2, r3
 4245 0166 4FEAD372 		lsr	r2, r3, #31
 4246 016a D318     		adds	r3, r2, r3
 4247 016c 4FEA6303 		asr	r3, r3, #1
 4248 0170 99B2     		uxth	r1, r3
 4249 0172 40F20003 		movw	r3, #:lower16:mBiasRaw
 4250 0176 C0F20003 		movt	r3, #:upper16:mBiasRaw
 4251 017a 3A6A     		ldr	r2, [r7, #32]
 4252 017c 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
1027:../LSM9DS1_Driver.c **** 		mBias[j] = calcMag(mBiasRaw[j]);
 4253              		.loc 1 1027 0
 4254 0180 40F20003 		movw	r3, #:lower16:mBiasRaw
 4255 0184 C0F20003 		movt	r3, #:upper16:mBiasRaw
 4256 0188 3A6A     		ldr	r2, [r7, #32]
 4257 018a 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 4258 018e 1BB2     		sxth	r3, r3
 4259 0190 1846     		mov	r0, r3
 4260 0192 FFF7FEFF 		bl	calcMag
 4261 0196 0246     		mov	r2, r0	@ float
 4262 0198 40F20003 		movw	r3, #:lower16:mBias
 4263 019c C0F20003 		movt	r3, #:upper16:mBias
 4264 01a0 396A     		ldr	r1, [r7, #32]
 4265 01a2 4FEA8101 		lsl	r1, r1, #2
 4266 01a6 5B18     		adds	r3, r3, r1
 4267 01a8 1A60     		str	r2, [r3, #0]	@ float
1028:../LSM9DS1_Driver.c **** 		if (loadIn)
 4268              		.loc 1 1028 0
 4269 01aa FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4270 01ac 002B     		cmp	r3, #0
 4271 01ae 0DD0     		beq	.L157
1029:../LSM9DS1_Driver.c **** 			magOffset(j, mBiasRaw[j]);
 4272              		.loc 1 1029 0
 4273 01b0 3B6A     		ldr	r3, [r7, #32]
 4274 01b2 DAB2     		uxtb	r2, r3
 4275 01b4 40F20003 		movw	r3, #:lower16:mBiasRaw
 4276 01b8 C0F20003 		movt	r3, #:upper16:mBiasRaw
 4277 01bc 396A     		ldr	r1, [r7, #32]
 4278 01be 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 4279 01c2 1BB2     		sxth	r3, r3
 4280 01c4 1046     		mov	r0, r2
 4281 01c6 1946     		mov	r1, r3
 4282 01c8 FFF7FEFF 		bl	magOffset
 4283              	.L157:
1024:../LSM9DS1_Driver.c **** 	for (j = 0; j < 3; j++)
 4284              		.loc 1 1024 0
 4285 01cc 3B6A     		ldr	r3, [r7, #32]
 4286 01ce 03F10103 		add	r3, r3, #1
 4287 01d2 3B62     		str	r3, [r7, #32]
 4288              	.L156:
1024:../LSM9DS1_Driver.c **** 	for (j = 0; j < 3; j++)
 4289              		.loc 1 1024 0 is_stmt 0 discriminator 1
 4290 01d4 3B6A     		ldr	r3, [r7, #32]
 4291 01d6 022B     		cmp	r3, #2
 4292 01d8 B2DD     		ble	.L158
1030:../LSM9DS1_Driver.c **** 	}
1031:../LSM9DS1_Driver.c **** }
 4293              		.loc 1 1031 0 is_stmt 1
 4294 01da 07F12807 		add	r7, r7, #40
 4295 01de BD46     		mov	sp, r7
 4296 01e0 80BD     		pop	{r7, pc}
 4297              		.cfi_endproc
 4298              	.LFE148:
 4300              		.global	__aeabi_d2f
 4301 01e2 00BF     		.section	.text.calcMag,"ax",%progbits
 4302              		.align	2
 4303              		.global	calcMag
 4304              		.thumb
 4305              		.thumb_func
 4307              	calcMag:
 4308              	.LFB149:
1032:../LSM9DS1_Driver.c **** 
1033:../LSM9DS1_Driver.c **** float calcMag(int16_t mag)
1034:../LSM9DS1_Driver.c **** {
 4309              		.loc 1 1034 0
 4310              		.cfi_startproc
 4311              		@ args = 0, pretend = 0, frame = 8
 4312              		@ frame_needed = 1, uses_anonymous_args = 0
 4313 0000 80B5     		push	{r7, lr}
 4314              	.LCFI100:
 4315              		.cfi_def_cfa_offset 8
 4316              		.cfi_offset 7, -8
 4317              		.cfi_offset 14, -4
 4318 0002 82B0     		sub	sp, sp, #8
 4319              	.LCFI101:
 4320              		.cfi_def_cfa_offset 16
 4321 0004 00AF     		add	r7, sp, #0
 4322              	.LCFI102:
 4323              		.cfi_def_cfa_register 7
 4324 0006 0346     		mov	r3, r0
 4325 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1035:../LSM9DS1_Driver.c **** 	// Return the mag raw reading times our pre-calculated Gs / (ADC tick):
1036:../LSM9DS1_Driver.c **** 	return ceil(mRes * mag);
 4326              		.loc 1 1036 0
 4327 000a B7F90630 		ldrsh	r3, [r7, #6]
 4328 000e 07EE903A 		fmsr	s15, r3	@ int
 4329 0012 B8EEE77A 		fsitos	s14, s15
 4330 0016 40F20003 		movw	r3, #:lower16:mRes
 4331 001a C0F20003 		movt	r3, #:upper16:mRes
 4332 001e D3ED007A 		flds	s15, [r3, #0]
 4333 0022 67EE277A 		fmuls	s15, s14, s15
 4334 0026 17EE900A 		fmrs	r0, s15
 4335 002a FFF7FEFF 		bl	__aeabi_f2d
 4336 002e 0246     		mov	r2, r0
 4337 0030 0B46     		mov	r3, r1
 4338 0032 1046     		mov	r0, r2
 4339 0034 1946     		mov	r1, r3
 4340 0036 FFF7FEFF 		bl	ceil
 4341 003a 0246     		mov	r2, r0
 4342 003c 0B46     		mov	r3, r1
 4343 003e 1046     		mov	r0, r2
 4344 0040 1946     		mov	r1, r3
 4345 0042 FFF7FEFF 		bl	__aeabi_d2f
 4346 0046 0346     		mov	r3, r0	@ float
1037:../LSM9DS1_Driver.c **** 	//return mag;
1038:../LSM9DS1_Driver.c **** }
 4347              		.loc 1 1038 0
 4348 0048 1846     		mov	r0, r3	@ float
 4349 004a 07F10807 		add	r7, r7, #8
 4350 004e BD46     		mov	sp, r7
 4351 0050 80BD     		pop	{r7, pc}
 4352              		.cfi_endproc
 4353              	.LFE149:
 4355 0052 00BF     		.section	.text.magOffset,"ax",%progbits
 4356              		.align	2
 4357              		.global	magOffset
 4358              		.thumb
 4359              		.thumb_func
 4361              	magOffset:
 4362              	.LFB150:
1039:../LSM9DS1_Driver.c **** 
1040:../LSM9DS1_Driver.c **** void magOffset(uint8_t axis, int16_t offset)
1041:../LSM9DS1_Driver.c **** {
 4363              		.loc 1 1041 0
 4364              		.cfi_startproc
 4365              		@ args = 0, pretend = 0, frame = 16
 4366              		@ frame_needed = 1, uses_anonymous_args = 0
 4367 0000 80B5     		push	{r7, lr}
 4368              	.LCFI103:
 4369              		.cfi_def_cfa_offset 8
 4370              		.cfi_offset 7, -8
 4371              		.cfi_offset 14, -4
 4372 0002 84B0     		sub	sp, sp, #16
 4373              	.LCFI104:
 4374              		.cfi_def_cfa_offset 24
 4375 0004 00AF     		add	r7, sp, #0
 4376              	.LCFI105:
 4377              		.cfi_def_cfa_register 7
 4378 0006 0246     		mov	r2, r0
 4379 0008 0B46     		mov	r3, r1
 4380 000a FA71     		strb	r2, [r7, #7]
 4381 000c BB80     		strh	r3, [r7, #4]	@ movhi
1042:../LSM9DS1_Driver.c **** 	if (axis > 2)
 4382              		.loc 1 1042 0
 4383 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4384 0010 022B     		cmp	r3, #2
 4385 0012 21D8     		bhi	.L165
 4386              	.L163:
1043:../LSM9DS1_Driver.c **** 		return;
1044:../LSM9DS1_Driver.c **** 	uint8_t msb, lsb;
1045:../LSM9DS1_Driver.c **** 	msb = (offset & 0xFF00) >> 8;
 4387              		.loc 1 1045 0
 4388 0014 B7F90430 		ldrsh	r3, [r7, #4]
 4389 0018 03F47F43 		and	r3, r3, #65280
 4390 001c 4FEA2323 		asr	r3, r3, #8
 4391 0020 FB73     		strb	r3, [r7, #15]
1046:../LSM9DS1_Driver.c **** 	lsb = offset & 0x00FF;
 4392              		.loc 1 1046 0
 4393 0022 BB88     		ldrh	r3, [r7, #4]	@ movhi
 4394 0024 BB73     		strb	r3, [r7, #14]
1047:../LSM9DS1_Driver.c **** 	mWriteByte(OFFSET_X_REG_L_M + (2 * axis), lsb);
 4395              		.loc 1 1047 0
 4396 0026 FB79     		ldrb	r3, [r7, #7]
 4397 0028 4FEA4303 		lsl	r3, r3, #1
 4398 002c DBB2     		uxtb	r3, r3
 4399 002e 03F10503 		add	r3, r3, #5
 4400 0032 DAB2     		uxtb	r2, r3
 4401 0034 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 4402 0036 1046     		mov	r0, r2
 4403 0038 1946     		mov	r1, r3
 4404 003a FFF7FEFF 		bl	mWriteByte
1048:../LSM9DS1_Driver.c **** 	mWriteByte(OFFSET_X_REG_H_M + (2 * axis), msb);
 4405              		.loc 1 1048 0
 4406 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4407 0040 03F10303 		add	r3, r3, #3
 4408 0044 DBB2     		uxtb	r3, r3
 4409 0046 4FEA4303 		lsl	r3, r3, #1
 4410 004a DAB2     		uxtb	r2, r3
 4411 004c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4412 004e 1046     		mov	r0, r2
 4413 0050 1946     		mov	r1, r3
 4414 0052 FFF7FEFF 		bl	mWriteByte
 4415 0056 00E0     		b	.L162
 4416              	.L165:
1043:../LSM9DS1_Driver.c **** 		return;
 4417              		.loc 1 1043 0
 4418 0058 00BF     		nop
 4419              	.L162:
1049:../LSM9DS1_Driver.c **** }
 4420              		.loc 1 1049 0
 4421 005a 07F11007 		add	r7, r7, #16
 4422 005e BD46     		mov	sp, r7
 4423 0060 80BD     		pop	{r7, pc}
 4424              		.cfi_endproc
 4425              	.LFE150:
 4427 0062 00BF     		.section	.text.accelAvailable,"ax",%progbits
 4428              		.align	2
 4429              		.global	accelAvailable
 4430              		.thumb
 4431              		.thumb_func
 4433              	accelAvailable:
 4434              	.LFB151:
1050:../LSM9DS1_Driver.c **** 
1051:../LSM9DS1_Driver.c **** uint8_t accelAvailable(void)
1052:../LSM9DS1_Driver.c **** {
 4435              		.loc 1 1052 0
 4436              		.cfi_startproc
 4437              		@ args = 0, pretend = 0, frame = 8
 4438              		@ frame_needed = 1, uses_anonymous_args = 0
 4439 0000 80B5     		push	{r7, lr}
 4440              	.LCFI106:
 4441              		.cfi_def_cfa_offset 8
 4442              		.cfi_offset 7, -8
 4443              		.cfi_offset 14, -4
 4444 0002 82B0     		sub	sp, sp, #8
 4445              	.LCFI107:
 4446              		.cfi_def_cfa_offset 16
 4447 0004 00AF     		add	r7, sp, #0
 4448              	.LCFI108:
 4449              		.cfi_def_cfa_register 7
1053:../LSM9DS1_Driver.c **** 	uint8_t status = xgReadByte(STATUS_REG_1);
 4450              		.loc 1 1053 0
 4451 0006 4FF02700 		mov	r0, #39
 4452 000a FFF7FEFF 		bl	xgReadByte
 4453 000e 0346     		mov	r3, r0
 4454 0010 FB71     		strb	r3, [r7, #7]
1054:../LSM9DS1_Driver.c **** 
1055:../LSM9DS1_Driver.c **** 	return (status & (1<<0));
 4455              		.loc 1 1055 0
 4456 0012 FB79     		ldrb	r3, [r7, #7]
 4457 0014 03F00103 		and	r3, r3, #1
 4458 0018 DBB2     		uxtb	r3, r3
1056:../LSM9DS1_Driver.c **** }
 4459              		.loc 1 1056 0
 4460 001a 1846     		mov	r0, r3
 4461 001c 07F10807 		add	r7, r7, #8
 4462 0020 BD46     		mov	sp, r7
 4463 0022 80BD     		pop	{r7, pc}
 4464              		.cfi_endproc
 4465              	.LFE151:
 4467              		.section	.text.gyroAvailable,"ax",%progbits
 4468              		.align	2
 4469              		.global	gyroAvailable
 4470              		.thumb
 4471              		.thumb_func
 4473              	gyroAvailable:
 4474              	.LFB152:
1057:../LSM9DS1_Driver.c **** 
1058:../LSM9DS1_Driver.c **** uint8_t gyroAvailable(void)
1059:../LSM9DS1_Driver.c **** {
 4475              		.loc 1 1059 0
 4476              		.cfi_startproc
 4477              		@ args = 0, pretend = 0, frame = 8
 4478              		@ frame_needed = 1, uses_anonymous_args = 0
 4479 0000 80B5     		push	{r7, lr}
 4480              	.LCFI109:
 4481              		.cfi_def_cfa_offset 8
 4482              		.cfi_offset 7, -8
 4483              		.cfi_offset 14, -4
 4484 0002 82B0     		sub	sp, sp, #8
 4485              	.LCFI110:
 4486              		.cfi_def_cfa_offset 16
 4487 0004 00AF     		add	r7, sp, #0
 4488              	.LCFI111:
 4489              		.cfi_def_cfa_register 7
1060:../LSM9DS1_Driver.c **** 	uint8_t status = xgReadByte(STATUS_REG_1);
 4490              		.loc 1 1060 0
 4491 0006 4FF02700 		mov	r0, #39
 4492 000a FFF7FEFF 		bl	xgReadByte
 4493 000e 0346     		mov	r3, r0
 4494 0010 FB71     		strb	r3, [r7, #7]
1061:../LSM9DS1_Driver.c **** 
1062:../LSM9DS1_Driver.c **** 	return ((status & (1<<1)) >> 1);
 4495              		.loc 1 1062 0
 4496 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4497 0014 03F00203 		and	r3, r3, #2
 4498 0018 4FEA6303 		asr	r3, r3, #1
 4499 001c DBB2     		uxtb	r3, r3
1063:../LSM9DS1_Driver.c **** }
 4500              		.loc 1 1063 0
 4501 001e 1846     		mov	r0, r3
 4502 0020 07F10807 		add	r7, r7, #8
 4503 0024 BD46     		mov	sp, r7
 4504 0026 80BD     		pop	{r7, pc}
 4505              		.cfi_endproc
 4506              	.LFE152:
 4508              		.section	.text.tempAvailable,"ax",%progbits
 4509              		.align	2
 4510              		.global	tempAvailable
 4511              		.thumb
 4512              		.thumb_func
 4514              	tempAvailable:
 4515              	.LFB153:
1064:../LSM9DS1_Driver.c **** 
1065:../LSM9DS1_Driver.c **** uint8_t tempAvailable(void)
1066:../LSM9DS1_Driver.c **** {
 4516              		.loc 1 1066 0
 4517              		.cfi_startproc
 4518              		@ args = 0, pretend = 0, frame = 8
 4519              		@ frame_needed = 1, uses_anonymous_args = 0
 4520 0000 80B5     		push	{r7, lr}
 4521              	.LCFI112:
 4522              		.cfi_def_cfa_offset 8
 4523              		.cfi_offset 7, -8
 4524              		.cfi_offset 14, -4
 4525 0002 82B0     		sub	sp, sp, #8
 4526              	.LCFI113:
 4527              		.cfi_def_cfa_offset 16
 4528 0004 00AF     		add	r7, sp, #0
 4529              	.LCFI114:
 4530              		.cfi_def_cfa_register 7
1067:../LSM9DS1_Driver.c **** 	uint8_t status = xgReadByte(STATUS_REG_1);
 4531              		.loc 1 1067 0
 4532 0006 4FF02700 		mov	r0, #39
 4533 000a FFF7FEFF 		bl	xgReadByte
 4534 000e 0346     		mov	r3, r0
 4535 0010 FB71     		strb	r3, [r7, #7]
1068:../LSM9DS1_Driver.c **** 
1069:../LSM9DS1_Driver.c **** 	return ((status & (1<<2)) >> 2);
 4536              		.loc 1 1069 0
 4537 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4538 0014 03F00403 		and	r3, r3, #4
 4539 0018 4FEAA303 		asr	r3, r3, #2
 4540 001c DBB2     		uxtb	r3, r3
1070:../LSM9DS1_Driver.c **** }
 4541              		.loc 1 1070 0
 4542 001e 1846     		mov	r0, r3
 4543 0020 07F10807 		add	r7, r7, #8
 4544 0024 BD46     		mov	sp, r7
 4545 0026 80BD     		pop	{r7, pc}
 4546              		.cfi_endproc
 4547              	.LFE153:
 4549              		.section	.text.readAccel,"ax",%progbits
 4550              		.align	2
 4551              		.global	readAccel
 4552              		.thumb
 4553              		.thumb_func
 4555              	readAccel:
 4556              	.LFB154:
1071:../LSM9DS1_Driver.c **** 
1072:../LSM9DS1_Driver.c **** int16_t readAccel(lsm9ds1_axis axis)
1073:../LSM9DS1_Driver.c **** {
 4557              		.loc 1 1073 0
 4558              		.cfi_startproc
 4559              		@ args = 0, pretend = 0, frame = 24
 4560              		@ frame_needed = 1, uses_anonymous_args = 0
 4561 0000 80B5     		push	{r7, lr}
 4562              	.LCFI115:
 4563              		.cfi_def_cfa_offset 8
 4564              		.cfi_offset 7, -8
 4565              		.cfi_offset 14, -4
 4566 0002 86B0     		sub	sp, sp, #24
 4567              	.LCFI116:
 4568              		.cfi_def_cfa_offset 32
 4569 0004 00AF     		add	r7, sp, #0
 4570              	.LCFI117:
 4571              		.cfi_def_cfa_register 7
 4572 0006 0346     		mov	r3, r0
 4573 0008 FB71     		strb	r3, [r7, #7]
1074:../LSM9DS1_Driver.c **** 	uint8_t temp[2];
1075:../LSM9DS1_Driver.c **** 	int16_t value;
1076:../LSM9DS1_Driver.c **** 	uint8_t subAddress = OUT_X_L_XL + (2 * axis);
 4574              		.loc 1 1076 0
 4575 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4576 000c 03F11403 		add	r3, r3, #20
 4577 0010 DBB2     		uxtb	r3, r3
 4578 0012 4FEA4303 		lsl	r3, r3, #1
 4579 0016 7B75     		strb	r3, [r7, #21]
1077:../LSM9DS1_Driver.c **** 	int i = 0;
 4580              		.loc 1 1077 0
 4581 0018 4FF00003 		mov	r3, #0
 4582 001c 3B61     		str	r3, [r7, #16]
1078:../LSM9DS1_Driver.c **** 	//xgReadBytes(OUT_X_L_XL + (2 * axis), temp, 2);
1079:../LSM9DS1_Driver.c **** 	while(i < 2)
 4583              		.loc 1 1079 0
 4584 001e 1DE0     		b	.L173
 4585              	.L174:
1080:../LSM9DS1_Driver.c **** 	{
1081:../LSM9DS1_Driver.c **** 		subAddress = subAddress + i;
 4586              		.loc 1 1081 0
 4587 0020 3B69     		ldr	r3, [r7, #16]
 4588 0022 DAB2     		uxtb	r2, r3
 4589 0024 7B7D     		ldrb	r3, [r7, #21]
 4590 0026 D318     		adds	r3, r2, r3
 4591 0028 7B75     		strb	r3, [r7, #21]
1082:../LSM9DS1_Driver.c **** 
1083:../LSM9DS1_Driver.c **** 		temp[i] = I2CreadBytes(_xgAddress, subAddress, NULL, 0);
 4592              		.loc 1 1083 0
 4593 002a 40F20003 		movw	r3, #:lower16:_xgAddress
 4594 002e C0F20003 		movt	r3, #:upper16:_xgAddress
 4595 0032 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 4596 0034 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 4597 0036 1046     		mov	r0, r2
 4598 0038 1946     		mov	r1, r3
 4599 003a 4FF00002 		mov	r2, #0
 4600 003e 4FF00003 		mov	r3, #0
 4601 0042 FFF7FEFF 		bl	I2CreadBytes
 4602 0046 0346     		mov	r3, r0
 4603 0048 1A46     		mov	r2, r3
 4604 004a 07F10C01 		add	r1, r7, #12
 4605 004e 3B69     		ldr	r3, [r7, #16]
 4606 0050 CB18     		adds	r3, r1, r3
 4607 0052 1A70     		strb	r2, [r3, #0]
1084:../LSM9DS1_Driver.c **** 
1085:../LSM9DS1_Driver.c **** 		i++;
 4608              		.loc 1 1085 0
 4609 0054 3B69     		ldr	r3, [r7, #16]
 4610 0056 03F10103 		add	r3, r3, #1
 4611 005a 3B61     		str	r3, [r7, #16]
 4612              	.L173:
1079:../LSM9DS1_Driver.c **** 	while(i < 2)
 4613              		.loc 1 1079 0 discriminator 1
 4614 005c 3B69     		ldr	r3, [r7, #16]
 4615 005e 012B     		cmp	r3, #1
 4616 0060 DEDD     		ble	.L174
1086:../LSM9DS1_Driver.c **** 	}
1087:../LSM9DS1_Driver.c **** 
1088:../LSM9DS1_Driver.c **** 	value = (temp[1] << 8) | temp[0];
 4617              		.loc 1 1088 0
 4618 0062 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 4619 0064 4FEA0323 		lsl	r3, r3, #8
 4620 0068 9AB2     		uxth	r2, r3
 4621 006a 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 4622 006c 1343     		orrs	r3, r3, r2
 4623 006e FB82     		strh	r3, [r7, #22]	@ movhi
1089:../LSM9DS1_Driver.c **** 
1090:../LSM9DS1_Driver.c **** 	if (_autoCalc)
 4624              		.loc 1 1090 0
 4625 0070 40F20003 		movw	r3, #:lower16:_autoCalc
 4626 0074 C0F20003 		movt	r3, #:upper16:_autoCalc
 4627 0078 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 4628 007a 002B     		cmp	r3, #0
 4629 007c 0BD0     		beq	.L175
1091:../LSM9DS1_Driver.c **** 		value -= aBiasRaw[axis];
 4630              		.loc 1 1091 0
 4631 007e FA8A     		ldrh	r2, [r7, #22]
 4632 0080 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 4633 0082 40F20003 		movw	r3, #:lower16:aBiasRaw
 4634 0086 C0F20003 		movt	r3, #:upper16:aBiasRaw
 4635 008a 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 4636 008e 9BB2     		uxth	r3, r3
 4637 0090 D31A     		subs	r3, r2, r3
 4638 0092 9BB2     		uxth	r3, r3
 4639 0094 FB82     		strh	r3, [r7, #22]	@ movhi
 4640              	.L175:
1092:../LSM9DS1_Driver.c **** 
1093:../LSM9DS1_Driver.c **** 	return value;
 4641              		.loc 1 1093 0
 4642 0096 FB8A     		ldrh	r3, [r7, #22]
 4643 0098 1BB2     		sxth	r3, r3
1094:../LSM9DS1_Driver.c **** }
 4644              		.loc 1 1094 0
 4645 009a 1846     		mov	r0, r3
 4646 009c 07F11807 		add	r7, r7, #24
 4647 00a0 BD46     		mov	sp, r7
 4648 00a2 80BD     		pop	{r7, pc}
 4649              		.cfi_endproc
 4650              	.LFE154:
 4652              		.section	.text.readMag,"ax",%progbits
 4653              		.align	2
 4654              		.global	readMag
 4655              		.thumb
 4656              		.thumb_func
 4658              	readMag:
 4659              	.LFB155:
1095:../LSM9DS1_Driver.c **** 
1096:../LSM9DS1_Driver.c **** int16_t readMag(lsm9ds1_axis axis)
1097:../LSM9DS1_Driver.c **** {
 4660              		.loc 1 1097 0
 4661              		.cfi_startproc
 4662              		@ args = 0, pretend = 0, frame = 24
 4663              		@ frame_needed = 1, uses_anonymous_args = 0
 4664 0000 80B5     		push	{r7, lr}
 4665              	.LCFI118:
 4666              		.cfi_def_cfa_offset 8
 4667              		.cfi_offset 7, -8
 4668              		.cfi_offset 14, -4
 4669 0002 86B0     		sub	sp, sp, #24
 4670              	.LCFI119:
 4671              		.cfi_def_cfa_offset 32
 4672 0004 00AF     		add	r7, sp, #0
 4673              	.LCFI120:
 4674              		.cfi_def_cfa_register 7
 4675 0006 0346     		mov	r3, r0
 4676 0008 FB71     		strb	r3, [r7, #7]
1098:../LSM9DS1_Driver.c **** 	uint8_t temp[2];
1099:../LSM9DS1_Driver.c **** 
1100:../LSM9DS1_Driver.c **** 	int i = 0;
 4677              		.loc 1 1100 0
 4678 000a 4FF00003 		mov	r3, #0
 4679 000e 7B61     		str	r3, [r7, #20]
1101:../LSM9DS1_Driver.c **** 	uint8_t subAddress = OUT_X_L_M + (2 * axis);
 4680              		.loc 1 1101 0
 4681 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4682 0012 03F11403 		add	r3, r3, #20
 4683 0016 DBB2     		uxtb	r3, r3
 4684 0018 4FEA4303 		lsl	r3, r3, #1
 4685 001c FB74     		strb	r3, [r7, #19]
1102:../LSM9DS1_Driver.c **** 
1103:../LSM9DS1_Driver.c **** 	while(i < 2)
 4686              		.loc 1 1103 0
 4687 001e 1DE0     		b	.L178
 4688              	.L179:
1104:../LSM9DS1_Driver.c **** 	{
1105:../LSM9DS1_Driver.c **** 		subAddress = subAddress + i;
 4689              		.loc 1 1105 0
 4690 0020 7B69     		ldr	r3, [r7, #20]
 4691 0022 DAB2     		uxtb	r2, r3
 4692 0024 FB7C     		ldrb	r3, [r7, #19]
 4693 0026 D318     		adds	r3, r2, r3
 4694 0028 FB74     		strb	r3, [r7, #19]
1106:../LSM9DS1_Driver.c **** 
1107:../LSM9DS1_Driver.c **** 		temp[i] = I2CreadBytes(_mAddress, subAddress, NULL, 0);
 4695              		.loc 1 1107 0
 4696 002a 40F20003 		movw	r3, #:lower16:_mAddress
 4697 002e C0F20003 		movt	r3, #:upper16:_mAddress
 4698 0032 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 4699 0034 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 4700 0036 1046     		mov	r0, r2
 4701 0038 1946     		mov	r1, r3
 4702 003a 4FF00002 		mov	r2, #0
 4703 003e 4FF00003 		mov	r3, #0
 4704 0042 FFF7FEFF 		bl	I2CreadBytes
 4705 0046 0346     		mov	r3, r0
 4706 0048 1A46     		mov	r2, r3
 4707 004a 07F10C01 		add	r1, r7, #12
 4708 004e 7B69     		ldr	r3, [r7, #20]
 4709 0050 CB18     		adds	r3, r1, r3
 4710 0052 1A70     		strb	r2, [r3, #0]
1108:../LSM9DS1_Driver.c **** 
1109:../LSM9DS1_Driver.c **** 		i++;
 4711              		.loc 1 1109 0
 4712 0054 7B69     		ldr	r3, [r7, #20]
 4713 0056 03F10103 		add	r3, r3, #1
 4714 005a 7B61     		str	r3, [r7, #20]
 4715              	.L178:
1103:../LSM9DS1_Driver.c **** 	while(i < 2)
 4716              		.loc 1 1103 0 discriminator 1
 4717 005c 7B69     		ldr	r3, [r7, #20]
 4718 005e 012B     		cmp	r3, #1
 4719 0060 DEDD     		ble	.L179
1110:../LSM9DS1_Driver.c **** 	}
1111:../LSM9DS1_Driver.c **** 
1112:../LSM9DS1_Driver.c **** 	int16_t value = (temp[1] << 8) | temp[0];
 4720              		.loc 1 1112 0
 4721 0062 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 4722 0064 4FEA0323 		lsl	r3, r3, #8
 4723 0068 9AB2     		uxth	r2, r3
 4724 006a 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 4725 006c 1343     		orrs	r3, r3, r2
 4726 006e 3B82     		strh	r3, [r7, #16]	@ movhi
1113:../LSM9DS1_Driver.c **** 	return value;
 4727              		.loc 1 1113 0
 4728 0070 3B8A     		ldrh	r3, [r7, #16]
 4729 0072 1BB2     		sxth	r3, r3
1114:../LSM9DS1_Driver.c **** }
 4730              		.loc 1 1114 0
 4731 0074 1846     		mov	r0, r3
 4732 0076 07F11807 		add	r7, r7, #24
 4733 007a BD46     		mov	sp, r7
 4734 007c 80BD     		pop	{r7, pc}
 4735              		.cfi_endproc
 4736              	.LFE155:
 4738 007e 00BF     		.section	.text.readTemp,"ax",%progbits
 4739              		.align	2
 4740              		.global	readTemp
 4741              		.thumb
 4742              		.thumb_func
 4744              	readTemp:
 4745              	.LFB156:
1115:../LSM9DS1_Driver.c **** 
1116:../LSM9DS1_Driver.c **** int16_t readTemp(void)
1117:../LSM9DS1_Driver.c **** {
 4746              		.loc 1 1117 0
 4747              		.cfi_startproc
 4748              		@ args = 0, pretend = 0, frame = 8
 4749              		@ frame_needed = 1, uses_anonymous_args = 0
 4750 0000 80B5     		push	{r7, lr}
 4751              	.LCFI121:
 4752              		.cfi_def_cfa_offset 8
 4753              		.cfi_offset 7, -8
 4754              		.cfi_offset 14, -4
 4755 0002 82B0     		sub	sp, sp, #8
 4756              	.LCFI122:
 4757              		.cfi_def_cfa_offset 16
 4758 0004 00AF     		add	r7, sp, #0
 4759              	.LCFI123:
 4760              		.cfi_def_cfa_register 7
1118:../LSM9DS1_Driver.c **** 	uint8_t temp[2]; // We'll read two bytes from the temperature sensor into temp
1119:../LSM9DS1_Driver.c **** 
1120:../LSM9DS1_Driver.c **** 	int i  = 0;
 4761              		.loc 1 1120 0
 4762 0006 4FF00003 		mov	r3, #0
 4763 000a 7B60     		str	r3, [r7, #4]
1121:../LSM9DS1_Driver.c **** 	uint8_t subAddress = OUT_TEMP_L;
 4764              		.loc 1 1121 0
 4765 000c 4FF01503 		mov	r3, #21
 4766 0010 FB70     		strb	r3, [r7, #3]
1122:../LSM9DS1_Driver.c **** 
1123:../LSM9DS1_Driver.c **** 	while(i < 2)
 4767              		.loc 1 1123 0
 4768 0012 1CE0     		b	.L182
 4769              	.L183:
1124:../LSM9DS1_Driver.c **** 	{
1125:../LSM9DS1_Driver.c **** 		subAddress = subAddress + i;
 4770              		.loc 1 1125 0
 4771 0014 7B68     		ldr	r3, [r7, #4]
 4772 0016 DAB2     		uxtb	r2, r3
 4773 0018 FB78     		ldrb	r3, [r7, #3]
 4774 001a D318     		adds	r3, r2, r3
 4775 001c FB70     		strb	r3, [r7, #3]
1126:../LSM9DS1_Driver.c **** 
1127:../LSM9DS1_Driver.c **** 		temp[i] = I2CreadBytes(_xgAddress, subAddress, NULL, 0);
 4776              		.loc 1 1127 0
 4777 001e 40F20003 		movw	r3, #:lower16:_xgAddress
 4778 0022 C0F20003 		movt	r3, #:upper16:_xgAddress
 4779 0026 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 4780 0028 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4781 002a 1046     		mov	r0, r2
 4782 002c 1946     		mov	r1, r3
 4783 002e 4FF00002 		mov	r2, #0
 4784 0032 4FF00003 		mov	r3, #0
 4785 0036 FFF7FEFF 		bl	I2CreadBytes
 4786 003a 0346     		mov	r3, r0
 4787 003c 1A46     		mov	r2, r3
 4788 003e 3946     		mov	r1, r7
 4789 0040 7B68     		ldr	r3, [r7, #4]
 4790 0042 CB18     		adds	r3, r1, r3
 4791 0044 1A70     		strb	r2, [r3, #0]
1128:../LSM9DS1_Driver.c **** 
1129:../LSM9DS1_Driver.c **** 		i++;
 4792              		.loc 1 1129 0
 4793 0046 7B68     		ldr	r3, [r7, #4]
 4794 0048 03F10103 		add	r3, r3, #1
 4795 004c 7B60     		str	r3, [r7, #4]
 4796              	.L182:
1123:../LSM9DS1_Driver.c **** 	while(i < 2)
 4797              		.loc 1 1123 0 discriminator 1
 4798 004e 7B68     		ldr	r3, [r7, #4]
 4799 0050 012B     		cmp	r3, #1
 4800 0052 DFDD     		ble	.L183
1130:../LSM9DS1_Driver.c **** 	}
1131:../LSM9DS1_Driver.c **** 
1132:../LSM9DS1_Driver.c **** 	//xgReadBytes(OUT_TEMP_L, temp, 2); // Read 2 bytes, beginning at OUT_TEMP_L
1133:../LSM9DS1_Driver.c **** 	temperature = (temp[1] << 8) | temp[0];
 4801              		.loc 1 1133 0
 4802 0054 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 4803 0056 4FEA0323 		lsl	r3, r3, #8
 4804 005a 9AB2     		uxth	r2, r3
 4805 005c 3B78     		ldrb	r3, [r7, #0]	@ zero_extendqisi2
 4806 005e 1343     		orrs	r3, r3, r2
 4807 0060 9AB2     		uxth	r2, r3
 4808 0062 40F20003 		movw	r3, #:lower16:temperature
 4809 0066 C0F20003 		movt	r3, #:upper16:temperature
 4810 006a 1A80     		strh	r2, [r3, #0]	@ movhi
1134:../LSM9DS1_Driver.c **** 
1135:../LSM9DS1_Driver.c **** 	return temperature;
 4811              		.loc 1 1135 0
 4812 006c 40F20003 		movw	r3, #:lower16:temperature
 4813 0070 C0F20003 		movt	r3, #:upper16:temperature
 4814 0074 1B88     		ldrh	r3, [r3, #0]
 4815 0076 1BB2     		sxth	r3, r3
1136:../LSM9DS1_Driver.c **** }
 4816              		.loc 1 1136 0
 4817 0078 1846     		mov	r0, r3
 4818 007a 07F10807 		add	r7, r7, #8
 4819 007e BD46     		mov	sp, r7
 4820 0080 80BD     		pop	{r7, pc}
 4821              		.cfi_endproc
 4822              	.LFE156:
 4824 0082 00BF     		.section	.text.readGyro,"ax",%progbits
 4825              		.align	2
 4826              		.global	readGyro
 4827              		.thumb
 4828              		.thumb_func
 4830              	readGyro:
 4831              	.LFB157:
1137:../LSM9DS1_Driver.c **** 
1138:../LSM9DS1_Driver.c **** int16_t readGyro(lsm9ds1_axis axis)
1139:../LSM9DS1_Driver.c **** {
 4832              		.loc 1 1139 0
 4833              		.cfi_startproc
 4834              		@ args = 0, pretend = 0, frame = 24
 4835              		@ frame_needed = 1, uses_anonymous_args = 0
 4836 0000 80B5     		push	{r7, lr}
 4837              	.LCFI124:
 4838              		.cfi_def_cfa_offset 8
 4839              		.cfi_offset 7, -8
 4840              		.cfi_offset 14, -4
 4841 0002 86B0     		sub	sp, sp, #24
 4842              	.LCFI125:
 4843              		.cfi_def_cfa_offset 32
 4844 0004 00AF     		add	r7, sp, #0
 4845              	.LCFI126:
 4846              		.cfi_def_cfa_register 7
 4847 0006 0346     		mov	r3, r0
 4848 0008 FB71     		strb	r3, [r7, #7]
1140:../LSM9DS1_Driver.c **** 	uint8_t temp[2];
1141:../LSM9DS1_Driver.c **** 	int16_t value;
1142:../LSM9DS1_Driver.c **** 
1143:../LSM9DS1_Driver.c **** 	int i  = 0;
 4849              		.loc 1 1143 0
 4850 000a 4FF00003 		mov	r3, #0
 4851 000e 3B61     		str	r3, [r7, #16]
1144:../LSM9DS1_Driver.c **** 	uint8_t subAddress = OUT_X_L_G + (2 * axis);
 4852              		.loc 1 1144 0
 4853 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4854 0012 03F10C03 		add	r3, r3, #12
 4855 0016 DBB2     		uxtb	r3, r3
 4856 0018 4FEA4303 		lsl	r3, r3, #1
 4857 001c FB73     		strb	r3, [r7, #15]
1145:../LSM9DS1_Driver.c **** 
1146:../LSM9DS1_Driver.c **** 	while(i < 2)
 4858              		.loc 1 1146 0
 4859 001e 1DE0     		b	.L186
 4860              	.L187:
1147:../LSM9DS1_Driver.c **** 	{
1148:../LSM9DS1_Driver.c **** 		subAddress = subAddress + i;
 4861              		.loc 1 1148 0
 4862 0020 3B69     		ldr	r3, [r7, #16]
 4863 0022 DAB2     		uxtb	r2, r3
 4864 0024 FB7B     		ldrb	r3, [r7, #15]
 4865 0026 D318     		adds	r3, r2, r3
 4866 0028 FB73     		strb	r3, [r7, #15]
1149:../LSM9DS1_Driver.c **** 
1150:../LSM9DS1_Driver.c **** 		temp[i] = I2CreadBytes(_xgAddress, subAddress, NULL, 0);
 4867              		.loc 1 1150 0
 4868 002a 40F20003 		movw	r3, #:lower16:_xgAddress
 4869 002e C0F20003 		movt	r3, #:upper16:_xgAddress
 4870 0032 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 4871 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4872 0036 1046     		mov	r0, r2
 4873 0038 1946     		mov	r1, r3
 4874 003a 4FF00002 		mov	r2, #0
 4875 003e 4FF00003 		mov	r3, #0
 4876 0042 FFF7FEFF 		bl	I2CreadBytes
 4877 0046 0346     		mov	r3, r0
 4878 0048 1A46     		mov	r2, r3
 4879 004a 07F10C01 		add	r1, r7, #12
 4880 004e 3B69     		ldr	r3, [r7, #16]
 4881 0050 CB18     		adds	r3, r1, r3
 4882 0052 1A70     		strb	r2, [r3, #0]
1151:../LSM9DS1_Driver.c **** 		i++;
 4883              		.loc 1 1151 0
 4884 0054 3B69     		ldr	r3, [r7, #16]
 4885 0056 03F10103 		add	r3, r3, #1
 4886 005a 3B61     		str	r3, [r7, #16]
 4887              	.L186:
1146:../LSM9DS1_Driver.c **** 	while(i < 2)
 4888              		.loc 1 1146 0 discriminator 1
 4889 005c 3B69     		ldr	r3, [r7, #16]
 4890 005e 012B     		cmp	r3, #1
 4891 0060 DEDD     		ble	.L187
1152:../LSM9DS1_Driver.c **** 	}
1153:../LSM9DS1_Driver.c **** 
1154:../LSM9DS1_Driver.c **** 	value = (temp[1] << 8) | temp[0];
 4892              		.loc 1 1154 0
 4893 0062 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 4894 0064 4FEA0323 		lsl	r3, r3, #8
 4895 0068 9AB2     		uxth	r2, r3
 4896 006a 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 4897 006c 1343     		orrs	r3, r3, r2
 4898 006e FB82     		strh	r3, [r7, #22]	@ movhi
1155:../LSM9DS1_Driver.c **** 
1156:../LSM9DS1_Driver.c **** 	if (_autoCalc)
 4899              		.loc 1 1156 0
 4900 0070 40F20003 		movw	r3, #:lower16:_autoCalc
 4901 0074 C0F20003 		movt	r3, #:upper16:_autoCalc
 4902 0078 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 4903 007a 002B     		cmp	r3, #0
 4904 007c 0BD0     		beq	.L188
1157:../LSM9DS1_Driver.c **** 		value -= gBiasRaw[axis];
 4905              		.loc 1 1157 0
 4906 007e FA8A     		ldrh	r2, [r7, #22]
 4907 0080 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 4908 0082 40F20003 		movw	r3, #:lower16:gBiasRaw
 4909 0086 C0F20003 		movt	r3, #:upper16:gBiasRaw
 4910 008a 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 4911 008e 9BB2     		uxth	r3, r3
 4912 0090 D31A     		subs	r3, r2, r3
 4913 0092 9BB2     		uxth	r3, r3
 4914 0094 FB82     		strh	r3, [r7, #22]	@ movhi
 4915              	.L188:
1158:../LSM9DS1_Driver.c **** 
1159:../LSM9DS1_Driver.c **** 	return value;
 4916              		.loc 1 1159 0
 4917 0096 FB8A     		ldrh	r3, [r7, #22]
 4918 0098 1BB2     		sxth	r3, r3
1160:../LSM9DS1_Driver.c **** }
 4919              		.loc 1 1160 0
 4920 009a 1846     		mov	r0, r3
 4921 009c 07F11807 		add	r7, r7, #24
 4922 00a0 BD46     		mov	sp, r7
 4923 00a2 80BD     		pop	{r7, pc}
 4924              		.cfi_endproc
 4925              	.LFE157:
 4927              		.section	.text.calcGyro,"ax",%progbits
 4928              		.align	2
 4929              		.global	calcGyro
 4930              		.thumb
 4931              		.thumb_func
 4933              	calcGyro:
 4934              	.LFB158:
1161:../LSM9DS1_Driver.c **** 
1162:../LSM9DS1_Driver.c **** float calcGyro(int16_t gyro)
1163:../LSM9DS1_Driver.c **** {
 4935              		.loc 1 1163 0
 4936              		.cfi_startproc
 4937              		@ args = 0, pretend = 0, frame = 8
 4938              		@ frame_needed = 1, uses_anonymous_args = 0
 4939 0000 80B5     		push	{r7, lr}
 4940              	.LCFI127:
 4941              		.cfi_def_cfa_offset 8
 4942              		.cfi_offset 7, -8
 4943              		.cfi_offset 14, -4
 4944 0002 82B0     		sub	sp, sp, #8
 4945              	.LCFI128:
 4946              		.cfi_def_cfa_offset 16
 4947 0004 00AF     		add	r7, sp, #0
 4948              	.LCFI129:
 4949              		.cfi_def_cfa_register 7
 4950 0006 0346     		mov	r3, r0
 4951 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1164:../LSM9DS1_Driver.c **** 	// Return the gyro raw reading times our pre-calculated DPS / (ADC tick):
1165:../LSM9DS1_Driver.c **** 	return round(gRes * gyro);
 4952              		.loc 1 1165 0
 4953 000a B7F90630 		ldrsh	r3, [r7, #6]
 4954 000e 07EE903A 		fmsr	s15, r3	@ int
 4955 0012 B8EEE77A 		fsitos	s14, s15
 4956 0016 40F20003 		movw	r3, #:lower16:gRes
 4957 001a C0F20003 		movt	r3, #:upper16:gRes
 4958 001e D3ED007A 		flds	s15, [r3, #0]
 4959 0022 67EE277A 		fmuls	s15, s14, s15
 4960 0026 17EE900A 		fmrs	r0, s15
 4961 002a FFF7FEFF 		bl	__aeabi_f2d
 4962 002e 0246     		mov	r2, r0
 4963 0030 0B46     		mov	r3, r1
 4964 0032 1046     		mov	r0, r2
 4965 0034 1946     		mov	r1, r3
 4966 0036 FFF7FEFF 		bl	round
 4967 003a 0246     		mov	r2, r0
 4968 003c 0B46     		mov	r3, r1
 4969 003e 1046     		mov	r0, r2
 4970 0040 1946     		mov	r1, r3
 4971 0042 FFF7FEFF 		bl	__aeabi_d2f
 4972 0046 0346     		mov	r3, r0	@ float
1166:../LSM9DS1_Driver.c **** 	//return gyro;
1167:../LSM9DS1_Driver.c **** }
 4973              		.loc 1 1167 0
 4974 0048 1846     		mov	r0, r3	@ float
 4975 004a 07F10807 		add	r7, r7, #8
 4976 004e BD46     		mov	sp, r7
 4977 0050 80BD     		pop	{r7, pc}
 4978              		.cfi_endproc
 4979              	.LFE158:
 4981 0052 00BF     		.section	.text.calcAccel,"ax",%progbits
 4982              		.align	2
 4983              		.global	calcAccel
 4984              		.thumb
 4985              		.thumb_func
 4987              	calcAccel:
 4988              	.LFB159:
1168:../LSM9DS1_Driver.c **** 
1169:../LSM9DS1_Driver.c **** float calcAccel(int16_t accel)
1170:../LSM9DS1_Driver.c **** {
 4989              		.loc 1 1170 0
 4990              		.cfi_startproc
 4991              		@ args = 0, pretend = 0, frame = 8
 4992              		@ frame_needed = 1, uses_anonymous_args = 0
 4993 0000 80B5     		push	{r7, lr}
 4994              	.LCFI130:
 4995              		.cfi_def_cfa_offset 8
 4996              		.cfi_offset 7, -8
 4997              		.cfi_offset 14, -4
 4998 0002 82B0     		sub	sp, sp, #8
 4999              	.LCFI131:
 5000              		.cfi_def_cfa_offset 16
 5001 0004 00AF     		add	r7, sp, #0
 5002              	.LCFI132:
 5003              		.cfi_def_cfa_register 7
 5004 0006 0346     		mov	r3, r0
 5005 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1171:../LSM9DS1_Driver.c **** 	// Return the accel raw reading times our pre-calculated g's / (ADC tick):
1172:../LSM9DS1_Driver.c **** 	return round(aRes * accel);
 5006              		.loc 1 1172 0
 5007 000a B7F90630 		ldrsh	r3, [r7, #6]
 5008 000e 07EE903A 		fmsr	s15, r3	@ int
 5009 0012 B8EEE77A 		fsitos	s14, s15
 5010 0016 40F20003 		movw	r3, #:lower16:aRes
 5011 001a C0F20003 		movt	r3, #:upper16:aRes
 5012 001e D3ED007A 		flds	s15, [r3, #0]
 5013 0022 67EE277A 		fmuls	s15, s14, s15
 5014 0026 17EE900A 		fmrs	r0, s15
 5015 002a FFF7FEFF 		bl	__aeabi_f2d
 5016 002e 0246     		mov	r2, r0
 5017 0030 0B46     		mov	r3, r1
 5018 0032 1046     		mov	r0, r2
 5019 0034 1946     		mov	r1, r3
 5020 0036 FFF7FEFF 		bl	round
 5021 003a 0246     		mov	r2, r0
 5022 003c 0B46     		mov	r3, r1
 5023 003e 1046     		mov	r0, r2
 5024 0040 1946     		mov	r1, r3
 5025 0042 FFF7FEFF 		bl	__aeabi_d2f
 5026 0046 0346     		mov	r3, r0	@ float
1173:../LSM9DS1_Driver.c **** 	//return accel;
1174:../LSM9DS1_Driver.c **** }
 5027              		.loc 1 1174 0
 5028 0048 1846     		mov	r0, r3	@ float
 5029 004a 07F10807 		add	r7, r7, #8
 5030 004e BD46     		mov	sp, r7
 5031 0050 80BD     		pop	{r7, pc}
 5032              		.cfi_endproc
 5033              	.LFE159:
 5035 0052 00BF     		.section	.text.setGyroScale,"ax",%progbits
 5036              		.align	2
 5037              		.global	setGyroScale
 5038              		.thumb
 5039              		.thumb_func
 5041              	setGyroScale:
 5042              	.LFB160:
1175:../LSM9DS1_Driver.c **** 
1176:../LSM9DS1_Driver.c **** 
1177:../LSM9DS1_Driver.c **** void setGyroScale(uint16_t gScl)
1178:../LSM9DS1_Driver.c **** {
 5043              		.loc 1 1178 0
 5044              		.cfi_startproc
 5045              		@ args = 0, pretend = 0, frame = 16
 5046              		@ frame_needed = 1, uses_anonymous_args = 0
 5047 0000 80B5     		push	{r7, lr}
 5048              	.LCFI133:
 5049              		.cfi_def_cfa_offset 8
 5050              		.cfi_offset 7, -8
 5051              		.cfi_offset 14, -4
 5052 0002 84B0     		sub	sp, sp, #16
 5053              	.LCFI134:
 5054              		.cfi_def_cfa_offset 24
 5055 0004 00AF     		add	r7, sp, #0
 5056              	.LCFI135:
 5057              		.cfi_def_cfa_register 7
 5058 0006 0346     		mov	r3, r0
 5059 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1179:../LSM9DS1_Driver.c **** 	// Read current value of CTRL_REG1_G:
1180:../LSM9DS1_Driver.c **** 	uint8_t ctrl1RegValue = xgReadByte(CTRL_REG1_G);
 5060              		.loc 1 1180 0
 5061 000a 4FF01000 		mov	r0, #16
 5062 000e FFF7FEFF 		bl	xgReadByte
 5063 0012 0346     		mov	r3, r0
 5064 0014 FB73     		strb	r3, [r7, #15]
1181:../LSM9DS1_Driver.c **** 	// Mask out scale bits (3 & 4):
1182:../LSM9DS1_Driver.c **** 	ctrl1RegValue &= 0xE7;
 5065              		.loc 1 1182 0
 5066 0016 FB7B     		ldrb	r3, [r7, #15]
 5067 0018 23F01803 		bic	r3, r3, #24
 5068 001c FB73     		strb	r3, [r7, #15]
1183:../LSM9DS1_Driver.c **** 	switch (gScl)
 5069              		.loc 1 1183 0
 5070 001e FB88     		ldrh	r3, [r7, #6]
 5071 0020 B3F5FA7F 		cmp	r3, #500
 5072 0024 03D0     		beq	.L196
 5073 0026 B3F5FA6F 		cmp	r3, #2000
 5074 002a 0CD0     		beq	.L197
 5075 002c 17E0     		b	.L199
 5076              	.L196:
1184:../LSM9DS1_Driver.c **** 	{
1185:../LSM9DS1_Driver.c **** 		case 500:
1186:../LSM9DS1_Driver.c **** 			ctrl1RegValue |= (0x1 << 3);
 5077              		.loc 1 1186 0
 5078 002e FB7B     		ldrb	r3, [r7, #15]
 5079 0030 43F00803 		orr	r3, r3, #8
 5080 0034 FB73     		strb	r3, [r7, #15]
1187:../LSM9DS1_Driver.c **** 			settings.gyro.scale = 500;
 5081              		.loc 1 1187 0
 5082 0036 40F20003 		movw	r3, #:lower16:settings
 5083 003a C0F20003 		movt	r3, #:upper16:settings
 5084 003e 4FF4FA72 		mov	r2, #500
 5085 0042 DA80     		strh	r2, [r3, #6]	@ movhi
1188:../LSM9DS1_Driver.c **** 			break;
 5086              		.loc 1 1188 0
 5087 0044 13E0     		b	.L198
 5088              	.L197:
1189:../LSM9DS1_Driver.c **** 		case 2000:
1190:../LSM9DS1_Driver.c **** 			ctrl1RegValue |= (0x3 << 3);
 5089              		.loc 1 1190 0
 5090 0046 FB7B     		ldrb	r3, [r7, #15]
 5091 0048 43F01803 		orr	r3, r3, #24
 5092 004c FB73     		strb	r3, [r7, #15]
1191:../LSM9DS1_Driver.c **** 			settings.gyro.scale = 2000;
 5093              		.loc 1 1191 0
 5094 004e 40F20003 		movw	r3, #:lower16:settings
 5095 0052 C0F20003 		movt	r3, #:upper16:settings
 5096 0056 4FF4FA62 		mov	r2, #2000
 5097 005a DA80     		strh	r2, [r3, #6]	@ movhi
1192:../LSM9DS1_Driver.c **** 			break;
 5098              		.loc 1 1192 0
 5099 005c 07E0     		b	.L198
 5100              	.L199:
1193:../LSM9DS1_Driver.c **** 		default: // Otherwise we'll set it to 245 dps (0x0 << 4)
1194:../LSM9DS1_Driver.c **** 			settings.gyro.scale = 245;
 5101              		.loc 1 1194 0
 5102 005e 40F20003 		movw	r3, #:lower16:settings
 5103 0062 C0F20003 		movt	r3, #:upper16:settings
 5104 0066 4FF0F502 		mov	r2, #245
 5105 006a DA80     		strh	r2, [r3, #6]	@ movhi
1195:../LSM9DS1_Driver.c **** 			break;
 5106              		.loc 1 1195 0
 5107 006c 00BF     		nop
 5108              	.L198:
1196:../LSM9DS1_Driver.c **** 	}
1197:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG1_G, ctrl1RegValue);
 5109              		.loc 1 1197 0
 5110 006e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5111 0070 4FF01000 		mov	r0, #16
 5112 0074 1946     		mov	r1, r3
 5113 0076 FFF7FEFF 		bl	xgWriteByte
1198:../LSM9DS1_Driver.c **** 
1199:../LSM9DS1_Driver.c **** 	calcgRes();
 5114              		.loc 1 1199 0
 5115 007a FFF7FEFF 		bl	calcgRes
1200:../LSM9DS1_Driver.c **** }
 5116              		.loc 1 1200 0
 5117 007e 07F11007 		add	r7, r7, #16
 5118 0082 BD46     		mov	sp, r7
 5119 0084 80BD     		pop	{r7, pc}
 5120              		.cfi_endproc
 5121              	.LFE160:
 5123 0086 00BF     		.section	.text.setAccelScale,"ax",%progbits
 5124              		.align	2
 5125              		.global	setAccelScale
 5126              		.thumb
 5127              		.thumb_func
 5129              	setAccelScale:
 5130              	.LFB161:
1201:../LSM9DS1_Driver.c **** 
1202:../LSM9DS1_Driver.c **** void setAccelScale(uint8_t aScl)
1203:../LSM9DS1_Driver.c **** {
 5131              		.loc 1 1203 0
 5132              		.cfi_startproc
 5133              		@ args = 0, pretend = 0, frame = 16
 5134              		@ frame_needed = 1, uses_anonymous_args = 0
 5135 0000 80B5     		push	{r7, lr}
 5136              	.LCFI136:
 5137              		.cfi_def_cfa_offset 8
 5138              		.cfi_offset 7, -8
 5139              		.cfi_offset 14, -4
 5140 0002 84B0     		sub	sp, sp, #16
 5141              	.LCFI137:
 5142              		.cfi_def_cfa_offset 24
 5143 0004 00AF     		add	r7, sp, #0
 5144              	.LCFI138:
 5145              		.cfi_def_cfa_register 7
 5146 0006 0346     		mov	r3, r0
 5147 0008 FB71     		strb	r3, [r7, #7]
1204:../LSM9DS1_Driver.c **** 	// We need to preserve the other bytes in CTRL_REG6_XL. So, first read it:
1205:../LSM9DS1_Driver.c **** 	uint8_t tempRegValue = xgReadByte(CTRL_REG6_XL);
 5148              		.loc 1 1205 0
 5149 000a 4FF02000 		mov	r0, #32
 5150 000e FFF7FEFF 		bl	xgReadByte
 5151 0012 0346     		mov	r3, r0
 5152 0014 FB73     		strb	r3, [r7, #15]
1206:../LSM9DS1_Driver.c **** 	// Mask out accel scale bits:
1207:../LSM9DS1_Driver.c **** 	tempRegValue &= 0xE7;
 5153              		.loc 1 1207 0
 5154 0016 FB7B     		ldrb	r3, [r7, #15]
 5155 0018 23F01803 		bic	r3, r3, #24
 5156 001c FB73     		strb	r3, [r7, #15]
1208:../LSM9DS1_Driver.c **** 
1209:../LSM9DS1_Driver.c **** 	switch (aScl)
 5157              		.loc 1 1209 0
 5158 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5159 0020 082B     		cmp	r3, #8
 5160 0022 0FD0     		beq	.L203
 5161 0024 102B     		cmp	r3, #16
 5162 0026 19D0     		beq	.L204
 5163 0028 042B     		cmp	r3, #4
 5164 002a 23D1     		bne	.L206
 5165              	.L202:
1210:../LSM9DS1_Driver.c **** 	{
1211:../LSM9DS1_Driver.c **** 		case 4:
1212:../LSM9DS1_Driver.c **** 			tempRegValue |= (0x2 << 3);
 5166              		.loc 1 1212 0
 5167 002c FB7B     		ldrb	r3, [r7, #15]
 5168 002e 43F01003 		orr	r3, r3, #16
 5169 0032 FB73     		strb	r3, [r7, #15]
1213:../LSM9DS1_Driver.c **** 			settings.accel.scale = 4;
 5170              		.loc 1 1213 0
 5171 0034 40F20003 		movw	r3, #:lower16:settings
 5172 0038 C0F20003 		movt	r3, #:upper16:settings
 5173 003c 4FF00402 		mov	r2, #4
 5174 0040 DA75     		strb	r2, [r3, #23]
1214:../LSM9DS1_Driver.c **** 			break;
 5175              		.loc 1 1214 0
 5176 0042 1FE0     		b	.L205
 5177              	.L203:
1215:../LSM9DS1_Driver.c **** 		case 8:
1216:../LSM9DS1_Driver.c **** 			tempRegValue |= (0x3 << 3);
 5178              		.loc 1 1216 0
 5179 0044 FB7B     		ldrb	r3, [r7, #15]
 5180 0046 43F01803 		orr	r3, r3, #24
 5181 004a FB73     		strb	r3, [r7, #15]
1217:../LSM9DS1_Driver.c **** 			settings.accel.scale = 8;
 5182              		.loc 1 1217 0
 5183 004c 40F20003 		movw	r3, #:lower16:settings
 5184 0050 C0F20003 		movt	r3, #:upper16:settings
 5185 0054 4FF00802 		mov	r2, #8
 5186 0058 DA75     		strb	r2, [r3, #23]
1218:../LSM9DS1_Driver.c **** 			break;
 5187              		.loc 1 1218 0
 5188 005a 13E0     		b	.L205
 5189              	.L204:
1219:../LSM9DS1_Driver.c **** 		case 16:
1220:../LSM9DS1_Driver.c **** 			tempRegValue |= (0x1 << 3);
 5190              		.loc 1 1220 0
 5191 005c FB7B     		ldrb	r3, [r7, #15]
 5192 005e 43F00803 		orr	r3, r3, #8
 5193 0062 FB73     		strb	r3, [r7, #15]
1221:../LSM9DS1_Driver.c **** 			settings.accel.scale = 16;
 5194              		.loc 1 1221 0
 5195 0064 40F20003 		movw	r3, #:lower16:settings
 5196 0068 C0F20003 		movt	r3, #:upper16:settings
 5197 006c 4FF01002 		mov	r2, #16
 5198 0070 DA75     		strb	r2, [r3, #23]
1222:../LSM9DS1_Driver.c **** 			break;
 5199              		.loc 1 1222 0
 5200 0072 07E0     		b	.L205
 5201              	.L206:
1223:../LSM9DS1_Driver.c **** 		default: // Otherwise it'll be set to 2g (0x0 << 3)
1224:../LSM9DS1_Driver.c **** 			settings.accel.scale = 2;
 5202              		.loc 1 1224 0
 5203 0074 40F20003 		movw	r3, #:lower16:settings
 5204 0078 C0F20003 		movt	r3, #:upper16:settings
 5205 007c 4FF00202 		mov	r2, #2
 5206 0080 DA75     		strb	r2, [r3, #23]
1225:../LSM9DS1_Driver.c **** 			break;
 5207              		.loc 1 1225 0
 5208 0082 00BF     		nop
 5209              	.L205:
1226:../LSM9DS1_Driver.c **** 	}
1227:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG6_XL, tempRegValue);
 5210              		.loc 1 1227 0
 5211 0084 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5212 0086 4FF02000 		mov	r0, #32
 5213 008a 1946     		mov	r1, r3
 5214 008c FFF7FEFF 		bl	xgWriteByte
1228:../LSM9DS1_Driver.c **** 
1229:../LSM9DS1_Driver.c **** 	// Then calculate a new aRes, which relies on aScale being set correctly:
1230:../LSM9DS1_Driver.c **** 	calcaRes();
 5215              		.loc 1 1230 0
 5216 0090 FFF7FEFF 		bl	calcaRes
1231:../LSM9DS1_Driver.c **** }
 5217              		.loc 1 1231 0
 5218 0094 07F11007 		add	r7, r7, #16
 5219 0098 BD46     		mov	sp, r7
 5220 009a 80BD     		pop	{r7, pc}
 5221              		.cfi_endproc
 5222              	.LFE161:
 5224              		.section	.text.setMagScale,"ax",%progbits
 5225              		.align	2
 5226              		.global	setMagScale
 5227              		.thumb
 5228              		.thumb_func
 5230              	setMagScale:
 5231              	.LFB162:
1232:../LSM9DS1_Driver.c **** 
1233:../LSM9DS1_Driver.c **** void setMagScale(uint8_t mScl)
1234:../LSM9DS1_Driver.c **** {
 5232              		.loc 1 1234 0
 5233              		.cfi_startproc
 5234              		@ args = 0, pretend = 0, frame = 16
 5235              		@ frame_needed = 1, uses_anonymous_args = 0
 5236 0000 80B5     		push	{r7, lr}
 5237              	.LCFI139:
 5238              		.cfi_def_cfa_offset 8
 5239              		.cfi_offset 7, -8
 5240              		.cfi_offset 14, -4
 5241 0002 84B0     		sub	sp, sp, #16
 5242              	.LCFI140:
 5243              		.cfi_def_cfa_offset 24
 5244 0004 00AF     		add	r7, sp, #0
 5245              	.LCFI141:
 5246              		.cfi_def_cfa_register 7
 5247 0006 0346     		mov	r3, r0
 5248 0008 FB71     		strb	r3, [r7, #7]
1235:../LSM9DS1_Driver.c **** 	// We need to preserve the other bytes in CTRL_REG6_XM. So, first read it:
1236:../LSM9DS1_Driver.c **** 	uint8_t temp = mReadByte(CTRL_REG2_M);
 5249              		.loc 1 1236 0
 5250 000a 4FF02100 		mov	r0, #33
 5251 000e FFF7FEFF 		bl	mReadByte
 5252 0012 0346     		mov	r3, r0
 5253 0014 FB73     		strb	r3, [r7, #15]
1237:../LSM9DS1_Driver.c **** 	// Then mask out the mag scale bits:
1238:../LSM9DS1_Driver.c **** 	temp &= 0xFF^(0x3 << 5);
 5254              		.loc 1 1238 0
 5255 0016 FB7B     		ldrb	r3, [r7, #15]
 5256 0018 23F06003 		bic	r3, r3, #96
 5257 001c FB73     		strb	r3, [r7, #15]
1239:../LSM9DS1_Driver.c **** 
1240:../LSM9DS1_Driver.c **** 	switch (mScl)
 5258              		.loc 1 1240 0
 5259 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5260 0020 0C2B     		cmp	r3, #12
 5261 0022 10D0     		beq	.L210
 5262 0024 102B     		cmp	r3, #16
 5263 0026 1BD0     		beq	.L211
 5264 0028 082B     		cmp	r3, #8
 5265 002a 26D1     		bne	.L213
 5266              	.L209:
1241:../LSM9DS1_Driver.c **** 	{
1242:../LSM9DS1_Driver.c **** 		case 8:
1243:../LSM9DS1_Driver.c **** 			temp |= (0x1 << 5);
 5267              		.loc 1 1243 0
 5268 002c FB7B     		ldrb	r3, [r7, #15]
 5269 002e 43F02003 		orr	r3, r3, #32
 5270 0032 FB73     		strb	r3, [r7, #15]
1244:../LSM9DS1_Driver.c **** 			settings.mag.scale = 8;
 5271              		.loc 1 1244 0
 5272 0034 40F20003 		movw	r3, #:lower16:settings
 5273 0038 C0F20003 		movt	r3, #:upper16:settings
 5274 003c 4FF00802 		mov	r2, #8
 5275 0040 83F82020 		strb	r2, [r3, #32]
1245:../LSM9DS1_Driver.c **** 			break;
 5276              		.loc 1 1245 0
 5277 0044 22E0     		b	.L212
 5278              	.L210:
1246:../LSM9DS1_Driver.c **** 		case 12:
1247:../LSM9DS1_Driver.c **** 			temp |= (0x2 << 5);
 5279              		.loc 1 1247 0
 5280 0046 FB7B     		ldrb	r3, [r7, #15]
 5281 0048 43F04003 		orr	r3, r3, #64
 5282 004c FB73     		strb	r3, [r7, #15]
1248:../LSM9DS1_Driver.c **** 			settings.mag.scale = 12;
 5283              		.loc 1 1248 0
 5284 004e 40F20003 		movw	r3, #:lower16:settings
 5285 0052 C0F20003 		movt	r3, #:upper16:settings
 5286 0056 4FF00C02 		mov	r2, #12
 5287 005a 83F82020 		strb	r2, [r3, #32]
1249:../LSM9DS1_Driver.c **** 			break;
 5288              		.loc 1 1249 0
 5289 005e 15E0     		b	.L212
 5290              	.L211:
1250:../LSM9DS1_Driver.c **** 		case 16:
1251:../LSM9DS1_Driver.c **** 			temp |= (0x3 << 5);
 5291              		.loc 1 1251 0
 5292 0060 FB7B     		ldrb	r3, [r7, #15]
 5293 0062 43F06003 		orr	r3, r3, #96
 5294 0066 FB73     		strb	r3, [r7, #15]
1252:../LSM9DS1_Driver.c **** 			settings.mag.scale = 16;
 5295              		.loc 1 1252 0
 5296 0068 40F20003 		movw	r3, #:lower16:settings
 5297 006c C0F20003 		movt	r3, #:upper16:settings
 5298 0070 4FF01002 		mov	r2, #16
 5299 0074 83F82020 		strb	r2, [r3, #32]
1253:../LSM9DS1_Driver.c **** 			break;
 5300              		.loc 1 1253 0
 5301 0078 08E0     		b	.L212
 5302              	.L213:
1254:../LSM9DS1_Driver.c **** 		default: // Otherwise we'll default to 4 gauss (00)
1255:../LSM9DS1_Driver.c **** 			settings.mag.scale = 4;
 5303              		.loc 1 1255 0
 5304 007a 40F20003 		movw	r3, #:lower16:settings
 5305 007e C0F20003 		movt	r3, #:upper16:settings
 5306 0082 4FF00402 		mov	r2, #4
 5307 0086 83F82020 		strb	r2, [r3, #32]
1256:../LSM9DS1_Driver.c **** 			break;
 5308              		.loc 1 1256 0
 5309 008a 00BF     		nop
 5310              	.L212:
1257:../LSM9DS1_Driver.c **** 	}
1258:../LSM9DS1_Driver.c **** 
1259:../LSM9DS1_Driver.c **** 	// And write the new register value back into CTRL_REG6_XM:
1260:../LSM9DS1_Driver.c **** 	mWriteByte(CTRL_REG2_M, temp);
 5311              		.loc 1 1260 0
 5312 008c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5313 008e 4FF02100 		mov	r0, #33
 5314 0092 1946     		mov	r1, r3
 5315 0094 FFF7FEFF 		bl	mWriteByte
1261:../LSM9DS1_Driver.c **** 
1262:../LSM9DS1_Driver.c **** 	// We've updated the sensor, but we also need to update our class variables
1263:../LSM9DS1_Driver.c **** 	// First update mScale:
1264:../LSM9DS1_Driver.c **** 	//mScale = mScl;
1265:../LSM9DS1_Driver.c **** 	// Then calculate a new mRes, which relies on mScale being set correctly:
1266:../LSM9DS1_Driver.c **** 	calcmRes();
 5316              		.loc 1 1266 0
 5317 0098 FFF7FEFF 		bl	calcmRes
1267:../LSM9DS1_Driver.c **** }
 5318              		.loc 1 1267 0
 5319 009c 07F11007 		add	r7, r7, #16
 5320 00a0 BD46     		mov	sp, r7
 5321 00a2 80BD     		pop	{r7, pc}
 5322              		.cfi_endproc
 5323              	.LFE162:
 5325              		.section	.text.setGyroODR,"ax",%progbits
 5326              		.align	2
 5327              		.global	setGyroODR
 5328              		.thumb
 5329              		.thumb_func
 5331              	setGyroODR:
 5332              	.LFB163:
1268:../LSM9DS1_Driver.c **** 
1269:../LSM9DS1_Driver.c **** void setGyroODR(uint8_t gRate)
1270:../LSM9DS1_Driver.c **** {
 5333              		.loc 1 1270 0
 5334              		.cfi_startproc
 5335              		@ args = 0, pretend = 0, frame = 16
 5336              		@ frame_needed = 1, uses_anonymous_args = 0
 5337 0000 80B5     		push	{r7, lr}
 5338              	.LCFI142:
 5339              		.cfi_def_cfa_offset 8
 5340              		.cfi_offset 7, -8
 5341              		.cfi_offset 14, -4
 5342 0002 84B0     		sub	sp, sp, #16
 5343              	.LCFI143:
 5344              		.cfi_def_cfa_offset 24
 5345 0004 00AF     		add	r7, sp, #0
 5346              	.LCFI144:
 5347              		.cfi_def_cfa_register 7
 5348 0006 0346     		mov	r3, r0
 5349 0008 FB71     		strb	r3, [r7, #7]
1271:../LSM9DS1_Driver.c **** 	// Only do this if gRate is not 0 (which would disable the gyro)
1272:../LSM9DS1_Driver.c **** 	if ((gRate & 0x07) != 0)
 5350              		.loc 1 1272 0
 5351 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5352 000c 03F00703 		and	r3, r3, #7
 5353 0010 002B     		cmp	r3, #0
 5354 0012 20D0     		beq	.L214
 5355              	.LBB7:
1273:../LSM9DS1_Driver.c **** 	{
1274:../LSM9DS1_Driver.c **** 		// We need to preserve the other bytes in CTRL_REG1_G. So, first read it:
1275:../LSM9DS1_Driver.c **** 		uint8_t temp = xgReadByte(CTRL_REG1_G);
 5356              		.loc 1 1275 0
 5357 0014 4FF01000 		mov	r0, #16
 5358 0018 FFF7FEFF 		bl	xgReadByte
 5359 001c 0346     		mov	r3, r0
 5360 001e FB73     		strb	r3, [r7, #15]
1276:../LSM9DS1_Driver.c **** 		// Then mask out the gyro ODR bits:
1277:../LSM9DS1_Driver.c **** 		temp &= 0xFF^(0x7 << 5);
 5361              		.loc 1 1277 0
 5362 0020 FB7B     		ldrb	r3, [r7, #15]
 5363 0022 03F01F03 		and	r3, r3, #31
 5364 0026 FB73     		strb	r3, [r7, #15]
1278:../LSM9DS1_Driver.c **** 		temp |= (gRate & 0x07) << 5;
 5365              		.loc 1 1278 0
 5366 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5367 002a 4FEA4313 		lsl	r3, r3, #5
 5368 002e DAB2     		uxtb	r2, r3
 5369 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5370 0032 1343     		orrs	r3, r3, r2
 5371 0034 DBB2     		uxtb	r3, r3
 5372 0036 FB73     		strb	r3, [r7, #15]
1279:../LSM9DS1_Driver.c **** 		// Update our settings struct
1280:../LSM9DS1_Driver.c **** 		settings.gyro.sampleRate = gRate & 0x07;
 5373              		.loc 1 1280 0
 5374 0038 FB79     		ldrb	r3, [r7, #7]
 5375 003a 03F00703 		and	r3, r3, #7
 5376 003e DAB2     		uxtb	r2, r3
 5377 0040 40F20003 		movw	r3, #:lower16:settings
 5378 0044 C0F20003 		movt	r3, #:upper16:settings
 5379 0048 1A72     		strb	r2, [r3, #8]
1281:../LSM9DS1_Driver.c **** 		// And write the new register value back into CTRL_REG1_G:
1282:../LSM9DS1_Driver.c **** 		xgWriteByte(CTRL_REG1_G, temp);
 5380              		.loc 1 1282 0
 5381 004a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5382 004c 4FF01000 		mov	r0, #16
 5383 0050 1946     		mov	r1, r3
 5384 0052 FFF7FEFF 		bl	xgWriteByte
 5385              	.L214:
 5386              	.LBE7:
1283:../LSM9DS1_Driver.c **** 	}
1284:../LSM9DS1_Driver.c **** }
 5387              		.loc 1 1284 0
 5388 0056 07F11007 		add	r7, r7, #16
 5389 005a BD46     		mov	sp, r7
 5390 005c 80BD     		pop	{r7, pc}
 5391              		.cfi_endproc
 5392              	.LFE163:
 5394 005e 00BF     		.section	.text.setAccelODR,"ax",%progbits
 5395              		.align	2
 5396              		.global	setAccelODR
 5397              		.thumb
 5398              		.thumb_func
 5400              	setAccelODR:
 5401              	.LFB164:
1285:../LSM9DS1_Driver.c **** 
1286:../LSM9DS1_Driver.c **** void setAccelODR(uint8_t aRate)
1287:../LSM9DS1_Driver.c **** {
 5402              		.loc 1 1287 0
 5403              		.cfi_startproc
 5404              		@ args = 0, pretend = 0, frame = 16
 5405              		@ frame_needed = 1, uses_anonymous_args = 0
 5406 0000 80B5     		push	{r7, lr}
 5407              	.LCFI145:
 5408              		.cfi_def_cfa_offset 8
 5409              		.cfi_offset 7, -8
 5410              		.cfi_offset 14, -4
 5411 0002 84B0     		sub	sp, sp, #16
 5412              	.LCFI146:
 5413              		.cfi_def_cfa_offset 24
 5414 0004 00AF     		add	r7, sp, #0
 5415              	.LCFI147:
 5416              		.cfi_def_cfa_register 7
 5417 0006 0346     		mov	r3, r0
 5418 0008 FB71     		strb	r3, [r7, #7]
1288:../LSM9DS1_Driver.c **** 	// Only do this if aRate is not 0 (which would disable the accel)
1289:../LSM9DS1_Driver.c **** 	if ((aRate & 0x07) != 0)
 5419              		.loc 1 1289 0
 5420 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5421 000c 03F00703 		and	r3, r3, #7
 5422 0010 002B     		cmp	r3, #0
 5423 0012 20D0     		beq	.L216
 5424              	.LBB8:
1290:../LSM9DS1_Driver.c **** 	{
1291:../LSM9DS1_Driver.c **** 		// We need to preserve the other bytes in CTRL_REG1_XM. So, first read it:
1292:../LSM9DS1_Driver.c **** 		uint8_t temp = xgReadByte(CTRL_REG6_XL);
 5425              		.loc 1 1292 0
 5426 0014 4FF02000 		mov	r0, #32
 5427 0018 FFF7FEFF 		bl	xgReadByte
 5428 001c 0346     		mov	r3, r0
 5429 001e FB73     		strb	r3, [r7, #15]
1293:../LSM9DS1_Driver.c **** 		// Then mask out the accel ODR bits:
1294:../LSM9DS1_Driver.c **** 		temp &= 0x1F;
 5430              		.loc 1 1294 0
 5431 0020 FB7B     		ldrb	r3, [r7, #15]
 5432 0022 03F01F03 		and	r3, r3, #31
 5433 0026 FB73     		strb	r3, [r7, #15]
1295:../LSM9DS1_Driver.c **** 		// Then shift in our new ODR bits:
1296:../LSM9DS1_Driver.c **** 		temp |= ((aRate & 0x07) << 5);
 5434              		.loc 1 1296 0
 5435 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5436 002a 4FEA4313 		lsl	r3, r3, #5
 5437 002e DAB2     		uxtb	r2, r3
 5438 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5439 0032 1343     		orrs	r3, r3, r2
 5440 0034 DBB2     		uxtb	r3, r3
 5441 0036 FB73     		strb	r3, [r7, #15]
1297:../LSM9DS1_Driver.c **** 		settings.accel.sampleRate = aRate & 0x07;
 5442              		.loc 1 1297 0
 5443 0038 FB79     		ldrb	r3, [r7, #7]
 5444 003a 03F00703 		and	r3, r3, #7
 5445 003e DAB2     		uxtb	r2, r3
 5446 0040 40F20003 		movw	r3, #:lower16:settings
 5447 0044 C0F20003 		movt	r3, #:upper16:settings
 5448 0048 1A76     		strb	r2, [r3, #24]
1298:../LSM9DS1_Driver.c **** 		// And write the new register value back into CTRL_REG1_XM:
1299:../LSM9DS1_Driver.c **** 		xgWriteByte(CTRL_REG6_XL, temp);
 5449              		.loc 1 1299 0
 5450 004a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5451 004c 4FF02000 		mov	r0, #32
 5452 0050 1946     		mov	r1, r3
 5453 0052 FFF7FEFF 		bl	xgWriteByte
 5454              	.L216:
 5455              	.LBE8:
1300:../LSM9DS1_Driver.c **** 	}
1301:../LSM9DS1_Driver.c **** }
 5456              		.loc 1 1301 0
 5457 0056 07F11007 		add	r7, r7, #16
 5458 005a BD46     		mov	sp, r7
 5459 005c 80BD     		pop	{r7, pc}
 5460              		.cfi_endproc
 5461              	.LFE164:
 5463 005e 00BF     		.section	.text.setMagODR,"ax",%progbits
 5464              		.align	2
 5465              		.global	setMagODR
 5466              		.thumb
 5467              		.thumb_func
 5469              	setMagODR:
 5470              	.LFB165:
1302:../LSM9DS1_Driver.c **** 
1303:../LSM9DS1_Driver.c **** void setMagODR(uint8_t mRate)
1304:../LSM9DS1_Driver.c **** {
 5471              		.loc 1 1304 0
 5472              		.cfi_startproc
 5473              		@ args = 0, pretend = 0, frame = 16
 5474              		@ frame_needed = 1, uses_anonymous_args = 0
 5475 0000 80B5     		push	{r7, lr}
 5476              	.LCFI148:
 5477              		.cfi_def_cfa_offset 8
 5478              		.cfi_offset 7, -8
 5479              		.cfi_offset 14, -4
 5480 0002 84B0     		sub	sp, sp, #16
 5481              	.LCFI149:
 5482              		.cfi_def_cfa_offset 24
 5483 0004 00AF     		add	r7, sp, #0
 5484              	.LCFI150:
 5485              		.cfi_def_cfa_register 7
 5486 0006 0346     		mov	r3, r0
 5487 0008 FB71     		strb	r3, [r7, #7]
1305:../LSM9DS1_Driver.c **** 	// We need to preserve the other bytes in CTRL_REG5_XM. So, first read it:
1306:../LSM9DS1_Driver.c **** 	uint8_t temp = mReadByte(CTRL_REG1_M);
 5488              		.loc 1 1306 0
 5489 000a 4FF02000 		mov	r0, #32
 5490 000e FFF7FEFF 		bl	mReadByte
 5491 0012 0346     		mov	r3, r0
 5492 0014 FB73     		strb	r3, [r7, #15]
1307:../LSM9DS1_Driver.c **** 	// Then mask out the mag ODR bits:
1308:../LSM9DS1_Driver.c **** 	temp &= 0xFF^(0x7 << 2);
 5493              		.loc 1 1308 0
 5494 0016 FB7B     		ldrb	r3, [r7, #15]
 5495 0018 23F01C03 		bic	r3, r3, #28
 5496 001c FB73     		strb	r3, [r7, #15]
1309:../LSM9DS1_Driver.c **** 	// Then shift in our new ODR bits:
1310:../LSM9DS1_Driver.c **** 	temp |= ((mRate & 0x07) << 2);
 5497              		.loc 1 1310 0
 5498 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5499 0020 03F00703 		and	r3, r3, #7
 5500 0024 4FEA8303 		lsl	r3, r3, #2
 5501 0028 DAB2     		uxtb	r2, r3
 5502 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5503 002c 1343     		orrs	r3, r3, r2
 5504 002e DBB2     		uxtb	r3, r3
 5505 0030 FB73     		strb	r3, [r7, #15]
1311:../LSM9DS1_Driver.c **** 	settings.mag.sampleRate = mRate & 0x07;
 5506              		.loc 1 1311 0
 5507 0032 FB79     		ldrb	r3, [r7, #7]
 5508 0034 03F00703 		and	r3, r3, #7
 5509 0038 DAB2     		uxtb	r2, r3
 5510 003a 40F20003 		movw	r3, #:lower16:settings
 5511 003e C0F20003 		movt	r3, #:upper16:settings
 5512 0042 83F82120 		strb	r2, [r3, #33]
1312:../LSM9DS1_Driver.c **** 	// And write the new register value back into CTRL_REG5_XM:
1313:../LSM9DS1_Driver.c **** 	mWriteByte(CTRL_REG1_M, temp);
 5513              		.loc 1 1313 0
 5514 0046 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5515 0048 4FF02000 		mov	r0, #32
 5516 004c 1946     		mov	r1, r3
 5517 004e FFF7FEFF 		bl	mWriteByte
1314:../LSM9DS1_Driver.c **** }
 5518              		.loc 1 1314 0
 5519 0052 07F11007 		add	r7, r7, #16
 5520 0056 BD46     		mov	sp, r7
 5521 0058 80BD     		pop	{r7, pc}
 5522              		.cfi_endproc
 5523              	.LFE165:
 5525 005a 00BF     		.section	.text.configInt,"ax",%progbits
 5526              		.align	2
 5527              		.global	configInt
 5528              		.thumb
 5529              		.thumb_func
 5531              	configInt:
 5532              	.LFB166:
1315:../LSM9DS1_Driver.c **** 
1316:../LSM9DS1_Driver.c **** void configInt(interrupt_select interupt, uint8_t generator, h_lactive activeLow, pp_od pushPull)
1317:../LSM9DS1_Driver.c **** {
 5533              		.loc 1 1317 0
 5534              		.cfi_startproc
 5535              		@ args = 0, pretend = 0, frame = 16
 5536              		@ frame_needed = 1, uses_anonymous_args = 0
 5537 0000 80B5     		push	{r7, lr}
 5538              	.LCFI151:
 5539              		.cfi_def_cfa_offset 8
 5540              		.cfi_offset 7, -8
 5541              		.cfi_offset 14, -4
 5542 0002 84B0     		sub	sp, sp, #16
 5543              	.LCFI152:
 5544              		.cfi_def_cfa_offset 24
 5545 0004 00AF     		add	r7, sp, #0
 5546              	.LCFI153:
 5547              		.cfi_def_cfa_register 7
 5548 0006 F871     		strb	r0, [r7, #7]
 5549 0008 B971     		strb	r1, [r7, #6]
 5550 000a 7A71     		strb	r2, [r7, #5]
 5551 000c 3B71     		strb	r3, [r7, #4]
1318:../LSM9DS1_Driver.c **** 	// Write to INT1_CTRL or INT2_CTRL. [interupt] should already be one of
1319:../LSM9DS1_Driver.c **** 	// those two values.
1320:../LSM9DS1_Driver.c **** 	// [generator] should be an OR'd list of values from the interrupt_generators enum
1321:../LSM9DS1_Driver.c **** 	xgWriteByte(interupt, generator);
 5552              		.loc 1 1321 0
 5553 000e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5554 0010 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5555 0012 1046     		mov	r0, r2
 5556 0014 1946     		mov	r1, r3
 5557 0016 FFF7FEFF 		bl	xgWriteByte
1322:../LSM9DS1_Driver.c **** 
1323:../LSM9DS1_Driver.c **** 	// Configure CTRL_REG8
1324:../LSM9DS1_Driver.c **** 	uint8_t temp;
1325:../LSM9DS1_Driver.c **** 	temp = xgReadByte(CTRL_REG8);
 5558              		.loc 1 1325 0
 5559 001a 4FF02200 		mov	r0, #34
 5560 001e FFF7FEFF 		bl	xgReadByte
 5561 0022 0346     		mov	r3, r0
 5562 0024 FB73     		strb	r3, [r7, #15]
1326:../LSM9DS1_Driver.c **** 
1327:../LSM9DS1_Driver.c **** 	if (activeLow) temp |= (1<<5);
 5563              		.loc 1 1327 0
 5564 0026 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 5565 0028 002B     		cmp	r3, #0
 5566 002a 04D0     		beq	.L220
 5567              		.loc 1 1327 0 is_stmt 0 discriminator 1
 5568 002c FB7B     		ldrb	r3, [r7, #15]
 5569 002e 43F02003 		orr	r3, r3, #32
 5570 0032 FB73     		strb	r3, [r7, #15]
 5571 0034 03E0     		b	.L221
 5572              	.L220:
1328:../LSM9DS1_Driver.c **** 	else temp &= ~(1<<5);
 5573              		.loc 1 1328 0 is_stmt 1
 5574 0036 FB7B     		ldrb	r3, [r7, #15]
 5575 0038 23F02003 		bic	r3, r3, #32
 5576 003c FB73     		strb	r3, [r7, #15]
 5577              	.L221:
1329:../LSM9DS1_Driver.c **** 
1330:../LSM9DS1_Driver.c **** 	if (pushPull) temp &= ~(1<<4);
 5578              		.loc 1 1330 0
 5579 003e 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 5580 0040 002B     		cmp	r3, #0
 5581 0042 04D0     		beq	.L222
 5582              		.loc 1 1330 0 is_stmt 0 discriminator 1
 5583 0044 FB7B     		ldrb	r3, [r7, #15]
 5584 0046 23F01003 		bic	r3, r3, #16
 5585 004a FB73     		strb	r3, [r7, #15]
 5586 004c 03E0     		b	.L223
 5587              	.L222:
1331:../LSM9DS1_Driver.c **** 	else temp |= (1<<4);
 5588              		.loc 1 1331 0 is_stmt 1
 5589 004e FB7B     		ldrb	r3, [r7, #15]
 5590 0050 43F01003 		orr	r3, r3, #16
 5591 0054 FB73     		strb	r3, [r7, #15]
 5592              	.L223:
1332:../LSM9DS1_Driver.c **** 
1333:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG8, temp);
 5593              		.loc 1 1333 0
 5594 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5595 0058 4FF02200 		mov	r0, #34
 5596 005c 1946     		mov	r1, r3
 5597 005e FFF7FEFF 		bl	xgWriteByte
1334:../LSM9DS1_Driver.c **** }
 5598              		.loc 1 1334 0
 5599 0062 07F11007 		add	r7, r7, #16
 5600 0066 BD46     		mov	sp, r7
 5601 0068 80BD     		pop	{r7, pc}
 5602              		.cfi_endproc
 5603              	.LFE166:
 5605 006a 00BF     		.section	.text.configInactivity,"ax",%progbits
 5606              		.align	2
 5607              		.global	configInactivity
 5608              		.thumb
 5609              		.thumb_func
 5611              	configInactivity:
 5612              	.LFB167:
1335:../LSM9DS1_Driver.c **** 
1336:../LSM9DS1_Driver.c **** 
1337:../LSM9DS1_Driver.c **** void configInactivity(uint8_t duration, uint8_t threshold, bool sleepOn)
1338:../LSM9DS1_Driver.c **** {
 5613              		.loc 1 1338 0
 5614              		.cfi_startproc
 5615              		@ args = 0, pretend = 0, frame = 16
 5616              		@ frame_needed = 1, uses_anonymous_args = 0
 5617 0000 80B5     		push	{r7, lr}
 5618              	.LCFI154:
 5619              		.cfi_def_cfa_offset 8
 5620              		.cfi_offset 7, -8
 5621              		.cfi_offset 14, -4
 5622 0002 84B0     		sub	sp, sp, #16
 5623              	.LCFI155:
 5624              		.cfi_def_cfa_offset 24
 5625 0004 00AF     		add	r7, sp, #0
 5626              	.LCFI156:
 5627              		.cfi_def_cfa_register 7
 5628 0006 1346     		mov	r3, r2
 5629 0008 0246     		mov	r2, r0
 5630 000a FA71     		strb	r2, [r7, #7]
 5631 000c 0A46     		mov	r2, r1
 5632 000e BA71     		strb	r2, [r7, #6]
 5633 0010 7B71     		strb	r3, [r7, #5]
1339:../LSM9DS1_Driver.c **** 	uint8_t temp = 0;
 5634              		.loc 1 1339 0
 5635 0012 4FF00003 		mov	r3, #0
 5636 0016 FB73     		strb	r3, [r7, #15]
1340:../LSM9DS1_Driver.c **** 
1341:../LSM9DS1_Driver.c **** 	temp = threshold & 0x7F;
 5637              		.loc 1 1341 0
 5638 0018 BB79     		ldrb	r3, [r7, #6]
 5639 001a 03F07F03 		and	r3, r3, #127
 5640 001e FB73     		strb	r3, [r7, #15]
1342:../LSM9DS1_Driver.c **** 	if (sleepOn) temp |= (1<<7);
 5641              		.loc 1 1342 0
 5642 0020 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 5643 0022 002B     		cmp	r3, #0
 5644 0024 03D0     		beq	.L225
 5645              		.loc 1 1342 0 is_stmt 0 discriminator 1
 5646 0026 FB7B     		ldrb	r3, [r7, #15]
 5647 0028 63F07F03 		orn	r3, r3, #127
 5648 002c FB73     		strb	r3, [r7, #15]
 5649              	.L225:
1343:../LSM9DS1_Driver.c **** 	xgWriteByte(ACT_THS, temp);
 5650              		.loc 1 1343 0 is_stmt 1
 5651 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5652 0030 4FF00400 		mov	r0, #4
 5653 0034 1946     		mov	r1, r3
 5654 0036 FFF7FEFF 		bl	xgWriteByte
1344:../LSM9DS1_Driver.c **** 
1345:../LSM9DS1_Driver.c **** 	xgWriteByte(ACT_DUR, duration);
 5655              		.loc 1 1345 0
 5656 003a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5657 003c 4FF00500 		mov	r0, #5
 5658 0040 1946     		mov	r1, r3
 5659 0042 FFF7FEFF 		bl	xgWriteByte
1346:../LSM9DS1_Driver.c **** }
 5660              		.loc 1 1346 0
 5661 0046 07F11007 		add	r7, r7, #16
 5662 004a BD46     		mov	sp, r7
 5663 004c 80BD     		pop	{r7, pc}
 5664              		.cfi_endproc
 5665              	.LFE167:
 5667 004e 00BF     		.section	.text.getInactivity,"ax",%progbits
 5668              		.align	2
 5669              		.global	getInactivity
 5670              		.thumb
 5671              		.thumb_func
 5673              	getInactivity:
 5674              	.LFB168:
1347:../LSM9DS1_Driver.c **** 
1348:../LSM9DS1_Driver.c **** 
1349:../LSM9DS1_Driver.c **** uint8_t getInactivity(void)
1350:../LSM9DS1_Driver.c **** {
 5675              		.loc 1 1350 0
 5676              		.cfi_startproc
 5677              		@ args = 0, pretend = 0, frame = 8
 5678              		@ frame_needed = 1, uses_anonymous_args = 0
 5679 0000 80B5     		push	{r7, lr}
 5680              	.LCFI157:
 5681              		.cfi_def_cfa_offset 8
 5682              		.cfi_offset 7, -8
 5683              		.cfi_offset 14, -4
 5684 0002 82B0     		sub	sp, sp, #8
 5685              	.LCFI158:
 5686              		.cfi_def_cfa_offset 16
 5687 0004 00AF     		add	r7, sp, #0
 5688              	.LCFI159:
 5689              		.cfi_def_cfa_register 7
1351:../LSM9DS1_Driver.c **** 	uint8_t temp = xgReadByte(STATUS_REG_0);
 5690              		.loc 1 1351 0
 5691 0006 4FF01700 		mov	r0, #23
 5692 000a FFF7FEFF 		bl	xgReadByte
 5693 000e 0346     		mov	r3, r0
 5694 0010 FB71     		strb	r3, [r7, #7]
1352:../LSM9DS1_Driver.c **** 	temp &= (0x10);
 5695              		.loc 1 1352 0
 5696 0012 FB79     		ldrb	r3, [r7, #7]
 5697 0014 03F01003 		and	r3, r3, #16
 5698 0018 FB71     		strb	r3, [r7, #7]
1353:../LSM9DS1_Driver.c **** 	return temp;
 5699              		.loc 1 1353 0
 5700 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1354:../LSM9DS1_Driver.c **** }
 5701              		.loc 1 1354 0
 5702 001c 1846     		mov	r0, r3
 5703 001e 07F10807 		add	r7, r7, #8
 5704 0022 BD46     		mov	sp, r7
 5705 0024 80BD     		pop	{r7, pc}
 5706              		.cfi_endproc
 5707              	.LFE168:
 5709 0026 00BF     		.section	.text.configAccelInt,"ax",%progbits
 5710              		.align	2
 5711              		.global	configAccelInt
 5712              		.thumb
 5713              		.thumb_func
 5715              	configAccelInt:
 5716              	.LFB169:
1355:../LSM9DS1_Driver.c **** 
1356:../LSM9DS1_Driver.c **** void configAccelInt(uint8_t generator, bool andInterrupts)
1357:../LSM9DS1_Driver.c **** {
 5717              		.loc 1 1357 0
 5718              		.cfi_startproc
 5719              		@ args = 0, pretend = 0, frame = 16
 5720              		@ frame_needed = 1, uses_anonymous_args = 0
 5721 0000 80B5     		push	{r7, lr}
 5722              	.LCFI160:
 5723              		.cfi_def_cfa_offset 8
 5724              		.cfi_offset 7, -8
 5725              		.cfi_offset 14, -4
 5726 0002 84B0     		sub	sp, sp, #16
 5727              	.LCFI161:
 5728              		.cfi_def_cfa_offset 24
 5729 0004 00AF     		add	r7, sp, #0
 5730              	.LCFI162:
 5731              		.cfi_def_cfa_register 7
 5732 0006 0246     		mov	r2, r0
 5733 0008 0B46     		mov	r3, r1
 5734 000a FA71     		strb	r2, [r7, #7]
 5735 000c BB71     		strb	r3, [r7, #6]
1358:../LSM9DS1_Driver.c **** 	// Use variables from accel_interrupt_generator, OR'd together to create
1359:../LSM9DS1_Driver.c **** 	// the [generator]value.
1360:../LSM9DS1_Driver.c **** 	uint8_t temp = generator;
 5736              		.loc 1 1360 0
 5737 000e FB79     		ldrb	r3, [r7, #7]
 5738 0010 FB73     		strb	r3, [r7, #15]
1361:../LSM9DS1_Driver.c **** 	if (andInterrupts) temp |= 0x80;
 5739              		.loc 1 1361 0
 5740 0012 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5741 0014 002B     		cmp	r3, #0
 5742 0016 03D0     		beq	.L229
 5743              		.loc 1 1361 0 is_stmt 0 discriminator 1
 5744 0018 FB7B     		ldrb	r3, [r7, #15]
 5745 001a 63F07F03 		orn	r3, r3, #127
 5746 001e FB73     		strb	r3, [r7, #15]
 5747              	.L229:
1362:../LSM9DS1_Driver.c **** 	xgWriteByte(INT_GEN_CFG_XL, temp);
 5748              		.loc 1 1362 0 is_stmt 1
 5749 0020 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5750 0022 4FF00600 		mov	r0, #6
 5751 0026 1946     		mov	r1, r3
 5752 0028 FFF7FEFF 		bl	xgWriteByte
1363:../LSM9DS1_Driver.c **** }
 5753              		.loc 1 1363 0
 5754 002c 07F11007 		add	r7, r7, #16
 5755 0030 BD46     		mov	sp, r7
 5756 0032 80BD     		pop	{r7, pc}
 5757              		.cfi_endproc
 5758              	.LFE169:
 5760              		.section	.text.configAccelThs,"ax",%progbits
 5761              		.align	2
 5762              		.global	configAccelThs
 5763              		.thumb
 5764              		.thumb_func
 5766              	configAccelThs:
 5767              	.LFB170:
1364:../LSM9DS1_Driver.c **** 
1365:../LSM9DS1_Driver.c **** void configAccelThs(uint8_t threshold, lsm9ds1_axis axis, uint8_t duration, bool wait)
1366:../LSM9DS1_Driver.c **** {
 5768              		.loc 1 1366 0
 5769              		.cfi_startproc
 5770              		@ args = 0, pretend = 0, frame = 16
 5771              		@ frame_needed = 1, uses_anonymous_args = 0
 5772 0000 80B5     		push	{r7, lr}
 5773              	.LCFI163:
 5774              		.cfi_def_cfa_offset 8
 5775              		.cfi_offset 7, -8
 5776              		.cfi_offset 14, -4
 5777 0002 84B0     		sub	sp, sp, #16
 5778              	.LCFI164:
 5779              		.cfi_def_cfa_offset 24
 5780 0004 00AF     		add	r7, sp, #0
 5781              	.LCFI165:
 5782              		.cfi_def_cfa_register 7
 5783 0006 F871     		strb	r0, [r7, #7]
 5784 0008 B971     		strb	r1, [r7, #6]
 5785 000a 7A71     		strb	r2, [r7, #5]
 5786 000c 3B71     		strb	r3, [r7, #4]
1367:../LSM9DS1_Driver.c **** 	// Write threshold value to INT_GEN_THS_?_XL.
1368:../LSM9DS1_Driver.c **** 	// axis will be 0, 1, or 2 (x, y, z respectively)
1369:../LSM9DS1_Driver.c **** 	xgWriteByte(INT_GEN_THS_X_XL + axis, threshold);
 5787              		.loc 1 1369 0
 5788 000e BB79     		ldrb	r3, [r7, #6]
 5789 0010 03F10703 		add	r3, r3, #7
 5790 0014 DAB2     		uxtb	r2, r3
 5791 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5792 0018 1046     		mov	r0, r2
 5793 001a 1946     		mov	r1, r3
 5794 001c FFF7FEFF 		bl	xgWriteByte
1370:../LSM9DS1_Driver.c **** 
1371:../LSM9DS1_Driver.c **** 	// Write duration and wait to INT_GEN_DUR_XL
1372:../LSM9DS1_Driver.c **** 	uint8_t temp;
1373:../LSM9DS1_Driver.c **** 	temp = (duration & 0x7F);
 5795              		.loc 1 1373 0
 5796 0020 7B79     		ldrb	r3, [r7, #5]
 5797 0022 03F07F03 		and	r3, r3, #127
 5798 0026 FB73     		strb	r3, [r7, #15]
1374:../LSM9DS1_Driver.c **** 	if (wait) temp |= 0x80;
 5799              		.loc 1 1374 0
 5800 0028 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 5801 002a 002B     		cmp	r3, #0
 5802 002c 03D0     		beq	.L231
 5803              		.loc 1 1374 0 is_stmt 0 discriminator 1
 5804 002e FB7B     		ldrb	r3, [r7, #15]
 5805 0030 63F07F03 		orn	r3, r3, #127
 5806 0034 FB73     		strb	r3, [r7, #15]
 5807              	.L231:
1375:../LSM9DS1_Driver.c **** 	xgWriteByte(INT_GEN_DUR_XL, temp);
 5808              		.loc 1 1375 0 is_stmt 1
 5809 0036 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5810 0038 4FF00A00 		mov	r0, #10
 5811 003c 1946     		mov	r1, r3
 5812 003e FFF7FEFF 		bl	xgWriteByte
1376:../LSM9DS1_Driver.c **** }
 5813              		.loc 1 1376 0
 5814 0042 07F11007 		add	r7, r7, #16
 5815 0046 BD46     		mov	sp, r7
 5816 0048 80BD     		pop	{r7, pc}
 5817              		.cfi_endproc
 5818              	.LFE170:
 5820 004a 00BF     		.section	.text.getAccelIntSrc,"ax",%progbits
 5821              		.align	2
 5822              		.global	getAccelIntSrc
 5823              		.thumb
 5824              		.thumb_func
 5826              	getAccelIntSrc:
 5827              	.LFB171:
1377:../LSM9DS1_Driver.c **** 
1378:../LSM9DS1_Driver.c **** uint8_t getAccelIntSrc(void)
1379:../LSM9DS1_Driver.c **** {
 5828              		.loc 1 1379 0
 5829              		.cfi_startproc
 5830              		@ args = 0, pretend = 0, frame = 8
 5831              		@ frame_needed = 1, uses_anonymous_args = 0
 5832 0000 80B5     		push	{r7, lr}
 5833              	.LCFI166:
 5834              		.cfi_def_cfa_offset 8
 5835              		.cfi_offset 7, -8
 5836              		.cfi_offset 14, -4
 5837 0002 82B0     		sub	sp, sp, #8
 5838              	.LCFI167:
 5839              		.cfi_def_cfa_offset 16
 5840 0004 00AF     		add	r7, sp, #0
 5841              	.LCFI168:
 5842              		.cfi_def_cfa_register 7
1380:../LSM9DS1_Driver.c **** 	uint8_t intSrc = xgReadByte(INT_GEN_SRC_XL);
 5843              		.loc 1 1380 0
 5844 0006 4FF02600 		mov	r0, #38
 5845 000a FFF7FEFF 		bl	xgReadByte
 5846 000e 0346     		mov	r3, r0
 5847 0010 FB71     		strb	r3, [r7, #7]
1381:../LSM9DS1_Driver.c **** 
1382:../LSM9DS1_Driver.c **** 	// Check if the IA_XL (interrupt active) bit is set
1383:../LSM9DS1_Driver.c **** 	if (intSrc & (1<<6))
 5848              		.loc 1 1383 0
 5849 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5850 0014 03F04003 		and	r3, r3, #64
 5851 0018 002B     		cmp	r3, #0
 5852 001a 04D0     		beq	.L233
1384:../LSM9DS1_Driver.c **** 	{
1385:../LSM9DS1_Driver.c **** 		return (intSrc & 0x3F);
 5853              		.loc 1 1385 0
 5854 001c FB79     		ldrb	r3, [r7, #7]
 5855 001e 03F03F03 		and	r3, r3, #63
 5856 0022 DBB2     		uxtb	r3, r3
 5857 0024 01E0     		b	.L234
 5858              	.L233:
1386:../LSM9DS1_Driver.c **** 	}
1387:../LSM9DS1_Driver.c **** 
1388:../LSM9DS1_Driver.c **** 	return 0;
 5859              		.loc 1 1388 0
 5860 0026 4FF00003 		mov	r3, #0
 5861              	.L234:
1389:../LSM9DS1_Driver.c **** }
 5862              		.loc 1 1389 0
 5863 002a 1846     		mov	r0, r3
 5864 002c 07F10807 		add	r7, r7, #8
 5865 0030 BD46     		mov	sp, r7
 5866 0032 80BD     		pop	{r7, pc}
 5867              		.cfi_endproc
 5868              	.LFE171:
 5870              		.section	.text.configGyroInt,"ax",%progbits
 5871              		.align	2
 5872              		.global	configGyroInt
 5873              		.thumb
 5874              		.thumb_func
 5876              	configGyroInt:
 5877              	.LFB172:
1390:../LSM9DS1_Driver.c **** 
1391:../LSM9DS1_Driver.c **** void configGyroInt(uint8_t generator, bool aoi, bool latch)
1392:../LSM9DS1_Driver.c **** {
 5878              		.loc 1 1392 0
 5879              		.cfi_startproc
 5880              		@ args = 0, pretend = 0, frame = 16
 5881              		@ frame_needed = 1, uses_anonymous_args = 0
 5882 0000 80B5     		push	{r7, lr}
 5883              	.LCFI169:
 5884              		.cfi_def_cfa_offset 8
 5885              		.cfi_offset 7, -8
 5886              		.cfi_offset 14, -4
 5887 0002 84B0     		sub	sp, sp, #16
 5888              	.LCFI170:
 5889              		.cfi_def_cfa_offset 24
 5890 0004 00AF     		add	r7, sp, #0
 5891              	.LCFI171:
 5892              		.cfi_def_cfa_register 7
 5893 0006 1346     		mov	r3, r2
 5894 0008 0246     		mov	r2, r0
 5895 000a FA71     		strb	r2, [r7, #7]
 5896 000c 0A46     		mov	r2, r1
 5897 000e BA71     		strb	r2, [r7, #6]
 5898 0010 7B71     		strb	r3, [r7, #5]
1393:../LSM9DS1_Driver.c **** 	// Use variables from accel_interrupt_generator, OR'd together to create
1394:../LSM9DS1_Driver.c **** 	// the [generator]value.
1395:../LSM9DS1_Driver.c **** 	uint8_t temp = generator;
 5899              		.loc 1 1395 0
 5900 0012 FB79     		ldrb	r3, [r7, #7]
 5901 0014 FB73     		strb	r3, [r7, #15]
1396:../LSM9DS1_Driver.c **** 	if (aoi) temp |= 0x80;
 5902              		.loc 1 1396 0
 5903 0016 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5904 0018 002B     		cmp	r3, #0
 5905 001a 03D0     		beq	.L236
 5906              		.loc 1 1396 0 is_stmt 0 discriminator 1
 5907 001c FB7B     		ldrb	r3, [r7, #15]
 5908 001e 63F07F03 		orn	r3, r3, #127
 5909 0022 FB73     		strb	r3, [r7, #15]
 5910              	.L236:
1397:../LSM9DS1_Driver.c **** 	if (latch) temp |= 0x40;
 5911              		.loc 1 1397 0 is_stmt 1
 5912 0024 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 5913 0026 002B     		cmp	r3, #0
 5914 0028 03D0     		beq	.L237
 5915              		.loc 1 1397 0 is_stmt 0 discriminator 1
 5916 002a FB7B     		ldrb	r3, [r7, #15]
 5917 002c 43F04003 		orr	r3, r3, #64
 5918 0030 FB73     		strb	r3, [r7, #15]
 5919              	.L237:
1398:../LSM9DS1_Driver.c **** 	xgWriteByte(INT_GEN_CFG_G, temp);
 5920              		.loc 1 1398 0 is_stmt 1
 5921 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5922 0034 4FF03000 		mov	r0, #48
 5923 0038 1946     		mov	r1, r3
 5924 003a FFF7FEFF 		bl	xgWriteByte
1399:../LSM9DS1_Driver.c **** }
 5925              		.loc 1 1399 0
 5926 003e 07F11007 		add	r7, r7, #16
 5927 0042 BD46     		mov	sp, r7
 5928 0044 80BD     		pop	{r7, pc}
 5929              		.cfi_endproc
 5930              	.LFE172:
 5932 0046 00BF     		.section	.text.configGyroThs,"ax",%progbits
 5933              		.align	2
 5934              		.global	configGyroThs
 5935              		.thumb
 5936              		.thumb_func
 5938              	configGyroThs:
 5939              	.LFB173:
1400:../LSM9DS1_Driver.c **** 
1401:../LSM9DS1_Driver.c **** 
1402:../LSM9DS1_Driver.c **** void configGyroThs(int16_t threshold, lsm9ds1_axis axis, uint8_t duration, bool wait)
1403:../LSM9DS1_Driver.c **** {
 5940              		.loc 1 1403 0
 5941              		.cfi_startproc
 5942              		@ args = 0, pretend = 0, frame = 16
 5943              		@ frame_needed = 1, uses_anonymous_args = 0
 5944 0000 80B5     		push	{r7, lr}
 5945              	.LCFI172:
 5946              		.cfi_def_cfa_offset 8
 5947              		.cfi_offset 7, -8
 5948              		.cfi_offset 14, -4
 5949 0002 84B0     		sub	sp, sp, #16
 5950              	.LCFI173:
 5951              		.cfi_def_cfa_offset 24
 5952 0004 00AF     		add	r7, sp, #0
 5953              	.LCFI174:
 5954              		.cfi_def_cfa_register 7
 5955 0006 F880     		strh	r0, [r7, #6]	@ movhi
 5956 0008 7971     		strb	r1, [r7, #5]
 5957 000a 3A71     		strb	r2, [r7, #4]
 5958 000c FB70     		strb	r3, [r7, #3]
1404:../LSM9DS1_Driver.c **** 	uint8_t buffer[2];
1405:../LSM9DS1_Driver.c **** 	buffer[0] = (threshold & 0x7F00) >> 8;
 5959              		.loc 1 1405 0
 5960 000e FB88     		ldrh	r3, [r7, #6]
 5961 0010 03F4FE43 		and	r3, r3, #32512
 5962 0014 4FEA2323 		asr	r3, r3, #8
 5963 0018 DBB2     		uxtb	r3, r3
 5964 001a 3B73     		strb	r3, [r7, #12]
1406:../LSM9DS1_Driver.c **** 	buffer[1] = (threshold & 0x00FF);
 5965              		.loc 1 1406 0
 5966 001c FB88     		ldrh	r3, [r7, #6]	@ movhi
 5967 001e DBB2     		uxtb	r3, r3
 5968 0020 7B73     		strb	r3, [r7, #13]
1407:../LSM9DS1_Driver.c **** 	// Write threshold value to INT_GEN_THS_?H_G and  INT_GEN_THS_?L_G.
1408:../LSM9DS1_Driver.c **** 	// axis will be 0, 1, or 2 (x, y, z respectively)
1409:../LSM9DS1_Driver.c **** 	xgWriteByte(INT_GEN_THS_XH_G + (axis * 2), buffer[0]);
 5969              		.loc 1 1409 0
 5970 0022 7B79     		ldrb	r3, [r7, #5]
 5971 0024 4FEA4303 		lsl	r3, r3, #1
 5972 0028 DBB2     		uxtb	r3, r3
 5973 002a 03F13103 		add	r3, r3, #49
 5974 002e DAB2     		uxtb	r2, r3
 5975 0030 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 5976 0032 1046     		mov	r0, r2
 5977 0034 1946     		mov	r1, r3
 5978 0036 FFF7FEFF 		bl	xgWriteByte
1410:../LSM9DS1_Driver.c **** 	xgWriteByte(INT_GEN_THS_XH_G + 1 + (axis * 2), buffer[1]);
 5979              		.loc 1 1410 0
 5980 003a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 5981 003c 03F11903 		add	r3, r3, #25
 5982 0040 DBB2     		uxtb	r3, r3
 5983 0042 4FEA4303 		lsl	r3, r3, #1
 5984 0046 DAB2     		uxtb	r2, r3
 5985 0048 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 5986 004a 1046     		mov	r0, r2
 5987 004c 1946     		mov	r1, r3
 5988 004e FFF7FEFF 		bl	xgWriteByte
1411:../LSM9DS1_Driver.c **** 
1412:../LSM9DS1_Driver.c **** 	// Write duration and wait to INT_GEN_DUR_XL
1413:../LSM9DS1_Driver.c **** 	uint8_t temp;
1414:../LSM9DS1_Driver.c **** 	temp = (duration & 0x7F);
 5989              		.loc 1 1414 0
 5990 0052 3B79     		ldrb	r3, [r7, #4]
 5991 0054 03F07F03 		and	r3, r3, #127
 5992 0058 FB73     		strb	r3, [r7, #15]
1415:../LSM9DS1_Driver.c **** 	if (wait) temp |= 0x80;
 5993              		.loc 1 1415 0
 5994 005a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 5995 005c 002B     		cmp	r3, #0
 5996 005e 03D0     		beq	.L239
 5997              		.loc 1 1415 0 is_stmt 0 discriminator 1
 5998 0060 FB7B     		ldrb	r3, [r7, #15]
 5999 0062 63F07F03 		orn	r3, r3, #127
 6000 0066 FB73     		strb	r3, [r7, #15]
 6001              	.L239:
1416:../LSM9DS1_Driver.c **** 	xgWriteByte(INT_GEN_DUR_G, temp);
 6002              		.loc 1 1416 0 is_stmt 1
 6003 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6004 006a 4FF03700 		mov	r0, #55
 6005 006e 1946     		mov	r1, r3
 6006 0070 FFF7FEFF 		bl	xgWriteByte
1417:../LSM9DS1_Driver.c **** }
 6007              		.loc 1 1417 0
 6008 0074 07F11007 		add	r7, r7, #16
 6009 0078 BD46     		mov	sp, r7
 6010 007a 80BD     		pop	{r7, pc}
 6011              		.cfi_endproc
 6012              	.LFE173:
 6014              		.section	.text.getGyroIntSrc,"ax",%progbits
 6015              		.align	2
 6016              		.global	getGyroIntSrc
 6017              		.thumb
 6018              		.thumb_func
 6020              	getGyroIntSrc:
 6021              	.LFB174:
1418:../LSM9DS1_Driver.c **** 
1419:../LSM9DS1_Driver.c **** 
1420:../LSM9DS1_Driver.c **** uint8_t getGyroIntSrc()
1421:../LSM9DS1_Driver.c **** {
 6022              		.loc 1 1421 0
 6023              		.cfi_startproc
 6024              		@ args = 0, pretend = 0, frame = 8
 6025              		@ frame_needed = 1, uses_anonymous_args = 0
 6026 0000 80B5     		push	{r7, lr}
 6027              	.LCFI175:
 6028              		.cfi_def_cfa_offset 8
 6029              		.cfi_offset 7, -8
 6030              		.cfi_offset 14, -4
 6031 0002 82B0     		sub	sp, sp, #8
 6032              	.LCFI176:
 6033              		.cfi_def_cfa_offset 16
 6034 0004 00AF     		add	r7, sp, #0
 6035              	.LCFI177:
 6036              		.cfi_def_cfa_register 7
1422:../LSM9DS1_Driver.c **** 	uint8_t intSrc = xgReadByte(INT_GEN_SRC_G);
 6037              		.loc 1 1422 0
 6038 0006 4FF01400 		mov	r0, #20
 6039 000a FFF7FEFF 		bl	xgReadByte
 6040 000e 0346     		mov	r3, r0
 6041 0010 FB71     		strb	r3, [r7, #7]
1423:../LSM9DS1_Driver.c **** 
1424:../LSM9DS1_Driver.c **** 	// Check if the IA_G (interrupt active) bit is set
1425:../LSM9DS1_Driver.c **** 	if (intSrc & (1<<6))
 6042              		.loc 1 1425 0
 6043 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6044 0014 03F04003 		and	r3, r3, #64
 6045 0018 002B     		cmp	r3, #0
 6046 001a 04D0     		beq	.L241
1426:../LSM9DS1_Driver.c **** 	{
1427:../LSM9DS1_Driver.c **** 		return (intSrc & 0x3F);
 6047              		.loc 1 1427 0
 6048 001c FB79     		ldrb	r3, [r7, #7]
 6049 001e 03F03F03 		and	r3, r3, #63
 6050 0022 DBB2     		uxtb	r3, r3
 6051 0024 01E0     		b	.L242
 6052              	.L241:
1428:../LSM9DS1_Driver.c **** 	}
1429:../LSM9DS1_Driver.c **** 
1430:../LSM9DS1_Driver.c **** 	return 0;
 6053              		.loc 1 1430 0
 6054 0026 4FF00003 		mov	r3, #0
 6055              	.L242:
1431:../LSM9DS1_Driver.c **** }
 6056              		.loc 1 1431 0
 6057 002a 1846     		mov	r0, r3
 6058 002c 07F10807 		add	r7, r7, #8
 6059 0030 BD46     		mov	sp, r7
 6060 0032 80BD     		pop	{r7, pc}
 6061              		.cfi_endproc
 6062              	.LFE174:
 6064              		.section	.text.configMagInt,"ax",%progbits
 6065              		.align	2
 6066              		.global	configMagInt
 6067              		.thumb
 6068              		.thumb_func
 6070              	configMagInt:
 6071              	.LFB175:
1432:../LSM9DS1_Driver.c **** 
1433:../LSM9DS1_Driver.c **** 
1434:../LSM9DS1_Driver.c **** void configMagInt(uint8_t generator, h_lactive activeLow, bool latch)
1435:../LSM9DS1_Driver.c **** {
 6072              		.loc 1 1435 0
 6073              		.cfi_startproc
 6074              		@ args = 0, pretend = 0, frame = 16
 6075              		@ frame_needed = 1, uses_anonymous_args = 0
 6076 0000 80B5     		push	{r7, lr}
 6077              	.LCFI178:
 6078              		.cfi_def_cfa_offset 8
 6079              		.cfi_offset 7, -8
 6080              		.cfi_offset 14, -4
 6081 0002 84B0     		sub	sp, sp, #16
 6082              	.LCFI179:
 6083              		.cfi_def_cfa_offset 24
 6084 0004 00AF     		add	r7, sp, #0
 6085              	.LCFI180:
 6086              		.cfi_def_cfa_register 7
 6087 0006 1346     		mov	r3, r2
 6088 0008 0246     		mov	r2, r0
 6089 000a FA71     		strb	r2, [r7, #7]
 6090 000c 0A46     		mov	r2, r1
 6091 000e BA71     		strb	r2, [r7, #6]
 6092 0010 7B71     		strb	r3, [r7, #5]
1436:../LSM9DS1_Driver.c **** 	// Mask out non-generator bits (0-4)
1437:../LSM9DS1_Driver.c **** 	uint8_t config = (generator & 0xE0);
 6093              		.loc 1 1437 0
 6094 0012 FB79     		ldrb	r3, [r7, #7]
 6095 0014 23F01F03 		bic	r3, r3, #31
 6096 0018 FB73     		strb	r3, [r7, #15]
1438:../LSM9DS1_Driver.c **** 	// IEA bit is 0 for active-low, 1 for active-high.
1439:../LSM9DS1_Driver.c **** 	if (activeLow == INT_ACTIVE_HIGH) config |= (1<<2);
 6097              		.loc 1 1439 0
 6098 001a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 6099 001c 002B     		cmp	r3, #0
 6100 001e 03D1     		bne	.L244
 6101              		.loc 1 1439 0 is_stmt 0 discriminator 1
 6102 0020 FB7B     		ldrb	r3, [r7, #15]
 6103 0022 43F00403 		orr	r3, r3, #4
 6104 0026 FB73     		strb	r3, [r7, #15]
 6105              	.L244:
1440:../LSM9DS1_Driver.c **** 	// IEL bit is 0 for latched, 1 for not-latched
1441:../LSM9DS1_Driver.c **** 	if (!latch) config |= (1<<1);
 6106              		.loc 1 1441 0 is_stmt 1
 6107 0028 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 6108 002a 002B     		cmp	r3, #0
 6109 002c 03D1     		bne	.L245
 6110              		.loc 1 1441 0 is_stmt 0 discriminator 1
 6111 002e FB7B     		ldrb	r3, [r7, #15]
 6112 0030 43F00203 		orr	r3, r3, #2
 6113 0034 FB73     		strb	r3, [r7, #15]
 6114              	.L245:
1442:../LSM9DS1_Driver.c **** 	// As long as we have at least 1 generator, enable the interrupt
1443:../LSM9DS1_Driver.c **** 	if (generator != 0) config |= (1<<0);
 6115              		.loc 1 1443 0 is_stmt 1
 6116 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6117 0038 002B     		cmp	r3, #0
 6118 003a 03D0     		beq	.L246
 6119              		.loc 1 1443 0 is_stmt 0 discriminator 1
 6120 003c FB7B     		ldrb	r3, [r7, #15]
 6121 003e 43F00103 		orr	r3, r3, #1
 6122 0042 FB73     		strb	r3, [r7, #15]
 6123              	.L246:
1444:../LSM9DS1_Driver.c **** 
1445:../LSM9DS1_Driver.c **** 	mWriteByte(INT_CFG_M, config);
 6124              		.loc 1 1445 0 is_stmt 1
 6125 0044 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6126 0046 4FF03000 		mov	r0, #48
 6127 004a 1946     		mov	r1, r3
 6128 004c FFF7FEFF 		bl	mWriteByte
1446:../LSM9DS1_Driver.c **** }
 6129              		.loc 1 1446 0
 6130 0050 07F11007 		add	r7, r7, #16
 6131 0054 BD46     		mov	sp, r7
 6132 0056 80BD     		pop	{r7, pc}
 6133              		.cfi_endproc
 6134              	.LFE175:
 6136              		.section	.text.configMagThs,"ax",%progbits
 6137              		.align	2
 6138              		.global	configMagThs
 6139              		.thumb
 6140              		.thumb_func
 6142              	configMagThs:
 6143              	.LFB176:
1447:../LSM9DS1_Driver.c **** 
1448:../LSM9DS1_Driver.c **** 
1449:../LSM9DS1_Driver.c **** void configMagThs(uint16_t threshold)
1450:../LSM9DS1_Driver.c **** {
 6144              		.loc 1 1450 0
 6145              		.cfi_startproc
 6146              		@ args = 0, pretend = 0, frame = 8
 6147              		@ frame_needed = 1, uses_anonymous_args = 0
 6148 0000 80B5     		push	{r7, lr}
 6149              	.LCFI181:
 6150              		.cfi_def_cfa_offset 8
 6151              		.cfi_offset 7, -8
 6152              		.cfi_offset 14, -4
 6153 0002 82B0     		sub	sp, sp, #8
 6154              	.LCFI182:
 6155              		.cfi_def_cfa_offset 16
 6156 0004 00AF     		add	r7, sp, #0
 6157              	.LCFI183:
 6158              		.cfi_def_cfa_register 7
 6159 0006 0346     		mov	r3, r0
 6160 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1451:../LSM9DS1_Driver.c **** 	// Write high eight bits of [threshold] to INT_THS_H_M
1452:../LSM9DS1_Driver.c **** 	mWriteByte(INT_THS_H_M, (uint8_t)((threshold & 0x7F00) >> 8));
 6161              		.loc 1 1452 0
 6162 000a FB88     		ldrh	r3, [r7, #6]
 6163 000c 03F4FE43 		and	r3, r3, #32512
 6164 0010 4FEA2323 		asr	r3, r3, #8
 6165 0014 DBB2     		uxtb	r3, r3
 6166 0016 4FF03300 		mov	r0, #51
 6167 001a 1946     		mov	r1, r3
 6168 001c FFF7FEFF 		bl	mWriteByte
1453:../LSM9DS1_Driver.c **** 	// Write low eight bits of [threshold] to INT_THS_L_M
1454:../LSM9DS1_Driver.c **** 	mWriteByte(INT_THS_L_M, (uint8_t)(threshold & 0x00FF));
 6169              		.loc 1 1454 0
 6170 0020 FB88     		ldrh	r3, [r7, #6]	@ movhi
 6171 0022 DBB2     		uxtb	r3, r3
 6172 0024 4FF03200 		mov	r0, #50
 6173 0028 1946     		mov	r1, r3
 6174 002a FFF7FEFF 		bl	mWriteByte
1455:../LSM9DS1_Driver.c **** }
 6175              		.loc 1 1455 0
 6176 002e 07F10807 		add	r7, r7, #8
 6177 0032 BD46     		mov	sp, r7
 6178 0034 80BD     		pop	{r7, pc}
 6179              		.cfi_endproc
 6180              	.LFE176:
 6182 0036 00BF     		.section	.text.getMagIntSrc,"ax",%progbits
 6183              		.align	2
 6184              		.global	getMagIntSrc
 6185              		.thumb
 6186              		.thumb_func
 6188              	getMagIntSrc:
 6189              	.LFB177:
1456:../LSM9DS1_Driver.c **** 
1457:../LSM9DS1_Driver.c **** uint8_t getMagIntSrc(void)
1458:../LSM9DS1_Driver.c **** {
 6190              		.loc 1 1458 0
 6191              		.cfi_startproc
 6192              		@ args = 0, pretend = 0, frame = 8
 6193              		@ frame_needed = 1, uses_anonymous_args = 0
 6194 0000 80B5     		push	{r7, lr}
 6195              	.LCFI184:
 6196              		.cfi_def_cfa_offset 8
 6197              		.cfi_offset 7, -8
 6198              		.cfi_offset 14, -4
 6199 0002 82B0     		sub	sp, sp, #8
 6200              	.LCFI185:
 6201              		.cfi_def_cfa_offset 16
 6202 0004 00AF     		add	r7, sp, #0
 6203              	.LCFI186:
 6204              		.cfi_def_cfa_register 7
1459:../LSM9DS1_Driver.c **** 	uint8_t intSrc = mReadByte(INT_SRC_M);
 6205              		.loc 1 1459 0
 6206 0006 4FF03000 		mov	r0, #48
 6207 000a FFF7FEFF 		bl	mReadByte
 6208 000e 0346     		mov	r3, r0
 6209 0010 FB71     		strb	r3, [r7, #7]
1460:../LSM9DS1_Driver.c **** 
1461:../LSM9DS1_Driver.c **** 	// Check if the INT (interrupt active) bit is set
1462:../LSM9DS1_Driver.c **** 	if (intSrc & (1<<0))
 6210              		.loc 1 1462 0
 6211 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6212 0014 03F00103 		and	r3, r3, #1
 6213 0018 002B     		cmp	r3, #0
 6214 001a 04D0     		beq	.L249
1463:../LSM9DS1_Driver.c **** 	{
1464:../LSM9DS1_Driver.c **** 		return (intSrc & 0xFE);
 6215              		.loc 1 1464 0
 6216 001c FB79     		ldrb	r3, [r7, #7]
 6217 001e 23F00103 		bic	r3, r3, #1
 6218 0022 DBB2     		uxtb	r3, r3
 6219 0024 01E0     		b	.L250
 6220              	.L249:
1465:../LSM9DS1_Driver.c **** 	}
1466:../LSM9DS1_Driver.c **** 
1467:../LSM9DS1_Driver.c **** 	return 0;
 6221              		.loc 1 1467 0
 6222 0026 4FF00003 		mov	r3, #0
 6223              	.L250:
1468:../LSM9DS1_Driver.c **** }
 6224              		.loc 1 1468 0
 6225 002a 1846     		mov	r0, r3
 6226 002c 07F10807 		add	r7, r7, #8
 6227 0030 BD46     		mov	sp, r7
 6228 0032 80BD     		pop	{r7, pc}
 6229              		.cfi_endproc
 6230              	.LFE177:
 6232              		.section	.text.sleepGyro,"ax",%progbits
 6233              		.align	2
 6234              		.global	sleepGyro
 6235              		.thumb
 6236              		.thumb_func
 6238              	sleepGyro:
 6239              	.LFB178:
1469:../LSM9DS1_Driver.c **** 
1470:../LSM9DS1_Driver.c **** void sleepGyro(bool enable)
1471:../LSM9DS1_Driver.c **** {
 6240              		.loc 1 1471 0
 6241              		.cfi_startproc
 6242              		@ args = 0, pretend = 0, frame = 16
 6243              		@ frame_needed = 1, uses_anonymous_args = 0
 6244 0000 80B5     		push	{r7, lr}
 6245              	.LCFI187:
 6246              		.cfi_def_cfa_offset 8
 6247              		.cfi_offset 7, -8
 6248              		.cfi_offset 14, -4
 6249 0002 84B0     		sub	sp, sp, #16
 6250              	.LCFI188:
 6251              		.cfi_def_cfa_offset 24
 6252 0004 00AF     		add	r7, sp, #0
 6253              	.LCFI189:
 6254              		.cfi_def_cfa_register 7
 6255 0006 0346     		mov	r3, r0
 6256 0008 FB71     		strb	r3, [r7, #7]
1472:../LSM9DS1_Driver.c **** 	uint8_t temp = xgReadByte(CTRL_REG9);
 6257              		.loc 1 1472 0
 6258 000a 4FF02300 		mov	r0, #35
 6259 000e FFF7FEFF 		bl	xgReadByte
 6260 0012 0346     		mov	r3, r0
 6261 0014 FB73     		strb	r3, [r7, #15]
1473:../LSM9DS1_Driver.c **** 	if (enable) temp |= (1<<6);
 6262              		.loc 1 1473 0
 6263 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6264 0018 002B     		cmp	r3, #0
 6265 001a 04D0     		beq	.L252
 6266              		.loc 1 1473 0 is_stmt 0 discriminator 1
 6267 001c FB7B     		ldrb	r3, [r7, #15]
 6268 001e 43F04003 		orr	r3, r3, #64
 6269 0022 FB73     		strb	r3, [r7, #15]
 6270 0024 03E0     		b	.L253
 6271              	.L252:
1474:../LSM9DS1_Driver.c **** 	else temp &= ~(1<<6);
 6272              		.loc 1 1474 0 is_stmt 1
 6273 0026 FB7B     		ldrb	r3, [r7, #15]
 6274 0028 23F04003 		bic	r3, r3, #64
 6275 002c FB73     		strb	r3, [r7, #15]
 6276              	.L253:
1475:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG9, temp);
 6277              		.loc 1 1475 0
 6278 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6279 0030 4FF02300 		mov	r0, #35
 6280 0034 1946     		mov	r1, r3
 6281 0036 FFF7FEFF 		bl	xgWriteByte
1476:../LSM9DS1_Driver.c **** }
 6282              		.loc 1 1476 0
 6283 003a 07F11007 		add	r7, r7, #16
 6284 003e BD46     		mov	sp, r7
 6285 0040 80BD     		pop	{r7, pc}
 6286              		.cfi_endproc
 6287              	.LFE178:
 6289 0042 00BF     		.section	.text.getFIFOSamples,"ax",%progbits
 6290              		.align	2
 6291              		.global	getFIFOSamples
 6292              		.thumb
 6293              		.thumb_func
 6295              	getFIFOSamples:
 6296              	.LFB179:
1477:../LSM9DS1_Driver.c **** 
1478:../LSM9DS1_Driver.c **** 
1479:../LSM9DS1_Driver.c **** uint8_t getFIFOSamples(void)
1480:../LSM9DS1_Driver.c **** {
 6297              		.loc 1 1480 0
 6298              		.cfi_startproc
 6299              		@ args = 0, pretend = 0, frame = 0
 6300              		@ frame_needed = 1, uses_anonymous_args = 0
 6301 0000 80B5     		push	{r7, lr}
 6302              	.LCFI190:
 6303              		.cfi_def_cfa_offset 8
 6304              		.cfi_offset 7, -8
 6305              		.cfi_offset 14, -4
 6306 0002 00AF     		add	r7, sp, #0
 6307              	.LCFI191:
 6308              		.cfi_def_cfa_register 7
1481:../LSM9DS1_Driver.c **** 	return (xgReadByte(FIFO_SRC) & 0x3F);
 6309              		.loc 1 1481 0
 6310 0004 4FF02F00 		mov	r0, #47
 6311 0008 FFF7FEFF 		bl	xgReadByte
 6312 000c 0346     		mov	r3, r0
 6313 000e 03F03F03 		and	r3, r3, #63
 6314 0012 DBB2     		uxtb	r3, r3
1482:../LSM9DS1_Driver.c **** }
 6315              		.loc 1 1482 0
 6316 0014 1846     		mov	r0, r3
 6317 0016 80BD     		pop	{r7, pc}
 6318              		.cfi_endproc
 6319              	.LFE179:
 6321              		.section	.text.timerHandlerSendMsg,"ax",%progbits
 6322              		.align	2
 6323              		.global	timerHandlerSendMsg
 6324              		.thumb
 6325              		.thumb_func
 6327              	timerHandlerSendMsg:
 6328              	.LFB180:
1483:../LSM9DS1_Driver.c **** 
1484:../LSM9DS1_Driver.c **** void timerHandlerSendMsg(void *T)
1485:../LSM9DS1_Driver.c **** {
 6329              		.loc 1 1485 0
 6330              		.cfi_startproc
 6331              		@ args = 0, pretend = 0, frame = 8
 6332              		@ frame_needed = 1, uses_anonymous_args = 0
 6333 0000 90B5     		push	{r4, r7, lr}
 6334              	.LCFI192:
 6335              		.cfi_def_cfa_offset 12
 6336              		.cfi_offset 4, -12
 6337              		.cfi_offset 7, -8
 6338              		.cfi_offset 14, -4
 6339 0002 83B0     		sub	sp, sp, #12
 6340              	.LCFI193:
 6341              		.cfi_def_cfa_offset 24
 6342 0004 00AF     		add	r7, sp, #0
 6343              	.LCFI194:
 6344              		.cfi_def_cfa_register 7
 6345 0006 7860     		str	r0, [r7, #4]
1486:../LSM9DS1_Driver.c **** 	static int counter = 0;
1487:../LSM9DS1_Driver.c **** 
1488:../LSM9DS1_Driver.c **** 	send(&accelOsX[counter], strlen(&accelOsX[counter]));
 6346              		.loc 1 1488 0
 6347 0008 40F20003 		movw	r3, #:lower16:counter.9896
 6348 000c C0F20003 		movt	r3, #:upper16:counter.9896
 6349 0010 1A68     		ldr	r2, [r3, #0]
 6350 0012 40F20003 		movw	r3, #:lower16:accelOsX
 6351 0016 C0F20003 		movt	r3, #:upper16:accelOsX
 6352 001a D418     		adds	r4, r2, r3
 6353 001c 40F20003 		movw	r3, #:lower16:counter.9896
 6354 0020 C0F20003 		movt	r3, #:upper16:counter.9896
 6355 0024 1A68     		ldr	r2, [r3, #0]
 6356 0026 40F20003 		movw	r3, #:lower16:accelOsX
 6357 002a C0F20003 		movt	r3, #:upper16:accelOsX
 6358 002e D318     		adds	r3, r2, r3
 6359 0030 1846     		mov	r0, r3
 6360 0032 FFF7FEFF 		bl	strlen
 6361 0036 0346     		mov	r3, r0
 6362 0038 2046     		mov	r0, r4
 6363 003a 1946     		mov	r1, r3
 6364 003c FFF7FEFF 		bl	send
1489:../LSM9DS1_Driver.c **** 	send(&accelOsY[counter], strlen(&accelOsY[counter]));
 6365              		.loc 1 1489 0
 6366 0040 40F20003 		movw	r3, #:lower16:counter.9896
 6367 0044 C0F20003 		movt	r3, #:upper16:counter.9896
 6368 0048 1A68     		ldr	r2, [r3, #0]
 6369 004a 40F20003 		movw	r3, #:lower16:accelOsY
 6370 004e C0F20003 		movt	r3, #:upper16:accelOsY
 6371 0052 D418     		adds	r4, r2, r3
 6372 0054 40F20003 		movw	r3, #:lower16:counter.9896
 6373 0058 C0F20003 		movt	r3, #:upper16:counter.9896
 6374 005c 1A68     		ldr	r2, [r3, #0]
 6375 005e 40F20003 		movw	r3, #:lower16:accelOsY
 6376 0062 C0F20003 		movt	r3, #:upper16:accelOsY
 6377 0066 D318     		adds	r3, r2, r3
 6378 0068 1846     		mov	r0, r3
 6379 006a FFF7FEFF 		bl	strlen
 6380 006e 0346     		mov	r3, r0
 6381 0070 2046     		mov	r0, r4
 6382 0072 1946     		mov	r1, r3
 6383 0074 FFF7FEFF 		bl	send
1490:../LSM9DS1_Driver.c **** 	send(&accelOsZ[counter], strlen(&accelOsZ[counter]));
 6384              		.loc 1 1490 0
 6385 0078 40F20003 		movw	r3, #:lower16:counter.9896
 6386 007c C0F20003 		movt	r3, #:upper16:counter.9896
 6387 0080 1A68     		ldr	r2, [r3, #0]
 6388 0082 40F20003 		movw	r3, #:lower16:accelOsZ
 6389 0086 C0F20003 		movt	r3, #:upper16:accelOsZ
 6390 008a D418     		adds	r4, r2, r3
 6391 008c 40F20003 		movw	r3, #:lower16:counter.9896
 6392 0090 C0F20003 		movt	r3, #:upper16:counter.9896
 6393 0094 1A68     		ldr	r2, [r3, #0]
 6394 0096 40F20003 		movw	r3, #:lower16:accelOsZ
 6395 009a C0F20003 		movt	r3, #:upper16:accelOsZ
 6396 009e D318     		adds	r3, r2, r3
 6397 00a0 1846     		mov	r0, r3
 6398 00a2 FFF7FEFF 		bl	strlen
 6399 00a6 0346     		mov	r3, r0
 6400 00a8 2046     		mov	r0, r4
 6401 00aa 1946     		mov	r1, r3
 6402 00ac FFF7FEFF 		bl	send
1491:../LSM9DS1_Driver.c **** 
1492:../LSM9DS1_Driver.c **** 	counter++;
 6403              		.loc 1 1492 0
 6404 00b0 40F20003 		movw	r3, #:lower16:counter.9896
 6405 00b4 C0F20003 		movt	r3, #:upper16:counter.9896
 6406 00b8 1B68     		ldr	r3, [r3, #0]
 6407 00ba 03F10102 		add	r2, r3, #1
 6408 00be 40F20003 		movw	r3, #:lower16:counter.9896
 6409 00c2 C0F20003 		movt	r3, #:upper16:counter.9896
 6410 00c6 1A60     		str	r2, [r3, #0]
1493:../LSM9DS1_Driver.c **** 
1494:../LSM9DS1_Driver.c **** 	if(100 == counter)
1495:../LSM9DS1_Driver.c **** 	{
1496:../LSM9DS1_Driver.c **** 		;
1497:../LSM9DS1_Driver.c **** 	}
1498:../LSM9DS1_Driver.c **** }
 6411              		.loc 1 1498 0
 6412 00c8 07F10C07 		add	r7, r7, #12
 6413 00cc BD46     		mov	sp, r7
 6414 00ce 90BD     		pop	{r4, r7, pc}
 6415              		.cfi_endproc
 6416              	.LFE180:
 6418              		.section	.text.timerHandlerReceiveOneMeasurementEachSensor,"ax",%progbits
 6419              		.align	2
 6420              		.global	timerHandlerReceiveOneMeasurementEachSensor
 6421              		.thumb
 6422              		.thumb_func
 6424              	timerHandlerReceiveOneMeasurementEachSensor:
 6425              	.LFB181:
1499:../LSM9DS1_Driver.c **** 
1500:../LSM9DS1_Driver.c **** void timerHandlerReceiveOneMeasurementEachSensor(void *T)
1501:../LSM9DS1_Driver.c **** {
 6426              		.loc 1 1501 0
 6427              		.cfi_startproc
 6428              		@ args = 0, pretend = 0, frame = 16
 6429              		@ frame_needed = 1, uses_anonymous_args = 0
 6430 0000 80B5     		push	{r7, lr}
 6431              	.LCFI195:
 6432              		.cfi_def_cfa_offset 8
 6433              		.cfi_offset 7, -8
 6434              		.cfi_offset 14, -4
 6435 0002 84B0     		sub	sp, sp, #16
 6436              	.LCFI196:
 6437              		.cfi_def_cfa_offset 24
 6438 0004 00AF     		add	r7, sp, #0
 6439              	.LCFI197:
 6440              		.cfi_def_cfa_register 7
 6441 0006 7860     		str	r0, [r7, #4]
1502:../LSM9DS1_Driver.c **** 	static volatile uint32_t stageOfReading = 0;
1503:../LSM9DS1_Driver.c **** 	static uint8_t whichByte = 0;
1504:../LSM9DS1_Driver.c **** 	static uint8_t whichDevice = 0;
1505:../LSM9DS1_Driver.c **** 	addressAndData *address = (addressAndData*)T;
 6442              		.loc 1 1505 0
 6443 0008 7B68     		ldr	r3, [r7, #4]
 6444 000a FB60     		str	r3, [r7, #12]
1506:../LSM9DS1_Driver.c **** 
1507:../LSM9DS1_Driver.c **** 	if(readingAllowed == TRUE)
 6445              		.loc 1 1507 0
 6446 000c 40F20003 		movw	r3, #:lower16:readingAllowed
 6447 0010 C0F20003 		movt	r3, #:upper16:readingAllowed
 6448 0014 1B78     		ldrb	r3, [r3, #0]
 6449 0016 DBB2     		uxtb	r3, r3
 6450 0018 012B     		cmp	r3, #1
 6451 001a 40F0F980 		bne	.L257
1508:../LSM9DS1_Driver.c **** 	{
1509:../LSM9DS1_Driver.c **** 		if(0 == whichDevice) //accel
 6452              		.loc 1 1509 0
 6453 001e 40F20003 		movw	r3, #:lower16:whichDevice.9904
 6454 0022 C0F20003 		movt	r3, #:upper16:whichDevice.9904
 6455 0026 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 6456 0028 002B     		cmp	r3, #0
 6457 002a 47D1     		bne	.L259
1510:../LSM9DS1_Driver.c **** 		{
1511:../LSM9DS1_Driver.c **** 			receiveByte(address->adr.addressDevice[0], (address->adr.subAddress[0] + whichByte), &(address->
 6458              		.loc 1 1511 0
 6459 002c FB68     		ldr	r3, [r7, #12]
 6460 002e 997C     		ldrb	r1, [r3, #18]	@ zero_extendqisi2
 6461 0030 FB68     		ldr	r3, [r7, #12]
 6462 0032 1A7D     		ldrb	r2, [r3, #20]	@ zero_extendqisi2
 6463 0034 40F20003 		movw	r3, #:lower16:whichByte.9903
 6464 0038 C0F20003 		movt	r3, #:upper16:whichByte.9903
 6465 003c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 6466 003e D318     		adds	r3, r2, r3
 6467 0040 DAB2     		uxtb	r2, r3
 6468 0042 40F20003 		movw	r3, #:lower16:whichByte.9903
 6469 0046 C0F20003 		movt	r3, #:upper16:whichByte.9903
 6470 004a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 6471 004c F868     		ldr	r0, [r7, #12]
 6472 004e C318     		adds	r3, r0, r3
 6473 0050 0846     		mov	r0, r1
 6474 0052 1146     		mov	r1, r2
 6475 0054 1A46     		mov	r2, r3
 6476 0056 FFF7FEFF 		bl	receiveByte
1512:../LSM9DS1_Driver.c **** 			whichByte++;
 6477              		.loc 1 1512 0
 6478 005a 40F20003 		movw	r3, #:lower16:whichByte.9903
 6479 005e C0F20003 		movt	r3, #:upper16:whichByte.9903
 6480 0062 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 6481 0064 03F10103 		add	r3, r3, #1
 6482 0068 DAB2     		uxtb	r2, r3
 6483 006a 40F20003 		movw	r3, #:lower16:whichByte.9903
 6484 006e C0F20003 		movt	r3, #:upper16:whichByte.9903
 6485 0072 1A70     		strb	r2, [r3, #0]
1513:../LSM9DS1_Driver.c **** 
1514:../LSM9DS1_Driver.c **** 			if(whichByte == 6)
 6486              		.loc 1 1514 0
 6487 0074 40F20003 		movw	r3, #:lower16:whichByte.9903
 6488 0078 C0F20003 		movt	r3, #:upper16:whichByte.9903
 6489 007c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 6490 007e 062B     		cmp	r3, #6
 6491 0080 40F0C680 		bne	.L257
1515:../LSM9DS1_Driver.c **** 			{
1516:../LSM9DS1_Driver.c **** 				//readingAllowed = FALSE;
1517:../LSM9DS1_Driver.c **** 
1518:../LSM9DS1_Driver.c **** 				whichDevice++;
 6492              		.loc 1 1518 0
 6493 0084 40F20003 		movw	r3, #:lower16:whichDevice.9904
 6494 0088 C0F20003 		movt	r3, #:upper16:whichDevice.9904
 6495 008c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 6496 008e 03F10103 		add	r3, r3, #1
 6497 0092 DAB2     		uxtb	r2, r3
 6498 0094 40F20003 		movw	r3, #:lower16:whichDevice.9904
 6499 0098 C0F20003 		movt	r3, #:upper16:whichDevice.9904
 6500 009c 1A70     		strb	r2, [r3, #0]
1519:../LSM9DS1_Driver.c **** 
1520:../LSM9DS1_Driver.c **** 				whichByte = 0;
 6501              		.loc 1 1520 0
 6502 009e 40F20003 		movw	r3, #:lower16:whichByte.9903
 6503 00a2 C0F20003 		movt	r3, #:upper16:whichByte.9903
 6504 00a6 4FF00002 		mov	r2, #0
 6505 00aa 1A70     		strb	r2, [r3, #0]
1521:../LSM9DS1_Driver.c **** 				stageOfReading = 0;
 6506              		.loc 1 1521 0
 6507 00ac 40F20003 		movw	r3, #:lower16:stageOfReading.9902
 6508 00b0 C0F20003 		movt	r3, #:upper16:stageOfReading.9902
 6509 00b4 4FF00002 		mov	r2, #0
 6510 00b8 1A60     		str	r2, [r3, #0]
 6511 00ba A9E0     		b	.L257
 6512              	.L259:
1522:../LSM9DS1_Driver.c **** 			}
1523:../LSM9DS1_Driver.c **** 		}
1524:../LSM9DS1_Driver.c **** 		else if(1 == whichDevice) //gyro
 6513              		.loc 1 1524 0
 6514 00bc 40F20003 		movw	r3, #:lower16:whichDevice.9904
 6515 00c0 C0F20003 		movt	r3, #:upper16:whichDevice.9904
 6516 00c4 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 6517 00c6 012B     		cmp	r3, #1
 6518 00c8 4DD1     		bne	.L260
1525:../LSM9DS1_Driver.c **** 		{
1526:../LSM9DS1_Driver.c **** 			receiveByte(address->adr.addressDevice[0], (address->adr.subAddress[1] + whichByte), &(address->
 6519              		.loc 1 1526 0
 6520 00ca FB68     		ldr	r3, [r7, #12]
 6521 00cc 997C     		ldrb	r1, [r3, #18]	@ zero_extendqisi2
 6522 00ce FB68     		ldr	r3, [r7, #12]
 6523 00d0 5A7D     		ldrb	r2, [r3, #21]	@ zero_extendqisi2
 6524 00d2 40F20003 		movw	r3, #:lower16:whichByte.9903
 6525 00d6 C0F20003 		movt	r3, #:upper16:whichByte.9903
 6526 00da 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 6527 00dc D318     		adds	r3, r2, r3
 6528 00de DAB2     		uxtb	r2, r3
 6529 00e0 40F20003 		movw	r3, #:lower16:whichByte.9903
 6530 00e4 C0F20003 		movt	r3, #:upper16:whichByte.9903
 6531 00e8 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 6532 00ea 03F10603 		add	r3, r3, #6
 6533 00ee F868     		ldr	r0, [r7, #12]
 6534 00f0 C318     		adds	r3, r0, r3
 6535 00f2 0846     		mov	r0, r1
 6536 00f4 1146     		mov	r1, r2
 6537 00f6 1A46     		mov	r2, r3
 6538 00f8 FFF7FEFF 		bl	receiveByte
1527:../LSM9DS1_Driver.c **** 			whichByte++;
 6539              		.loc 1 1527 0
 6540 00fc 40F20003 		movw	r3, #:lower16:whichByte.9903
 6541 0100 C0F20003 		movt	r3, #:upper16:whichByte.9903
 6542 0104 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 6543 0106 03F10103 		add	r3, r3, #1
 6544 010a DAB2     		uxtb	r2, r3
 6545 010c 40F20003 		movw	r3, #:lower16:whichByte.9903
 6546 0110 C0F20003 		movt	r3, #:upper16:whichByte.9903
 6547 0114 1A70     		strb	r2, [r3, #0]
1528:../LSM9DS1_Driver.c **** 
1529:../LSM9DS1_Driver.c **** 			if(whichByte == 6)
 6548              		.loc 1 1529 0
 6549 0116 40F20003 		movw	r3, #:lower16:whichByte.9903
 6550 011a C0F20003 		movt	r3, #:upper16:whichByte.9903
 6551 011e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 6552 0120 062B     		cmp	r3, #6
 6553 0122 75D1     		bne	.L257
1530:../LSM9DS1_Driver.c **** 			{
1531:../LSM9DS1_Driver.c **** 				//readingAllowed = FALSE;
1532:../LSM9DS1_Driver.c **** 
1533:../LSM9DS1_Driver.c **** 				whichDevice++;
 6554              		.loc 1 1533 0
 6555 0124 40F20003 		movw	r3, #:lower16:whichDevice.9904
 6556 0128 C0F20003 		movt	r3, #:upper16:whichDevice.9904
 6557 012c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 6558 012e 03F10103 		add	r3, r3, #1
 6559 0132 DAB2     		uxtb	r2, r3
 6560 0134 40F20003 		movw	r3, #:lower16:whichDevice.9904
 6561 0138 C0F20003 		movt	r3, #:upper16:whichDevice.9904
 6562 013c 1A70     		strb	r2, [r3, #0]
1534:../LSM9DS1_Driver.c **** 
1535:../LSM9DS1_Driver.c **** 				whichByte = 0;
 6563              		.loc 1 1535 0
 6564 013e 40F20003 		movw	r3, #:lower16:whichByte.9903
 6565 0142 C0F20003 		movt	r3, #:upper16:whichByte.9903
 6566 0146 4FF00002 		mov	r2, #0
 6567 014a 1A70     		strb	r2, [r3, #0]
1536:../LSM9DS1_Driver.c **** 				stageOfReading++;
 6568              		.loc 1 1536 0
 6569 014c 40F20003 		movw	r3, #:lower16:stageOfReading.9902
 6570 0150 C0F20003 		movt	r3, #:upper16:stageOfReading.9902
 6571 0154 1B68     		ldr	r3, [r3, #0]
 6572 0156 03F10102 		add	r2, r3, #1
 6573 015a 40F20003 		movw	r3, #:lower16:stageOfReading.9902
 6574 015e C0F20003 		movt	r3, #:upper16:stageOfReading.9902
 6575 0162 1A60     		str	r2, [r3, #0]
 6576 0164 54E0     		b	.L257
 6577              	.L260:
1537:../LSM9DS1_Driver.c **** 			}
1538:../LSM9DS1_Driver.c **** 		}
1539:../LSM9DS1_Driver.c **** 		else if(2 == whichDevice)
 6578              		.loc 1 1539 0
 6579 0166 40F20003 		movw	r3, #:lower16:whichDevice.9904
 6580 016a C0F20003 		movt	r3, #:upper16:whichDevice.9904
 6581 016e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 6582 0170 022B     		cmp	r3, #2
 6583 0172 4DD1     		bne	.L257
1540:../LSM9DS1_Driver.c **** 		{
1541:../LSM9DS1_Driver.c **** 			receiveByte(address->adr.addressDevice[1], (address->adr.subAddress[2] + whichByte), &(address->
 6584              		.loc 1 1541 0
 6585 0174 FB68     		ldr	r3, [r7, #12]
 6586 0176 D97C     		ldrb	r1, [r3, #19]	@ zero_extendqisi2
 6587 0178 FB68     		ldr	r3, [r7, #12]
 6588 017a 9A7D     		ldrb	r2, [r3, #22]	@ zero_extendqisi2
 6589 017c 40F20003 		movw	r3, #:lower16:whichByte.9903
 6590 0180 C0F20003 		movt	r3, #:upper16:whichByte.9903
 6591 0184 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 6592 0186 D318     		adds	r3, r2, r3
 6593 0188 DAB2     		uxtb	r2, r3
 6594 018a 40F20003 		movw	r3, #:lower16:whichByte.9903
 6595 018e C0F20003 		movt	r3, #:upper16:whichByte.9903
 6596 0192 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 6597 0194 03F10C03 		add	r3, r3, #12
 6598 0198 F868     		ldr	r0, [r7, #12]
 6599 019a C318     		adds	r3, r0, r3
 6600 019c 0846     		mov	r0, r1
 6601 019e 1146     		mov	r1, r2
 6602 01a0 1A46     		mov	r2, r3
 6603 01a2 FFF7FEFF 		bl	receiveByte
1542:../LSM9DS1_Driver.c **** 			whichByte++;
 6604              		.loc 1 1542 0
 6605 01a6 40F20003 		movw	r3, #:lower16:whichByte.9903
 6606 01aa C0F20003 		movt	r3, #:upper16:whichByte.9903
 6607 01ae 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 6608 01b0 03F10103 		add	r3, r3, #1
 6609 01b4 DAB2     		uxtb	r2, r3
 6610 01b6 40F20003 		movw	r3, #:lower16:whichByte.9903
 6611 01ba C0F20003 		movt	r3, #:upper16:whichByte.9903
 6612 01be 1A70     		strb	r2, [r3, #0]
1543:../LSM9DS1_Driver.c **** 
1544:../LSM9DS1_Driver.c **** 			if(whichByte == 6)
 6613              		.loc 1 1544 0
 6614 01c0 40F20003 		movw	r3, #:lower16:whichByte.9903
 6615 01c4 C0F20003 		movt	r3, #:upper16:whichByte.9903
 6616 01c8 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 6617 01ca 062B     		cmp	r3, #6
 6618 01cc 20D1     		bne	.L257
1545:../LSM9DS1_Driver.c **** 			{
1546:../LSM9DS1_Driver.c **** 				readingAllowed = FALSE;
 6619              		.loc 1 1546 0
 6620 01ce 40F20003 		movw	r3, #:lower16:readingAllowed
 6621 01d2 C0F20003 		movt	r3, #:upper16:readingAllowed
 6622 01d6 4FF00002 		mov	r2, #0
 6623 01da 1A70     		strb	r2, [r3, #0]
1547:../LSM9DS1_Driver.c **** 
1548:../LSM9DS1_Driver.c **** 				whichDevice = 0;
 6624              		.loc 1 1548 0
 6625 01dc 40F20003 		movw	r3, #:lower16:whichDevice.9904
 6626 01e0 C0F20003 		movt	r3, #:upper16:whichDevice.9904
 6627 01e4 4FF00002 		mov	r2, #0
 6628 01e8 1A70     		strb	r2, [r3, #0]
1549:../LSM9DS1_Driver.c **** 
1550:../LSM9DS1_Driver.c **** 				whichByte = 0;
 6629              		.loc 1 1550 0
 6630 01ea 40F20003 		movw	r3, #:lower16:whichByte.9903
 6631 01ee C0F20003 		movt	r3, #:upper16:whichByte.9903
 6632 01f2 4FF00002 		mov	r2, #0
 6633 01f6 1A70     		strb	r2, [r3, #0]
1551:../LSM9DS1_Driver.c **** 				stageOfReading++;
 6634              		.loc 1 1551 0
 6635 01f8 40F20003 		movw	r3, #:lower16:stageOfReading.9902
 6636 01fc C0F20003 		movt	r3, #:upper16:stageOfReading.9902
 6637 0200 1B68     		ldr	r3, [r3, #0]
 6638 0202 03F10102 		add	r2, r3, #1
 6639 0206 40F20003 		movw	r3, #:lower16:stageOfReading.9902
 6640 020a C0F20003 		movt	r3, #:upper16:stageOfReading.9902
 6641 020e 1A60     		str	r2, [r3, #0]
 6642              	.L257:
1552:../LSM9DS1_Driver.c **** 			}
1553:../LSM9DS1_Driver.c **** 		}
1554:../LSM9DS1_Driver.c **** 
1555:../LSM9DS1_Driver.c **** 	}
1556:../LSM9DS1_Driver.c **** }
 6643              		.loc 1 1556 0
 6644 0210 07F11007 		add	r7, r7, #16
 6645 0214 BD46     		mov	sp, r7
 6646 0216 80BD     		pop	{r7, pc}
 6647              		.cfi_endproc
 6648              	.LFE181:
 6650              		.section	.text.receiveByte,"ax",%progbits
 6651              		.align	2
 6652              		.global	receiveByte
 6653              		.thumb
 6654              		.thumb_func
 6656              	receiveByte:
 6657              	.LFB182:
1557:../LSM9DS1_Driver.c **** 
1558:../LSM9DS1_Driver.c **** void receiveByte(uint8_t adr, uint8_t subAdr, uint8_t *buffer)
1559:../LSM9DS1_Driver.c **** {
 6658              		.loc 1 1559 0
 6659              		.cfi_startproc
 6660              		@ args = 0, pretend = 0, frame = 40
 6661              		@ frame_needed = 1, uses_anonymous_args = 0
 6662 0000 80B5     		push	{r7, lr}
 6663              	.LCFI198:
 6664              		.cfi_def_cfa_offset 8
 6665              		.cfi_offset 7, -8
 6666              		.cfi_offset 14, -4
 6667 0002 8AB0     		sub	sp, sp, #40
 6668              	.LCFI199:
 6669              		.cfi_def_cfa_offset 48
 6670 0004 00AF     		add	r7, sp, #0
 6671              	.LCFI200:
 6672              		.cfi_def_cfa_register 7
 6673 0006 0B46     		mov	r3, r1
 6674 0008 3A60     		str	r2, [r7, #0]
 6675 000a 0246     		mov	r2, r0
 6676 000c FA71     		strb	r2, [r7, #7]
 6677 000e BB71     		strb	r3, [r7, #6]
1560:../LSM9DS1_Driver.c **** 	clearErrorFlags();
 6678              		.loc 1 1560 0
 6679 0010 FFF7FEFF 		bl	clearErrorFlags
1561:../LSM9DS1_Driver.c **** 
1562:../LSM9DS1_Driver.c **** 	I2C001_DataType data1;
1563:../LSM9DS1_Driver.c **** 	data1.Data1.TDF_Type = I2C_TDF_MStart;
 6680              		.loc 1 1563 0
 6681 0014 4FF00403 		mov	r3, #4
 6682 0018 87F82130 		strb	r3, [r7, #33]
1564:../LSM9DS1_Driver.c **** 
1565:../LSM9DS1_Driver.c **** 	data1.Data1.Data = ((adr << 1) | I2C_WRITE);
 6683              		.loc 1 1565 0
 6684 001c FB79     		ldrb	r3, [r7, #7]
 6685 001e 4FEA4303 		lsl	r3, r3, #1
 6686 0022 DBB2     		uxtb	r3, r3
 6687 0024 87F82030 		strb	r3, [r7, #32]
1566:../LSM9DS1_Driver.c **** 	while(!I2C001_WriteData(&I2C001_Handle0,&data1))
 6688              		.loc 1 1566 0
 6689 0028 01E0     		b	.L262
 6690              	.L263:
1567:../LSM9DS1_Driver.c **** 	{
1568:../LSM9DS1_Driver.c **** 		flushFIFO();
 6691              		.loc 1 1568 0
 6692 002a FFF7FEFF 		bl	flushFIFO
 6693              	.L262:
1566:../LSM9DS1_Driver.c **** 	while(!I2C001_WriteData(&I2C001_Handle0,&data1))
 6694              		.loc 1 1566 0 discriminator 1
 6695 002e 07F12003 		add	r3, r7, #32
 6696 0032 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 6697 0036 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 6698 003a 1946     		mov	r1, r3
 6699 003c FFF7FEFF 		bl	I2C001_WriteData
 6700 0040 0346     		mov	r3, r0
 6701 0042 002B     		cmp	r3, #0
 6702 0044 F1D0     		beq	.L263
1569:../LSM9DS1_Driver.c **** 	}
1570:../LSM9DS1_Driver.c **** 
1571:../LSM9DS1_Driver.c **** 	delay(DELAY);
 6703              		.loc 1 1571 0
 6704 0046 42F21070 		movw	r0, #10000
 6705 004a FFF7FEFF 		bl	delay
1572:../LSM9DS1_Driver.c **** 
1573:../LSM9DS1_Driver.c **** 	I2C001_DataType data2;
1574:../LSM9DS1_Driver.c **** 	data2.Data1.TDF_Type = I2C_TDF_MTxData;
 6706              		.loc 1 1574 0
 6707 004e 4FF00003 		mov	r3, #0
 6708 0052 7B77     		strb	r3, [r7, #29]
1575:../LSM9DS1_Driver.c **** 
1576:../LSM9DS1_Driver.c **** 	data2.Data1.Data = subAdr;
 6709              		.loc 1 1576 0
 6710 0054 BB79     		ldrb	r3, [r7, #6]
 6711 0056 3B77     		strb	r3, [r7, #28]
1577:../LSM9DS1_Driver.c **** 	while(!I2C001_WriteData(&I2C001_Handle0,&data2))
 6712              		.loc 1 1577 0
 6713 0058 01E0     		b	.L264
 6714              	.L265:
1578:../LSM9DS1_Driver.c **** 	{
1579:../LSM9DS1_Driver.c **** 		flushFIFO();
 6715              		.loc 1 1579 0
 6716 005a FFF7FEFF 		bl	flushFIFO
 6717              	.L264:
1577:../LSM9DS1_Driver.c **** 	while(!I2C001_WriteData(&I2C001_Handle0,&data2))
 6718              		.loc 1 1577 0 discriminator 1
 6719 005e 07F11C03 		add	r3, r7, #28
 6720 0062 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 6721 0066 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 6722 006a 1946     		mov	r1, r3
 6723 006c FFF7FEFF 		bl	I2C001_WriteData
 6724 0070 0346     		mov	r3, r0
 6725 0072 002B     		cmp	r3, #0
 6726 0074 F1D0     		beq	.L265
1580:../LSM9DS1_Driver.c **** 	}
1581:../LSM9DS1_Driver.c **** 
1582:../LSM9DS1_Driver.c **** 	delay(DELAY);
 6727              		.loc 1 1582 0
 6728 0076 42F21070 		movw	r0, #10000
 6729 007a FFF7FEFF 		bl	delay
1583:../LSM9DS1_Driver.c **** 
1584:../LSM9DS1_Driver.c **** 	I2C001_DataType data3;
1585:../LSM9DS1_Driver.c **** 	data3.Data1.TDF_Type = I2C_TDF_MRStart;
 6730              		.loc 1 1585 0
 6731 007e 4FF00503 		mov	r3, #5
 6732 0082 7B76     		strb	r3, [r7, #25]
1586:../LSM9DS1_Driver.c **** 	//uint8_t adr1 = address->adr.addressDevice;
1587:../LSM9DS1_Driver.c **** 	data3.Data1.Data = ((adr << 1) | I2C_READ);
 6733              		.loc 1 1587 0
 6734 0084 FB79     		ldrb	r3, [r7, #7]
 6735 0086 4FEA4303 		lsl	r3, r3, #1
 6736 008a DBB2     		uxtb	r3, r3
 6737 008c 43F00103 		orr	r3, r3, #1
 6738 0090 DBB2     		uxtb	r3, r3
 6739 0092 3B76     		strb	r3, [r7, #24]
1588:../LSM9DS1_Driver.c **** 	while(!I2C001_WriteData(&I2C001_Handle0,&data3))
 6740              		.loc 1 1588 0
 6741 0094 01E0     		b	.L266
 6742              	.L267:
1589:../LSM9DS1_Driver.c **** 	{
1590:../LSM9DS1_Driver.c **** 		flushFIFO();
 6743              		.loc 1 1590 0
 6744 0096 FFF7FEFF 		bl	flushFIFO
 6745              	.L266:
1588:../LSM9DS1_Driver.c **** 	while(!I2C001_WriteData(&I2C001_Handle0,&data3))
 6746              		.loc 1 1588 0 discriminator 1
 6747 009a 07F11803 		add	r3, r7, #24
 6748 009e 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 6749 00a2 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 6750 00a6 1946     		mov	r1, r3
 6751 00a8 FFF7FEFF 		bl	I2C001_WriteData
 6752 00ac 0346     		mov	r3, r0
 6753 00ae 002B     		cmp	r3, #0
 6754 00b0 F1D0     		beq	.L267
1591:../LSM9DS1_Driver.c **** 	}
1592:../LSM9DS1_Driver.c **** 
1593:../LSM9DS1_Driver.c **** 	delay(DELAY);
 6755              		.loc 1 1593 0
 6756 00b2 42F21070 		movw	r0, #10000
 6757 00b6 FFF7FEFF 		bl	delay
1594:../LSM9DS1_Driver.c **** 
1595:../LSM9DS1_Driver.c **** 	I2C001_DataType data4;
1596:../LSM9DS1_Driver.c **** 	data4.Data1.TDF_Type = I2C_TDF_MRxAck1;
 6758              		.loc 1 1596 0
 6759 00ba 4FF00303 		mov	r3, #3
 6760 00be 7B75     		strb	r3, [r7, #21]
1597:../LSM9DS1_Driver.c **** 	data4.Data1.Data = ubyteFF;
 6761              		.loc 1 1597 0
 6762 00c0 4FF0FF03 		mov	r3, #255
 6763 00c4 3B75     		strb	r3, [r7, #20]
1598:../LSM9DS1_Driver.c **** 	while(!I2C001_WriteData(&I2C001_Handle0,&data4))
 6764              		.loc 1 1598 0
 6765 00c6 01E0     		b	.L268
 6766              	.L269:
1599:../LSM9DS1_Driver.c **** 	{
1600:../LSM9DS1_Driver.c **** 		flushFIFO();
 6767              		.loc 1 1600 0
 6768 00c8 FFF7FEFF 		bl	flushFIFO
 6769              	.L268:
1598:../LSM9DS1_Driver.c **** 	while(!I2C001_WriteData(&I2C001_Handle0,&data4))
 6770              		.loc 1 1598 0 discriminator 1
 6771 00cc 07F11403 		add	r3, r7, #20
 6772 00d0 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 6773 00d4 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 6774 00d8 1946     		mov	r1, r3
 6775 00da FFF7FEFF 		bl	I2C001_WriteData
 6776 00de 0346     		mov	r3, r0
 6777 00e0 002B     		cmp	r3, #0
 6778 00e2 F1D0     		beq	.L269
1601:../LSM9DS1_Driver.c **** 	}
1602:../LSM9DS1_Driver.c **** 
1603:../LSM9DS1_Driver.c **** 	delay(DELAY);
 6779              		.loc 1 1603 0
 6780 00e4 42F21070 		movw	r0, #10000
 6781 00e8 FFF7FEFF 		bl	delay
1604:../LSM9DS1_Driver.c **** 
1605:../LSM9DS1_Driver.c **** 	I2C001_DataType data5;
1606:../LSM9DS1_Driver.c **** 	data5.Data1.TDF_Type = I2C_TDF_MStop;
 6782              		.loc 1 1606 0
 6783 00ec 4FF00603 		mov	r3, #6
 6784 00f0 7B74     		strb	r3, [r7, #17]
1607:../LSM9DS1_Driver.c **** 	data5.Data1.Data = ubyteFF;
 6785              		.loc 1 1607 0
 6786 00f2 4FF0FF03 		mov	r3, #255
 6787 00f6 3B74     		strb	r3, [r7, #16]
1608:../LSM9DS1_Driver.c **** 	while(!I2C001_WriteData(&I2C001_Handle0,&data5))
 6788              		.loc 1 1608 0
 6789 00f8 01E0     		b	.L270
 6790              	.L271:
1609:../LSM9DS1_Driver.c **** 	{
1610:../LSM9DS1_Driver.c **** 		flushFIFO();
 6791              		.loc 1 1610 0
 6792 00fa FFF7FEFF 		bl	flushFIFO
 6793              	.L270:
1608:../LSM9DS1_Driver.c **** 	while(!I2C001_WriteData(&I2C001_Handle0,&data5))
 6794              		.loc 1 1608 0 discriminator 1
 6795 00fe 07F11003 		add	r3, r7, #16
 6796 0102 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 6797 0106 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 6798 010a 1946     		mov	r1, r3
 6799 010c FFF7FEFF 		bl	I2C001_WriteData
 6800 0110 0346     		mov	r3, r0
 6801 0112 002B     		cmp	r3, #0
 6802 0114 F1D0     		beq	.L271
1611:../LSM9DS1_Driver.c **** 	}
1612:../LSM9DS1_Driver.c **** 
1613:../LSM9DS1_Driver.c **** 	delay(DELAY);
 6803              		.loc 1 1613 0
 6804 0116 42F21070 		movw	r0, #10000
 6805 011a FFF7FEFF 		bl	delay
1614:../LSM9DS1_Driver.c **** 
1615:../LSM9DS1_Driver.c **** 	int k = 0;
 6806              		.loc 1 1615 0
 6807 011e 4FF00003 		mov	r3, #0
 6808 0122 7B62     		str	r3, [r7, #36]
1616:../LSM9DS1_Driver.c **** 	uint16_t bufferToRead = 0;
 6809              		.loc 1 1616 0
 6810 0124 4FF00003 		mov	r3, #0
 6811 0128 FB81     		strh	r3, [r7, #14]	@ movhi
1617:../LSM9DS1_Driver.c **** 	if(I2C001_ReadData(&I2C001_Handle0,&bufferToRead))
 6812              		.loc 1 1617 0
 6813 012a 07F10E03 		add	r3, r7, #14
 6814 012e 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 6815 0132 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 6816 0136 1946     		mov	r1, r3
 6817 0138 FFF7FEFF 		bl	I2C001_ReadData
 6818 013c 0346     		mov	r3, r0
 6819 013e 002B     		cmp	r3, #0
 6820 0140 04D0     		beq	.L272
1618:../LSM9DS1_Driver.c **** 	{
1619:../LSM9DS1_Driver.c **** 		k++;
 6821              		.loc 1 1619 0
 6822 0142 7B6A     		ldr	r3, [r7, #36]
 6823 0144 03F10103 		add	r3, r3, #1
 6824 0148 7B62     		str	r3, [r7, #36]
 6825 014a 03E0     		b	.L273
 6826              	.L272:
1620:../LSM9DS1_Driver.c **** 	}
1621:../LSM9DS1_Driver.c **** 	else
1622:../LSM9DS1_Driver.c **** 	{
1623:../LSM9DS1_Driver.c **** 		k--;
 6827              		.loc 1 1623 0
 6828 014c 7B6A     		ldr	r3, [r7, #36]
 6829 014e 03F1FF33 		add	r3, r3, #-1
 6830 0152 7B62     		str	r3, [r7, #36]
 6831              	.L273:
1624:../LSM9DS1_Driver.c **** 	}
1625:../LSM9DS1_Driver.c **** 
1626:../LSM9DS1_Driver.c **** 	delay(DELAY);
 6832              		.loc 1 1626 0
 6833 0154 42F21070 		movw	r0, #10000
 6834 0158 FFF7FEFF 		bl	delay
1627:../LSM9DS1_Driver.c **** 	*buffer = (uint8_t)bufferToRead;
 6835              		.loc 1 1627 0
 6836 015c FB89     		ldrh	r3, [r7, #14]
 6837 015e DAB2     		uxtb	r2, r3
 6838 0160 3B68     		ldr	r3, [r7, #0]
 6839 0162 1A70     		strb	r2, [r3, #0]
1628:../LSM9DS1_Driver.c **** 
1629:../LSM9DS1_Driver.c **** }
 6840              		.loc 1 1629 0
 6841 0164 07F12807 		add	r7, r7, #40
 6842 0168 BD46     		mov	sp, r7
 6843 016a 80BD     		pop	{r7, pc}
 6844              		.cfi_endproc
 6845              	.LFE182:
 6847              		.bss
 6848              	whichDevice.9904:
 6849 0020 00       		.space	1
 6850              	whichByte.9903:
 6851 0021 00       		.space	1
 6852 0022 0000     		.align	2
 6853              	stageOfReading.9902:
 6854 0024 00000000 		.space	4
 6855              		.align	2
 6856              	counter.9896:
 6857 0028 00000000 		.space	4
 6858              		.text
 6859              	.Letext0:
 6860              		.file 2 "c:\\dave-3.1.10\\arm-gcc\\bin\\../lib/gcc/arm-none-eabi/4.7.4/../../../../arm-none-eabi/i
 6861              		.file 3 "../LSM9DS1_Types.h"
 6862              		.file 4 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 6863              		.file 5 "C:\\DAVE3_workspace\\mojWorkspace\\Bachelor_improved\\Dave\\Generated\\inc\\DAVESupport/.
 6864              		.file 6 "C:\\DAVE3_workspace\\mojWorkspace\\Bachelor_improved\\Dave\\Generated\\inc\\DAVESupport/.
 6865              		.file 7 "C:\\DAVE3_workspace\\mojWorkspace\\Bachelor_improved\\Dave\\Generated\\inc\\DAVESupport/.
 6866              		.file 8 "C:\\DAVE3_workspace\\mojWorkspace\\Bachelor_improved\\Dave\\Generated\\inc\\DAVESupport/.
 6867              		.file 9 "../LSM9DS1_Driver.h"
 6868              		.file 10 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Include/core_cm4.h"
 6869              		.file 11 "C:\\DAVE3_workspace\\mojWorkspace\\Bachelor_improved\\Dave\\Generated\\inc\\DAVESupport/
DEFINED SYMBOLS
                            *ABS*:00000000 LSM9DS1_Driver.c
                            *COM*:00000004 TimerId
                            *COM*:00000004 Status
                            *COM*:00000004 WriteTimerId
                            *COM*:00000004 WriteTimerStatus
                            *COM*:00000004 TimerIdReadBytes
                            *COM*:00000004 StatusReadBytes
                            *COM*:00000028 settings
                            *COM*:0000000c gBias
                            *COM*:0000000c aBias
                            *COM*:0000000c mBias
                            *COM*:00000006 gBiasRaw
                            *COM*:00000006 aBiasRaw
                            *COM*:00000006 mBiasRaw
                            *COM*:00000001 _autoCalc
                            *COM*:00000001 _mAddress
                            *COM*:00000001 _xgAddress
                            *COM*:00000004 gRes
                            *COM*:00000004 aRes
                            *COM*:00000004 mRes
                            *COM*:00000002 gx
                            *COM*:00000002 gy
                            *COM*:00000002 gz
                            *COM*:00000002 ax
                            *COM*:00000002 ay
                            *COM*:00000002 az
                            *COM*:00000002 mx
                            *COM*:00000002 my
                            *COM*:00000002 mz
                            *COM*:00000002 temperature
                            *COM*:00000064 accelOsX
                            *COM*:00000064 accelOsY
                            *COM*:00000064 accelOsZ
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:56     .bss:00000000 TimerIdReadMeasurements
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:53     .bss:00000000 $d
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:63     .data:00000000 StatusTimerReadMeasurements
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:60     .data:00000000 $d
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:68     .data:00000004 readingAllowed
                            *COM*:00000258 pomiaryAccel
                            *COM*:00000258 pomiaryAccel1
                            *COM*:00000017 adrAndData
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:74     .bss:00000004 sendMsgTimerExpired
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:80     .bss:00000008 TimerIDSendMsg
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:87     .data:00000008 statusTimerSendMsg
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:93     .bss:0000000c sendingInProgress
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:99     .bss:00000010 counter
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:106    .data:0000000c magSensitivity
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:116    .bss:00000014 accelX
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:122    .bss:00000016 accelY
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:128    .bss:00000018 accelZ
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:134    .bss:0000001a gyroX
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:140    .bss:0000001c gyroY
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:146    .bss:0000001e gyroZ
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:149    .text.getAccelX:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:154    .text.getAccelX:00000000 getAccelX
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:183    .text.getAccelY:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:188    .text.getAccelY:00000000 getAccelY
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:216    .text.getAccelZ:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:221    .text.getAccelZ:00000000 getAccelZ
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:249    .text.startMeasurements:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:254    .text.startMeasurements:00000000 startMeasurements
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:6424   .text.timerHandlerReceiveOneMeasurementEachSensor:00000000 timerHandlerReceiveOneMeasurementEachSensor
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:292    .text.readAndSendMeasurements:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:297    .text.readAndSendMeasurements:00000000 readAndSendMeasurements
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:4987   .text.calcAccel:00000000 calcAccel
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:4933   .text.calcGyro:00000000 calcGyro
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:735    .text.initAdrAndSubAdr:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:740    .text.initAdrAndSubAdr:00000000 initAdrAndSubAdr
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:787    .text.initLSM9DS1:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:792    .text.initLSM9DS1:00000000 initLSM9DS1
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:855    .text.init:00000000 init
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:1135   .text.begin:00000000 begin
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:850    .text.init:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:1130   .text.begin:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:1244   .text.constrainScales:00000000 constrainScales
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:1404   .text.calcgRes:00000000 calcgRes
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:1488   .text.calcmRes:00000000 calcmRes
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:1446   .text.calcaRes:00000000 calcaRes
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:1350   .text.initI2C:00000000 initI2C
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:1377   .text.initSPI:00000000 initSPI
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:1811   .text.mReadByte:00000000 mReadByte
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:1862   .text.xgReadByte:00000000 xgReadByte
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:1913   .text.initGyro:00000000 initGyro
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:2309   .text.initAccel:00000000 initAccel
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:2489   .text.initMag:00000000 initMag
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:1239   .text.constrainScales:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:1345   .text.initI2C:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:1372   .text.initSPI:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:1399   .text.calcgRes:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:1436   .text.calcgRes:00000030 $d
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:1441   .text.calcaRes:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:1478   .text.calcaRes:00000030 $d
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:1483   .text.calcmRes:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:1513   .text.calcmRes:00000020 $d
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:1528   .text.calcmRes:00000054 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:1575   .text.delay:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:1580   .text.delay:00000000 delay
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:1627   .text.I2CreadByte:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:1632   .text.I2CreadByte:00000000 I2CreadByte
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:1806   .text.mReadByte:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:1857   .text.xgReadByte:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:1908   .text.initGyro:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:2136   .text.xgWriteByte:00000000 xgWriteByte
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:2131   .text.xgWriteByte:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:2187   .text.I2CwriteByte:00000000 I2CwriteByte
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:2182   .text.I2CwriteByte:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:2304   .text.initAccel:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:2484   .text.initMag:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:2654   .text.mWriteByte:00000000 mWriteByte
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:2649   .text.mWriteByte:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:2701   .text.enableFIFO:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:2706   .text.enableFIFO:00000000 enableFIFO
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:2758   .text.setFIFO:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:2763   .text.setFIFO:00000000 setFIFO
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:2814   .text.calibrate:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:2819   .text.calibrate:00000000 calibrate
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:3178   .text.readGyro1:00000000 readGyro1
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:3341   .text.readAccel1:00000000 readAccel1
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:3066   .text.xgReadBytes:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:3071   .text.xgReadBytes:00000000 xgReadBytes
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:3712   .text.I2CreadBytes:00000000 I2CreadBytes
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:3141   .text.SPIreadBytes:00000000 SPIreadBytes
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:3136   .text.SPIreadBytes:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:3173   .text.readGyro1:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:3336   .text.readAccel1:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:3491   .text.readAccelToSensor:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:3496   .text.readAccelToSensor:00000000 readAccelToSensor
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:3707   .text.I2CreadBytes:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:3927   .text.magAvailable:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:3932   .text.magAvailable:00000000 magAvailable
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:3974   .text.readMag1:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:3979   .text.readMag1:00000000 readMag1
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:4069   .text.calibrateMag:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:4074   .text.calibrateMag:00000000 calibrateMag
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:4307   .text.calcMag:00000000 calcMag
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:4361   .text.magOffset:00000000 magOffset
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:4302   .text.calcMag:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:4356   .text.magOffset:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:4428   .text.accelAvailable:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:4433   .text.accelAvailable:00000000 accelAvailable
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:4468   .text.gyroAvailable:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:4473   .text.gyroAvailable:00000000 gyroAvailable
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:4509   .text.tempAvailable:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:4514   .text.tempAvailable:00000000 tempAvailable
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:4550   .text.readAccel:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:4555   .text.readAccel:00000000 readAccel
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:4653   .text.readMag:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:4658   .text.readMag:00000000 readMag
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:4739   .text.readTemp:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:4744   .text.readTemp:00000000 readTemp
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:4825   .text.readGyro:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:4830   .text.readGyro:00000000 readGyro
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:4928   .text.calcGyro:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:4982   .text.calcAccel:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:5036   .text.setGyroScale:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:5041   .text.setGyroScale:00000000 setGyroScale
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:5124   .text.setAccelScale:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:5129   .text.setAccelScale:00000000 setAccelScale
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:5225   .text.setMagScale:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:5230   .text.setMagScale:00000000 setMagScale
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:5326   .text.setGyroODR:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:5331   .text.setGyroODR:00000000 setGyroODR
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:5395   .text.setAccelODR:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:5400   .text.setAccelODR:00000000 setAccelODR
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:5464   .text.setMagODR:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:5469   .text.setMagODR:00000000 setMagODR
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:5526   .text.configInt:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:5531   .text.configInt:00000000 configInt
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:5606   .text.configInactivity:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:5611   .text.configInactivity:00000000 configInactivity
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:5668   .text.getInactivity:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:5673   .text.getInactivity:00000000 getInactivity
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:5710   .text.configAccelInt:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:5715   .text.configAccelInt:00000000 configAccelInt
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:5761   .text.configAccelThs:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:5766   .text.configAccelThs:00000000 configAccelThs
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:5821   .text.getAccelIntSrc:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:5826   .text.getAccelIntSrc:00000000 getAccelIntSrc
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:5871   .text.configGyroInt:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:5876   .text.configGyroInt:00000000 configGyroInt
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:5933   .text.configGyroThs:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:5938   .text.configGyroThs:00000000 configGyroThs
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:6015   .text.getGyroIntSrc:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:6020   .text.getGyroIntSrc:00000000 getGyroIntSrc
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:6065   .text.configMagInt:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:6070   .text.configMagInt:00000000 configMagInt
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:6137   .text.configMagThs:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:6142   .text.configMagThs:00000000 configMagThs
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:6183   .text.getMagIntSrc:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:6188   .text.getMagIntSrc:00000000 getMagIntSrc
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:6233   .text.sleepGyro:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:6238   .text.sleepGyro:00000000 sleepGyro
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:6290   .text.getFIFOSamples:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:6295   .text.getFIFOSamples:00000000 getFIFOSamples
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:6322   .text.timerHandlerSendMsg:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:6327   .text.timerHandlerSendMsg:00000000 timerHandlerSendMsg
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:6856   .bss:00000028 counter.9896
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:6419   .text.timerHandlerReceiveOneMeasurementEachSensor:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:6848   .bss:00000020 whichDevice.9904
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:6850   .bss:00000021 whichByte.9903
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:6656   .text.receiveByte:00000000 receiveByte
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:6853   .bss:00000024 stageOfReading.9902
C:\Users\Mateusz\AppData\Local\Temp\ccUoPL08.s:6651   .text.receiveByte:00000000 $t
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.35166846b5321d4273ad8c4248893ac3
                           .group:00000000 wm4.LSM9DS1_Driver.h.9.225085f752270af24a0df342ed7d3479
                           .group:00000000 wm4.LSM9DS1_Registers.h.9.72af380d6da01de607f77d245bf32825
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.7aefdac4826acebbfc9f3822a0aeb14c
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.XMC4500.h.45.215f4b8c79f46c7645c15373868d08c0
                           .group:00000000 wm4.core_cm4.h.47.41af406cb4cda82c972f112a9cd0a024
                           .group:00000000 wm4.core_cmInstr.h.39.3d3d1b4a79aef37532666dc6ee87c6ac
                           .group:00000000 wm4.core_cm4_simd.h.43.b5d1d38735af6366227b4256d330cf13
                           .group:00000000 wm4.core_cm4.h.178.e5ef5ce66d198d7f00f9d0076e267c41
                           .group:00000000 wm4.system_XMC4500.h.29.827f68baa362c84f2abae4ab67dde7c9
                           .group:00000000 wm4.XMC4500.h.198.8e022f279ff353ed081df898dc7b9cf3
                           .group:00000000 wm4.stddef.h.40.50cf36416e06376af8a9dca28536f2e4
                           .group:00000000 wm4.types.h.60.e75c47576398c648cdcf9000ace5e3d8
                           .group:00000000 wm4.MULTIPLEXER.h.46.4a863fbae1c79f0db26da3ce2dc30d02
                           .group:00000000 wm4.CCU8PWMLIB.h.74.725ec81203769525cc7a424597055f47
                           .group:00000000 wm4.MOTORLIB.h.62.951091d95913dd2ff36d761323a1771d
                           .group:00000000 wm4.DBG001.h.116.d6d9e7459a0faa3905c97c1d2edb339d
                           .group:00000000 wm4.IO004.h.53.442ea5eb47ad9eedc675253aa35f3107
                           .group:00000000 wm4.uc_id.h.35.fa57ecd9f559d2767f56c96da2848c12
                           .group:00000000 wm4.CLK001_Const.h.50.e5e9c2ddc89f4cc9e7b93e9648fa94e4
                           .group:00000000 wm4.CLK001_Conf.h.81.82a8db895dc146da001475dd68223522
                           .group:00000000 wm4.Usic.h.54.8af9f733ba5771eeb374435d205ea54b
                           .group:00000000 wm4.UART001_Conf.h.53.ea28968cb6c53b1be9f53a4d9f42a86f
                           .group:00000000 wm4.SYSTM001.h.64.6ecb31c49bc3e7691644fdcdfc11b5cd
                           .group:00000000 wm4.I2C001.h.97.5277d52889d6c741e048ea45ee1277b5
                           .group:00000000 wm4.I2C001_Conf.h.58.e471e519f7471a50493b6f4fe912ee0d
                           .group:00000000 wm4.stdio.h.31.f48311dde756a2aec27351b58a280fb9
                           .group:00000000 wm4.stddef.h.161.e50ff8a9d5d1abbc15641da28ac571bf
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4.stddef.h.161.c6104a0666cf681b6269ddc9b4f516d4
                           .group:00000000 wm4.reent.h.16.9e42f0e588b85e70b2bf6572af57ce64
                           .group:00000000 wm4.types.h.23.0d949686bbcadd1621462d4fa1f884f9
                           .group:00000000 wm4.types.h.2.e9cec8c90ab35f77d9f499e06ae02400
                           .group:00000000 wm4.types.h.80.1f2c84c0d57dd52dd9936095d9ac218e
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.63.dfdea6580b080784d08faace69b6ed76
                           .group:00000000 wm4.inttypes.h.14.da8ab5c14bc76feb3bf694db03b8ec46
                           .group:00000000 wm4.inttypes.h.20.54b7c434bb63171d5145327a6d429f51
                           .group:00000000 wm4.math.h.35.cc9264b0ced3bd063c5784e64e89cf51
                           .group:00000000 wm4.stdlib.h.13.603ed7eb09a1561ab06840b7c0fcff58
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.53.c69c7609933ff56d59c757cec2d13230
                           .group:00000000 wm4.string.h.8.ef946ad0bc9ad5c970c365dcd1fc4b0a
                           .group:00000000 wm4.string.h.86.d5c872ff52e2712c985b588a0ef39f3c

UNDEFINED SYMBOLS
SYSTM001_CreateTimer
SYSTM001_StartTimer
I2C001_Handle0
I2C001_WriteData
I2C001_ReadData
__aeabi_f2d
__aeabi_ddiv
__aeabi_d2iz
__aeabi_d2f
ceil
round
strlen
send
clearErrorFlags
flushFIFO
