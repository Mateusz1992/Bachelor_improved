   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"LSM9DS1_Driver.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	TimerId,4,4
  20              		.comm	Status,4,4
  21              		.comm	WriteTimerId,4,4
  22              		.comm	WriteTimerStatus,4,4
  23              		.comm	TimerIdReadBytes,4,4
  24              		.comm	StatusReadBytes,4,4
  25              		.comm	settings,40,4
  26              		.comm	gBias,12,4
  27              		.comm	aBias,12,4
  28              		.comm	mBias,12,4
  29              		.comm	gBiasRaw,6,4
  30              		.comm	aBiasRaw,6,4
  31              		.comm	mBiasRaw,6,4
  32              		.comm	_autoCalc,1,1
  33              		.comm	_mAddress,1,1
  34              		.comm	_xgAddress,1,1
  35              		.comm	gRes,4,4
  36              		.comm	aRes,4,4
  37              		.comm	mRes,4,4
  38              		.comm	gx,2,2
  39              		.comm	gy,2,2
  40              		.comm	gz,2,2
  41              		.comm	ax,2,2
  42              		.comm	ay,2,2
  43              		.comm	az,2,2
  44              		.comm	mx,2,2
  45              		.comm	my,2,2
  46              		.comm	mz,2,2
  47              		.comm	temperature,2,2
  48              		.comm	accelOsX,100,4
  49              		.comm	accelOsY,100,4
  50              		.comm	accelOsZ,100,4
  51              		.global	TimerIdReadMeasurements
  52              		.bss
  53              		.align	2
  56              	TimerIdReadMeasurements:
  57 0000 00000000 		.space	4
  58              		.global	StatusTimerReadMeasurements
  59              		.data
  60              		.align	2
  63              	StatusTimerReadMeasurements:
  64 0000 02000000 		.word	2
  65              		.global	readingAllowed
  68              	readingAllowed:
  69 0004 01       		.byte	1
  70              		.comm	pomiaryAccel,1200,4
  71              		.comm	adrAndData,23,4
  72              		.bss
  73              	sendMsgTimerExpired:
  74 0004 00       		.space	1
  75              		.global	TimerIDSendMsg
  76 0005 000000   		.align	2
  79              	TimerIDSendMsg:
  80 0008 00000000 		.space	4
  81              		.global	statusTimerSendMsg
  82              		.data
  83 0005 000000   		.align	2
  86              	statusTimerSendMsg:
  87 0008 02000000 		.word	2
  88              		.global	sendingInProgress
  89              		.bss
  92              	sendingInProgress:
  93 000c 00       		.space	1
  94              		.global	counter
  95 000d 000000   		.align	2
  98              	counter:
  99 0010 00000000 		.space	4
 100              		.global	magSensitivity
 101              		.data
 102              		.align	2
 105              	magSensitivity:
 106 000c F7CC1239 		.word	957533431
 107 0010 240B9839 		.word	966265636
 108 0014 9F71E139 		.word	971075999
 109 0018 240B183A 		.word	974654244
 110              		.global	accelX
 111              		.bss
 112              		.align	1
 115              	accelX:
 116 0014 0000     		.space	2
 117              		.global	accelY
 118              		.align	1
 121              	accelY:
 122 0016 0000     		.space	2
 123              		.global	accelZ
 124              		.align	1
 127              	accelZ:
 128 0018 0000     		.space	2
 129              		.global	accelXf
 130 001a 0000     		.align	2
 133              	accelXf:
 134 001c 00000000 		.space	4
 135              		.global	accelYf
 136              		.align	2
 139              	accelYf:
 140 0020 00000000 		.space	4
 141              		.global	accelZf
 142              		.align	2
 145              	accelZf:
 146 0024 00000000 		.space	4
 147              		.global	gyroX
 148              		.align	1
 151              	gyroX:
 152 0028 0000     		.space	2
 153              		.global	gyroY
 154              		.align	1
 157              	gyroY:
 158 002a 0000     		.space	2
 159              		.global	gyroZ
 160              		.align	1
 163              	gyroZ:
 164 002c 0000     		.space	2
 165              		.global	gyroXf
 166 002e 0000     		.align	2
 169              	gyroXf:
 170 0030 00000000 		.space	4
 171              		.global	gyroYf
 172              		.align	2
 175              	gyroYf:
 176 0034 00000000 		.space	4
 177              		.global	gyroZf
 178              		.align	2
 181              	gyroZf:
 182 0038 00000000 		.space	4
 183              		.global	magnetX
 184              		.align	1
 187              	magnetX:
 188 003c 0000     		.space	2
 189              		.global	magnetY
 190              		.align	1
 193              	magnetY:
 194 003e 0000     		.space	2
 195              		.global	magnetZ
 196              		.align	1
 199              	magnetZ:
 200 0040 0000     		.space	2
 201              		.global	magnetXf
 202 0042 0000     		.align	2
 205              	magnetXf:
 206 0044 00000000 		.space	4
 207              		.global	magnetYf
 208              		.align	2
 211              	magnetYf:
 212 0048 00000000 		.space	4
 213              		.global	magnetZf
 214              		.align	2
 217              	magnetZf:
 218 004c 00000000 		.space	4
 219              		.global	copied
 222              	copied:
 223 0050 00       		.space	1
 224              		.section	.text.getAccelXf,"ax",%progbits
 225              		.align	2
 226              		.global	getAccelXf
 227              		.thumb
 228              		.thumb_func
 230              	getAccelXf:
 231              	.LFB112:
 232              		.file 1 "../LSM9DS1_Driver.c"
   1:../LSM9DS1_Driver.c **** /*
   2:../LSM9DS1_Driver.c ****  * LSM9DS1_Driver.c
   3:../LSM9DS1_Driver.c ****  *
   4:../LSM9DS1_Driver.c ****  *  Created on: 12-02-2016
   5:../LSM9DS1_Driver.c ****  *      Author: Mateusz
   6:../LSM9DS1_Driver.c ****  */
   7:../LSM9DS1_Driver.c **** #include "LSM9DS1_Driver.h"
   8:../LSM9DS1_Driver.c **** #include "LSM9DS1_Registers.h"
   9:../LSM9DS1_Driver.c **** #include "LSM9DS1_Types.h"
  10:../LSM9DS1_Driver.c **** #include "FIFO_functions.h"
  11:../LSM9DS1_Driver.c **** 
  12:../LSM9DS1_Driver.c **** #include <stdint.h>
  13:../LSM9DS1_Driver.c **** #include <inttypes.h>
  14:../LSM9DS1_Driver.c **** #include <math.h>
  15:../LSM9DS1_Driver.c **** #include <stdlib.h>
  16:../LSM9DS1_Driver.c **** #include <string.h>
  17:../LSM9DS1_Driver.c **** 
  18:../LSM9DS1_Driver.c **** //#define DELAY 10000
  19:../LSM9DS1_Driver.c **** #define DELAY 12000
  20:../LSM9DS1_Driver.c **** 
  21:../LSM9DS1_Driver.c **** #define LSM9DS1_M	0x1E // Would be 0x1C if SDO_M is LOW
  22:../LSM9DS1_Driver.c **** #define LSM9DS1_AG	0x6B // Would be 0x6A if SDO_AG is LOW
  23:../LSM9DS1_Driver.c **** 
  24:../LSM9DS1_Driver.c **** char accelOsX[100];
  25:../LSM9DS1_Driver.c **** char accelOsY[100];
  26:../LSM9DS1_Driver.c **** char accelOsZ[100];
  27:../LSM9DS1_Driver.c **** 
  28:../LSM9DS1_Driver.c **** #define TRUE 1
  29:../LSM9DS1_Driver.c **** #define FALSE 0
  30:../LSM9DS1_Driver.c **** 
  31:../LSM9DS1_Driver.c **** handle_t TimerIdReadMeasurements = 0;
  32:../LSM9DS1_Driver.c **** uint32_t StatusTimerReadMeasurements = SYSTM001_ERROR;
  33:../LSM9DS1_Driver.c **** 
  34:../LSM9DS1_Driver.c **** volatile bool readingAllowed = TRUE;
  35:../LSM9DS1_Driver.c **** 
  36:../LSM9DS1_Driver.c **** accel pomiaryAccel[100];
  37:../LSM9DS1_Driver.c **** extern accel copiedData[100];
  38:../LSM9DS1_Driver.c **** //accel pomiaryAccel1[100];
  39:../LSM9DS1_Driver.c **** 
  40:../LSM9DS1_Driver.c **** addressAndData adrAndData;
  41:../LSM9DS1_Driver.c **** 
  42:../LSM9DS1_Driver.c **** //tools for sending MSG
  43:../LSM9DS1_Driver.c **** static bool sendMsgTimerExpired = FALSE;
  44:../LSM9DS1_Driver.c **** handle_t TimerIDSendMsg = 0;
  45:../LSM9DS1_Driver.c **** uint32_t statusTimerSendMsg = SYSTM001_ERROR;
  46:../LSM9DS1_Driver.c **** bool sendingInProgress = FALSE;
  47:../LSM9DS1_Driver.c **** //tools for sending MSG
  48:../LSM9DS1_Driver.c **** 
  49:../LSM9DS1_Driver.c **** int counter = 0;
  50:../LSM9DS1_Driver.c **** 
  51:../LSM9DS1_Driver.c **** float magSensitivity[4] = {0.00014, 0.00029, 0.00043, 0.00058};
  52:../LSM9DS1_Driver.c **** 
  53:../LSM9DS1_Driver.c **** //linear acceleration all axes
  54:../LSM9DS1_Driver.c **** int16_t accelX = 0;
  55:../LSM9DS1_Driver.c **** int16_t accelY = 0;
  56:../LSM9DS1_Driver.c **** int16_t accelZ = 0;
  57:../LSM9DS1_Driver.c **** 
  58:../LSM9DS1_Driver.c **** float accelXf = 0;
  59:../LSM9DS1_Driver.c **** float accelYf = 0;
  60:../LSM9DS1_Driver.c **** float accelZf = 0;
  61:../LSM9DS1_Driver.c **** //linear acceleration all axes
  62:../LSM9DS1_Driver.c **** 
  63:../LSM9DS1_Driver.c **** //gyroscope all axes
  64:../LSM9DS1_Driver.c **** int16_t gyroX = 0;
  65:../LSM9DS1_Driver.c **** int16_t gyroY = 0;
  66:../LSM9DS1_Driver.c **** int16_t gyroZ = 0;
  67:../LSM9DS1_Driver.c **** 
  68:../LSM9DS1_Driver.c **** float gyroXf = 0;
  69:../LSM9DS1_Driver.c **** float gyroYf = 0;
  70:../LSM9DS1_Driver.c **** float gyroZf = 0;
  71:../LSM9DS1_Driver.c **** 
  72:../LSM9DS1_Driver.c **** //gyroscope all axes
  73:../LSM9DS1_Driver.c **** 
  74:../LSM9DS1_Driver.c **** //magnetometer all axes
  75:../LSM9DS1_Driver.c **** int16_t magnetX = 0;
  76:../LSM9DS1_Driver.c **** int16_t magnetY = 0;
  77:../LSM9DS1_Driver.c **** int16_t magnetZ = 0;
  78:../LSM9DS1_Driver.c **** 
  79:../LSM9DS1_Driver.c **** float magnetXf = 0;
  80:../LSM9DS1_Driver.c **** float magnetYf = 0;
  81:../LSM9DS1_Driver.c **** float magnetZf = 0;
  82:../LSM9DS1_Driver.c **** //magnetometer all axes
  83:../LSM9DS1_Driver.c **** 
  84:../LSM9DS1_Driver.c **** 
  85:../LSM9DS1_Driver.c **** extern char copied = 0;
  86:../LSM9DS1_Driver.c **** 
  87:../LSM9DS1_Driver.c **** float getAccelXf(void)
  88:../LSM9DS1_Driver.c **** {
 233              		.loc 1 88 0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 1, uses_anonymous_args = 0
 237              		@ link register save eliminated.
 238 0000 80B4     		push	{r7}
 239              	.LCFI0:
 240              		.cfi_def_cfa_offset 4
 241              		.cfi_offset 7, -4
 242 0002 00AF     		add	r7, sp, #0
 243              	.LCFI1:
 244              		.cfi_def_cfa_register 7
  89:../LSM9DS1_Driver.c **** 	return accelXf;
 245              		.loc 1 89 0
 246 0004 40F20003 		movw	r3, #:lower16:accelXf
 247 0008 C0F20003 		movt	r3, #:upper16:accelXf
 248 000c 1B68     		ldr	r3, [r3, #0]	@ float
  90:../LSM9DS1_Driver.c **** }
 249              		.loc 1 90 0
 250 000e 1846     		mov	r0, r3	@ float
 251 0010 BD46     		mov	sp, r7
 252 0012 80BC     		pop	{r7}
 253 0014 7047     		bx	lr
 254              		.cfi_endproc
 255              	.LFE112:
 257 0016 00BF     		.section	.text.getAccelX,"ax",%progbits
 258              		.align	2
 259              		.global	getAccelX
 260              		.thumb
 261              		.thumb_func
 263              	getAccelX:
 264              	.LFB113:
  91:../LSM9DS1_Driver.c **** 
  92:../LSM9DS1_Driver.c **** int16_t getAccelX(void)
  93:../LSM9DS1_Driver.c **** {
 265              		.loc 1 93 0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 0
 268              		@ frame_needed = 1, uses_anonymous_args = 0
 269              		@ link register save eliminated.
 270 0000 80B4     		push	{r7}
 271              	.LCFI2:
 272              		.cfi_def_cfa_offset 4
 273              		.cfi_offset 7, -4
 274 0002 00AF     		add	r7, sp, #0
 275              	.LCFI3:
 276              		.cfi_def_cfa_register 7
  94:../LSM9DS1_Driver.c **** 	return accelX;
 277              		.loc 1 94 0
 278 0004 40F20003 		movw	r3, #:lower16:accelX
 279 0008 C0F20003 		movt	r3, #:upper16:accelX
 280 000c 1B88     		ldrh	r3, [r3, #0]
 281 000e 1BB2     		sxth	r3, r3
  95:../LSM9DS1_Driver.c **** }
 282              		.loc 1 95 0
 283 0010 1846     		mov	r0, r3
 284 0012 BD46     		mov	sp, r7
 285 0014 80BC     		pop	{r7}
 286 0016 7047     		bx	lr
 287              		.cfi_endproc
 288              	.LFE113:
 290              		.section	.text.getAccelYf,"ax",%progbits
 291              		.align	2
 292              		.global	getAccelYf
 293              		.thumb
 294              		.thumb_func
 296              	getAccelYf:
 297              	.LFB114:
  96:../LSM9DS1_Driver.c **** 
  97:../LSM9DS1_Driver.c **** float getAccelYf(void)
  98:../LSM9DS1_Driver.c **** {
 298              		.loc 1 98 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 1, uses_anonymous_args = 0
 302              		@ link register save eliminated.
 303 0000 80B4     		push	{r7}
 304              	.LCFI4:
 305              		.cfi_def_cfa_offset 4
 306              		.cfi_offset 7, -4
 307 0002 00AF     		add	r7, sp, #0
 308              	.LCFI5:
 309              		.cfi_def_cfa_register 7
  99:../LSM9DS1_Driver.c **** 	return accelYf;
 310              		.loc 1 99 0
 311 0004 40F20003 		movw	r3, #:lower16:accelYf
 312 0008 C0F20003 		movt	r3, #:upper16:accelYf
 313 000c 1B68     		ldr	r3, [r3, #0]	@ float
 100:../LSM9DS1_Driver.c **** }
 314              		.loc 1 100 0
 315 000e 1846     		mov	r0, r3	@ float
 316 0010 BD46     		mov	sp, r7
 317 0012 80BC     		pop	{r7}
 318 0014 7047     		bx	lr
 319              		.cfi_endproc
 320              	.LFE114:
 322 0016 00BF     		.section	.text.getAccelY,"ax",%progbits
 323              		.align	2
 324              		.global	getAccelY
 325              		.thumb
 326              		.thumb_func
 328              	getAccelY:
 329              	.LFB115:
 101:../LSM9DS1_Driver.c **** 
 102:../LSM9DS1_Driver.c **** int16_t getAccelY(void)
 103:../LSM9DS1_Driver.c **** {
 330              		.loc 1 103 0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 1, uses_anonymous_args = 0
 334              		@ link register save eliminated.
 335 0000 80B4     		push	{r7}
 336              	.LCFI6:
 337              		.cfi_def_cfa_offset 4
 338              		.cfi_offset 7, -4
 339 0002 00AF     		add	r7, sp, #0
 340              	.LCFI7:
 341              		.cfi_def_cfa_register 7
 104:../LSM9DS1_Driver.c **** 	return accelY;
 342              		.loc 1 104 0
 343 0004 40F20003 		movw	r3, #:lower16:accelY
 344 0008 C0F20003 		movt	r3, #:upper16:accelY
 345 000c 1B88     		ldrh	r3, [r3, #0]
 346 000e 1BB2     		sxth	r3, r3
 105:../LSM9DS1_Driver.c **** }
 347              		.loc 1 105 0
 348 0010 1846     		mov	r0, r3
 349 0012 BD46     		mov	sp, r7
 350 0014 80BC     		pop	{r7}
 351 0016 7047     		bx	lr
 352              		.cfi_endproc
 353              	.LFE115:
 355              		.section	.text.getAccelZf,"ax",%progbits
 356              		.align	2
 357              		.global	getAccelZf
 358              		.thumb
 359              		.thumb_func
 361              	getAccelZf:
 362              	.LFB116:
 106:../LSM9DS1_Driver.c **** 
 107:../LSM9DS1_Driver.c **** float getAccelZf(void)
 108:../LSM9DS1_Driver.c **** {
 363              		.loc 1 108 0
 364              		.cfi_startproc
 365              		@ args = 0, pretend = 0, frame = 0
 366              		@ frame_needed = 1, uses_anonymous_args = 0
 367              		@ link register save eliminated.
 368 0000 80B4     		push	{r7}
 369              	.LCFI8:
 370              		.cfi_def_cfa_offset 4
 371              		.cfi_offset 7, -4
 372 0002 00AF     		add	r7, sp, #0
 373              	.LCFI9:
 374              		.cfi_def_cfa_register 7
 109:../LSM9DS1_Driver.c **** 	return accelZf;
 375              		.loc 1 109 0
 376 0004 40F20003 		movw	r3, #:lower16:accelZf
 377 0008 C0F20003 		movt	r3, #:upper16:accelZf
 378 000c 1B68     		ldr	r3, [r3, #0]	@ float
 110:../LSM9DS1_Driver.c **** }
 379              		.loc 1 110 0
 380 000e 1846     		mov	r0, r3	@ float
 381 0010 BD46     		mov	sp, r7
 382 0012 80BC     		pop	{r7}
 383 0014 7047     		bx	lr
 384              		.cfi_endproc
 385              	.LFE116:
 387 0016 00BF     		.section	.text.getAccelZ,"ax",%progbits
 388              		.align	2
 389              		.global	getAccelZ
 390              		.thumb
 391              		.thumb_func
 393              	getAccelZ:
 394              	.LFB117:
 111:../LSM9DS1_Driver.c **** 
 112:../LSM9DS1_Driver.c **** int16_t getAccelZ(void)
 113:../LSM9DS1_Driver.c **** {
 395              		.loc 1 113 0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 0
 398              		@ frame_needed = 1, uses_anonymous_args = 0
 399              		@ link register save eliminated.
 400 0000 80B4     		push	{r7}
 401              	.LCFI10:
 402              		.cfi_def_cfa_offset 4
 403              		.cfi_offset 7, -4
 404 0002 00AF     		add	r7, sp, #0
 405              	.LCFI11:
 406              		.cfi_def_cfa_register 7
 114:../LSM9DS1_Driver.c **** 	return accelZ;
 407              		.loc 1 114 0
 408 0004 40F20003 		movw	r3, #:lower16:accelZ
 409 0008 C0F20003 		movt	r3, #:upper16:accelZ
 410 000c 1B88     		ldrh	r3, [r3, #0]
 411 000e 1BB2     		sxth	r3, r3
 115:../LSM9DS1_Driver.c **** }
 412              		.loc 1 115 0
 413 0010 1846     		mov	r0, r3
 414 0012 BD46     		mov	sp, r7
 415 0014 80BC     		pop	{r7}
 416 0016 7047     		bx	lr
 417              		.cfi_endproc
 418              	.LFE117:
 420              		.section	.text.getGyroXf,"ax",%progbits
 421              		.align	2
 422              		.global	getGyroXf
 423              		.thumb
 424              		.thumb_func
 426              	getGyroXf:
 427              	.LFB118:
 116:../LSM9DS1_Driver.c **** 
 117:../LSM9DS1_Driver.c **** float getGyroXf(void)
 118:../LSM9DS1_Driver.c **** {
 428              		.loc 1 118 0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 0
 431              		@ frame_needed = 1, uses_anonymous_args = 0
 432              		@ link register save eliminated.
 433 0000 80B4     		push	{r7}
 434              	.LCFI12:
 435              		.cfi_def_cfa_offset 4
 436              		.cfi_offset 7, -4
 437 0002 00AF     		add	r7, sp, #0
 438              	.LCFI13:
 439              		.cfi_def_cfa_register 7
 119:../LSM9DS1_Driver.c **** 	return gyroXf;
 440              		.loc 1 119 0
 441 0004 40F20003 		movw	r3, #:lower16:gyroXf
 442 0008 C0F20003 		movt	r3, #:upper16:gyroXf
 443 000c 1B68     		ldr	r3, [r3, #0]	@ float
 120:../LSM9DS1_Driver.c **** }
 444              		.loc 1 120 0
 445 000e 1846     		mov	r0, r3	@ float
 446 0010 BD46     		mov	sp, r7
 447 0012 80BC     		pop	{r7}
 448 0014 7047     		bx	lr
 449              		.cfi_endproc
 450              	.LFE118:
 452 0016 00BF     		.section	.text.getGyroX,"ax",%progbits
 453              		.align	2
 454              		.global	getGyroX
 455              		.thumb
 456              		.thumb_func
 458              	getGyroX:
 459              	.LFB119:
 121:../LSM9DS1_Driver.c **** 
 122:../LSM9DS1_Driver.c **** int16_t getGyroX(void)
 123:../LSM9DS1_Driver.c **** {
 460              		.loc 1 123 0
 461              		.cfi_startproc
 462              		@ args = 0, pretend = 0, frame = 0
 463              		@ frame_needed = 1, uses_anonymous_args = 0
 464              		@ link register save eliminated.
 465 0000 80B4     		push	{r7}
 466              	.LCFI14:
 467              		.cfi_def_cfa_offset 4
 468              		.cfi_offset 7, -4
 469 0002 00AF     		add	r7, sp, #0
 470              	.LCFI15:
 471              		.cfi_def_cfa_register 7
 124:../LSM9DS1_Driver.c **** 	return gyroX;
 472              		.loc 1 124 0
 473 0004 40F20003 		movw	r3, #:lower16:gyroX
 474 0008 C0F20003 		movt	r3, #:upper16:gyroX
 475 000c 1B88     		ldrh	r3, [r3, #0]
 476 000e 1BB2     		sxth	r3, r3
 125:../LSM9DS1_Driver.c **** }
 477              		.loc 1 125 0
 478 0010 1846     		mov	r0, r3
 479 0012 BD46     		mov	sp, r7
 480 0014 80BC     		pop	{r7}
 481 0016 7047     		bx	lr
 482              		.cfi_endproc
 483              	.LFE119:
 485              		.section	.text.getGyroYf,"ax",%progbits
 486              		.align	2
 487              		.global	getGyroYf
 488              		.thumb
 489              		.thumb_func
 491              	getGyroYf:
 492              	.LFB120:
 126:../LSM9DS1_Driver.c **** 
 127:../LSM9DS1_Driver.c **** float getGyroYf(void)
 128:../LSM9DS1_Driver.c **** {
 493              		.loc 1 128 0
 494              		.cfi_startproc
 495              		@ args = 0, pretend = 0, frame = 0
 496              		@ frame_needed = 1, uses_anonymous_args = 0
 497              		@ link register save eliminated.
 498 0000 80B4     		push	{r7}
 499              	.LCFI16:
 500              		.cfi_def_cfa_offset 4
 501              		.cfi_offset 7, -4
 502 0002 00AF     		add	r7, sp, #0
 503              	.LCFI17:
 504              		.cfi_def_cfa_register 7
 129:../LSM9DS1_Driver.c **** 	return gyroYf;
 505              		.loc 1 129 0
 506 0004 40F20003 		movw	r3, #:lower16:gyroYf
 507 0008 C0F20003 		movt	r3, #:upper16:gyroYf
 508 000c 1B68     		ldr	r3, [r3, #0]	@ float
 130:../LSM9DS1_Driver.c **** }
 509              		.loc 1 130 0
 510 000e 1846     		mov	r0, r3	@ float
 511 0010 BD46     		mov	sp, r7
 512 0012 80BC     		pop	{r7}
 513 0014 7047     		bx	lr
 514              		.cfi_endproc
 515              	.LFE120:
 517 0016 00BF     		.section	.text.getGyroY,"ax",%progbits
 518              		.align	2
 519              		.global	getGyroY
 520              		.thumb
 521              		.thumb_func
 523              	getGyroY:
 524              	.LFB121:
 131:../LSM9DS1_Driver.c **** 
 132:../LSM9DS1_Driver.c **** int16_t getGyroY(void)
 133:../LSM9DS1_Driver.c **** {
 525              		.loc 1 133 0
 526              		.cfi_startproc
 527              		@ args = 0, pretend = 0, frame = 0
 528              		@ frame_needed = 1, uses_anonymous_args = 0
 529              		@ link register save eliminated.
 530 0000 80B4     		push	{r7}
 531              	.LCFI18:
 532              		.cfi_def_cfa_offset 4
 533              		.cfi_offset 7, -4
 534 0002 00AF     		add	r7, sp, #0
 535              	.LCFI19:
 536              		.cfi_def_cfa_register 7
 134:../LSM9DS1_Driver.c **** 	return gyroY;
 537              		.loc 1 134 0
 538 0004 40F20003 		movw	r3, #:lower16:gyroY
 539 0008 C0F20003 		movt	r3, #:upper16:gyroY
 540 000c 1B88     		ldrh	r3, [r3, #0]
 541 000e 1BB2     		sxth	r3, r3
 135:../LSM9DS1_Driver.c **** }
 542              		.loc 1 135 0
 543 0010 1846     		mov	r0, r3
 544 0012 BD46     		mov	sp, r7
 545 0014 80BC     		pop	{r7}
 546 0016 7047     		bx	lr
 547              		.cfi_endproc
 548              	.LFE121:
 550              		.section	.text.getGyroZf,"ax",%progbits
 551              		.align	2
 552              		.global	getGyroZf
 553              		.thumb
 554              		.thumb_func
 556              	getGyroZf:
 557              	.LFB122:
 136:../LSM9DS1_Driver.c **** 
 137:../LSM9DS1_Driver.c **** float getGyroZf(void)
 138:../LSM9DS1_Driver.c **** {
 558              		.loc 1 138 0
 559              		.cfi_startproc
 560              		@ args = 0, pretend = 0, frame = 0
 561              		@ frame_needed = 1, uses_anonymous_args = 0
 562              		@ link register save eliminated.
 563 0000 80B4     		push	{r7}
 564              	.LCFI20:
 565              		.cfi_def_cfa_offset 4
 566              		.cfi_offset 7, -4
 567 0002 00AF     		add	r7, sp, #0
 568              	.LCFI21:
 569              		.cfi_def_cfa_register 7
 139:../LSM9DS1_Driver.c **** 	return gyroZf;
 570              		.loc 1 139 0
 571 0004 40F20003 		movw	r3, #:lower16:gyroZf
 572 0008 C0F20003 		movt	r3, #:upper16:gyroZf
 573 000c 1B68     		ldr	r3, [r3, #0]	@ float
 140:../LSM9DS1_Driver.c **** }
 574              		.loc 1 140 0
 575 000e 1846     		mov	r0, r3	@ float
 576 0010 BD46     		mov	sp, r7
 577 0012 80BC     		pop	{r7}
 578 0014 7047     		bx	lr
 579              		.cfi_endproc
 580              	.LFE122:
 582 0016 00BF     		.section	.text.getGyroZ,"ax",%progbits
 583              		.align	2
 584              		.global	getGyroZ
 585              		.thumb
 586              		.thumb_func
 588              	getGyroZ:
 589              	.LFB123:
 141:../LSM9DS1_Driver.c **** 
 142:../LSM9DS1_Driver.c **** int16_t getGyroZ(void)
 143:../LSM9DS1_Driver.c **** {
 590              		.loc 1 143 0
 591              		.cfi_startproc
 592              		@ args = 0, pretend = 0, frame = 0
 593              		@ frame_needed = 1, uses_anonymous_args = 0
 594              		@ link register save eliminated.
 595 0000 80B4     		push	{r7}
 596              	.LCFI22:
 597              		.cfi_def_cfa_offset 4
 598              		.cfi_offset 7, -4
 599 0002 00AF     		add	r7, sp, #0
 600              	.LCFI23:
 601              		.cfi_def_cfa_register 7
 144:../LSM9DS1_Driver.c **** 	return gyroZ;
 602              		.loc 1 144 0
 603 0004 40F20003 		movw	r3, #:lower16:gyroZ
 604 0008 C0F20003 		movt	r3, #:upper16:gyroZ
 605 000c 1B88     		ldrh	r3, [r3, #0]
 606 000e 1BB2     		sxth	r3, r3
 145:../LSM9DS1_Driver.c **** }
 607              		.loc 1 145 0
 608 0010 1846     		mov	r0, r3
 609 0012 BD46     		mov	sp, r7
 610 0014 80BC     		pop	{r7}
 611 0016 7047     		bx	lr
 612              		.cfi_endproc
 613              	.LFE123:
 615              		.section	.text.getMagnetXf,"ax",%progbits
 616              		.align	2
 617              		.global	getMagnetXf
 618              		.thumb
 619              		.thumb_func
 621              	getMagnetXf:
 622              	.LFB124:
 146:../LSM9DS1_Driver.c **** 
 147:../LSM9DS1_Driver.c **** float getMagnetXf(void)
 148:../LSM9DS1_Driver.c **** {
 623              		.loc 1 148 0
 624              		.cfi_startproc
 625              		@ args = 0, pretend = 0, frame = 0
 626              		@ frame_needed = 1, uses_anonymous_args = 0
 627              		@ link register save eliminated.
 628 0000 80B4     		push	{r7}
 629              	.LCFI24:
 630              		.cfi_def_cfa_offset 4
 631              		.cfi_offset 7, -4
 632 0002 00AF     		add	r7, sp, #0
 633              	.LCFI25:
 634              		.cfi_def_cfa_register 7
 149:../LSM9DS1_Driver.c **** 	return magnetXf;
 635              		.loc 1 149 0
 636 0004 40F20003 		movw	r3, #:lower16:magnetXf
 637 0008 C0F20003 		movt	r3, #:upper16:magnetXf
 638 000c 1B68     		ldr	r3, [r3, #0]	@ float
 150:../LSM9DS1_Driver.c **** }
 639              		.loc 1 150 0
 640 000e 1846     		mov	r0, r3	@ float
 641 0010 BD46     		mov	sp, r7
 642 0012 80BC     		pop	{r7}
 643 0014 7047     		bx	lr
 644              		.cfi_endproc
 645              	.LFE124:
 647 0016 00BF     		.section	.text.getMagnetX,"ax",%progbits
 648              		.align	2
 649              		.global	getMagnetX
 650              		.thumb
 651              		.thumb_func
 653              	getMagnetX:
 654              	.LFB125:
 151:../LSM9DS1_Driver.c **** 
 152:../LSM9DS1_Driver.c **** int16_t getMagnetX(void)
 153:../LSM9DS1_Driver.c **** {
 655              		.loc 1 153 0
 656              		.cfi_startproc
 657              		@ args = 0, pretend = 0, frame = 0
 658              		@ frame_needed = 1, uses_anonymous_args = 0
 659              		@ link register save eliminated.
 660 0000 80B4     		push	{r7}
 661              	.LCFI26:
 662              		.cfi_def_cfa_offset 4
 663              		.cfi_offset 7, -4
 664 0002 00AF     		add	r7, sp, #0
 665              	.LCFI27:
 666              		.cfi_def_cfa_register 7
 154:../LSM9DS1_Driver.c **** 	return magnetX;
 667              		.loc 1 154 0
 668 0004 40F20003 		movw	r3, #:lower16:magnetX
 669 0008 C0F20003 		movt	r3, #:upper16:magnetX
 670 000c 1B88     		ldrh	r3, [r3, #0]
 671 000e 1BB2     		sxth	r3, r3
 155:../LSM9DS1_Driver.c **** }
 672              		.loc 1 155 0
 673 0010 1846     		mov	r0, r3
 674 0012 BD46     		mov	sp, r7
 675 0014 80BC     		pop	{r7}
 676 0016 7047     		bx	lr
 677              		.cfi_endproc
 678              	.LFE125:
 680              		.section	.text.getMagnetYf,"ax",%progbits
 681              		.align	2
 682              		.global	getMagnetYf
 683              		.thumb
 684              		.thumb_func
 686              	getMagnetYf:
 687              	.LFB126:
 156:../LSM9DS1_Driver.c **** 
 157:../LSM9DS1_Driver.c **** float getMagnetYf(void)
 158:../LSM9DS1_Driver.c **** {
 688              		.loc 1 158 0
 689              		.cfi_startproc
 690              		@ args = 0, pretend = 0, frame = 0
 691              		@ frame_needed = 1, uses_anonymous_args = 0
 692              		@ link register save eliminated.
 693 0000 80B4     		push	{r7}
 694              	.LCFI28:
 695              		.cfi_def_cfa_offset 4
 696              		.cfi_offset 7, -4
 697 0002 00AF     		add	r7, sp, #0
 698              	.LCFI29:
 699              		.cfi_def_cfa_register 7
 159:../LSM9DS1_Driver.c **** 	return magnetYf;
 700              		.loc 1 159 0
 701 0004 40F20003 		movw	r3, #:lower16:magnetYf
 702 0008 C0F20003 		movt	r3, #:upper16:magnetYf
 703 000c 1B68     		ldr	r3, [r3, #0]	@ float
 160:../LSM9DS1_Driver.c **** }
 704              		.loc 1 160 0
 705 000e 1846     		mov	r0, r3	@ float
 706 0010 BD46     		mov	sp, r7
 707 0012 80BC     		pop	{r7}
 708 0014 7047     		bx	lr
 709              		.cfi_endproc
 710              	.LFE126:
 712 0016 00BF     		.section	.text.getMagnetY,"ax",%progbits
 713              		.align	2
 714              		.global	getMagnetY
 715              		.thumb
 716              		.thumb_func
 718              	getMagnetY:
 719              	.LFB127:
 161:../LSM9DS1_Driver.c **** 
 162:../LSM9DS1_Driver.c **** int16_t getMagnetY(void)
 163:../LSM9DS1_Driver.c **** {
 720              		.loc 1 163 0
 721              		.cfi_startproc
 722              		@ args = 0, pretend = 0, frame = 0
 723              		@ frame_needed = 1, uses_anonymous_args = 0
 724              		@ link register save eliminated.
 725 0000 80B4     		push	{r7}
 726              	.LCFI30:
 727              		.cfi_def_cfa_offset 4
 728              		.cfi_offset 7, -4
 729 0002 00AF     		add	r7, sp, #0
 730              	.LCFI31:
 731              		.cfi_def_cfa_register 7
 164:../LSM9DS1_Driver.c **** 	return magnetY;
 732              		.loc 1 164 0
 733 0004 40F20003 		movw	r3, #:lower16:magnetY
 734 0008 C0F20003 		movt	r3, #:upper16:magnetY
 735 000c 1B88     		ldrh	r3, [r3, #0]
 736 000e 1BB2     		sxth	r3, r3
 165:../LSM9DS1_Driver.c **** }
 737              		.loc 1 165 0
 738 0010 1846     		mov	r0, r3
 739 0012 BD46     		mov	sp, r7
 740 0014 80BC     		pop	{r7}
 741 0016 7047     		bx	lr
 742              		.cfi_endproc
 743              	.LFE127:
 745              		.section	.text.getMagnetZf,"ax",%progbits
 746              		.align	2
 747              		.global	getMagnetZf
 748              		.thumb
 749              		.thumb_func
 751              	getMagnetZf:
 752              	.LFB128:
 166:../LSM9DS1_Driver.c **** 
 167:../LSM9DS1_Driver.c **** float getMagnetZf(void)
 168:../LSM9DS1_Driver.c **** {
 753              		.loc 1 168 0
 754              		.cfi_startproc
 755              		@ args = 0, pretend = 0, frame = 0
 756              		@ frame_needed = 1, uses_anonymous_args = 0
 757              		@ link register save eliminated.
 758 0000 80B4     		push	{r7}
 759              	.LCFI32:
 760              		.cfi_def_cfa_offset 4
 761              		.cfi_offset 7, -4
 762 0002 00AF     		add	r7, sp, #0
 763              	.LCFI33:
 764              		.cfi_def_cfa_register 7
 169:../LSM9DS1_Driver.c **** 	return magnetZf;
 765              		.loc 1 169 0
 766 0004 40F20003 		movw	r3, #:lower16:magnetZf
 767 0008 C0F20003 		movt	r3, #:upper16:magnetZf
 768 000c 1B68     		ldr	r3, [r3, #0]	@ float
 170:../LSM9DS1_Driver.c **** }
 769              		.loc 1 170 0
 770 000e 1846     		mov	r0, r3	@ float
 771 0010 BD46     		mov	sp, r7
 772 0012 80BC     		pop	{r7}
 773 0014 7047     		bx	lr
 774              		.cfi_endproc
 775              	.LFE128:
 777 0016 00BF     		.section	.text.getMagnetZ,"ax",%progbits
 778              		.align	2
 779              		.global	getMagnetZ
 780              		.thumb
 781              		.thumb_func
 783              	getMagnetZ:
 784              	.LFB129:
 171:../LSM9DS1_Driver.c **** 
 172:../LSM9DS1_Driver.c **** int16_t getMagnetZ(void)
 173:../LSM9DS1_Driver.c **** {
 785              		.loc 1 173 0
 786              		.cfi_startproc
 787              		@ args = 0, pretend = 0, frame = 0
 788              		@ frame_needed = 1, uses_anonymous_args = 0
 789              		@ link register save eliminated.
 790 0000 80B4     		push	{r7}
 791              	.LCFI34:
 792              		.cfi_def_cfa_offset 4
 793              		.cfi_offset 7, -4
 794 0002 00AF     		add	r7, sp, #0
 795              	.LCFI35:
 796              		.cfi_def_cfa_register 7
 174:../LSM9DS1_Driver.c **** 	return magnetZ;
 797              		.loc 1 174 0
 798 0004 40F20003 		movw	r3, #:lower16:magnetZ
 799 0008 C0F20003 		movt	r3, #:upper16:magnetZ
 800 000c 1B88     		ldrh	r3, [r3, #0]
 801 000e 1BB2     		sxth	r3, r3
 175:../LSM9DS1_Driver.c **** }
 802              		.loc 1 175 0
 803 0010 1846     		mov	r0, r3
 804 0012 BD46     		mov	sp, r7
 805 0014 80BC     		pop	{r7}
 806 0016 7047     		bx	lr
 807              		.cfi_endproc
 808              	.LFE129:
 810              		.section	.text.startMeasurements,"ax",%progbits
 811              		.align	2
 812              		.global	startMeasurements
 813              		.thumb
 814              		.thumb_func
 816              	startMeasurements:
 817              	.LFB130:
 176:../LSM9DS1_Driver.c **** 
 177:../LSM9DS1_Driver.c **** void startMeasurements(void)
 178:../LSM9DS1_Driver.c **** {
 818              		.loc 1 178 0
 819              		.cfi_startproc
 820              		@ args = 0, pretend = 0, frame = 0
 821              		@ frame_needed = 1, uses_anonymous_args = 0
 822 0000 80B5     		push	{r7, lr}
 823              	.LCFI36:
 824              		.cfi_def_cfa_offset 8
 825              		.cfi_offset 7, -8
 826              		.cfi_offset 14, -4
 827 0002 00AF     		add	r7, sp, #0
 828              	.LCFI37:
 829              		.cfi_def_cfa_register 7
 179:../LSM9DS1_Driver.c **** 	TimerIdReadMeasurements=SYSTM001_CreateTimer(35,SYSTM001_PERIODIC,timerHandlerReceiveOneMeasuremen
 830              		.loc 1 179 0
 831 0004 4FF02300 		mov	r0, #35
 832 0008 4FF00101 		mov	r1, #1
 833 000c 40F20002 		movw	r2, #:lower16:timerHandlerReceiveOneMeasurementEachSensor
 834 0010 C0F20002 		movt	r2, #:upper16:timerHandlerReceiveOneMeasurementEachSensor
 835 0014 40F20003 		movw	r3, #:lower16:adrAndData
 836 0018 C0F20003 		movt	r3, #:upper16:adrAndData
 837 001c FFF7FEFF 		bl	SYSTM001_CreateTimer
 838 0020 0246     		mov	r2, r0
 839 0022 40F20003 		movw	r3, #:lower16:TimerIdReadMeasurements
 840 0026 C0F20003 		movt	r3, #:upper16:TimerIdReadMeasurements
 841 002a 1A60     		str	r2, [r3, #0]
 180:../LSM9DS1_Driver.c **** 	SYSTM001_StartTimer(TimerIdReadMeasurements);
 842              		.loc 1 180 0
 843 002c 40F20003 		movw	r3, #:lower16:TimerIdReadMeasurements
 844 0030 C0F20003 		movt	r3, #:upper16:TimerIdReadMeasurements
 845 0034 1B68     		ldr	r3, [r3, #0]
 846 0036 1846     		mov	r0, r3
 847 0038 FFF7FEFF 		bl	SYSTM001_StartTimer
 181:../LSM9DS1_Driver.c **** }
 848              		.loc 1 181 0
 849 003c 80BD     		pop	{r7, pc}
 850              		.cfi_endproc
 851              	.LFE130:
 853 003e 00BF     		.section	.text.readAndSendMeasurements,"ax",%progbits
 854              		.align	2
 855              		.global	readAndSendMeasurements
 856              		.thumb
 857              		.thumb_func
 859              	readAndSendMeasurements:
 860              	.LFB131:
 182:../LSM9DS1_Driver.c **** 
 183:../LSM9DS1_Driver.c **** 
 184:../LSM9DS1_Driver.c **** 
 185:../LSM9DS1_Driver.c **** void readAndSendMeasurements(void (*sendFunction)(char *str, int len))
 186:../LSM9DS1_Driver.c **** {
 861              		.loc 1 186 0
 862              		.cfi_startproc
 863              		@ args = 0, pretend = 0, frame = 16
 864              		@ frame_needed = 1, uses_anonymous_args = 0
 865 0000 80B5     		push	{r7, lr}
 866              	.LCFI38:
 867              		.cfi_def_cfa_offset 8
 868              		.cfi_offset 7, -8
 869              		.cfi_offset 14, -4
 870 0002 84B0     		sub	sp, sp, #16
 871              	.LCFI39:
 872              		.cfi_def_cfa_offset 24
 873 0004 00AF     		add	r7, sp, #0
 874              	.LCFI40:
 875              		.cfi_def_cfa_register 7
 876 0006 7860     		str	r0, [r7, #4]
 187:../LSM9DS1_Driver.c **** 	if(!readingAllowed && (counter < 1))
 877              		.loc 1 187 0
 878 0008 40F20003 		movw	r3, #:lower16:readingAllowed
 879 000c C0F20003 		movt	r3, #:upper16:readingAllowed
 880 0010 1B78     		ldrb	r3, [r3, #0]
 881 0012 DBB2     		uxtb	r3, r3
 882 0014 002B     		cmp	r3, #0
 883 0016 40F02083 		bne	.L39
 884              		.loc 1 187 0 is_stmt 0 discriminator 1
 885 001a 40F20003 		movw	r3, #:lower16:counter
 886 001e C0F20003 		movt	r3, #:upper16:counter
 887 0022 1B68     		ldr	r3, [r3, #0]
 888 0024 002B     		cmp	r3, #0
 889 0026 00F31883 		bgt	.L39
 188:../LSM9DS1_Driver.c **** 	{
 189:../LSM9DS1_Driver.c **** 
 190:../LSM9DS1_Driver.c **** 		accelX = (adrAndData.dane[1] << 8) | adrAndData.dane[0]; // Store x-axis values into gx
 890              		.loc 1 190 0 is_stmt 1
 891 002a 40F20003 		movw	r3, #:lower16:adrAndData
 892 002e C0F20003 		movt	r3, #:upper16:adrAndData
 893 0032 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 894 0034 4FEA0323 		lsl	r3, r3, #8
 895 0038 9AB2     		uxth	r2, r3
 896 003a 40F20003 		movw	r3, #:lower16:adrAndData
 897 003e C0F20003 		movt	r3, #:upper16:adrAndData
 898 0042 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 899 0044 1343     		orrs	r3, r3, r2
 900 0046 9AB2     		uxth	r2, r3
 901 0048 40F20003 		movw	r3, #:lower16:accelX
 902 004c C0F20003 		movt	r3, #:upper16:accelX
 903 0050 1A80     		strh	r2, [r3, #0]	@ movhi
 191:../LSM9DS1_Driver.c **** 
 192:../LSM9DS1_Driver.c **** 		accelY = (adrAndData.dane[3] << 8) | adrAndData.dane[2]; // Store y-axis values into gy
 904              		.loc 1 192 0
 905 0052 40F20003 		movw	r3, #:lower16:adrAndData
 906 0056 C0F20003 		movt	r3, #:upper16:adrAndData
 907 005a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 908 005c 4FEA0323 		lsl	r3, r3, #8
 909 0060 9AB2     		uxth	r2, r3
 910 0062 40F20003 		movw	r3, #:lower16:adrAndData
 911 0066 C0F20003 		movt	r3, #:upper16:adrAndData
 912 006a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 913 006c 1343     		orrs	r3, r3, r2
 914 006e 9AB2     		uxth	r2, r3
 915 0070 40F20003 		movw	r3, #:lower16:accelY
 916 0074 C0F20003 		movt	r3, #:upper16:accelY
 917 0078 1A80     		strh	r2, [r3, #0]	@ movhi
 193:../LSM9DS1_Driver.c **** 
 194:../LSM9DS1_Driver.c **** 		accelZ = (adrAndData.dane[5] << 8) | adrAndData.dane[4]; // Store z-axis values into gz
 918              		.loc 1 194 0
 919 007a 40F20003 		movw	r3, #:lower16:adrAndData
 920 007e C0F20003 		movt	r3, #:upper16:adrAndData
 921 0082 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 922 0084 4FEA0323 		lsl	r3, r3, #8
 923 0088 9AB2     		uxth	r2, r3
 924 008a 40F20003 		movw	r3, #:lower16:adrAndData
 925 008e C0F20003 		movt	r3, #:upper16:adrAndData
 926 0092 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 927 0094 1343     		orrs	r3, r3, r2
 928 0096 9AB2     		uxth	r2, r3
 929 0098 40F20003 		movw	r3, #:lower16:accelZ
 930 009c C0F20003 		movt	r3, #:upper16:accelZ
 931 00a0 1A80     		strh	r2, [r3, #0]	@ movhi
 195:../LSM9DS1_Driver.c **** 
 196:../LSM9DS1_Driver.c **** 		if (_autoCalc) //kalibracja
 932              		.loc 1 196 0
 933 00a2 40F20003 		movw	r3, #:lower16:_autoCalc
 934 00a6 C0F20003 		movt	r3, #:upper16:_autoCalc
 935 00aa 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 936 00ac 002B     		cmp	r3, #0
 937 00ae 3BD0     		beq	.L40
 197:../LSM9DS1_Driver.c **** 		{
 198:../LSM9DS1_Driver.c **** 			accelX -= aBiasRaw[X_AXIS];
 938              		.loc 1 198 0
 939 00b0 40F20003 		movw	r3, #:lower16:accelX
 940 00b4 C0F20003 		movt	r3, #:upper16:accelX
 941 00b8 1B88     		ldrh	r3, [r3, #0]
 942 00ba 9AB2     		uxth	r2, r3
 943 00bc 40F20003 		movw	r3, #:lower16:aBiasRaw
 944 00c0 C0F20003 		movt	r3, #:upper16:aBiasRaw
 945 00c4 1B88     		ldrh	r3, [r3, #0]
 946 00c6 9BB2     		uxth	r3, r3
 947 00c8 D31A     		subs	r3, r2, r3
 948 00ca 9BB2     		uxth	r3, r3
 949 00cc 9AB2     		uxth	r2, r3
 950 00ce 40F20003 		movw	r3, #:lower16:accelX
 951 00d2 C0F20003 		movt	r3, #:upper16:accelX
 952 00d6 1A80     		strh	r2, [r3, #0]	@ movhi
 199:../LSM9DS1_Driver.c **** 			accelX -= aBiasRaw[Y_AXIS];
 953              		.loc 1 199 0
 954 00d8 40F20003 		movw	r3, #:lower16:accelX
 955 00dc C0F20003 		movt	r3, #:upper16:accelX
 956 00e0 1B88     		ldrh	r3, [r3, #0]
 957 00e2 9AB2     		uxth	r2, r3
 958 00e4 40F20003 		movw	r3, #:lower16:aBiasRaw
 959 00e8 C0F20003 		movt	r3, #:upper16:aBiasRaw
 960 00ec 5B88     		ldrh	r3, [r3, #2]
 961 00ee 9BB2     		uxth	r3, r3
 962 00f0 D31A     		subs	r3, r2, r3
 963 00f2 9BB2     		uxth	r3, r3
 964 00f4 9AB2     		uxth	r2, r3
 965 00f6 40F20003 		movw	r3, #:lower16:accelX
 966 00fa C0F20003 		movt	r3, #:upper16:accelX
 967 00fe 1A80     		strh	r2, [r3, #0]	@ movhi
 200:../LSM9DS1_Driver.c **** 			accelX -= aBiasRaw[Z_AXIS];
 968              		.loc 1 200 0
 969 0100 40F20003 		movw	r3, #:lower16:accelX
 970 0104 C0F20003 		movt	r3, #:upper16:accelX
 971 0108 1B88     		ldrh	r3, [r3, #0]
 972 010a 9AB2     		uxth	r2, r3
 973 010c 40F20003 		movw	r3, #:lower16:aBiasRaw
 974 0110 C0F20003 		movt	r3, #:upper16:aBiasRaw
 975 0114 9B88     		ldrh	r3, [r3, #4]
 976 0116 9BB2     		uxth	r3, r3
 977 0118 D31A     		subs	r3, r2, r3
 978 011a 9BB2     		uxth	r3, r3
 979 011c 9AB2     		uxth	r2, r3
 980 011e 40F20003 		movw	r3, #:lower16:accelX
 981 0122 C0F20003 		movt	r3, #:upper16:accelX
 982 0126 1A80     		strh	r2, [r3, #0]	@ movhi
 983              	.L40:
 201:../LSM9DS1_Driver.c **** 		}
 202:../LSM9DS1_Driver.c **** 
 203:../LSM9DS1_Driver.c **** 		accelXf = calcAccel(accelX);
 984              		.loc 1 203 0
 985 0128 40F20003 		movw	r3, #:lower16:accelX
 986 012c C0F20003 		movt	r3, #:upper16:accelX
 987 0130 1B88     		ldrh	r3, [r3, #0]
 988 0132 1BB2     		sxth	r3, r3
 989 0134 1846     		mov	r0, r3
 990 0136 FFF7FEFF 		bl	calcAccel
 991 013a 0246     		mov	r2, r0	@ float
 992 013c 40F20003 		movw	r3, #:lower16:accelXf
 993 0140 C0F20003 		movt	r3, #:upper16:accelXf
 994 0144 1A60     		str	r2, [r3, #0]	@ float
 204:../LSM9DS1_Driver.c **** 		accelYf = calcAccel(accelY);
 995              		.loc 1 204 0
 996 0146 40F20003 		movw	r3, #:lower16:accelY
 997 014a C0F20003 		movt	r3, #:upper16:accelY
 998 014e 1B88     		ldrh	r3, [r3, #0]
 999 0150 1BB2     		sxth	r3, r3
 1000 0152 1846     		mov	r0, r3
 1001 0154 FFF7FEFF 		bl	calcAccel
 1002 0158 0246     		mov	r2, r0	@ float
 1003 015a 40F20003 		movw	r3, #:lower16:accelYf
 1004 015e C0F20003 		movt	r3, #:upper16:accelYf
 1005 0162 1A60     		str	r2, [r3, #0]	@ float
 205:../LSM9DS1_Driver.c **** 		accelZf = calcAccel(accelZ);
 1006              		.loc 1 205 0
 1007 0164 40F20003 		movw	r3, #:lower16:accelZ
 1008 0168 C0F20003 		movt	r3, #:upper16:accelZ
 1009 016c 1B88     		ldrh	r3, [r3, #0]
 1010 016e 1BB2     		sxth	r3, r3
 1011 0170 1846     		mov	r0, r3
 1012 0172 FFF7FEFF 		bl	calcAccel
 1013 0176 0246     		mov	r2, r0	@ float
 1014 0178 40F20003 		movw	r3, #:lower16:accelZf
 1015 017c C0F20003 		movt	r3, #:upper16:accelZf
 1016 0180 1A60     		str	r2, [r3, #0]	@ float
 206:../LSM9DS1_Driver.c **** 
 207:../LSM9DS1_Driver.c **** 		accelX = calcAccel(accelX);
 1017              		.loc 1 207 0
 1018 0182 40F20003 		movw	r3, #:lower16:accelX
 1019 0186 C0F20003 		movt	r3, #:upper16:accelX
 1020 018a 1B88     		ldrh	r3, [r3, #0]
 1021 018c 1BB2     		sxth	r3, r3
 1022 018e 1846     		mov	r0, r3
 1023 0190 FFF7FEFF 		bl	calcAccel
 1024 0194 07EE900A 		fmsr	s15, r0
 1025 0198 FDEEE77A 		ftosizs	s15, s15
 1026 019c 17EE903A 		fmrs	r3, s15	@ int
 1027 01a0 9AB2     		uxth	r2, r3
 1028 01a2 40F20003 		movw	r3, #:lower16:accelX
 1029 01a6 C0F20003 		movt	r3, #:upper16:accelX
 1030 01aa 1A80     		strh	r2, [r3, #0]	@ movhi
 208:../LSM9DS1_Driver.c **** 		accelY = calcAccel(accelY);
 1031              		.loc 1 208 0
 1032 01ac 40F20003 		movw	r3, #:lower16:accelY
 1033 01b0 C0F20003 		movt	r3, #:upper16:accelY
 1034 01b4 1B88     		ldrh	r3, [r3, #0]
 1035 01b6 1BB2     		sxth	r3, r3
 1036 01b8 1846     		mov	r0, r3
 1037 01ba FFF7FEFF 		bl	calcAccel
 1038 01be 07EE900A 		fmsr	s15, r0
 1039 01c2 FDEEE77A 		ftosizs	s15, s15
 1040 01c6 17EE903A 		fmrs	r3, s15	@ int
 1041 01ca 9AB2     		uxth	r2, r3
 1042 01cc 40F20003 		movw	r3, #:lower16:accelY
 1043 01d0 C0F20003 		movt	r3, #:upper16:accelY
 1044 01d4 1A80     		strh	r2, [r3, #0]	@ movhi
 209:../LSM9DS1_Driver.c **** 		accelZ = calcAccel(accelZ);
 1045              		.loc 1 209 0
 1046 01d6 40F20003 		movw	r3, #:lower16:accelZ
 1047 01da C0F20003 		movt	r3, #:upper16:accelZ
 1048 01de 1B88     		ldrh	r3, [r3, #0]
 1049 01e0 1BB2     		sxth	r3, r3
 1050 01e2 1846     		mov	r0, r3
 1051 01e4 FFF7FEFF 		bl	calcAccel
 1052 01e8 07EE900A 		fmsr	s15, r0
 1053 01ec FDEEE77A 		ftosizs	s15, s15
 1054 01f0 17EE903A 		fmrs	r3, s15	@ int
 1055 01f4 9AB2     		uxth	r2, r3
 1056 01f6 40F20003 		movw	r3, #:lower16:accelZ
 1057 01fa C0F20003 		movt	r3, #:upper16:accelZ
 1058 01fe 1A80     		strh	r2, [r3, #0]	@ movhi
 210:../LSM9DS1_Driver.c **** 
 211:../LSM9DS1_Driver.c **** 
 212:../LSM9DS1_Driver.c **** 		pomiaryAccel[counter].ax = accelX;
 1059              		.loc 1 212 0
 1060 0200 40F20003 		movw	r3, #:lower16:counter
 1061 0204 C0F20003 		movt	r3, #:upper16:counter
 1062 0208 1968     		ldr	r1, [r3, #0]
 1063 020a 40F20003 		movw	r3, #:lower16:accelX
 1064 020e C0F20003 		movt	r3, #:upper16:accelX
 1065 0212 1888     		ldrh	r0, [r3, #0]
 1066 0214 40F20002 		movw	r2, #:lower16:pomiaryAccel
 1067 0218 C0F20002 		movt	r2, #:upper16:pomiaryAccel
 1068 021c 0B46     		mov	r3, r1
 1069 021e 4FEA4303 		lsl	r3, r3, #1
 1070 0222 5B18     		adds	r3, r3, r1
 1071 0224 4FEA8303 		lsl	r3, r3, #2
 1072 0228 D318     		adds	r3, r2, r3
 1073 022a 0246     		mov	r2, r0	@ movhi
 1074 022c 1A80     		strh	r2, [r3, #0]	@ movhi
 213:../LSM9DS1_Driver.c **** 		pomiaryAccel[counter].ay = accelY;
 1075              		.loc 1 213 0
 1076 022e 40F20003 		movw	r3, #:lower16:counter
 1077 0232 C0F20003 		movt	r3, #:upper16:counter
 1078 0236 1968     		ldr	r1, [r3, #0]
 1079 0238 40F20003 		movw	r3, #:lower16:accelY
 1080 023c C0F20003 		movt	r3, #:upper16:accelY
 1081 0240 1888     		ldrh	r0, [r3, #0]
 1082 0242 40F20002 		movw	r2, #:lower16:pomiaryAccel
 1083 0246 C0F20002 		movt	r2, #:upper16:pomiaryAccel
 1084 024a 0B46     		mov	r3, r1
 1085 024c 4FEA4303 		lsl	r3, r3, #1
 1086 0250 5B18     		adds	r3, r3, r1
 1087 0252 4FEA8303 		lsl	r3, r3, #2
 1088 0256 D318     		adds	r3, r2, r3
 1089 0258 0246     		mov	r2, r0	@ movhi
 1090 025a 5A80     		strh	r2, [r3, #2]	@ movhi
 214:../LSM9DS1_Driver.c **** 		pomiaryAccel[counter].az = accelZ;
 1091              		.loc 1 214 0
 1092 025c 40F20003 		movw	r3, #:lower16:counter
 1093 0260 C0F20003 		movt	r3, #:upper16:counter
 1094 0264 1968     		ldr	r1, [r3, #0]
 1095 0266 40F20003 		movw	r3, #:lower16:accelZ
 1096 026a C0F20003 		movt	r3, #:upper16:accelZ
 1097 026e 1888     		ldrh	r0, [r3, #0]
 1098 0270 40F20002 		movw	r2, #:lower16:pomiaryAccel
 1099 0274 C0F20002 		movt	r2, #:upper16:pomiaryAccel
 1100 0278 0B46     		mov	r3, r1
 1101 027a 4FEA4303 		lsl	r3, r3, #1
 1102 027e 5B18     		adds	r3, r3, r1
 1103 0280 4FEA8303 		lsl	r3, r3, #2
 1104 0284 D318     		adds	r3, r2, r3
 1105 0286 0246     		mov	r2, r0	@ movhi
 1106 0288 9A80     		strh	r2, [r3, #4]	@ movhi
 215:../LSM9DS1_Driver.c **** 
 216:../LSM9DS1_Driver.c **** 
 217:../LSM9DS1_Driver.c **** 		gyroX = (adrAndData.dane[7] << 8) | adrAndData.dane[6];
 1107              		.loc 1 217 0
 1108 028a 40F20003 		movw	r3, #:lower16:adrAndData
 1109 028e C0F20003 		movt	r3, #:upper16:adrAndData
 1110 0292 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 1111 0294 4FEA0323 		lsl	r3, r3, #8
 1112 0298 9AB2     		uxth	r2, r3
 1113 029a 40F20003 		movw	r3, #:lower16:adrAndData
 1114 029e C0F20003 		movt	r3, #:upper16:adrAndData
 1115 02a2 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 1116 02a4 1343     		orrs	r3, r3, r2
 1117 02a6 9AB2     		uxth	r2, r3
 1118 02a8 40F20003 		movw	r3, #:lower16:gyroX
 1119 02ac C0F20003 		movt	r3, #:upper16:gyroX
 1120 02b0 1A80     		strh	r2, [r3, #0]	@ movhi
 218:../LSM9DS1_Driver.c **** 
 219:../LSM9DS1_Driver.c **** 		gyroY = (adrAndData.dane[9] << 8) | adrAndData.dane[8];
 1121              		.loc 1 219 0
 1122 02b2 40F20003 		movw	r3, #:lower16:adrAndData
 1123 02b6 C0F20003 		movt	r3, #:upper16:adrAndData
 1124 02ba 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 1125 02bc 4FEA0323 		lsl	r3, r3, #8
 1126 02c0 9AB2     		uxth	r2, r3
 1127 02c2 40F20003 		movw	r3, #:lower16:adrAndData
 1128 02c6 C0F20003 		movt	r3, #:upper16:adrAndData
 1129 02ca 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 1130 02cc 1343     		orrs	r3, r3, r2
 1131 02ce 9AB2     		uxth	r2, r3
 1132 02d0 40F20003 		movw	r3, #:lower16:gyroY
 1133 02d4 C0F20003 		movt	r3, #:upper16:gyroY
 1134 02d8 1A80     		strh	r2, [r3, #0]	@ movhi
 220:../LSM9DS1_Driver.c **** 
 221:../LSM9DS1_Driver.c **** 		gyroZ = (adrAndData.dane[11] << 8) | adrAndData.dane[10];
 1135              		.loc 1 221 0
 1136 02da 40F20003 		movw	r3, #:lower16:adrAndData
 1137 02de C0F20003 		movt	r3, #:upper16:adrAndData
 1138 02e2 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 1139 02e4 4FEA0323 		lsl	r3, r3, #8
 1140 02e8 9AB2     		uxth	r2, r3
 1141 02ea 40F20003 		movw	r3, #:lower16:adrAndData
 1142 02ee C0F20003 		movt	r3, #:upper16:adrAndData
 1143 02f2 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 1144 02f4 1343     		orrs	r3, r3, r2
 1145 02f6 9AB2     		uxth	r2, r3
 1146 02f8 40F20003 		movw	r3, #:lower16:gyroZ
 1147 02fc C0F20003 		movt	r3, #:upper16:gyroZ
 1148 0300 1A80     		strh	r2, [r3, #0]	@ movhi
 222:../LSM9DS1_Driver.c **** 
 223:../LSM9DS1_Driver.c **** 
 224:../LSM9DS1_Driver.c **** 		if (_autoCalc) //kalibracja
 1149              		.loc 1 224 0
 1150 0302 40F20003 		movw	r3, #:lower16:_autoCalc
 1151 0306 C0F20003 		movt	r3, #:upper16:_autoCalc
 1152 030a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1153 030c 002B     		cmp	r3, #0
 1154 030e 3BD0     		beq	.L41
 225:../LSM9DS1_Driver.c **** 		{
 226:../LSM9DS1_Driver.c **** 			gyroX -= gBiasRaw[X_AXIS];
 1155              		.loc 1 226 0
 1156 0310 40F20003 		movw	r3, #:lower16:gyroX
 1157 0314 C0F20003 		movt	r3, #:upper16:gyroX
 1158 0318 1B88     		ldrh	r3, [r3, #0]
 1159 031a 9AB2     		uxth	r2, r3
 1160 031c 40F20003 		movw	r3, #:lower16:gBiasRaw
 1161 0320 C0F20003 		movt	r3, #:upper16:gBiasRaw
 1162 0324 1B88     		ldrh	r3, [r3, #0]
 1163 0326 9BB2     		uxth	r3, r3
 1164 0328 D31A     		subs	r3, r2, r3
 1165 032a 9BB2     		uxth	r3, r3
 1166 032c 9AB2     		uxth	r2, r3
 1167 032e 40F20003 		movw	r3, #:lower16:gyroX
 1168 0332 C0F20003 		movt	r3, #:upper16:gyroX
 1169 0336 1A80     		strh	r2, [r3, #0]	@ movhi
 227:../LSM9DS1_Driver.c **** 			gyroY -= gBiasRaw[Y_AXIS];
 1170              		.loc 1 227 0
 1171 0338 40F20003 		movw	r3, #:lower16:gyroY
 1172 033c C0F20003 		movt	r3, #:upper16:gyroY
 1173 0340 1B88     		ldrh	r3, [r3, #0]
 1174 0342 9AB2     		uxth	r2, r3
 1175 0344 40F20003 		movw	r3, #:lower16:gBiasRaw
 1176 0348 C0F20003 		movt	r3, #:upper16:gBiasRaw
 1177 034c 5B88     		ldrh	r3, [r3, #2]
 1178 034e 9BB2     		uxth	r3, r3
 1179 0350 D31A     		subs	r3, r2, r3
 1180 0352 9BB2     		uxth	r3, r3
 1181 0354 9AB2     		uxth	r2, r3
 1182 0356 40F20003 		movw	r3, #:lower16:gyroY
 1183 035a C0F20003 		movt	r3, #:upper16:gyroY
 1184 035e 1A80     		strh	r2, [r3, #0]	@ movhi
 228:../LSM9DS1_Driver.c **** 			gyroZ -= gBiasRaw[Z_AXIS];
 1185              		.loc 1 228 0
 1186 0360 40F20003 		movw	r3, #:lower16:gyroZ
 1187 0364 C0F20003 		movt	r3, #:upper16:gyroZ
 1188 0368 1B88     		ldrh	r3, [r3, #0]
 1189 036a 9AB2     		uxth	r2, r3
 1190 036c 40F20003 		movw	r3, #:lower16:gBiasRaw
 1191 0370 C0F20003 		movt	r3, #:upper16:gBiasRaw
 1192 0374 9B88     		ldrh	r3, [r3, #4]
 1193 0376 9BB2     		uxth	r3, r3
 1194 0378 D31A     		subs	r3, r2, r3
 1195 037a 9BB2     		uxth	r3, r3
 1196 037c 9AB2     		uxth	r2, r3
 1197 037e 40F20003 		movw	r3, #:lower16:gyroZ
 1198 0382 C0F20003 		movt	r3, #:upper16:gyroZ
 1199 0386 1A80     		strh	r2, [r3, #0]	@ movhi
 1200              	.L41:
 229:../LSM9DS1_Driver.c **** 		}
 230:../LSM9DS1_Driver.c **** 
 231:../LSM9DS1_Driver.c **** 		gyroXf = calcGyro(gyroX);
 1201              		.loc 1 231 0
 1202 0388 40F20003 		movw	r3, #:lower16:gyroX
 1203 038c C0F20003 		movt	r3, #:upper16:gyroX
 1204 0390 1B88     		ldrh	r3, [r3, #0]
 1205 0392 1BB2     		sxth	r3, r3
 1206 0394 1846     		mov	r0, r3
 1207 0396 FFF7FEFF 		bl	calcGyro
 1208 039a 0246     		mov	r2, r0	@ float
 1209 039c 40F20003 		movw	r3, #:lower16:gyroXf
 1210 03a0 C0F20003 		movt	r3, #:upper16:gyroXf
 1211 03a4 1A60     		str	r2, [r3, #0]	@ float
 232:../LSM9DS1_Driver.c **** 		gyroYf = calcGyro(gyroY);
 1212              		.loc 1 232 0
 1213 03a6 40F20003 		movw	r3, #:lower16:gyroY
 1214 03aa C0F20003 		movt	r3, #:upper16:gyroY
 1215 03ae 1B88     		ldrh	r3, [r3, #0]
 1216 03b0 1BB2     		sxth	r3, r3
 1217 03b2 1846     		mov	r0, r3
 1218 03b4 FFF7FEFF 		bl	calcGyro
 1219 03b8 0246     		mov	r2, r0	@ float
 1220 03ba 40F20003 		movw	r3, #:lower16:gyroYf
 1221 03be C0F20003 		movt	r3, #:upper16:gyroYf
 1222 03c2 1A60     		str	r2, [r3, #0]	@ float
 233:../LSM9DS1_Driver.c **** 		gyroZf = calcGyro(gyroZ);
 1223              		.loc 1 233 0
 1224 03c4 40F20003 		movw	r3, #:lower16:gyroZ
 1225 03c8 C0F20003 		movt	r3, #:upper16:gyroZ
 1226 03cc 1B88     		ldrh	r3, [r3, #0]
 1227 03ce 1BB2     		sxth	r3, r3
 1228 03d0 1846     		mov	r0, r3
 1229 03d2 FFF7FEFF 		bl	calcGyro
 1230 03d6 0246     		mov	r2, r0	@ float
 1231 03d8 40F20003 		movw	r3, #:lower16:gyroZf
 1232 03dc C0F20003 		movt	r3, #:upper16:gyroZf
 1233 03e0 1A60     		str	r2, [r3, #0]	@ float
 234:../LSM9DS1_Driver.c **** 
 235:../LSM9DS1_Driver.c **** 		gyroX = calcGyro(gyroX);
 1234              		.loc 1 235 0
 1235 03e2 40F20003 		movw	r3, #:lower16:gyroX
 1236 03e6 C0F20003 		movt	r3, #:upper16:gyroX
 1237 03ea 1B88     		ldrh	r3, [r3, #0]
 1238 03ec 1BB2     		sxth	r3, r3
 1239 03ee 1846     		mov	r0, r3
 1240 03f0 FFF7FEFF 		bl	calcGyro
 1241 03f4 07EE900A 		fmsr	s15, r0
 1242 03f8 FDEEE77A 		ftosizs	s15, s15
 1243 03fc 17EE903A 		fmrs	r3, s15	@ int
 1244 0400 9AB2     		uxth	r2, r3
 1245 0402 40F20003 		movw	r3, #:lower16:gyroX
 1246 0406 C0F20003 		movt	r3, #:upper16:gyroX
 1247 040a 1A80     		strh	r2, [r3, #0]	@ movhi
 236:../LSM9DS1_Driver.c **** 		gyroY = calcGyro(gyroY);
 1248              		.loc 1 236 0
 1249 040c 40F20003 		movw	r3, #:lower16:gyroY
 1250 0410 C0F20003 		movt	r3, #:upper16:gyroY
 1251 0414 1B88     		ldrh	r3, [r3, #0]
 1252 0416 1BB2     		sxth	r3, r3
 1253 0418 1846     		mov	r0, r3
 1254 041a FFF7FEFF 		bl	calcGyro
 1255 041e 07EE900A 		fmsr	s15, r0
 1256 0422 FDEEE77A 		ftosizs	s15, s15
 1257 0426 17EE903A 		fmrs	r3, s15	@ int
 1258 042a 9AB2     		uxth	r2, r3
 1259 042c 40F20003 		movw	r3, #:lower16:gyroY
 1260 0430 C0F20003 		movt	r3, #:upper16:gyroY
 1261 0434 1A80     		strh	r2, [r3, #0]	@ movhi
 237:../LSM9DS1_Driver.c **** 		gyroZ = calcGyro(gyroZ);
 1262              		.loc 1 237 0
 1263 0436 40F20003 		movw	r3, #:lower16:gyroZ
 1264 043a C0F20003 		movt	r3, #:upper16:gyroZ
 1265 043e 1B88     		ldrh	r3, [r3, #0]
 1266 0440 1BB2     		sxth	r3, r3
 1267 0442 1846     		mov	r0, r3
 1268 0444 FFF7FEFF 		bl	calcGyro
 1269 0448 07EE900A 		fmsr	s15, r0
 1270 044c FDEEE77A 		ftosizs	s15, s15
 1271 0450 17EE903A 		fmrs	r3, s15	@ int
 1272 0454 9AB2     		uxth	r2, r3
 1273 0456 40F20003 		movw	r3, #:lower16:gyroZ
 1274 045a C0F20003 		movt	r3, #:upper16:gyroZ
 1275 045e 1A80     		strh	r2, [r3, #0]	@ movhi
 238:../LSM9DS1_Driver.c **** 
 239:../LSM9DS1_Driver.c **** 		pomiaryAccel[counter].gx = gyroX;
 1276              		.loc 1 239 0
 1277 0460 40F20003 		movw	r3, #:lower16:counter
 1278 0464 C0F20003 		movt	r3, #:upper16:counter
 1279 0468 1968     		ldr	r1, [r3, #0]
 1280 046a 40F20003 		movw	r3, #:lower16:gyroX
 1281 046e C0F20003 		movt	r3, #:upper16:gyroX
 1282 0472 1888     		ldrh	r0, [r3, #0]
 1283 0474 40F20002 		movw	r2, #:lower16:pomiaryAccel
 1284 0478 C0F20002 		movt	r2, #:upper16:pomiaryAccel
 1285 047c 0B46     		mov	r3, r1
 1286 047e 4FEA4303 		lsl	r3, r3, #1
 1287 0482 5B18     		adds	r3, r3, r1
 1288 0484 4FEA8303 		lsl	r3, r3, #2
 1289 0488 D318     		adds	r3, r2, r3
 1290 048a 0246     		mov	r2, r0	@ movhi
 1291 048c DA80     		strh	r2, [r3, #6]	@ movhi
 240:../LSM9DS1_Driver.c **** 		pomiaryAccel[counter].gy = gyroY;
 1292              		.loc 1 240 0
 1293 048e 40F20003 		movw	r3, #:lower16:counter
 1294 0492 C0F20003 		movt	r3, #:upper16:counter
 1295 0496 1968     		ldr	r1, [r3, #0]
 1296 0498 40F20003 		movw	r3, #:lower16:gyroY
 1297 049c C0F20003 		movt	r3, #:upper16:gyroY
 1298 04a0 1888     		ldrh	r0, [r3, #0]
 1299 04a2 40F20002 		movw	r2, #:lower16:pomiaryAccel
 1300 04a6 C0F20002 		movt	r2, #:upper16:pomiaryAccel
 1301 04aa 0B46     		mov	r3, r1
 1302 04ac 4FEA4303 		lsl	r3, r3, #1
 1303 04b0 5B18     		adds	r3, r3, r1
 1304 04b2 4FEA8303 		lsl	r3, r3, #2
 1305 04b6 D318     		adds	r3, r2, r3
 1306 04b8 03F10803 		add	r3, r3, #8
 1307 04bc 0246     		mov	r2, r0	@ movhi
 1308 04be 1A80     		strh	r2, [r3, #0]	@ movhi
 241:../LSM9DS1_Driver.c **** 		pomiaryAccel[counter].gz = gyroZ;
 1309              		.loc 1 241 0
 1310 04c0 40F20003 		movw	r3, #:lower16:counter
 1311 04c4 C0F20003 		movt	r3, #:upper16:counter
 1312 04c8 1968     		ldr	r1, [r3, #0]
 1313 04ca 40F20003 		movw	r3, #:lower16:gyroZ
 1314 04ce C0F20003 		movt	r3, #:upper16:gyroZ
 1315 04d2 1888     		ldrh	r0, [r3, #0]
 1316 04d4 40F20002 		movw	r2, #:lower16:pomiaryAccel
 1317 04d8 C0F20002 		movt	r2, #:upper16:pomiaryAccel
 1318 04dc 0B46     		mov	r3, r1
 1319 04de 4FEA4303 		lsl	r3, r3, #1
 1320 04e2 5B18     		adds	r3, r3, r1
 1321 04e4 4FEA8303 		lsl	r3, r3, #2
 1322 04e8 D318     		adds	r3, r2, r3
 1323 04ea 03F10803 		add	r3, r3, #8
 1324 04ee 0246     		mov	r2, r0	@ movhi
 1325 04f0 5A80     		strh	r2, [r3, #2]	@ movhi
 242:../LSM9DS1_Driver.c **** 
 243:../LSM9DS1_Driver.c **** 
 244:../LSM9DS1_Driver.c **** 
 245:../LSM9DS1_Driver.c **** 		magnetX = (adrAndData.dane[13] << 8) | adrAndData.dane[12];
 1326              		.loc 1 245 0
 1327 04f2 40F20003 		movw	r3, #:lower16:adrAndData
 1328 04f6 C0F20003 		movt	r3, #:upper16:adrAndData
 1329 04fa 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 1330 04fc 4FEA0323 		lsl	r3, r3, #8
 1331 0500 9AB2     		uxth	r2, r3
 1332 0502 40F20003 		movw	r3, #:lower16:adrAndData
 1333 0506 C0F20003 		movt	r3, #:upper16:adrAndData
 1334 050a 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1335 050c 1343     		orrs	r3, r3, r2
 1336 050e 9AB2     		uxth	r2, r3
 1337 0510 40F20003 		movw	r3, #:lower16:magnetX
 1338 0514 C0F20003 		movt	r3, #:upper16:magnetX
 1339 0518 1A80     		strh	r2, [r3, #0]	@ movhi
 246:../LSM9DS1_Driver.c **** 
 247:../LSM9DS1_Driver.c **** 		magnetY = (adrAndData.dane[15] << 8) | adrAndData.dane[14];
 1340              		.loc 1 247 0
 1341 051a 40F20003 		movw	r3, #:lower16:adrAndData
 1342 051e C0F20003 		movt	r3, #:upper16:adrAndData
 1343 0522 DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
 1344 0524 4FEA0323 		lsl	r3, r3, #8
 1345 0528 9AB2     		uxth	r2, r3
 1346 052a 40F20003 		movw	r3, #:lower16:adrAndData
 1347 052e C0F20003 		movt	r3, #:upper16:adrAndData
 1348 0532 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 1349 0534 1343     		orrs	r3, r3, r2
 1350 0536 9AB2     		uxth	r2, r3
 1351 0538 40F20003 		movw	r3, #:lower16:magnetY
 1352 053c C0F20003 		movt	r3, #:upper16:magnetY
 1353 0540 1A80     		strh	r2, [r3, #0]	@ movhi
 248:../LSM9DS1_Driver.c **** 
 249:../LSM9DS1_Driver.c **** 		magnetZ = (adrAndData.dane[17] << 8) | adrAndData.dane[16];
 1354              		.loc 1 249 0
 1355 0542 40F20003 		movw	r3, #:lower16:adrAndData
 1356 0546 C0F20003 		movt	r3, #:upper16:adrAndData
 1357 054a 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
 1358 054c 4FEA0323 		lsl	r3, r3, #8
 1359 0550 9AB2     		uxth	r2, r3
 1360 0552 40F20003 		movw	r3, #:lower16:adrAndData
 1361 0556 C0F20003 		movt	r3, #:upper16:adrAndData
 1362 055a 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 1363 055c 1343     		orrs	r3, r3, r2
 1364 055e 9AB2     		uxth	r2, r3
 1365 0560 40F20003 		movw	r3, #:lower16:magnetZ
 1366 0564 C0F20003 		movt	r3, #:upper16:magnetZ
 1367 0568 1A80     		strh	r2, [r3, #0]	@ movhi
 250:../LSM9DS1_Driver.c **** 
 251:../LSM9DS1_Driver.c **** 
 252:../LSM9DS1_Driver.c **** 		magnetXf = calcMag(magnetX);
 1368              		.loc 1 252 0
 1369 056a 40F20003 		movw	r3, #:lower16:magnetX
 1370 056e C0F20003 		movt	r3, #:upper16:magnetX
 1371 0572 1B88     		ldrh	r3, [r3, #0]
 1372 0574 1BB2     		sxth	r3, r3
 1373 0576 1846     		mov	r0, r3
 1374 0578 FFF7FEFF 		bl	calcMag
 1375 057c 0246     		mov	r2, r0	@ float
 1376 057e 40F20003 		movw	r3, #:lower16:magnetXf
 1377 0582 C0F20003 		movt	r3, #:upper16:magnetXf
 1378 0586 1A60     		str	r2, [r3, #0]	@ float
 253:../LSM9DS1_Driver.c **** 		magnetYf = calcMag(magnetY);
 1379              		.loc 1 253 0
 1380 0588 40F20003 		movw	r3, #:lower16:magnetY
 1381 058c C0F20003 		movt	r3, #:upper16:magnetY
 1382 0590 1B88     		ldrh	r3, [r3, #0]
 1383 0592 1BB2     		sxth	r3, r3
 1384 0594 1846     		mov	r0, r3
 1385 0596 FFF7FEFF 		bl	calcMag
 1386 059a 0246     		mov	r2, r0	@ float
 1387 059c 40F20003 		movw	r3, #:lower16:magnetYf
 1388 05a0 C0F20003 		movt	r3, #:upper16:magnetYf
 1389 05a4 1A60     		str	r2, [r3, #0]	@ float
 254:../LSM9DS1_Driver.c **** 		magnetZf = calcMag(magnetZ);
 1390              		.loc 1 254 0
 1391 05a6 40F20003 		movw	r3, #:lower16:magnetZ
 1392 05aa C0F20003 		movt	r3, #:upper16:magnetZ
 1393 05ae 1B88     		ldrh	r3, [r3, #0]
 1394 05b0 1BB2     		sxth	r3, r3
 1395 05b2 1846     		mov	r0, r3
 1396 05b4 FFF7FEFF 		bl	calcMag
 1397 05b8 0246     		mov	r2, r0	@ float
 1398 05ba 40F20003 		movw	r3, #:lower16:magnetZf
 1399 05be C0F20003 		movt	r3, #:upper16:magnetZf
 1400 05c2 1A60     		str	r2, [r3, #0]	@ float
 255:../LSM9DS1_Driver.c **** 
 256:../LSM9DS1_Driver.c **** 		magnetX = calcMag(magnetX);
 1401              		.loc 1 256 0
 1402 05c4 40F20003 		movw	r3, #:lower16:magnetX
 1403 05c8 C0F20003 		movt	r3, #:upper16:magnetX
 1404 05cc 1B88     		ldrh	r3, [r3, #0]
 1405 05ce 1BB2     		sxth	r3, r3
 1406 05d0 1846     		mov	r0, r3
 1407 05d2 FFF7FEFF 		bl	calcMag
 1408 05d6 07EE900A 		fmsr	s15, r0
 1409 05da FDEEE77A 		ftosizs	s15, s15
 1410 05de 17EE903A 		fmrs	r3, s15	@ int
 1411 05e2 9AB2     		uxth	r2, r3
 1412 05e4 40F20003 		movw	r3, #:lower16:magnetX
 1413 05e8 C0F20003 		movt	r3, #:upper16:magnetX
 1414 05ec 1A80     		strh	r2, [r3, #0]	@ movhi
 257:../LSM9DS1_Driver.c **** 		magnetY = calcMag(magnetY);
 1415              		.loc 1 257 0
 1416 05ee 40F20003 		movw	r3, #:lower16:magnetY
 1417 05f2 C0F20003 		movt	r3, #:upper16:magnetY
 1418 05f6 1B88     		ldrh	r3, [r3, #0]
 1419 05f8 1BB2     		sxth	r3, r3
 1420 05fa 1846     		mov	r0, r3
 1421 05fc FFF7FEFF 		bl	calcMag
 1422 0600 07EE900A 		fmsr	s15, r0
 1423 0604 FDEEE77A 		ftosizs	s15, s15
 1424 0608 17EE903A 		fmrs	r3, s15	@ int
 1425 060c 9AB2     		uxth	r2, r3
 1426 060e 40F20003 		movw	r3, #:lower16:magnetY
 1427 0612 C0F20003 		movt	r3, #:upper16:magnetY
 1428 0616 1A80     		strh	r2, [r3, #0]	@ movhi
 258:../LSM9DS1_Driver.c **** 		magnetZ = calcMag(magnetZ);
 1429              		.loc 1 258 0
 1430 0618 40F20003 		movw	r3, #:lower16:magnetZ
 1431 061c C0F20003 		movt	r3, #:upper16:magnetZ
 1432 0620 1B88     		ldrh	r3, [r3, #0]
 1433 0622 1BB2     		sxth	r3, r3
 1434 0624 1846     		mov	r0, r3
 1435 0626 FFF7FEFF 		bl	calcMag
 1436 062a 07EE900A 		fmsr	s15, r0
 1437 062e FDEEE77A 		ftosizs	s15, s15
 1438 0632 17EE903A 		fmrs	r3, s15	@ int
 1439 0636 9AB2     		uxth	r2, r3
 1440 0638 40F20003 		movw	r3, #:lower16:magnetZ
 1441 063c C0F20003 		movt	r3, #:upper16:magnetZ
 1442 0640 1A80     		strh	r2, [r3, #0]	@ movhi
 259:../LSM9DS1_Driver.c **** 
 260:../LSM9DS1_Driver.c **** 		counter++;
 1443              		.loc 1 260 0
 1444 0642 40F20003 		movw	r3, #:lower16:counter
 1445 0646 C0F20003 		movt	r3, #:upper16:counter
 1446 064a 1B68     		ldr	r3, [r3, #0]
 1447 064c 03F10102 		add	r2, r3, #1
 1448 0650 40F20003 		movw	r3, #:lower16:counter
 1449 0654 C0F20003 		movt	r3, #:upper16:counter
 1450 0658 1A60     		str	r2, [r3, #0]
 1451              	.L39:
 261:../LSM9DS1_Driver.c **** 
 262:../LSM9DS1_Driver.c **** 		/*if(counter < 50)
 263:../LSM9DS1_Driver.c **** 		{
 264:../LSM9DS1_Driver.c **** 			readingAllowed = TRUE;
 265:../LSM9DS1_Driver.c **** 		}*/
 266:../LSM9DS1_Driver.c **** 	}
 267:../LSM9DS1_Driver.c **** 
 268:../LSM9DS1_Driver.c **** 	if(counter >= 1/* && copied == 0*/)
 1452              		.loc 1 268 0
 1453 065a 40F20003 		movw	r3, #:lower16:counter
 1454 065e C0F20003 		movt	r3, #:upper16:counter
 1455 0662 1B68     		ldr	r3, [r3, #0]
 1456 0664 002B     		cmp	r3, #0
 1457 0666 17DD     		ble	.L38
 1458              	.LBB2:
 269:../LSM9DS1_Driver.c **** 	{
 270:../LSM9DS1_Driver.c **** 		int i = 0;
 1459              		.loc 1 270 0
 1460 0668 4FF00003 		mov	r3, #0
 1461 066c FB60     		str	r3, [r7, #12]
 271:../LSM9DS1_Driver.c **** 
 272:../LSM9DS1_Driver.c **** 		/*for(i = 0; i < 50; i++)
 273:../LSM9DS1_Driver.c **** 		{
 274:../LSM9DS1_Driver.c **** 			copiedData[i].ax = pomiaryAccel[i].ax;
 275:../LSM9DS1_Driver.c **** 			copiedData[i].ay = pomiaryAccel[i].ay;
 276:../LSM9DS1_Driver.c **** 			copiedData[i].az = pomiaryAccel[i].az;
 277:../LSM9DS1_Driver.c **** 
 278:../LSM9DS1_Driver.c **** 			copiedData[i].gx = pomiaryAccel[i].gx;
 279:../LSM9DS1_Driver.c **** 			copiedData[i].gy = pomiaryAccel[i].gy;
 280:../LSM9DS1_Driver.c **** 			copiedData[i].gz = pomiaryAccel[i].gz;
 281:../LSM9DS1_Driver.c **** 		}*/
 282:../LSM9DS1_Driver.c **** 
 283:../LSM9DS1_Driver.c **** 		counter = 0;
 1462              		.loc 1 283 0
 1463 066e 40F20003 		movw	r3, #:lower16:counter
 1464 0672 C0F20003 		movt	r3, #:upper16:counter
 1465 0676 4FF00002 		mov	r2, #0
 1466 067a 1A60     		str	r2, [r3, #0]
 284:../LSM9DS1_Driver.c **** 		copied = 1;
 1467              		.loc 1 284 0
 1468 067c 40F20003 		movw	r3, #:lower16:copied
 1469 0680 C0F20003 		movt	r3, #:upper16:copied
 1470 0684 4FF00102 		mov	r2, #1
 1471 0688 1A70     		strb	r2, [r3, #0]
 285:../LSM9DS1_Driver.c **** 		readingAllowed = TRUE;
 1472              		.loc 1 285 0
 1473 068a 40F20003 		movw	r3, #:lower16:readingAllowed
 1474 068e C0F20003 		movt	r3, #:upper16:readingAllowed
 1475 0692 4FF00102 		mov	r2, #1
 1476 0696 1A70     		strb	r2, [r3, #0]
 1477              	.L38:
 1478              	.LBE2:
 286:../LSM9DS1_Driver.c **** 	}
 287:../LSM9DS1_Driver.c **** }
 1479              		.loc 1 287 0
 1480 0698 07F11007 		add	r7, r7, #16
 1481 069c BD46     		mov	sp, r7
 1482 069e 80BD     		pop	{r7, pc}
 1483              		.cfi_endproc
 1484              	.LFE131:
 1486              		.section	.text.initAdrAndSubAdr,"ax",%progbits
 1487              		.align	2
 1488              		.global	initAdrAndSubAdr
 1489              		.thumb
 1490              		.thumb_func
 1492              	initAdrAndSubAdr:
 1493              	.LFB132:
 288:../LSM9DS1_Driver.c **** 
 289:../LSM9DS1_Driver.c **** void initAdrAndSubAdr(void)
 290:../LSM9DS1_Driver.c **** {
 1494              		.loc 1 290 0
 1495              		.cfi_startproc
 1496              		@ args = 0, pretend = 0, frame = 0
 1497              		@ frame_needed = 1, uses_anonymous_args = 0
 1498              		@ link register save eliminated.
 1499 0000 80B4     		push	{r7}
 1500              	.LCFI41:
 1501              		.cfi_def_cfa_offset 4
 1502              		.cfi_offset 7, -4
 1503 0002 00AF     		add	r7, sp, #0
 1504              	.LCFI42:
 1505              		.cfi_def_cfa_register 7
 291:../LSM9DS1_Driver.c **** 	adrAndData.adr.addressDevice[0] = 0x6B;
 1506              		.loc 1 291 0
 1507 0004 40F20003 		movw	r3, #:lower16:adrAndData
 1508 0008 C0F20003 		movt	r3, #:upper16:adrAndData
 1509 000c 4FF06B02 		mov	r2, #107
 1510 0010 9A74     		strb	r2, [r3, #18]
 292:../LSM9DS1_Driver.c **** 	adrAndData.adr.addressDevice[1] = 0x1E;
 1511              		.loc 1 292 0
 1512 0012 40F20003 		movw	r3, #:lower16:adrAndData
 1513 0016 C0F20003 		movt	r3, #:upper16:adrAndData
 1514 001a 4FF01E02 		mov	r2, #30
 1515 001e DA74     		strb	r2, [r3, #19]
 293:../LSM9DS1_Driver.c **** 	adrAndData.adr.subAddress[0] =  OUT_X_L_XL; //subaddres for accel
 1516              		.loc 1 293 0
 1517 0020 40F20003 		movw	r3, #:lower16:adrAndData
 1518 0024 C0F20003 		movt	r3, #:upper16:adrAndData
 1519 0028 4FF02802 		mov	r2, #40
 1520 002c 1A75     		strb	r2, [r3, #20]
 294:../LSM9DS1_Driver.c **** 	adrAndData.adr.subAddress[1] =  OUT_X_L_G; //sub address for gyroscope
 1521              		.loc 1 294 0
 1522 002e 40F20003 		movw	r3, #:lower16:adrAndData
 1523 0032 C0F20003 		movt	r3, #:upper16:adrAndData
 1524 0036 4FF01802 		mov	r2, #24
 1525 003a 5A75     		strb	r2, [r3, #21]
 295:../LSM9DS1_Driver.c **** 	adrAndData.adr.subAddress[2] =  OUT_X_L_M;
 1526              		.loc 1 295 0
 1527 003c 40F20003 		movw	r3, #:lower16:adrAndData
 1528 0040 C0F20003 		movt	r3, #:upper16:adrAndData
 1529 0044 4FF02802 		mov	r2, #40
 1530 0048 9A75     		strb	r2, [r3, #22]
 296:../LSM9DS1_Driver.c **** }
 1531              		.loc 1 296 0
 1532 004a BD46     		mov	sp, r7
 1533 004c 80BC     		pop	{r7}
 1534 004e 7047     		bx	lr
 1535              		.cfi_endproc
 1536              	.LFE132:
 1538              		.section	.text.initLSM9DS1,"ax",%progbits
 1539              		.align	2
 1540              		.global	initLSM9DS1
 1541              		.thumb
 1542              		.thumb_func
 1544              	initLSM9DS1:
 1545              	.LFB133:
 297:../LSM9DS1_Driver.c **** 
 298:../LSM9DS1_Driver.c **** void initLSM9DS1(void)
 299:../LSM9DS1_Driver.c **** {
 1546              		.loc 1 299 0
 1547              		.cfi_startproc
 1548              		@ args = 0, pretend = 0, frame = 8
 1549              		@ frame_needed = 1, uses_anonymous_args = 0
 1550 0000 80B5     		push	{r7, lr}
 1551              	.LCFI43:
 1552              		.cfi_def_cfa_offset 8
 1553              		.cfi_offset 7, -8
 1554              		.cfi_offset 14, -4
 1555 0002 82B0     		sub	sp, sp, #8
 1556              	.LCFI44:
 1557              		.cfi_def_cfa_offset 16
 1558 0004 00AF     		add	r7, sp, #0
 1559              	.LCFI45:
 1560              		.cfi_def_cfa_register 7
 300:../LSM9DS1_Driver.c **** 	init(IMU_MODE_I2C, LSM9DS1_AG_ADDR(1), LSM9DS1_M_ADDR(1));
 1561              		.loc 1 300 0
 1562 0006 4FF00100 		mov	r0, #1
 1563 000a 4FF06B01 		mov	r1, #107
 1564 000e 4FF01E02 		mov	r2, #30
 1565 0012 FFF7FEFF 		bl	init
 301:../LSM9DS1_Driver.c **** 
 302:../LSM9DS1_Driver.c **** 	settings.device.commInterface = IMU_MODE_I2C;
 1566              		.loc 1 302 0
 1567 0016 40F20003 		movw	r3, #:lower16:settings
 1568 001a C0F20003 		movt	r3, #:upper16:settings
 1569 001e 4FF00102 		mov	r2, #1
 1570 0022 1A70     		strb	r2, [r3, #0]
 303:../LSM9DS1_Driver.c **** 	settings.device.mAddress = LSM9DS1_M;
 1571              		.loc 1 303 0
 1572 0024 40F20003 		movw	r3, #:lower16:settings
 1573 0028 C0F20003 		movt	r3, #:upper16:settings
 1574 002c 4FF01E02 		mov	r2, #30
 1575 0030 9A70     		strb	r2, [r3, #2]
 304:../LSM9DS1_Driver.c **** 	settings.device.agAddress = LSM9DS1_AG;
 1576              		.loc 1 304 0
 1577 0032 40F20003 		movw	r3, #:lower16:settings
 1578 0036 C0F20003 		movt	r3, #:upper16:settings
 1579 003a 4FF06B02 		mov	r2, #107
 1580 003e 5A70     		strb	r2, [r3, #1]
 305:../LSM9DS1_Driver.c **** 
 306:../LSM9DS1_Driver.c **** 	initAdrAndSubAdr();
 1581              		.loc 1 306 0
 1582 0040 FFF7FEFF 		bl	initAdrAndSubAdr
 307:../LSM9DS1_Driver.c **** 
 308:../LSM9DS1_Driver.c **** 	if(!begin())
 1583              		.loc 1 308 0
 1584 0044 FFF7FEFF 		bl	begin
 1585 0048 0346     		mov	r3, r0
 1586 004a 002B     		cmp	r3, #0
 1587 004c 02D1     		bne	.L44
 1588              	.LBB3:
 309:../LSM9DS1_Driver.c **** 	{
 310:../LSM9DS1_Driver.c **** 		int k = 0;
 1589              		.loc 1 310 0
 1590 004e 4FF00003 		mov	r3, #0
 1591 0052 7B60     		str	r3, [r7, #4]
 1592              	.L44:
 1593              	.LBE3:
 311:../LSM9DS1_Driver.c **** 	}
 312:../LSM9DS1_Driver.c **** }
 1594              		.loc 1 312 0
 1595 0054 07F10807 		add	r7, r7, #8
 1596 0058 BD46     		mov	sp, r7
 1597 005a 80BD     		pop	{r7, pc}
 1598              		.cfi_endproc
 1599              	.LFE133:
 1601              		.section	.text.init,"ax",%progbits
 1602              		.align	2
 1603              		.global	init
 1604              		.thumb
 1605              		.thumb_func
 1607              	init:
 1608              	.LFB134:
 313:../LSM9DS1_Driver.c **** 
 314:../LSM9DS1_Driver.c **** void init(interface_mode interface, uint8_t xgAddr, uint8_t mAddr)
 315:../LSM9DS1_Driver.c **** {
 1609              		.loc 1 315 0
 1610              		.cfi_startproc
 1611              		@ args = 0, pretend = 0, frame = 16
 1612              		@ frame_needed = 1, uses_anonymous_args = 0
 1613              		@ link register save eliminated.
 1614 0000 80B4     		push	{r7}
 1615              	.LCFI46:
 1616              		.cfi_def_cfa_offset 4
 1617              		.cfi_offset 7, -4
 1618 0002 85B0     		sub	sp, sp, #20
 1619              	.LCFI47:
 1620              		.cfi_def_cfa_offset 24
 1621 0004 00AF     		add	r7, sp, #0
 1622              	.LCFI48:
 1623              		.cfi_def_cfa_register 7
 1624 0006 1346     		mov	r3, r2
 1625 0008 0246     		mov	r2, r0
 1626 000a FA71     		strb	r2, [r7, #7]
 1627 000c 0A46     		mov	r2, r1
 1628 000e BA71     		strb	r2, [r7, #6]
 1629 0010 7B71     		strb	r3, [r7, #5]
 316:../LSM9DS1_Driver.c **** 	//measurementsLSMRead = 0;
 317:../LSM9DS1_Driver.c **** 
 318:../LSM9DS1_Driver.c **** 	settings.device.commInterface = interface;
 1630              		.loc 1 318 0
 1631 0012 40F20003 		movw	r3, #:lower16:settings
 1632 0016 C0F20003 		movt	r3, #:upper16:settings
 1633 001a FA79     		ldrb	r2, [r7, #7]
 1634 001c 1A70     		strb	r2, [r3, #0]
 319:../LSM9DS1_Driver.c **** 	settings.device.agAddress = xgAddr;
 1635              		.loc 1 319 0
 1636 001e 40F20003 		movw	r3, #:lower16:settings
 1637 0022 C0F20003 		movt	r3, #:upper16:settings
 1638 0026 BA79     		ldrb	r2, [r7, #6]
 1639 0028 5A70     		strb	r2, [r3, #1]
 320:../LSM9DS1_Driver.c **** 	settings.device.mAddress = mAddr;
 1640              		.loc 1 320 0
 1641 002a 40F20003 		movw	r3, #:lower16:settings
 1642 002e C0F20003 		movt	r3, #:upper16:settings
 1643 0032 7A79     		ldrb	r2, [r7, #5]
 1644 0034 9A70     		strb	r2, [r3, #2]
 321:../LSM9DS1_Driver.c **** 
 322:../LSM9DS1_Driver.c **** 	settings.gyro.enabled = TRUE;
 1645              		.loc 1 322 0
 1646 0036 40F20003 		movw	r3, #:lower16:settings
 1647 003a C0F20003 		movt	r3, #:upper16:settings
 1648 003e 4FF00102 		mov	r2, #1
 1649 0042 1A71     		strb	r2, [r3, #4]
 323:../LSM9DS1_Driver.c **** 	settings.gyro.enableX = TRUE;
 1650              		.loc 1 323 0
 1651 0044 40F20003 		movw	r3, #:lower16:settings
 1652 0048 C0F20003 		movt	r3, #:upper16:settings
 1653 004c 4FF00102 		mov	r2, #1
 1654 0050 5A74     		strb	r2, [r3, #17]
 324:../LSM9DS1_Driver.c **** 	settings.gyro.enableY = TRUE;
 1655              		.loc 1 324 0
 1656 0052 40F20003 		movw	r3, #:lower16:settings
 1657 0056 C0F20003 		movt	r3, #:upper16:settings
 1658 005a 4FF00102 		mov	r2, #1
 1659 005e 9A74     		strb	r2, [r3, #18]
 325:../LSM9DS1_Driver.c **** 	settings.gyro.enableZ = TRUE;
 1660              		.loc 1 325 0
 1661 0060 40F20003 		movw	r3, #:lower16:settings
 1662 0064 C0F20003 		movt	r3, #:upper16:settings
 1663 0068 4FF00102 		mov	r2, #1
 1664 006c DA74     		strb	r2, [r3, #19]
 326:../LSM9DS1_Driver.c **** 	// gyro scale can be 245, 500, or 2000
 327:../LSM9DS1_Driver.c **** 	settings.gyro.scale = 245;
 1665              		.loc 1 327 0
 1666 006e 40F20003 		movw	r3, #:lower16:settings
 1667 0072 C0F20003 		movt	r3, #:upper16:settings
 1668 0076 4FF0F502 		mov	r2, #245
 1669 007a DA80     		strh	r2, [r3, #6]	@ movhi
 328:../LSM9DS1_Driver.c **** 	// gyro sample rate: value between 1-6
 329:../LSM9DS1_Driver.c **** 	// 1 = 14.9    4 = 238
 330:../LSM9DS1_Driver.c **** 	// 2 = 59.5    5 = 476
 331:../LSM9DS1_Driver.c **** 	// 3 = 119     6 = 952
 332:../LSM9DS1_Driver.c **** 	settings.gyro.sampleRate = 3;
 1670              		.loc 1 332 0
 1671 007c 40F20003 		movw	r3, #:lower16:settings
 1672 0080 C0F20003 		movt	r3, #:upper16:settings
 1673 0084 4FF00302 		mov	r2, #3
 1674 0088 1A72     		strb	r2, [r3, #8]
 333:../LSM9DS1_Driver.c **** 	// gyro cutoff frequency: value between 0-3
 334:../LSM9DS1_Driver.c **** 	// Actual value of cutoff frequency depends
 335:../LSM9DS1_Driver.c **** 	// on sample rate.
 336:../LSM9DS1_Driver.c **** 	settings.gyro.bandwidth = 0;
 1675              		.loc 1 336 0
 1676 008a 40F20003 		movw	r3, #:lower16:settings
 1677 008e C0F20003 		movt	r3, #:upper16:settings
 1678 0092 4FF00002 		mov	r2, #0
 1679 0096 5A72     		strb	r2, [r3, #9]
 337:../LSM9DS1_Driver.c **** 	settings.gyro.lowPowerEnable = FALSE;
 1680              		.loc 1 337 0
 1681 0098 40F20003 		movw	r3, #:lower16:settings
 1682 009c C0F20003 		movt	r3, #:upper16:settings
 1683 00a0 4FF00002 		mov	r2, #0
 1684 00a4 9A72     		strb	r2, [r3, #10]
 338:../LSM9DS1_Driver.c **** 
 339:../LSM9DS1_Driver.c **** 	settings.gyro.HPFEnable = FALSE;
 1685              		.loc 1 339 0
 1686 00a6 40F20003 		movw	r3, #:lower16:settings
 1687 00aa C0F20003 		movt	r3, #:upper16:settings
 1688 00ae 4FF00002 		mov	r2, #0
 1689 00b2 DA72     		strb	r2, [r3, #11]
 340:../LSM9DS1_Driver.c **** 	// Gyro HPF cutoff frequency: value between 0-9
 341:../LSM9DS1_Driver.c **** 	// Actual value depends on sample rate. Only applies
 342:../LSM9DS1_Driver.c **** 	// if gyroHPFEnable is TRUE.
 343:../LSM9DS1_Driver.c **** 	settings.gyro.HPFCutoff = 0;
 1690              		.loc 1 343 0
 1691 00b4 40F20003 		movw	r3, #:lower16:settings
 1692 00b8 C0F20003 		movt	r3, #:upper16:settings
 1693 00bc 4FF00002 		mov	r2, #0
 1694 00c0 1A73     		strb	r2, [r3, #12]
 344:../LSM9DS1_Driver.c **** 	settings.gyro.flipX = FALSE;
 1695              		.loc 1 344 0
 1696 00c2 40F20003 		movw	r3, #:lower16:settings
 1697 00c6 C0F20003 		movt	r3, #:upper16:settings
 1698 00ca 4FF00002 		mov	r2, #0
 1699 00ce 5A73     		strb	r2, [r3, #13]
 345:../LSM9DS1_Driver.c **** 	settings.gyro.flipY = FALSE;
 1700              		.loc 1 345 0
 1701 00d0 40F20003 		movw	r3, #:lower16:settings
 1702 00d4 C0F20003 		movt	r3, #:upper16:settings
 1703 00d8 4FF00002 		mov	r2, #0
 1704 00dc 9A73     		strb	r2, [r3, #14]
 346:../LSM9DS1_Driver.c **** 	settings.gyro.flipZ = FALSE;
 1705              		.loc 1 346 0
 1706 00de 40F20003 		movw	r3, #:lower16:settings
 1707 00e2 C0F20003 		movt	r3, #:upper16:settings
 1708 00e6 4FF00002 		mov	r2, #0
 1709 00ea DA73     		strb	r2, [r3, #15]
 347:../LSM9DS1_Driver.c **** 	settings.gyro.orientation = 0;
 1710              		.loc 1 347 0
 1711 00ec 40F20003 		movw	r3, #:lower16:settings
 1712 00f0 C0F20003 		movt	r3, #:upper16:settings
 1713 00f4 4FF00002 		mov	r2, #0
 1714 00f8 1A74     		strb	r2, [r3, #16]
 348:../LSM9DS1_Driver.c **** 	settings.gyro.latchInterrupt = TRUE;
 1715              		.loc 1 348 0
 1716 00fa 40F20003 		movw	r3, #:lower16:settings
 1717 00fe C0F20003 		movt	r3, #:upper16:settings
 1718 0102 4FF00102 		mov	r2, #1
 1719 0106 1A75     		strb	r2, [r3, #20]
 349:../LSM9DS1_Driver.c **** 
 350:../LSM9DS1_Driver.c **** 	settings.accel.enabled = TRUE;
 1720              		.loc 1 350 0
 1721 0108 40F20003 		movw	r3, #:lower16:settings
 1722 010c C0F20003 		movt	r3, #:upper16:settings
 1723 0110 4FF00102 		mov	r2, #1
 1724 0114 9A75     		strb	r2, [r3, #22]
 351:../LSM9DS1_Driver.c **** 	settings.accel.enableX = TRUE;
 1725              		.loc 1 351 0
 1726 0116 40F20003 		movw	r3, #:lower16:settings
 1727 011a C0F20003 		movt	r3, #:upper16:settings
 1728 011e 4FF00102 		mov	r2, #1
 1729 0122 5A76     		strb	r2, [r3, #25]
 352:../LSM9DS1_Driver.c **** 	settings.accel.enableY = TRUE;
 1730              		.loc 1 352 0
 1731 0124 40F20003 		movw	r3, #:lower16:settings
 1732 0128 C0F20003 		movt	r3, #:upper16:settings
 1733 012c 4FF00102 		mov	r2, #1
 1734 0130 9A76     		strb	r2, [r3, #26]
 353:../LSM9DS1_Driver.c **** 	settings.accel.enableZ = TRUE;
 1735              		.loc 1 353 0
 1736 0132 40F20003 		movw	r3, #:lower16:settings
 1737 0136 C0F20003 		movt	r3, #:upper16:settings
 1738 013a 4FF00102 		mov	r2, #1
 1739 013e DA76     		strb	r2, [r3, #27]
 354:../LSM9DS1_Driver.c **** 	// accel scale can be 2, 4, 8, or 16
 355:../LSM9DS1_Driver.c **** 	settings.accel.scale = 2;
 1740              		.loc 1 355 0
 1741 0140 40F20003 		movw	r3, #:lower16:settings
 1742 0144 C0F20003 		movt	r3, #:upper16:settings
 1743 0148 4FF00202 		mov	r2, #2
 1744 014c DA75     		strb	r2, [r3, #23]
 356:../LSM9DS1_Driver.c **** 	// accel sample rate can be 1-6
 357:../LSM9DS1_Driver.c **** 	// 1 = 10 Hz    4 = 238 Hz
 358:../LSM9DS1_Driver.c **** 	// 2 = 50 Hz    5 = 476 Hz
 359:../LSM9DS1_Driver.c **** 	// 3 = 119 Hz   6 = 952 Hz
 360:../LSM9DS1_Driver.c **** 	settings.accel.sampleRate = 6;
 1745              		.loc 1 360 0
 1746 014e 40F20003 		movw	r3, #:lower16:settings
 1747 0152 C0F20003 		movt	r3, #:upper16:settings
 1748 0156 4FF00602 		mov	r2, #6
 1749 015a 1A76     		strb	r2, [r3, #24]
 361:../LSM9DS1_Driver.c **** 	// Accel cutoff freqeuncy can be any value between -1 - 3.
 362:../LSM9DS1_Driver.c **** 	// -1 = bandwidth determined by sample rate
 363:../LSM9DS1_Driver.c **** 	// 0 = 408 Hz   2 = 105 Hz
 364:../LSM9DS1_Driver.c **** 	// 1 = 211 Hz   3 = 50 Hz
 365:../LSM9DS1_Driver.c **** 	settings.accel.bandwidth = -1;
 1750              		.loc 1 365 0
 1751 015c 40F20003 		movw	r3, #:lower16:settings
 1752 0160 C0F20003 		movt	r3, #:upper16:settings
 1753 0164 4FF0FF02 		mov	r2, #255
 1754 0168 1A77     		strb	r2, [r3, #28]
 366:../LSM9DS1_Driver.c **** 	settings.accel.highResEnable = FALSE;
 1755              		.loc 1 366 0
 1756 016a 40F20003 		movw	r3, #:lower16:settings
 1757 016e C0F20003 		movt	r3, #:upper16:settings
 1758 0172 4FF00002 		mov	r2, #0
 1759 0176 5A77     		strb	r2, [r3, #29]
 367:../LSM9DS1_Driver.c **** 	// accelHighResBandwidth can be any value between 0-3
 368:../LSM9DS1_Driver.c **** 	// LP cutoff is set to a factor of sample rate
 369:../LSM9DS1_Driver.c **** 	// 0 = ODR/50    2 = ODR/9
 370:../LSM9DS1_Driver.c **** 	// 1 = ODR/100   3 = ODR/400
 371:../LSM9DS1_Driver.c **** 	settings.accel.highResBandwidth = 0;
 1760              		.loc 1 371 0
 1761 0178 40F20003 		movw	r3, #:lower16:settings
 1762 017c C0F20003 		movt	r3, #:upper16:settings
 1763 0180 4FF00002 		mov	r2, #0
 1764 0184 9A77     		strb	r2, [r3, #30]
 372:../LSM9DS1_Driver.c **** 
 373:../LSM9DS1_Driver.c **** 	settings.mag.enabled = TRUE;
 1765              		.loc 1 373 0
 1766 0186 40F20003 		movw	r3, #:lower16:settings
 1767 018a C0F20003 		movt	r3, #:upper16:settings
 1768 018e 4FF00102 		mov	r2, #1
 1769 0192 DA77     		strb	r2, [r3, #31]
 374:../LSM9DS1_Driver.c **** 	// mag scale can be 4, 8, 12, or 16
 375:../LSM9DS1_Driver.c **** 	settings.mag.scale = 4;
 1770              		.loc 1 375 0
 1771 0194 40F20003 		movw	r3, #:lower16:settings
 1772 0198 C0F20003 		movt	r3, #:upper16:settings
 1773 019c 4FF00402 		mov	r2, #4
 1774 01a0 83F82020 		strb	r2, [r3, #32]
 376:../LSM9DS1_Driver.c **** 	// mag data rate can be 0-7
 377:../LSM9DS1_Driver.c **** 	// 0 = 0.625 Hz  4 = 10 Hz
 378:../LSM9DS1_Driver.c **** 	// 1 = 1.25 Hz   5 = 20 Hz
 379:../LSM9DS1_Driver.c **** 	// 2 = 2.5 Hz    6 = 40 Hz
 380:../LSM9DS1_Driver.c **** 	// 3 = 5 Hz      7 = 80 Hz
 381:../LSM9DS1_Driver.c **** 	settings.mag.sampleRate = 7;
 1775              		.loc 1 381 0
 1776 01a4 40F20003 		movw	r3, #:lower16:settings
 1777 01a8 C0F20003 		movt	r3, #:upper16:settings
 1778 01ac 4FF00702 		mov	r2, #7
 1779 01b0 83F82120 		strb	r2, [r3, #33]
 382:../LSM9DS1_Driver.c **** 	settings.mag.tempCompensationEnable = FALSE;
 1780              		.loc 1 382 0
 1781 01b4 40F20003 		movw	r3, #:lower16:settings
 1782 01b8 C0F20003 		movt	r3, #:upper16:settings
 1783 01bc 4FF00002 		mov	r2, #0
 1784 01c0 83F82220 		strb	r2, [r3, #34]
 383:../LSM9DS1_Driver.c **** 	// magPerformance can be any value between 0-3
 384:../LSM9DS1_Driver.c **** 	// 0 = Low power mode      2 = high performance
 385:../LSM9DS1_Driver.c **** 	// 1 = medium performance  3 = ultra-high performance
 386:../LSM9DS1_Driver.c **** 	settings.mag.XYPerformance = 3;
 1785              		.loc 1 386 0
 1786 01c4 40F20003 		movw	r3, #:lower16:settings
 1787 01c8 C0F20003 		movt	r3, #:upper16:settings
 1788 01cc 4FF00302 		mov	r2, #3
 1789 01d0 83F82320 		strb	r2, [r3, #35]
 387:../LSM9DS1_Driver.c **** 	settings.mag.ZPerformance = 3;
 1790              		.loc 1 387 0
 1791 01d4 40F20003 		movw	r3, #:lower16:settings
 1792 01d8 C0F20003 		movt	r3, #:upper16:settings
 1793 01dc 4FF00302 		mov	r2, #3
 1794 01e0 83F82420 		strb	r2, [r3, #36]
 388:../LSM9DS1_Driver.c **** 	settings.mag.lowPowerEnable = FALSE;
 1795              		.loc 1 388 0
 1796 01e4 40F20003 		movw	r3, #:lower16:settings
 1797 01e8 C0F20003 		movt	r3, #:upper16:settings
 1798 01ec 4FF00002 		mov	r2, #0
 1799 01f0 83F82520 		strb	r2, [r3, #37]
 389:../LSM9DS1_Driver.c **** 	// magOperatingMode can be 0-2
 390:../LSM9DS1_Driver.c **** 	// 0 = continuous conversion
 391:../LSM9DS1_Driver.c **** 	// 1 = single-conversion
 392:../LSM9DS1_Driver.c **** 	// 2 = power down
 393:../LSM9DS1_Driver.c **** 	settings.mag.operatingMode = 0;
 1800              		.loc 1 393 0
 1801 01f4 40F20003 		movw	r3, #:lower16:settings
 1802 01f8 C0F20003 		movt	r3, #:upper16:settings
 1803 01fc 4FF00002 		mov	r2, #0
 1804 0200 83F82620 		strb	r2, [r3, #38]
 394:../LSM9DS1_Driver.c **** 
 395:../LSM9DS1_Driver.c **** 	settings.temp.enabled = TRUE;
 1805              		.loc 1 395 0
 1806 0204 40F20003 		movw	r3, #:lower16:settings
 1807 0208 C0F20003 		movt	r3, #:upper16:settings
 1808 020c 4FF00102 		mov	r2, #1
 1809 0210 83F82720 		strb	r2, [r3, #39]
 1810              	.LBB4:
 396:../LSM9DS1_Driver.c **** 
 397:../LSM9DS1_Driver.c **** 	for (int i=0; i<3; i++)
 1811              		.loc 1 397 0
 1812 0214 4FF00003 		mov	r3, #0
 1813 0218 FB60     		str	r3, [r7, #12]
 1814 021a 3FE0     		b	.L47
 1815              	.L48:
 398:../LSM9DS1_Driver.c **** 	{
 399:../LSM9DS1_Driver.c **** 		gBias[i] = 0;
 1816              		.loc 1 399 0 discriminator 2
 1817 021c 40F20003 		movw	r3, #:lower16:gBias
 1818 0220 C0F20003 		movt	r3, #:upper16:gBias
 1819 0224 FA68     		ldr	r2, [r7, #12]
 1820 0226 4FEA8202 		lsl	r2, r2, #2
 1821 022a 9B18     		adds	r3, r3, r2
 1822 022c 4FF00002 		mov	r2, #0
 1823 0230 1A60     		str	r2, [r3, #0]	@ float
 400:../LSM9DS1_Driver.c **** 		aBias[i] = 0;
 1824              		.loc 1 400 0 discriminator 2
 1825 0232 40F20003 		movw	r3, #:lower16:aBias
 1826 0236 C0F20003 		movt	r3, #:upper16:aBias
 1827 023a FA68     		ldr	r2, [r7, #12]
 1828 023c 4FEA8202 		lsl	r2, r2, #2
 1829 0240 9B18     		adds	r3, r3, r2
 1830 0242 4FF00002 		mov	r2, #0
 1831 0246 1A60     		str	r2, [r3, #0]	@ float
 401:../LSM9DS1_Driver.c **** 		mBias[i] = 0;
 1832              		.loc 1 401 0 discriminator 2
 1833 0248 40F20003 		movw	r3, #:lower16:mBias
 1834 024c C0F20003 		movt	r3, #:upper16:mBias
 1835 0250 FA68     		ldr	r2, [r7, #12]
 1836 0252 4FEA8202 		lsl	r2, r2, #2
 1837 0256 9B18     		adds	r3, r3, r2
 1838 0258 4FF00002 		mov	r2, #0
 1839 025c 1A60     		str	r2, [r3, #0]	@ float
 402:../LSM9DS1_Driver.c **** 		gBiasRaw[i] = 0;
 1840              		.loc 1 402 0 discriminator 2
 1841 025e 40F20003 		movw	r3, #:lower16:gBiasRaw
 1842 0262 C0F20003 		movt	r3, #:upper16:gBiasRaw
 1843 0266 FA68     		ldr	r2, [r7, #12]
 1844 0268 4FF00001 		mov	r1, #0
 1845 026c 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 403:../LSM9DS1_Driver.c **** 		aBiasRaw[i] = 0;
 1846              		.loc 1 403 0 discriminator 2
 1847 0270 40F20003 		movw	r3, #:lower16:aBiasRaw
 1848 0274 C0F20003 		movt	r3, #:upper16:aBiasRaw
 1849 0278 FA68     		ldr	r2, [r7, #12]
 1850 027a 4FF00001 		mov	r1, #0
 1851 027e 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 404:../LSM9DS1_Driver.c **** 		mBiasRaw[i] = 0;
 1852              		.loc 1 404 0 discriminator 2
 1853 0282 40F20003 		movw	r3, #:lower16:mBiasRaw
 1854 0286 C0F20003 		movt	r3, #:upper16:mBiasRaw
 1855 028a FA68     		ldr	r2, [r7, #12]
 1856 028c 4FF00001 		mov	r1, #0
 1857 0290 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 397:../LSM9DS1_Driver.c **** 	for (int i=0; i<3; i++)
 1858              		.loc 1 397 0 discriminator 2
 1859 0294 FB68     		ldr	r3, [r7, #12]
 1860 0296 03F10103 		add	r3, r3, #1
 1861 029a FB60     		str	r3, [r7, #12]
 1862              	.L47:
 397:../LSM9DS1_Driver.c **** 	for (int i=0; i<3; i++)
 1863              		.loc 1 397 0 is_stmt 0 discriminator 1
 1864 029c FB68     		ldr	r3, [r7, #12]
 1865 029e 022B     		cmp	r3, #2
 1866 02a0 BCDD     		ble	.L48
 1867              	.LBE4:
 405:../LSM9DS1_Driver.c **** 	}
 406:../LSM9DS1_Driver.c **** 
 407:../LSM9DS1_Driver.c **** 	_autoCalc = FALSE;
 1868              		.loc 1 407 0 is_stmt 1
 1869 02a2 40F20003 		movw	r3, #:lower16:_autoCalc
 1870 02a6 C0F20003 		movt	r3, #:upper16:_autoCalc
 1871 02aa 4FF00002 		mov	r2, #0
 1872 02ae 1A70     		strb	r2, [r3, #0]
 408:../LSM9DS1_Driver.c **** }
 1873              		.loc 1 408 0
 1874 02b0 07F11407 		add	r7, r7, #20
 1875 02b4 BD46     		mov	sp, r7
 1876 02b6 80BC     		pop	{r7}
 1877 02b8 7047     		bx	lr
 1878              		.cfi_endproc
 1879              	.LFE134:
 1881 02ba 00BF     		.section	.text.begin,"ax",%progbits
 1882              		.align	2
 1883              		.global	begin
 1884              		.thumb
 1885              		.thumb_func
 1887              	begin:
 1888              	.LFB135:
 409:../LSM9DS1_Driver.c **** 
 410:../LSM9DS1_Driver.c **** uint16_t begin(void)
 411:../LSM9DS1_Driver.c **** {
 1889              		.loc 1 411 0
 1890              		.cfi_startproc
 1891              		@ args = 0, pretend = 0, frame = 8
 1892              		@ frame_needed = 1, uses_anonymous_args = 0
 1893 0000 80B5     		push	{r7, lr}
 1894              	.LCFI49:
 1895              		.cfi_def_cfa_offset 8
 1896              		.cfi_offset 7, -8
 1897              		.cfi_offset 14, -4
 1898 0002 82B0     		sub	sp, sp, #8
 1899              	.LCFI50:
 1900              		.cfi_def_cfa_offset 16
 1901 0004 00AF     		add	r7, sp, #0
 1902              	.LCFI51:
 1903              		.cfi_def_cfa_register 7
 412:../LSM9DS1_Driver.c **** 	//! Todo: don't use _xgAddress or _mAddress, duplicating memory
 413:../LSM9DS1_Driver.c **** 	_xgAddress = settings.device.agAddress;
 1904              		.loc 1 413 0
 1905 0006 40F20003 		movw	r3, #:lower16:settings
 1906 000a C0F20003 		movt	r3, #:upper16:settings
 1907 000e 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 1908 0010 40F20003 		movw	r3, #:lower16:_xgAddress
 1909 0014 C0F20003 		movt	r3, #:upper16:_xgAddress
 1910 0018 1A70     		strb	r2, [r3, #0]
 414:../LSM9DS1_Driver.c **** 	_mAddress = settings.device.mAddress;
 1911              		.loc 1 414 0
 1912 001a 40F20003 		movw	r3, #:lower16:settings
 1913 001e C0F20003 		movt	r3, #:upper16:settings
 1914 0022 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 1915 0024 40F20003 		movw	r3, #:lower16:_mAddress
 1916 0028 C0F20003 		movt	r3, #:upper16:_mAddress
 1917 002c 1A70     		strb	r2, [r3, #0]
 415:../LSM9DS1_Driver.c **** 
 416:../LSM9DS1_Driver.c **** 	constrainScales();
 1918              		.loc 1 416 0
 1919 002e FFF7FEFF 		bl	constrainScales
 417:../LSM9DS1_Driver.c **** 
 418:../LSM9DS1_Driver.c **** 	// Once we have the scale values, we can calculate the resolution
 419:../LSM9DS1_Driver.c **** 	// of each sensor. That's what these functions are for. One for each sensor
 420:../LSM9DS1_Driver.c **** 	calcgRes(); // Calculate DPS / ADC tick, stored in gRes variable
 1920              		.loc 1 420 0
 1921 0032 FFF7FEFF 		bl	calcgRes
 421:../LSM9DS1_Driver.c **** 	calcmRes(); // Calculate Gs / ADC tick, stored in mRes variable
 1922              		.loc 1 421 0
 1923 0036 FFF7FEFF 		bl	calcmRes
 422:../LSM9DS1_Driver.c **** 	calcaRes(); // Calculate g / ADC tick, stored in aRes variable
 1924              		.loc 1 422 0
 1925 003a FFF7FEFF 		bl	calcaRes
 423:../LSM9DS1_Driver.c **** 
 424:../LSM9DS1_Driver.c **** 	if (settings.device.commInterface == IMU_MODE_I2C)	// If we're using I2C
 1926              		.loc 1 424 0
 1927 003e 40F20003 		movw	r3, #:lower16:settings
 1928 0042 C0F20003 		movt	r3, #:upper16:settings
 1929 0046 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1930 0048 012B     		cmp	r3, #1
 1931 004a 02D1     		bne	.L50
 425:../LSM9DS1_Driver.c **** 		initI2C();	// Initialize I2C
 1932              		.loc 1 425 0
 1933 004c FFF7FEFF 		bl	initI2C
 1934 0050 08E0     		b	.L51
 1935              	.L50:
 426:../LSM9DS1_Driver.c **** 	else if (settings.device.commInterface == IMU_MODE_SPI) 	// else, if we're using SPI
 1936              		.loc 1 426 0
 1937 0052 40F20003 		movw	r3, #:lower16:settings
 1938 0056 C0F20003 		movt	r3, #:upper16:settings
 1939 005a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1940 005c 002B     		cmp	r3, #0
 1941 005e 01D1     		bne	.L51
 427:../LSM9DS1_Driver.c **** 		initSPI();	// Initialize SPI
 1942              		.loc 1 427 0
 1943 0060 FFF7FEFF 		bl	initSPI
 1944              	.L51:
 428:../LSM9DS1_Driver.c **** 
 429:../LSM9DS1_Driver.c **** 	// To verify communication, we can read from the WHO_AM_I register of
 430:../LSM9DS1_Driver.c **** 	// each device. Store those in a variable so we can return them.
 431:../LSM9DS1_Driver.c **** 	uint8_t mTest = mReadByte(WHO_AM_I_M);		// Read the gyro WHO_AM_I
 1945              		.loc 1 431 0
 1946 0064 4FF00F00 		mov	r0, #15
 1947 0068 FFF7FEFF 		bl	mReadByte
 1948 006c 0346     		mov	r3, r0
 1949 006e FB71     		strb	r3, [r7, #7]
 432:../LSM9DS1_Driver.c **** 	uint8_t xgTest = xgReadByte(WHO_AM_I_XG);	// Read the accel/mag WHO_AM_I
 1950              		.loc 1 432 0
 1951 0070 4FF00F00 		mov	r0, #15
 1952 0074 FFF7FEFF 		bl	xgReadByte
 1953 0078 0346     		mov	r3, r0
 1954 007a BB71     		strb	r3, [r7, #6]
 433:../LSM9DS1_Driver.c **** 
 434:../LSM9DS1_Driver.c **** 	uint16_t whoAmICombined = (xgTest << 8) | mTest;
 1955              		.loc 1 434 0
 1956 007c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1957 007e 4FEA0323 		lsl	r3, r3, #8
 1958 0082 9AB2     		uxth	r2, r3
 1959 0084 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1960 0086 9BB2     		uxth	r3, r3
 1961 0088 1343     		orrs	r3, r3, r2
 1962 008a 9BB2     		uxth	r3, r3
 1963 008c BB80     		strh	r3, [r7, #4]	@ movhi
 435:../LSM9DS1_Driver.c **** 
 436:../LSM9DS1_Driver.c **** 	if (whoAmICombined != ((WHO_AM_I_AG_RSP << 8) | WHO_AM_I_M_RSP))
 1964              		.loc 1 436 0
 1965 008e BA88     		ldrh	r2, [r7, #4]
 1966 0090 46F63D03 		movw	r3, #26685
 1967 0094 9A42     		cmp	r2, r3
 1968 0096 02D0     		beq	.L52
 437:../LSM9DS1_Driver.c **** 	{
 438:../LSM9DS1_Driver.c **** 		return 0;
 1969              		.loc 1 438 0
 1970 0098 4FF00003 		mov	r3, #0
 1971 009c 06E0     		b	.L53
 1972              	.L52:
 439:../LSM9DS1_Driver.c **** 	}
 440:../LSM9DS1_Driver.c **** 
 441:../LSM9DS1_Driver.c **** 	// Gyro initialization stuff:
 442:../LSM9DS1_Driver.c **** 	initGyro();	// This will "turn on" the gyro. Setting up interrupts, etc.
 1973              		.loc 1 442 0
 1974 009e FFF7FEFF 		bl	initGyro
 443:../LSM9DS1_Driver.c **** 
 444:../LSM9DS1_Driver.c **** 	// Accelerometer initialization stuff:
 445:../LSM9DS1_Driver.c **** 	initAccel(); // "Turn on" all axes of the accel. Set up interrupts, etc.
 1975              		.loc 1 445 0
 1976 00a2 FFF7FEFF 		bl	initAccel
 446:../LSM9DS1_Driver.c **** 
 447:../LSM9DS1_Driver.c **** 	// Magnetometer initialization stuff:
 448:../LSM9DS1_Driver.c **** 	initMag(); // "Turn on" all axes of the mag. Set up interrupts, etc.
 1977              		.loc 1 448 0
 1978 00a6 FFF7FEFF 		bl	initMag
 449:../LSM9DS1_Driver.c **** 
 450:../LSM9DS1_Driver.c **** 	// Once everything is initialized, return the WHO_AM_I registers we read:
 451:../LSM9DS1_Driver.c **** 	return whoAmICombined;
 1979              		.loc 1 451 0
 1980 00aa BB88     		ldrh	r3, [r7, #4]
 1981              	.L53:
 452:../LSM9DS1_Driver.c **** 
 453:../LSM9DS1_Driver.c **** }
 1982              		.loc 1 453 0
 1983 00ac 1846     		mov	r0, r3
 1984 00ae 07F10807 		add	r7, r7, #8
 1985 00b2 BD46     		mov	sp, r7
 1986 00b4 80BD     		pop	{r7, pc}
 1987              		.cfi_endproc
 1988              	.LFE135:
 1990 00b6 00BF     		.section	.text.constrainScales,"ax",%progbits
 1991              		.align	2
 1992              		.global	constrainScales
 1993              		.thumb
 1994              		.thumb_func
 1996              	constrainScales:
 1997              	.LFB136:
 454:../LSM9DS1_Driver.c **** 
 455:../LSM9DS1_Driver.c **** void constrainScales()
 456:../LSM9DS1_Driver.c **** {
 1998              		.loc 1 456 0
 1999              		.cfi_startproc
 2000              		@ args = 0, pretend = 0, frame = 0
 2001              		@ frame_needed = 1, uses_anonymous_args = 0
 2002              		@ link register save eliminated.
 2003 0000 80B4     		push	{r7}
 2004              	.LCFI52:
 2005              		.cfi_def_cfa_offset 4
 2006              		.cfi_offset 7, -4
 2007 0002 00AF     		add	r7, sp, #0
 2008              	.LCFI53:
 2009              		.cfi_def_cfa_register 7
 457:../LSM9DS1_Driver.c **** 	if ((settings.gyro.scale != 245) && (settings.gyro.scale != 500) && (settings.gyro.scale != 2000))
 2010              		.loc 1 457 0
 2011 0004 40F20003 		movw	r3, #:lower16:settings
 2012 0008 C0F20003 		movt	r3, #:upper16:settings
 2013 000c DB88     		ldrh	r3, [r3, #6]
 2014 000e F52B     		cmp	r3, #245
 2015 0010 16D0     		beq	.L55
 2016              		.loc 1 457 0 is_stmt 0 discriminator 1
 2017 0012 40F20003 		movw	r3, #:lower16:settings
 2018 0016 C0F20003 		movt	r3, #:upper16:settings
 2019 001a DB88     		ldrh	r3, [r3, #6]
 2020 001c B3F5FA7F 		cmp	r3, #500
 2021 0020 0ED0     		beq	.L55
 2022 0022 40F20003 		movw	r3, #:lower16:settings
 2023 0026 C0F20003 		movt	r3, #:upper16:settings
 2024 002a DB88     		ldrh	r3, [r3, #6]
 2025 002c B3F5FA6F 		cmp	r3, #2000
 2026 0030 06D0     		beq	.L55
 458:../LSM9DS1_Driver.c **** 	{
 459:../LSM9DS1_Driver.c **** 		settings.gyro.scale = 245;
 2027              		.loc 1 459 0 is_stmt 1
 2028 0032 40F20003 		movw	r3, #:lower16:settings
 2029 0036 C0F20003 		movt	r3, #:upper16:settings
 2030 003a 4FF0F502 		mov	r2, #245
 2031 003e DA80     		strh	r2, [r3, #6]	@ movhi
 2032              	.L55:
 460:../LSM9DS1_Driver.c **** 	}
 461:../LSM9DS1_Driver.c **** 
 462:../LSM9DS1_Driver.c **** 	if ((settings.accel.scale != 2) && (settings.accel.scale != 4) && (settings.accel.scale != 8) && (
 2033              		.loc 1 462 0
 2034 0040 40F20003 		movw	r3, #:lower16:settings
 2035 0044 C0F20003 		movt	r3, #:upper16:settings
 2036 0048 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 2037 004a 022B     		cmp	r3, #2
 2038 004c 1BD0     		beq	.L56
 2039              		.loc 1 462 0 is_stmt 0 discriminator 1
 2040 004e 40F20003 		movw	r3, #:lower16:settings
 2041 0052 C0F20003 		movt	r3, #:upper16:settings
 2042 0056 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 2043 0058 042B     		cmp	r3, #4
 2044 005a 14D0     		beq	.L56
 2045 005c 40F20003 		movw	r3, #:lower16:settings
 2046 0060 C0F20003 		movt	r3, #:upper16:settings
 2047 0064 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 2048 0066 082B     		cmp	r3, #8
 2049 0068 0DD0     		beq	.L56
 2050 006a 40F20003 		movw	r3, #:lower16:settings
 2051 006e C0F20003 		movt	r3, #:upper16:settings
 2052 0072 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 2053 0074 102B     		cmp	r3, #16
 2054 0076 06D0     		beq	.L56
 463:../LSM9DS1_Driver.c **** 	{
 464:../LSM9DS1_Driver.c **** 		settings.accel.scale = 2;
 2055              		.loc 1 464 0 is_stmt 1
 2056 0078 40F20003 		movw	r3, #:lower16:settings
 2057 007c C0F20003 		movt	r3, #:upper16:settings
 2058 0080 4FF00202 		mov	r2, #2
 2059 0084 DA75     		strb	r2, [r3, #23]
 2060              	.L56:
 465:../LSM9DS1_Driver.c **** 	}
 466:../LSM9DS1_Driver.c **** 
 467:../LSM9DS1_Driver.c **** 	if ((settings.mag.scale != 4) && (settings.mag.scale != 8) && (settings.mag.scale != 12) && (setti
 2061              		.loc 1 467 0
 2062 0086 40F20003 		movw	r3, #:lower16:settings
 2063 008a C0F20003 		movt	r3, #:upper16:settings
 2064 008e 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 2065 0092 042B     		cmp	r3, #4
 2066 0094 1FD0     		beq	.L54
 2067              		.loc 1 467 0 is_stmt 0 discriminator 1
 2068 0096 40F20003 		movw	r3, #:lower16:settings
 2069 009a C0F20003 		movt	r3, #:upper16:settings
 2070 009e 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 2071 00a2 082B     		cmp	r3, #8
 2072 00a4 17D0     		beq	.L54
 2073 00a6 40F20003 		movw	r3, #:lower16:settings
 2074 00aa C0F20003 		movt	r3, #:upper16:settings
 2075 00ae 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 2076 00b2 0C2B     		cmp	r3, #12
 2077 00b4 0FD0     		beq	.L54
 2078 00b6 40F20003 		movw	r3, #:lower16:settings
 2079 00ba C0F20003 		movt	r3, #:upper16:settings
 2080 00be 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 2081 00c2 102B     		cmp	r3, #16
 2082 00c4 07D0     		beq	.L54
 468:../LSM9DS1_Driver.c **** 	{
 469:../LSM9DS1_Driver.c **** 		settings.mag.scale = 4;
 2083              		.loc 1 469 0 is_stmt 1
 2084 00c6 40F20003 		movw	r3, #:lower16:settings
 2085 00ca C0F20003 		movt	r3, #:upper16:settings
 2086 00ce 4FF00402 		mov	r2, #4
 2087 00d2 83F82020 		strb	r2, [r3, #32]
 2088              	.L54:
 470:../LSM9DS1_Driver.c **** 	}
 471:../LSM9DS1_Driver.c **** }
 2089              		.loc 1 471 0
 2090 00d6 BD46     		mov	sp, r7
 2091 00d8 80BC     		pop	{r7}
 2092 00da 7047     		bx	lr
 2093              		.cfi_endproc
 2094              	.LFE136:
 2096              		.section	.text.initI2C,"ax",%progbits
 2097              		.align	2
 2098              		.global	initI2C
 2099              		.thumb
 2100              		.thumb_func
 2102              	initI2C:
 2103              	.LFB137:
 472:../LSM9DS1_Driver.c **** 
 473:../LSM9DS1_Driver.c **** 
 474:../LSM9DS1_Driver.c **** void initI2C(void)
 475:../LSM9DS1_Driver.c **** {
 2104              		.loc 1 475 0
 2105              		.cfi_startproc
 2106              		@ args = 0, pretend = 0, frame = 0
 2107              		@ frame_needed = 1, uses_anonymous_args = 0
 2108              		@ link register save eliminated.
 2109 0000 80B4     		push	{r7}
 2110              	.LCFI54:
 2111              		.cfi_def_cfa_offset 4
 2112              		.cfi_offset 7, -4
 2113 0002 00AF     		add	r7, sp, #0
 2114              	.LCFI55:
 2115              		.cfi_def_cfa_register 7
 476:../LSM9DS1_Driver.c **** 	;
 477:../LSM9DS1_Driver.c **** }
 2116              		.loc 1 477 0
 2117 0004 BD46     		mov	sp, r7
 2118 0006 80BC     		pop	{r7}
 2119 0008 7047     		bx	lr
 2120              		.cfi_endproc
 2121              	.LFE137:
 2123 000a 00BF     		.section	.text.initSPI,"ax",%progbits
 2124              		.align	2
 2125              		.global	initSPI
 2126              		.thumb
 2127              		.thumb_func
 2129              	initSPI:
 2130              	.LFB138:
 478:../LSM9DS1_Driver.c **** 
 479:../LSM9DS1_Driver.c **** void initSPI(void)
 480:../LSM9DS1_Driver.c **** {
 2131              		.loc 1 480 0
 2132              		.cfi_startproc
 2133              		@ args = 0, pretend = 0, frame = 0
 2134              		@ frame_needed = 1, uses_anonymous_args = 0
 2135              		@ link register save eliminated.
 2136 0000 80B4     		push	{r7}
 2137              	.LCFI56:
 2138              		.cfi_def_cfa_offset 4
 2139              		.cfi_offset 7, -4
 2140 0002 00AF     		add	r7, sp, #0
 2141              	.LCFI57:
 2142              		.cfi_def_cfa_register 7
 481:../LSM9DS1_Driver.c **** 	;
 482:../LSM9DS1_Driver.c **** }
 2143              		.loc 1 482 0
 2144 0004 BD46     		mov	sp, r7
 2145 0006 80BC     		pop	{r7}
 2146 0008 7047     		bx	lr
 2147              		.cfi_endproc
 2148              	.LFE138:
 2150 000a 00BF     		.section	.text.calcgRes,"ax",%progbits
 2151              		.align	2
 2152              		.global	calcgRes
 2153              		.thumb
 2154              		.thumb_func
 2156              	calcgRes:
 2157              	.LFB139:
 483:../LSM9DS1_Driver.c **** 
 484:../LSM9DS1_Driver.c **** void calcgRes()
 485:../LSM9DS1_Driver.c **** {
 2158              		.loc 1 485 0
 2159              		.cfi_startproc
 2160              		@ args = 0, pretend = 0, frame = 0
 2161              		@ frame_needed = 1, uses_anonymous_args = 0
 2162              		@ link register save eliminated.
 2163 0000 80B4     		push	{r7}
 2164              	.LCFI58:
 2165              		.cfi_def_cfa_offset 4
 2166              		.cfi_offset 7, -4
 2167 0002 00AF     		add	r7, sp, #0
 2168              	.LCFI59:
 2169              		.cfi_def_cfa_register 7
 486:../LSM9DS1_Driver.c **** 	gRes = ((float) settings.gyro.scale) / 32768.0;
 2170              		.loc 1 486 0
 2171 0004 40F20003 		movw	r3, #:lower16:settings
 2172 0008 C0F20003 		movt	r3, #:upper16:settings
 2173 000c DB88     		ldrh	r3, [r3, #6]
 2174 000e 07EE903A 		fmsr	s15, r3	@ int
 2175 0012 B8EE677A 		fuitos	s14, s15
 2176 0016 DFED067A 		flds	s15, .L61
 2177 001a C7EE277A 		fdivs	s15, s14, s15
 2178 001e 40F20003 		movw	r3, #:lower16:gRes
 2179 0022 C0F20003 		movt	r3, #:upper16:gRes
 2180 0026 C3ED007A 		fsts	s15, [r3, #0]
 487:../LSM9DS1_Driver.c **** }
 2181              		.loc 1 487 0
 2182 002a BD46     		mov	sp, r7
 2183 002c 80BC     		pop	{r7}
 2184 002e 7047     		bx	lr
 2185              	.L62:
 2186              		.align	2
 2187              	.L61:
 2188 0030 00000047 		.word	1191182336
 2189              		.cfi_endproc
 2190              	.LFE139:
 2192              		.section	.text.calcaRes,"ax",%progbits
 2193              		.align	2
 2194              		.global	calcaRes
 2195              		.thumb
 2196              		.thumb_func
 2198              	calcaRes:
 2199              	.LFB140:
 488:../LSM9DS1_Driver.c **** 
 489:../LSM9DS1_Driver.c **** void calcaRes()
 490:../LSM9DS1_Driver.c **** {
 2200              		.loc 1 490 0
 2201              		.cfi_startproc
 2202              		@ args = 0, pretend = 0, frame = 0
 2203              		@ frame_needed = 1, uses_anonymous_args = 0
 2204              		@ link register save eliminated.
 2205 0000 80B4     		push	{r7}
 2206              	.LCFI60:
 2207              		.cfi_def_cfa_offset 4
 2208              		.cfi_offset 7, -4
 2209 0002 00AF     		add	r7, sp, #0
 2210              	.LCFI61:
 2211              		.cfi_def_cfa_register 7
 491:../LSM9DS1_Driver.c **** 	aRes = ((float) settings.accel.scale) / 32768.0;
 2212              		.loc 1 491 0
 2213 0004 40F20003 		movw	r3, #:lower16:settings
 2214 0008 C0F20003 		movt	r3, #:upper16:settings
 2215 000c DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 2216 000e 07EE903A 		fmsr	s15, r3	@ int
 2217 0012 B8EE677A 		fuitos	s14, s15
 2218 0016 DFED067A 		flds	s15, .L64
 2219 001a C7EE277A 		fdivs	s15, s14, s15
 2220 001e 40F20003 		movw	r3, #:lower16:aRes
 2221 0022 C0F20003 		movt	r3, #:upper16:aRes
 2222 0026 C3ED007A 		fsts	s15, [r3, #0]
 492:../LSM9DS1_Driver.c **** }
 2223              		.loc 1 492 0
 2224 002a BD46     		mov	sp, r7
 2225 002c 80BC     		pop	{r7}
 2226 002e 7047     		bx	lr
 2227              	.L65:
 2228              		.align	2
 2229              	.L64:
 2230 0030 00000047 		.word	1191182336
 2231              		.cfi_endproc
 2232              	.LFE140:
 2234              		.section	.text.calcmRes,"ax",%progbits
 2235              		.align	2
 2236              		.global	calcmRes
 2237              		.thumb
 2238              		.thumb_func
 2240              	calcmRes:
 2241              	.LFB141:
 493:../LSM9DS1_Driver.c **** 
 494:../LSM9DS1_Driver.c **** 
 495:../LSM9DS1_Driver.c **** void calcmRes()
 496:../LSM9DS1_Driver.c **** {
 2242              		.loc 1 496 0
 2243              		.cfi_startproc
 2244              		@ args = 0, pretend = 0, frame = 0
 2245              		@ frame_needed = 1, uses_anonymous_args = 0
 2246              		@ link register save eliminated.
 2247 0000 80B4     		push	{r7}
 2248              	.LCFI62:
 2249              		.cfi_def_cfa_offset 4
 2250              		.cfi_offset 7, -4
 2251 0002 00AF     		add	r7, sp, #0
 2252              	.LCFI63:
 2253              		.cfi_def_cfa_register 7
 497:../LSM9DS1_Driver.c **** 	//mRes = ((float) settings.mag.scale) / 32768.0;
 498:../LSM9DS1_Driver.c **** 	switch (settings.mag.scale)
 2254              		.loc 1 498 0
 2255 0004 40F20003 		movw	r3, #:lower16:settings
 2256 0008 C0F20003 		movt	r3, #:upper16:settings
 2257 000c 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 2258 0010 A3F10403 		sub	r3, r3, #4
 2259 0014 0C2B     		cmp	r3, #12
 2260 0016 49D8     		bhi	.L66
 2261 0018 01A2     		adr	r2, .L72
 2262 001a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2263 001e 00BF     		.align	2
 2264              	.L72:
 2265 0020 55000000 		.word	.L68+1
 2266 0024 AD000000 		.word	.L66+1
 2267 0028 AD000000 		.word	.L66+1
 2268 002c AD000000 		.word	.L66+1
 2269 0030 6B000000 		.word	.L69+1
 2270 0034 AD000000 		.word	.L66+1
 2271 0038 AD000000 		.word	.L66+1
 2272 003c AD000000 		.word	.L66+1
 2273 0040 81000000 		.word	.L70+1
 2274 0044 AD000000 		.word	.L66+1
 2275 0048 AD000000 		.word	.L66+1
 2276 004c AD000000 		.word	.L66+1
 2277 0050 97000000 		.word	.L71+1
 2278              	.L68:
 499:../LSM9DS1_Driver.c **** 	{
 500:../LSM9DS1_Driver.c **** 		case 4:
 501:../LSM9DS1_Driver.c **** 			mRes = magSensitivity[0];
 2279              		.loc 1 501 0
 2280 0054 40F20003 		movw	r3, #:lower16:magSensitivity
 2281 0058 C0F20003 		movt	r3, #:upper16:magSensitivity
 2282 005c 1A68     		ldr	r2, [r3, #0]	@ float
 2283 005e 40F20003 		movw	r3, #:lower16:mRes
 2284 0062 C0F20003 		movt	r3, #:upper16:mRes
 2285 0066 1A60     		str	r2, [r3, #0]	@ float
 502:../LSM9DS1_Driver.c **** 			break;
 2286              		.loc 1 502 0
 2287 0068 20E0     		b	.L66
 2288              	.L69:
 503:../LSM9DS1_Driver.c **** 		case 8:
 504:../LSM9DS1_Driver.c **** 			mRes = magSensitivity[1];
 2289              		.loc 1 504 0
 2290 006a 40F20003 		movw	r3, #:lower16:magSensitivity
 2291 006e C0F20003 		movt	r3, #:upper16:magSensitivity
 2292 0072 5A68     		ldr	r2, [r3, #4]	@ float
 2293 0074 40F20003 		movw	r3, #:lower16:mRes
 2294 0078 C0F20003 		movt	r3, #:upper16:mRes
 2295 007c 1A60     		str	r2, [r3, #0]	@ float
 505:../LSM9DS1_Driver.c **** 			break;
 2296              		.loc 1 505 0
 2297 007e 15E0     		b	.L66
 2298              	.L70:
 506:../LSM9DS1_Driver.c **** 		case 12:
 507:../LSM9DS1_Driver.c **** 			mRes = magSensitivity[2];
 2299              		.loc 1 507 0
 2300 0080 40F20003 		movw	r3, #:lower16:magSensitivity
 2301 0084 C0F20003 		movt	r3, #:upper16:magSensitivity
 2302 0088 9A68     		ldr	r2, [r3, #8]	@ float
 2303 008a 40F20003 		movw	r3, #:lower16:mRes
 2304 008e C0F20003 		movt	r3, #:upper16:mRes
 2305 0092 1A60     		str	r2, [r3, #0]	@ float
 508:../LSM9DS1_Driver.c **** 			break;
 2306              		.loc 1 508 0
 2307 0094 0AE0     		b	.L66
 2308              	.L71:
 509:../LSM9DS1_Driver.c **** 		case 16:
 510:../LSM9DS1_Driver.c **** 			mRes = magSensitivity[3];
 2309              		.loc 1 510 0
 2310 0096 40F20003 		movw	r3, #:lower16:magSensitivity
 2311 009a C0F20003 		movt	r3, #:upper16:magSensitivity
 2312 009e DA68     		ldr	r2, [r3, #12]	@ float
 2313 00a0 40F20003 		movw	r3, #:lower16:mRes
 2314 00a4 C0F20003 		movt	r3, #:upper16:mRes
 2315 00a8 1A60     		str	r2, [r3, #0]	@ float
 511:../LSM9DS1_Driver.c **** 			break;
 2316              		.loc 1 511 0
 2317 00aa 00BF     		nop
 2318              	.L66:
 512:../LSM9DS1_Driver.c **** 	}
 513:../LSM9DS1_Driver.c **** 
 514:../LSM9DS1_Driver.c **** }
 2319              		.loc 1 514 0
 2320 00ac BD46     		mov	sp, r7
 2321 00ae 80BC     		pop	{r7}
 2322 00b0 7047     		bx	lr
 2323              		.cfi_endproc
 2324              	.LFE141:
 2326 00b2 00BF     		.section	.text.delay,"ax",%progbits
 2327              		.align	2
 2328              		.global	delay
 2329              		.thumb
 2330              		.thumb_func
 2332              	delay:
 2333              	.LFB142:
 515:../LSM9DS1_Driver.c **** 
 516:../LSM9DS1_Driver.c **** void delay(int d)
 517:../LSM9DS1_Driver.c **** {
 2334              		.loc 1 517 0
 2335              		.cfi_startproc
 2336              		@ args = 0, pretend = 0, frame = 16
 2337              		@ frame_needed = 1, uses_anonymous_args = 0
 2338              		@ link register save eliminated.
 2339 0000 80B4     		push	{r7}
 2340              	.LCFI64:
 2341              		.cfi_def_cfa_offset 4
 2342              		.cfi_offset 7, -4
 2343 0002 85B0     		sub	sp, sp, #20
 2344              	.LCFI65:
 2345              		.cfi_def_cfa_offset 24
 2346 0004 00AF     		add	r7, sp, #0
 2347              	.LCFI66:
 2348              		.cfi_def_cfa_register 7
 2349 0006 7860     		str	r0, [r7, #4]
 2350              	.LBB5:
 518:../LSM9DS1_Driver.c **** 	for(int i = 0; i < d; i++) i++;
 2351              		.loc 1 518 0
 2352 0008 4FF00003 		mov	r3, #0
 2353 000c FB60     		str	r3, [r7, #12]
 2354 000e 07E0     		b	.L74
 2355              	.L75:
 2356              		.loc 1 518 0 is_stmt 0 discriminator 2
 2357 0010 FB68     		ldr	r3, [r7, #12]
 2358 0012 03F10103 		add	r3, r3, #1
 2359 0016 FB60     		str	r3, [r7, #12]
 2360 0018 FB68     		ldr	r3, [r7, #12]
 2361 001a 03F10103 		add	r3, r3, #1
 2362 001e FB60     		str	r3, [r7, #12]
 2363              	.L74:
 2364              		.loc 1 518 0 discriminator 1
 2365 0020 FA68     		ldr	r2, [r7, #12]
 2366 0022 7B68     		ldr	r3, [r7, #4]
 2367 0024 9A42     		cmp	r2, r3
 2368 0026 F3DB     		blt	.L75
 2369              	.LBE5:
 519:../LSM9DS1_Driver.c **** }
 2370              		.loc 1 519 0 is_stmt 1
 2371 0028 07F11407 		add	r7, r7, #20
 2372 002c BD46     		mov	sp, r7
 2373 002e 80BC     		pop	{r7}
 2374 0030 7047     		bx	lr
 2375              		.cfi_endproc
 2376              	.LFE142:
 2378 0032 00BF     		.section	.text.I2CreadByte,"ax",%progbits
 2379              		.align	2
 2380              		.global	I2CreadByte
 2381              		.thumb
 2382              		.thumb_func
 2384              	I2CreadByte:
 2385              	.LFB143:
 520:../LSM9DS1_Driver.c **** 
 521:../LSM9DS1_Driver.c **** uint8_t I2CreadByte(uint8_t address, uint8_t subAddress)
 522:../LSM9DS1_Driver.c **** {
 2386              		.loc 1 522 0
 2387              		.cfi_startproc
 2388              		@ args = 0, pretend = 0, frame = 40
 2389              		@ frame_needed = 1, uses_anonymous_args = 0
 2390 0000 80B5     		push	{r7, lr}
 2391              	.LCFI67:
 2392              		.cfi_def_cfa_offset 8
 2393              		.cfi_offset 7, -8
 2394              		.cfi_offset 14, -4
 2395 0002 8AB0     		sub	sp, sp, #40
 2396              	.LCFI68:
 2397              		.cfi_def_cfa_offset 48
 2398 0004 00AF     		add	r7, sp, #0
 2399              	.LCFI69:
 2400              		.cfi_def_cfa_register 7
 2401 0006 0246     		mov	r2, r0
 2402 0008 0B46     		mov	r3, r1
 2403 000a FA71     		strb	r2, [r7, #7]
 2404 000c BB71     		strb	r3, [r7, #6]
 523:../LSM9DS1_Driver.c **** 	uint32_t stageOfReading = 0;
 2405              		.loc 1 523 0
 2406 000e 4FF00003 		mov	r3, #0
 2407 0012 7B62     		str	r3, [r7, #36]
 524:../LSM9DS1_Driver.c **** 
 525:../LSM9DS1_Driver.c **** 	//deviceAddress address = *((deviceAddress*)T);
 526:../LSM9DS1_Driver.c **** 
 527:../LSM9DS1_Driver.c **** 		I2C001_DataType data1;
 528:../LSM9DS1_Driver.c **** 		data1.Data1.TDF_Type = I2C_TDF_MStart;
 2408              		.loc 1 528 0
 2409 0014 4FF00403 		mov	r3, #4
 2410 0018 87F82130 		strb	r3, [r7, #33]
 529:../LSM9DS1_Driver.c **** 		data1.Data1.Data = ((address<<1) | I2C_WRITE);
 2411              		.loc 1 529 0
 2412 001c FB79     		ldrb	r3, [r7, #7]
 2413 001e 4FEA4303 		lsl	r3, r3, #1
 2414 0022 DBB2     		uxtb	r3, r3
 2415 0024 87F82030 		strb	r3, [r7, #32]
 530:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data1));
 2416              		.loc 1 530 0
 2417 0028 00BF     		nop
 2418              	.L77:
 2419              		.loc 1 530 0 is_stmt 0 discriminator 1
 2420 002a 07F12003 		add	r3, r7, #32
 2421 002e 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 2422 0032 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 2423 0036 1946     		mov	r1, r3
 2424 0038 FFF7FEFF 		bl	I2C001_WriteData
 2425 003c 0346     		mov	r3, r0
 2426 003e 002B     		cmp	r3, #0
 2427 0040 F3D0     		beq	.L77
 531:../LSM9DS1_Driver.c **** 
 532:../LSM9DS1_Driver.c **** 		delay(DELAY);
 2428              		.loc 1 532 0 is_stmt 1
 2429 0042 42F6E060 		movw	r0, #12000
 2430 0046 FFF7FEFF 		bl	delay
 533:../LSM9DS1_Driver.c **** 
 534:../LSM9DS1_Driver.c **** 		I2C001_DataType data2;
 535:../LSM9DS1_Driver.c **** 		data2.Data1.TDF_Type = I2C_TDF_MTxData;
 2431              		.loc 1 535 0
 2432 004a 4FF00003 		mov	r3, #0
 2433 004e 7B77     		strb	r3, [r7, #29]
 536:../LSM9DS1_Driver.c **** 		data2.Data1.Data = subAddress;
 2434              		.loc 1 536 0
 2435 0050 BB79     		ldrb	r3, [r7, #6]
 2436 0052 3B77     		strb	r3, [r7, #28]
 537:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data2));
 2437              		.loc 1 537 0
 2438 0054 00BF     		nop
 2439              	.L78:
 2440              		.loc 1 537 0 is_stmt 0 discriminator 1
 2441 0056 07F11C03 		add	r3, r7, #28
 2442 005a 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 2443 005e C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 2444 0062 1946     		mov	r1, r3
 2445 0064 FFF7FEFF 		bl	I2C001_WriteData
 2446 0068 0346     		mov	r3, r0
 2447 006a 002B     		cmp	r3, #0
 2448 006c F3D0     		beq	.L78
 538:../LSM9DS1_Driver.c **** 
 539:../LSM9DS1_Driver.c **** 		delay(DELAY);
 2449              		.loc 1 539 0 is_stmt 1
 2450 006e 42F6E060 		movw	r0, #12000
 2451 0072 FFF7FEFF 		bl	delay
 540:../LSM9DS1_Driver.c **** 
 541:../LSM9DS1_Driver.c **** 
 542:../LSM9DS1_Driver.c **** 		I2C001_DataType data3;
 543:../LSM9DS1_Driver.c **** 		data3.Data1.TDF_Type = I2C_TDF_MRStart;
 2452              		.loc 1 543 0
 2453 0076 4FF00503 		mov	r3, #5
 2454 007a 7B76     		strb	r3, [r7, #25]
 544:../LSM9DS1_Driver.c **** 		data3.Data1.Data = ((address<<1) | I2C_READ);
 2455              		.loc 1 544 0
 2456 007c FB79     		ldrb	r3, [r7, #7]
 2457 007e 4FEA4303 		lsl	r3, r3, #1
 2458 0082 DBB2     		uxtb	r3, r3
 2459 0084 43F00103 		orr	r3, r3, #1
 2460 0088 DBB2     		uxtb	r3, r3
 2461 008a 3B76     		strb	r3, [r7, #24]
 545:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data3));
 2462              		.loc 1 545 0
 2463 008c 00BF     		nop
 2464              	.L79:
 2465              		.loc 1 545 0 is_stmt 0 discriminator 1
 2466 008e 07F11803 		add	r3, r7, #24
 2467 0092 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 2468 0096 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 2469 009a 1946     		mov	r1, r3
 2470 009c FFF7FEFF 		bl	I2C001_WriteData
 2471 00a0 0346     		mov	r3, r0
 2472 00a2 002B     		cmp	r3, #0
 2473 00a4 F3D0     		beq	.L79
 546:../LSM9DS1_Driver.c **** 
 547:../LSM9DS1_Driver.c **** 		delay(DELAY);
 2474              		.loc 1 547 0 is_stmt 1
 2475 00a6 42F6E060 		movw	r0, #12000
 2476 00aa FFF7FEFF 		bl	delay
 548:../LSM9DS1_Driver.c **** 
 549:../LSM9DS1_Driver.c **** 
 550:../LSM9DS1_Driver.c **** 		I2C001_DataType data4;
 551:../LSM9DS1_Driver.c **** 		data4.Data1.TDF_Type = I2C_TDF_MRxAck1;
 2477              		.loc 1 551 0
 2478 00ae 4FF00303 		mov	r3, #3
 2479 00b2 7B75     		strb	r3, [r7, #21]
 552:../LSM9DS1_Driver.c **** 		data4.Data1.Data = ubyteFF;
 2480              		.loc 1 552 0
 2481 00b4 4FF0FF03 		mov	r3, #255
 2482 00b8 3B75     		strb	r3, [r7, #20]
 553:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data4));
 2483              		.loc 1 553 0
 2484 00ba 00BF     		nop
 2485              	.L80:
 2486              		.loc 1 553 0 is_stmt 0 discriminator 1
 2487 00bc 07F11403 		add	r3, r7, #20
 2488 00c0 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 2489 00c4 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 2490 00c8 1946     		mov	r1, r3
 2491 00ca FFF7FEFF 		bl	I2C001_WriteData
 2492 00ce 0346     		mov	r3, r0
 2493 00d0 002B     		cmp	r3, #0
 2494 00d2 F3D0     		beq	.L80
 554:../LSM9DS1_Driver.c **** 
 555:../LSM9DS1_Driver.c **** 		delay(DELAY);
 2495              		.loc 1 555 0 is_stmt 1
 2496 00d4 42F6E060 		movw	r0, #12000
 2497 00d8 FFF7FEFF 		bl	delay
 556:../LSM9DS1_Driver.c **** 
 557:../LSM9DS1_Driver.c **** 		I2C001_DataType data5;
 558:../LSM9DS1_Driver.c **** 		data5.Data1.TDF_Type = I2C_TDF_MStop;
 2498              		.loc 1 558 0
 2499 00dc 4FF00603 		mov	r3, #6
 2500 00e0 7B74     		strb	r3, [r7, #17]
 559:../LSM9DS1_Driver.c **** 		data5.Data1.Data = ubyteFF;
 2501              		.loc 1 559 0
 2502 00e2 4FF0FF03 		mov	r3, #255
 2503 00e6 3B74     		strb	r3, [r7, #16]
 560:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data5));
 2504              		.loc 1 560 0
 2505 00e8 00BF     		nop
 2506              	.L81:
 2507              		.loc 1 560 0 is_stmt 0 discriminator 1
 2508 00ea 07F11003 		add	r3, r7, #16
 2509 00ee 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 2510 00f2 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 2511 00f6 1946     		mov	r1, r3
 2512 00f8 FFF7FEFF 		bl	I2C001_WriteData
 2513 00fc 0346     		mov	r3, r0
 2514 00fe 002B     		cmp	r3, #0
 2515 0100 F3D0     		beq	.L81
 561:../LSM9DS1_Driver.c **** 		stageOfReading++;
 2516              		.loc 1 561 0 is_stmt 1
 2517 0102 7B6A     		ldr	r3, [r7, #36]
 2518 0104 03F10103 		add	r3, r3, #1
 2519 0108 7B62     		str	r3, [r7, #36]
 562:../LSM9DS1_Driver.c **** 
 563:../LSM9DS1_Driver.c **** 		delay(DELAY);
 2520              		.loc 1 563 0
 2521 010a 42F6E060 		movw	r0, #12000
 2522 010e FFF7FEFF 		bl	delay
 564:../LSM9DS1_Driver.c **** 
 565:../LSM9DS1_Driver.c **** 		uint16_t DataReceive1 = 0;
 2523              		.loc 1 565 0
 2524 0112 4FF00003 		mov	r3, #0
 2525 0116 FB81     		strh	r3, [r7, #14]	@ movhi
 566:../LSM9DS1_Driver.c **** 		if(I2C001_ReadData(&I2C001_Handle0,&DataReceive1))
 2526              		.loc 1 566 0
 2527 0118 07F10E03 		add	r3, r7, #14
 2528 011c 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 2529 0120 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 2530 0124 1946     		mov	r1, r3
 2531 0126 FFF7FEFF 		bl	I2C001_ReadData
 2532 012a 0346     		mov	r3, r0
 2533 012c 002B     		cmp	r3, #0
 2534 012e 08D0     		beq	.L82
 567:../LSM9DS1_Driver.c **** 		{
 568:../LSM9DS1_Driver.c **** 			stageOfReading++;
 2535              		.loc 1 568 0
 2536 0130 7B6A     		ldr	r3, [r7, #36]
 2537 0132 03F10103 		add	r3, r3, #1
 2538 0136 7B62     		str	r3, [r7, #36]
 569:../LSM9DS1_Driver.c **** 			delay(DELAY);
 2539              		.loc 1 569 0
 2540 0138 42F6E060 		movw	r0, #12000
 2541 013c FFF7FEFF 		bl	delay
 2542 0140 03E0     		b	.L83
 2543              	.L82:
 570:../LSM9DS1_Driver.c **** 		}
 571:../LSM9DS1_Driver.c **** 		else
 572:../LSM9DS1_Driver.c **** 		{
 573:../LSM9DS1_Driver.c **** 			stageOfReading--;
 2544              		.loc 1 573 0
 2545 0142 7B6A     		ldr	r3, [r7, #36]
 2546 0144 03F1FF33 		add	r3, r3, #-1
 2547 0148 7B62     		str	r3, [r7, #36]
 2548              	.L83:
 574:../LSM9DS1_Driver.c **** 		}
 575:../LSM9DS1_Driver.c **** 
 576:../LSM9DS1_Driver.c **** 		return (uint8_t)DataReceive1;
 2549              		.loc 1 576 0
 2550 014a FB89     		ldrh	r3, [r7, #14]
 2551 014c DBB2     		uxtb	r3, r3
 577:../LSM9DS1_Driver.c **** }
 2552              		.loc 1 577 0
 2553 014e 1846     		mov	r0, r3
 2554 0150 07F12807 		add	r7, r7, #40
 2555 0154 BD46     		mov	sp, r7
 2556 0156 80BD     		pop	{r7, pc}
 2557              		.cfi_endproc
 2558              	.LFE143:
 2560              		.section	.text.mReadByte,"ax",%progbits
 2561              		.align	2
 2562              		.global	mReadByte
 2563              		.thumb
 2564              		.thumb_func
 2566              	mReadByte:
 2567              	.LFB144:
 578:../LSM9DS1_Driver.c **** 
 579:../LSM9DS1_Driver.c **** 
 580:../LSM9DS1_Driver.c **** uint8_t mReadByte(uint8_t subAddress)
 581:../LSM9DS1_Driver.c **** {
 2568              		.loc 1 581 0
 2569              		.cfi_startproc
 2570              		@ args = 0, pretend = 0, frame = 8
 2571              		@ frame_needed = 1, uses_anonymous_args = 0
 2572 0000 80B5     		push	{r7, lr}
 2573              	.LCFI70:
 2574              		.cfi_def_cfa_offset 8
 2575              		.cfi_offset 7, -8
 2576              		.cfi_offset 14, -4
 2577 0002 82B0     		sub	sp, sp, #8
 2578              	.LCFI71:
 2579              		.cfi_def_cfa_offset 16
 2580 0004 00AF     		add	r7, sp, #0
 2581              	.LCFI72:
 2582              		.cfi_def_cfa_register 7
 2583 0006 0346     		mov	r3, r0
 2584 0008 FB71     		strb	r3, [r7, #7]
 582:../LSM9DS1_Driver.c **** 	// Whether we're using I2C or SPI, read a byte using the
 583:../LSM9DS1_Driver.c **** 	// accelerometer-specific I2C address or SPI CS pin.
 584:../LSM9DS1_Driver.c **** 	if (settings.device.commInterface == IMU_MODE_I2C)
 2585              		.loc 1 584 0
 2586 000a 40F20003 		movw	r3, #:lower16:settings
 2587 000e C0F20003 		movt	r3, #:upper16:settings
 2588 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2589 0014 012B     		cmp	r3, #1
 2590 0016 0BD1     		bne	.L86
 585:../LSM9DS1_Driver.c **** 		return I2CreadByte(_mAddress, subAddress);
 2591              		.loc 1 585 0
 2592 0018 40F20003 		movw	r3, #:lower16:_mAddress
 2593 001c C0F20003 		movt	r3, #:upper16:_mAddress
 2594 0020 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 2595 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2596 0024 1046     		mov	r0, r2
 2597 0026 1946     		mov	r1, r3
 2598 0028 FFF7FEFF 		bl	I2CreadByte
 2599 002c 0346     		mov	r3, r0
 2600 002e FFE7     		b	.L85
 2601              	.L86:
 2602              	.L85:
 586:../LSM9DS1_Driver.c **** 	/*else if (settings.device.commInterface == IMU_MODE_SPI)
 587:../LSM9DS1_Driver.c **** 		return SPIreadByte(_mAddress, subAddress);*/
 588:../LSM9DS1_Driver.c **** }
 2603              		.loc 1 588 0
 2604 0030 1846     		mov	r0, r3
 2605 0032 07F10807 		add	r7, r7, #8
 2606 0036 BD46     		mov	sp, r7
 2607 0038 80BD     		pop	{r7, pc}
 2608              		.cfi_endproc
 2609              	.LFE144:
 2611 003a 00BF     		.section	.text.xgReadByte,"ax",%progbits
 2612              		.align	2
 2613              		.global	xgReadByte
 2614              		.thumb
 2615              		.thumb_func
 2617              	xgReadByte:
 2618              	.LFB145:
 589:../LSM9DS1_Driver.c **** 
 590:../LSM9DS1_Driver.c **** uint8_t xgReadByte(uint8_t subAddress)
 591:../LSM9DS1_Driver.c **** {
 2619              		.loc 1 591 0
 2620              		.cfi_startproc
 2621              		@ args = 0, pretend = 0, frame = 8
 2622              		@ frame_needed = 1, uses_anonymous_args = 0
 2623 0000 80B5     		push	{r7, lr}
 2624              	.LCFI73:
 2625              		.cfi_def_cfa_offset 8
 2626              		.cfi_offset 7, -8
 2627              		.cfi_offset 14, -4
 2628 0002 82B0     		sub	sp, sp, #8
 2629              	.LCFI74:
 2630              		.cfi_def_cfa_offset 16
 2631 0004 00AF     		add	r7, sp, #0
 2632              	.LCFI75:
 2633              		.cfi_def_cfa_register 7
 2634 0006 0346     		mov	r3, r0
 2635 0008 FB71     		strb	r3, [r7, #7]
 592:../LSM9DS1_Driver.c **** 	// Whether we're using I2C or SPI, read a byte using the
 593:../LSM9DS1_Driver.c **** 	// gyro-specific I2C address or SPI CS pin.
 594:../LSM9DS1_Driver.c **** 	if (settings.device.commInterface == IMU_MODE_I2C)
 2636              		.loc 1 594 0
 2637 000a 40F20003 		movw	r3, #:lower16:settings
 2638 000e C0F20003 		movt	r3, #:upper16:settings
 2639 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2640 0014 012B     		cmp	r3, #1
 2641 0016 0BD1     		bne	.L89
 595:../LSM9DS1_Driver.c **** 		return I2CreadByte(_xgAddress, subAddress);
 2642              		.loc 1 595 0
 2643 0018 40F20003 		movw	r3, #:lower16:_xgAddress
 2644 001c C0F20003 		movt	r3, #:upper16:_xgAddress
 2645 0020 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 2646 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2647 0024 1046     		mov	r0, r2
 2648 0026 1946     		mov	r1, r3
 2649 0028 FFF7FEFF 		bl	I2CreadByte
 2650 002c 0346     		mov	r3, r0
 2651 002e FFE7     		b	.L88
 2652              	.L89:
 2653              	.L88:
 596:../LSM9DS1_Driver.c **** 	/*else if (settings.device.commInterface == IMU_MODE_SPI)
 597:../LSM9DS1_Driver.c **** 		return SPIreadByte(_xgAddress, subAddress);*/
 598:../LSM9DS1_Driver.c **** }
 2654              		.loc 1 598 0
 2655 0030 1846     		mov	r0, r3
 2656 0032 07F10807 		add	r7, r7, #8
 2657 0036 BD46     		mov	sp, r7
 2658 0038 80BD     		pop	{r7, pc}
 2659              		.cfi_endproc
 2660              	.LFE145:
 2662 003a 00BF     		.section	.text.initGyro,"ax",%progbits
 2663              		.align	2
 2664              		.global	initGyro
 2665              		.thumb
 2666              		.thumb_func
 2668              	initGyro:
 2669              	.LFB146:
 599:../LSM9DS1_Driver.c **** 
 600:../LSM9DS1_Driver.c **** void initGyro(void)
 601:../LSM9DS1_Driver.c **** {
 2670              		.loc 1 601 0
 2671              		.cfi_startproc
 2672              		@ args = 0, pretend = 0, frame = 8
 2673              		@ frame_needed = 1, uses_anonymous_args = 0
 2674 0000 80B5     		push	{r7, lr}
 2675              	.LCFI76:
 2676              		.cfi_def_cfa_offset 8
 2677              		.cfi_offset 7, -8
 2678              		.cfi_offset 14, -4
 2679 0002 82B0     		sub	sp, sp, #8
 2680              	.LCFI77:
 2681              		.cfi_def_cfa_offset 16
 2682 0004 00AF     		add	r7, sp, #0
 2683              	.LCFI78:
 2684              		.cfi_def_cfa_register 7
 602:../LSM9DS1_Driver.c **** 	uint8_t tempRegValue = 0;
 2685              		.loc 1 602 0
 2686 0006 4FF00003 		mov	r3, #0
 2687 000a FB71     		strb	r3, [r7, #7]
 603:../LSM9DS1_Driver.c **** 
 604:../LSM9DS1_Driver.c **** 	// CTRL_REG1_G (Default value: 0x00)
 605:../LSM9DS1_Driver.c **** 	// [ODR_G2][ODR_G1][ODR_G0][FS_G1][FS_G0][0][BW_G1][BW_G0]
 606:../LSM9DS1_Driver.c **** 	// ODR_G[2:0] - Output data rate selection
 607:../LSM9DS1_Driver.c **** 	// FS_G[1:0] - Gyroscope full-scale selection
 608:../LSM9DS1_Driver.c **** 	// BW_G[1:0] - Gyroscope bandwidth selection
 609:../LSM9DS1_Driver.c **** 
 610:../LSM9DS1_Driver.c **** 	// To disable gyro, set sample rate bits to 0. We'll only set sample
 611:../LSM9DS1_Driver.c **** 	// rate if the gyro is enabled.
 612:../LSM9DS1_Driver.c **** 	if (settings.gyro.enabled)
 2688              		.loc 1 612 0
 2689 000c 40F20003 		movw	r3, #:lower16:settings
 2690 0010 C0F20003 		movt	r3, #:upper16:settings
 2691 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2692 0016 002B     		cmp	r3, #0
 2693 0018 07D0     		beq	.L92
 613:../LSM9DS1_Driver.c **** 	{
 614:../LSM9DS1_Driver.c **** 		tempRegValue = (settings.gyro.sampleRate & 0x07) << 5;
 2694              		.loc 1 614 0
 2695 001a 40F20003 		movw	r3, #:lower16:settings
 2696 001e C0F20003 		movt	r3, #:upper16:settings
 2697 0022 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 2698 0024 4FEA4313 		lsl	r3, r3, #5
 2699 0028 FB71     		strb	r3, [r7, #7]
 2700              	.L92:
 615:../LSM9DS1_Driver.c **** 	}
 616:../LSM9DS1_Driver.c **** 
 617:../LSM9DS1_Driver.c **** 	switch (settings.gyro.scale)
 2701              		.loc 1 617 0
 2702 002a 40F20003 		movw	r3, #:lower16:settings
 2703 002e C0F20003 		movt	r3, #:upper16:settings
 2704 0032 DB88     		ldrh	r3, [r3, #6]
 2705 0034 B3F5FA7F 		cmp	r3, #500
 2706 0038 03D0     		beq	.L94
 2707 003a B3F5FA6F 		cmp	r3, #2000
 2708 003e 05D0     		beq	.L95
 2709 0040 09E0     		b	.L93
 2710              	.L94:
 618:../LSM9DS1_Driver.c **** 	{
 619:../LSM9DS1_Driver.c **** 		case 500:
 620:../LSM9DS1_Driver.c **** 			tempRegValue |= (0x1 << 3);
 2711              		.loc 1 620 0
 2712 0042 FB79     		ldrb	r3, [r7, #7]
 2713 0044 43F00803 		orr	r3, r3, #8
 2714 0048 FB71     		strb	r3, [r7, #7]
 621:../LSM9DS1_Driver.c **** 			break;
 2715              		.loc 1 621 0
 2716 004a 04E0     		b	.L93
 2717              	.L95:
 622:../LSM9DS1_Driver.c **** 		case 2000:
 623:../LSM9DS1_Driver.c **** 			tempRegValue |= (0x3 << 3);
 2718              		.loc 1 623 0
 2719 004c FB79     		ldrb	r3, [r7, #7]
 2720 004e 43F01803 		orr	r3, r3, #24
 2721 0052 FB71     		strb	r3, [r7, #7]
 624:../LSM9DS1_Driver.c **** 			break;
 2722              		.loc 1 624 0
 2723 0054 00BF     		nop
 2724              	.L93:
 625:../LSM9DS1_Driver.c **** 		// Otherwise we'll set it to 245 dps (0x0 << 4)
 626:../LSM9DS1_Driver.c **** 	}
 627:../LSM9DS1_Driver.c **** 	tempRegValue |= (settings.gyro.bandwidth & 0x3);
 2725              		.loc 1 627 0
 2726 0056 40F20003 		movw	r3, #:lower16:settings
 2727 005a C0F20003 		movt	r3, #:upper16:settings
 2728 005e 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 2729 0060 DBB2     		uxtb	r3, r3
 2730 0062 03F00303 		and	r3, r3, #3
 2731 0066 DAB2     		uxtb	r2, r3
 2732 0068 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2733 006a 1343     		orrs	r3, r3, r2
 2734 006c DBB2     		uxtb	r3, r3
 2735 006e FB71     		strb	r3, [r7, #7]
 628:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG1_G, tempRegValue);
 2736              		.loc 1 628 0
 2737 0070 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2738 0072 4FF01000 		mov	r0, #16
 2739 0076 1946     		mov	r1, r3
 2740 0078 FFF7FEFF 		bl	xgWriteByte
 629:../LSM9DS1_Driver.c **** 
 630:../LSM9DS1_Driver.c **** 	// CTRL_REG2_G (Default value: 0x00)
 631:../LSM9DS1_Driver.c **** 	// [0][0][0][0][INT_SEL1][INT_SEL0][OUT_SEL1][OUT_SEL0]
 632:../LSM9DS1_Driver.c **** 	// INT_SEL[1:0] - INT selection configuration
 633:../LSM9DS1_Driver.c **** 	// OUT_SEL[1:0] - Out selection configuration
 634:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG2_G, 0x00);
 2741              		.loc 1 634 0
 2742 007c 4FF01100 		mov	r0, #17
 2743 0080 4FF00001 		mov	r1, #0
 2744 0084 FFF7FEFF 		bl	xgWriteByte
 635:../LSM9DS1_Driver.c **** 
 636:../LSM9DS1_Driver.c **** 	// CTRL_REG3_G (Default value: 0x00)
 637:../LSM9DS1_Driver.c **** 	// [LP_mode][HP_EN][0][0][HPCF3_G][HPCF2_G][HPCF1_G][HPCF0_G]
 638:../LSM9DS1_Driver.c **** 	// LP_mode - Low-power mode enable (0: disabled, 1: enabled)
 639:../LSM9DS1_Driver.c **** 	// HP_EN - HPF enable (0:disabled, 1: enabled)
 640:../LSM9DS1_Driver.c **** 	// HPCF_G[3:0] - HPF cutoff frequency
 641:../LSM9DS1_Driver.c **** 	tempRegValue = settings.gyro.lowPowerEnable ? (1<<7) : 0;
 2745              		.loc 1 641 0
 2746 0088 40F20003 		movw	r3, #:lower16:settings
 2747 008c C0F20003 		movt	r3, #:upper16:settings
 2748 0090 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 2749 0092 002B     		cmp	r3, #0
 2750 0094 02D0     		beq	.L96
 2751              		.loc 1 641 0 is_stmt 0 discriminator 1
 2752 0096 4FF08003 		mov	r3, #128
 2753 009a 01E0     		b	.L97
 2754              	.L96:
 2755              		.loc 1 641 0 discriminator 2
 2756 009c 4FF00003 		mov	r3, #0
 2757              	.L97:
 2758              		.loc 1 641 0 discriminator 3
 2759 00a0 FB71     		strb	r3, [r7, #7]
 642:../LSM9DS1_Driver.c **** 	if (settings.gyro.HPFEnable)
 2760              		.loc 1 642 0 is_stmt 1 discriminator 3
 2761 00a2 40F20003 		movw	r3, #:lower16:settings
 2762 00a6 C0F20003 		movt	r3, #:upper16:settings
 2763 00aa DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 2764 00ac 002B     		cmp	r3, #0
 2765 00ae 0FD0     		beq	.L98
 643:../LSM9DS1_Driver.c **** 	{
 644:../LSM9DS1_Driver.c **** 		tempRegValue |= ((1<<6) | (settings.gyro.HPFCutoff & 0x0F));
 2766              		.loc 1 644 0
 2767 00b0 40F20003 		movw	r3, #:lower16:settings
 2768 00b4 C0F20003 		movt	r3, #:upper16:settings
 2769 00b8 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 2770 00ba DBB2     		uxtb	r3, r3
 2771 00bc 03F00F03 		and	r3, r3, #15
 2772 00c0 DBB2     		uxtb	r3, r3
 2773 00c2 43F04003 		orr	r3, r3, #64
 2774 00c6 DAB2     		uxtb	r2, r3
 2775 00c8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2776 00ca 1343     		orrs	r3, r3, r2
 2777 00cc DBB2     		uxtb	r3, r3
 2778 00ce FB71     		strb	r3, [r7, #7]
 2779              	.L98:
 645:../LSM9DS1_Driver.c **** 	}
 646:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG3_G, tempRegValue);
 2780              		.loc 1 646 0
 2781 00d0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2782 00d2 4FF01200 		mov	r0, #18
 2783 00d6 1946     		mov	r1, r3
 2784 00d8 FFF7FEFF 		bl	xgWriteByte
 647:../LSM9DS1_Driver.c **** 
 648:../LSM9DS1_Driver.c **** 	// CTRL_REG4 (Default value: 0x38)
 649:../LSM9DS1_Driver.c **** 	// [0][0][Zen_G][Yen_G][Xen_G][0][LIR_XL1][4D_XL1]
 650:../LSM9DS1_Driver.c **** 	// Zen_G - Z-axis output enable (0:disable, 1:enable)
 651:../LSM9DS1_Driver.c **** 	// Yen_G - Y-axis output enable (0:disable, 1:enable)
 652:../LSM9DS1_Driver.c **** 	// Xen_G - X-axis output enable (0:disable, 1:enable)
 653:../LSM9DS1_Driver.c **** 	// LIR_XL1 - Latched interrupt (0:not latched, 1:latched)
 654:../LSM9DS1_Driver.c **** 	// 4D_XL1 - 4D option on interrupt (0:6D used, 1:4D used)
 655:../LSM9DS1_Driver.c **** 	tempRegValue = 0;
 2785              		.loc 1 655 0
 2786 00dc 4FF00003 		mov	r3, #0
 2787 00e0 FB71     		strb	r3, [r7, #7]
 656:../LSM9DS1_Driver.c **** 	if (settings.gyro.enableZ) tempRegValue |= (1<<5);
 2788              		.loc 1 656 0
 2789 00e2 40F20003 		movw	r3, #:lower16:settings
 2790 00e6 C0F20003 		movt	r3, #:upper16:settings
 2791 00ea DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
 2792 00ec 002B     		cmp	r3, #0
 2793 00ee 03D0     		beq	.L99
 2794              		.loc 1 656 0 is_stmt 0 discriminator 1
 2795 00f0 FB79     		ldrb	r3, [r7, #7]
 2796 00f2 43F02003 		orr	r3, r3, #32
 2797 00f6 FB71     		strb	r3, [r7, #7]
 2798              	.L99:
 657:../LSM9DS1_Driver.c **** 	if (settings.gyro.enableY) tempRegValue |= (1<<4);
 2799              		.loc 1 657 0 is_stmt 1
 2800 00f8 40F20003 		movw	r3, #:lower16:settings
 2801 00fc C0F20003 		movt	r3, #:upper16:settings
 2802 0100 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
 2803 0102 002B     		cmp	r3, #0
 2804 0104 03D0     		beq	.L100
 2805              		.loc 1 657 0 is_stmt 0 discriminator 1
 2806 0106 FB79     		ldrb	r3, [r7, #7]
 2807 0108 43F01003 		orr	r3, r3, #16
 2808 010c FB71     		strb	r3, [r7, #7]
 2809              	.L100:
 658:../LSM9DS1_Driver.c **** 	if (settings.gyro.enableX) tempRegValue |= (1<<3);
 2810              		.loc 1 658 0 is_stmt 1
 2811 010e 40F20003 		movw	r3, #:lower16:settings
 2812 0112 C0F20003 		movt	r3, #:upper16:settings
 2813 0116 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
 2814 0118 002B     		cmp	r3, #0
 2815 011a 03D0     		beq	.L101
 2816              		.loc 1 658 0 is_stmt 0 discriminator 1
 2817 011c FB79     		ldrb	r3, [r7, #7]
 2818 011e 43F00803 		orr	r3, r3, #8
 2819 0122 FB71     		strb	r3, [r7, #7]
 2820              	.L101:
 659:../LSM9DS1_Driver.c **** 	if (settings.gyro.latchInterrupt) tempRegValue |= (1<<1);
 2821              		.loc 1 659 0 is_stmt 1
 2822 0124 40F20003 		movw	r3, #:lower16:settings
 2823 0128 C0F20003 		movt	r3, #:upper16:settings
 2824 012c 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 2825 012e 002B     		cmp	r3, #0
 2826 0130 03D0     		beq	.L102
 2827              		.loc 1 659 0 is_stmt 0 discriminator 1
 2828 0132 FB79     		ldrb	r3, [r7, #7]
 2829 0134 43F00203 		orr	r3, r3, #2
 2830 0138 FB71     		strb	r3, [r7, #7]
 2831              	.L102:
 660:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG4, tempRegValue);
 2832              		.loc 1 660 0 is_stmt 1
 2833 013a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2834 013c 4FF01E00 		mov	r0, #30
 2835 0140 1946     		mov	r1, r3
 2836 0142 FFF7FEFF 		bl	xgWriteByte
 661:../LSM9DS1_Driver.c **** 
 662:../LSM9DS1_Driver.c **** 	// ORIENT_CFG_G (Default value: 0x00)
 663:../LSM9DS1_Driver.c **** 	// [0][0][SignX_G][SignY_G][SignZ_G][Orient_2][Orient_1][Orient_0]
 664:../LSM9DS1_Driver.c **** 	// SignX_G - Pitch axis (X) angular rate sign (0: positive, 1: negative)
 665:../LSM9DS1_Driver.c **** 	// Orient [2:0] - Directional user orientation selection
 666:../LSM9DS1_Driver.c **** 	tempRegValue = 0;
 2837              		.loc 1 666 0
 2838 0146 4FF00003 		mov	r3, #0
 2839 014a FB71     		strb	r3, [r7, #7]
 667:../LSM9DS1_Driver.c **** 	if (settings.gyro.flipX) tempRegValue |= (1<<5);
 2840              		.loc 1 667 0
 2841 014c 40F20003 		movw	r3, #:lower16:settings
 2842 0150 C0F20003 		movt	r3, #:upper16:settings
 2843 0154 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 2844 0156 002B     		cmp	r3, #0
 2845 0158 03D0     		beq	.L103
 2846              		.loc 1 667 0 is_stmt 0 discriminator 1
 2847 015a FB79     		ldrb	r3, [r7, #7]
 2848 015c 43F02003 		orr	r3, r3, #32
 2849 0160 FB71     		strb	r3, [r7, #7]
 2850              	.L103:
 668:../LSM9DS1_Driver.c **** 	if (settings.gyro.flipY) tempRegValue |= (1<<4);
 2851              		.loc 1 668 0 is_stmt 1
 2852 0162 40F20003 		movw	r3, #:lower16:settings
 2853 0166 C0F20003 		movt	r3, #:upper16:settings
 2854 016a 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 2855 016c 002B     		cmp	r3, #0
 2856 016e 03D0     		beq	.L104
 2857              		.loc 1 668 0 is_stmt 0 discriminator 1
 2858 0170 FB79     		ldrb	r3, [r7, #7]
 2859 0172 43F01003 		orr	r3, r3, #16
 2860 0176 FB71     		strb	r3, [r7, #7]
 2861              	.L104:
 669:../LSM9DS1_Driver.c **** 	if (settings.gyro.flipZ) tempRegValue |= (1<<3);
 2862              		.loc 1 669 0 is_stmt 1
 2863 0178 40F20003 		movw	r3, #:lower16:settings
 2864 017c C0F20003 		movt	r3, #:upper16:settings
 2865 0180 DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
 2866 0182 002B     		cmp	r3, #0
 2867 0184 03D0     		beq	.L105
 2868              		.loc 1 669 0 is_stmt 0 discriminator 1
 2869 0186 FB79     		ldrb	r3, [r7, #7]
 2870 0188 43F00803 		orr	r3, r3, #8
 2871 018c FB71     		strb	r3, [r7, #7]
 2872              	.L105:
 670:../LSM9DS1_Driver.c **** 	xgWriteByte(ORIENT_CFG_G, tempRegValue);
 2873              		.loc 1 670 0 is_stmt 1
 2874 018e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2875 0190 4FF01300 		mov	r0, #19
 2876 0194 1946     		mov	r1, r3
 2877 0196 FFF7FEFF 		bl	xgWriteByte
 671:../LSM9DS1_Driver.c **** }
 2878              		.loc 1 671 0
 2879 019a 07F10807 		add	r7, r7, #8
 2880 019e BD46     		mov	sp, r7
 2881 01a0 80BD     		pop	{r7, pc}
 2882              		.cfi_endproc
 2883              	.LFE146:
 2885 01a2 00BF     		.section	.text.xgWriteByte,"ax",%progbits
 2886              		.align	2
 2887              		.global	xgWriteByte
 2888              		.thumb
 2889              		.thumb_func
 2891              	xgWriteByte:
 2892              	.LFB147:
 672:../LSM9DS1_Driver.c **** 
 673:../LSM9DS1_Driver.c **** 
 674:../LSM9DS1_Driver.c **** void xgWriteByte(uint8_t subAddress, uint8_t data)
 675:../LSM9DS1_Driver.c **** {
 2893              		.loc 1 675 0
 2894              		.cfi_startproc
 2895              		@ args = 0, pretend = 0, frame = 8
 2896              		@ frame_needed = 1, uses_anonymous_args = 0
 2897 0000 80B5     		push	{r7, lr}
 2898              	.LCFI79:
 2899              		.cfi_def_cfa_offset 8
 2900              		.cfi_offset 7, -8
 2901              		.cfi_offset 14, -4
 2902 0002 82B0     		sub	sp, sp, #8
 2903              	.LCFI80:
 2904              		.cfi_def_cfa_offset 16
 2905 0004 00AF     		add	r7, sp, #0
 2906              	.LCFI81:
 2907              		.cfi_def_cfa_register 7
 2908 0006 0246     		mov	r2, r0
 2909 0008 0B46     		mov	r3, r1
 2910 000a FA71     		strb	r2, [r7, #7]
 2911 000c BB71     		strb	r3, [r7, #6]
 676:../LSM9DS1_Driver.c **** 	// Whether we're using I2C or SPI, write a byte using the
 677:../LSM9DS1_Driver.c **** 	// gyro-specific I2C address or SPI CS pin.
 678:../LSM9DS1_Driver.c **** 	if (settings.device.commInterface == IMU_MODE_I2C)
 2912              		.loc 1 678 0
 2913 000e 40F20003 		movw	r3, #:lower16:settings
 2914 0012 C0F20003 		movt	r3, #:upper16:settings
 2915 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2916 0018 012B     		cmp	r3, #1
 2917 001a 0BD1     		bne	.L106
 679:../LSM9DS1_Driver.c **** 	{
 680:../LSM9DS1_Driver.c **** 		I2CwriteByte(_xgAddress, subAddress, data);
 2918              		.loc 1 680 0
 2919 001c 40F20003 		movw	r3, #:lower16:_xgAddress
 2920 0020 C0F20003 		movt	r3, #:upper16:_xgAddress
 2921 0024 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 2922 0026 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2923 0028 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2924 002a 0846     		mov	r0, r1
 2925 002c 1146     		mov	r1, r2
 2926 002e 1A46     		mov	r2, r3
 2927 0030 FFF7FEFF 		bl	I2CwriteByte
 2928              	.L106:
 681:../LSM9DS1_Driver.c **** 	}
 682:../LSM9DS1_Driver.c **** }
 2929              		.loc 1 682 0
 2930 0034 07F10807 		add	r7, r7, #8
 2931 0038 BD46     		mov	sp, r7
 2932 003a 80BD     		pop	{r7, pc}
 2933              		.cfi_endproc
 2934              	.LFE147:
 2936              		.section	.text.I2CwriteByte,"ax",%progbits
 2937              		.align	2
 2938              		.global	I2CwriteByte
 2939              		.thumb
 2940              		.thumb_func
 2942              	I2CwriteByte:
 2943              	.LFB148:
 683:../LSM9DS1_Driver.c **** 
 684:../LSM9DS1_Driver.c **** void I2CwriteByte(uint8_t address, uint8_t subAddress, uint8_t data)
 685:../LSM9DS1_Driver.c **** {
 2944              		.loc 1 685 0
 2945              		.cfi_startproc
 2946              		@ args = 0, pretend = 0, frame = 24
 2947              		@ frame_needed = 1, uses_anonymous_args = 0
 2948 0000 80B5     		push	{r7, lr}
 2949              	.LCFI82:
 2950              		.cfi_def_cfa_offset 8
 2951              		.cfi_offset 7, -8
 2952              		.cfi_offset 14, -4
 2953 0002 86B0     		sub	sp, sp, #24
 2954              	.LCFI83:
 2955              		.cfi_def_cfa_offset 32
 2956 0004 00AF     		add	r7, sp, #0
 2957              	.LCFI84:
 2958              		.cfi_def_cfa_register 7
 2959 0006 1346     		mov	r3, r2
 2960 0008 0246     		mov	r2, r0
 2961 000a FA71     		strb	r2, [r7, #7]
 2962 000c 0A46     		mov	r2, r1
 2963 000e BA71     		strb	r2, [r7, #6]
 2964 0010 7B71     		strb	r3, [r7, #5]
 686:../LSM9DS1_Driver.c **** 
 687:../LSM9DS1_Driver.c **** 		uint8_t c = (address<<1);
 2965              		.loc 1 687 0
 2966 0012 FB79     		ldrb	r3, [r7, #7]
 2967 0014 4FEA4303 		lsl	r3, r3, #1
 2968 0018 FB75     		strb	r3, [r7, #23]
 688:../LSM9DS1_Driver.c **** 		I2C001_DataType data1;
 689:../LSM9DS1_Driver.c **** 		data1.Data1.TDF_Type = I2C_TDF_MStart;
 2969              		.loc 1 689 0
 2970 001a 4FF00403 		mov	r3, #4
 2971 001e 7B75     		strb	r3, [r7, #21]
 690:../LSM9DS1_Driver.c **** 		data1.Data1.Data = (c | I2C_WRITE);
 2972              		.loc 1 690 0
 2973 0020 FB7D     		ldrb	r3, [r7, #23]
 2974 0022 3B75     		strb	r3, [r7, #20]
 691:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data1));
 2975              		.loc 1 691 0
 2976 0024 00BF     		nop
 2977              	.L109:
 2978              		.loc 1 691 0 is_stmt 0 discriminator 1
 2979 0026 07F11403 		add	r3, r7, #20
 2980 002a 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 2981 002e C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 2982 0032 1946     		mov	r1, r3
 2983 0034 FFF7FEFF 		bl	I2C001_WriteData
 2984 0038 0346     		mov	r3, r0
 2985 003a 002B     		cmp	r3, #0
 2986 003c F3D0     		beq	.L109
 692:../LSM9DS1_Driver.c **** 
 693:../LSM9DS1_Driver.c **** 		delay(DELAY);
 2987              		.loc 1 693 0 is_stmt 1
 2988 003e 42F6E060 		movw	r0, #12000
 2989 0042 FFF7FEFF 		bl	delay
 694:../LSM9DS1_Driver.c **** 
 695:../LSM9DS1_Driver.c **** 		I2C001_DataType data2;
 696:../LSM9DS1_Driver.c **** 		data2.Data1.TDF_Type = I2C_TDF_MTxData;
 2990              		.loc 1 696 0
 2991 0046 4FF00003 		mov	r3, #0
 2992 004a 7B74     		strb	r3, [r7, #17]
 697:../LSM9DS1_Driver.c **** 		data2.Data1.Data = subAddress;
 2993              		.loc 1 697 0
 2994 004c BB79     		ldrb	r3, [r7, #6]
 2995 004e 3B74     		strb	r3, [r7, #16]
 698:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data2));
 2996              		.loc 1 698 0
 2997 0050 00BF     		nop
 2998              	.L110:
 2999              		.loc 1 698 0 is_stmt 0 discriminator 1
 3000 0052 07F11003 		add	r3, r7, #16
 3001 0056 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 3002 005a C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 3003 005e 1946     		mov	r1, r3
 3004 0060 FFF7FEFF 		bl	I2C001_WriteData
 3005 0064 0346     		mov	r3, r0
 3006 0066 002B     		cmp	r3, #0
 3007 0068 F3D0     		beq	.L110
 699:../LSM9DS1_Driver.c **** 
 700:../LSM9DS1_Driver.c **** 		delay(DELAY);
 3008              		.loc 1 700 0 is_stmt 1
 3009 006a 42F6E060 		movw	r0, #12000
 3010 006e FFF7FEFF 		bl	delay
 701:../LSM9DS1_Driver.c **** 
 702:../LSM9DS1_Driver.c **** 		I2C001_DataType data3;
 703:../LSM9DS1_Driver.c **** 		data3.Data1.TDF_Type = I2C_TDF_MTxData;
 3011              		.loc 1 703 0
 3012 0072 4FF00003 		mov	r3, #0
 3013 0076 7B73     		strb	r3, [r7, #13]
 704:../LSM9DS1_Driver.c **** 		data3.Data1.Data = data;
 3014              		.loc 1 704 0
 3015 0078 7B79     		ldrb	r3, [r7, #5]
 3016 007a 3B73     		strb	r3, [r7, #12]
 705:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data3));
 3017              		.loc 1 705 0
 3018 007c 00BF     		nop
 3019              	.L111:
 3020              		.loc 1 705 0 is_stmt 0 discriminator 1
 3021 007e 07F10C03 		add	r3, r7, #12
 3022 0082 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 3023 0086 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 3024 008a 1946     		mov	r1, r3
 3025 008c FFF7FEFF 		bl	I2C001_WriteData
 3026 0090 0346     		mov	r3, r0
 3027 0092 002B     		cmp	r3, #0
 3028 0094 F3D0     		beq	.L111
 706:../LSM9DS1_Driver.c **** 
 707:../LSM9DS1_Driver.c **** 		delay(DELAY);
 3029              		.loc 1 707 0 is_stmt 1
 3030 0096 42F6E060 		movw	r0, #12000
 3031 009a FFF7FEFF 		bl	delay
 708:../LSM9DS1_Driver.c **** 
 709:../LSM9DS1_Driver.c **** 		I2C001_DataType data4;
 710:../LSM9DS1_Driver.c **** 		data4.Data1.TDF_Type = I2C_TDF_MStop;
 3032              		.loc 1 710 0
 3033 009e 4FF00603 		mov	r3, #6
 3034 00a2 7B72     		strb	r3, [r7, #9]
 711:../LSM9DS1_Driver.c **** 		data4.Data1.Data = ubyteFF;
 3035              		.loc 1 711 0
 3036 00a4 4FF0FF03 		mov	r3, #255
 3037 00a8 3B72     		strb	r3, [r7, #8]
 712:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data4));
 3038              		.loc 1 712 0
 3039 00aa 00BF     		nop
 3040              	.L112:
 3041              		.loc 1 712 0 is_stmt 0 discriminator 1
 3042 00ac 07F10803 		add	r3, r7, #8
 3043 00b0 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 3044 00b4 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 3045 00b8 1946     		mov	r1, r3
 3046 00ba FFF7FEFF 		bl	I2C001_WriteData
 3047 00be 0346     		mov	r3, r0
 3048 00c0 002B     		cmp	r3, #0
 3049 00c2 F3D0     		beq	.L112
 713:../LSM9DS1_Driver.c **** 
 714:../LSM9DS1_Driver.c **** 		delay(DELAY);
 3050              		.loc 1 714 0 is_stmt 1
 3051 00c4 42F6E060 		movw	r0, #12000
 3052 00c8 FFF7FEFF 		bl	delay
 715:../LSM9DS1_Driver.c **** }
 3053              		.loc 1 715 0
 3054 00cc 07F11807 		add	r7, r7, #24
 3055 00d0 BD46     		mov	sp, r7
 3056 00d2 80BD     		pop	{r7, pc}
 3057              		.cfi_endproc
 3058              	.LFE148:
 3060              		.section	.text.initAccel,"ax",%progbits
 3061              		.align	2
 3062              		.global	initAccel
 3063              		.thumb
 3064              		.thumb_func
 3066              	initAccel:
 3067              	.LFB149:
 716:../LSM9DS1_Driver.c **** 
 717:../LSM9DS1_Driver.c **** void initAccel(void)
 718:../LSM9DS1_Driver.c **** {
 3068              		.loc 1 718 0
 3069              		.cfi_startproc
 3070              		@ args = 0, pretend = 0, frame = 8
 3071              		@ frame_needed = 1, uses_anonymous_args = 0
 3072 0000 80B5     		push	{r7, lr}
 3073              	.LCFI85:
 3074              		.cfi_def_cfa_offset 8
 3075              		.cfi_offset 7, -8
 3076              		.cfi_offset 14, -4
 3077 0002 82B0     		sub	sp, sp, #8
 3078              	.LCFI86:
 3079              		.cfi_def_cfa_offset 16
 3080 0004 00AF     		add	r7, sp, #0
 3081              	.LCFI87:
 3082              		.cfi_def_cfa_register 7
 719:../LSM9DS1_Driver.c **** 	uint8_t tempRegValue = 0;
 3083              		.loc 1 719 0
 3084 0006 4FF00003 		mov	r3, #0
 3085 000a FB71     		strb	r3, [r7, #7]
 720:../LSM9DS1_Driver.c **** 
 721:../LSM9DS1_Driver.c **** 	//	CTRL_REG5_XL (0x1F) (Default value: 0x38)
 722:../LSM9DS1_Driver.c **** 	//	[DEC_1][DEC_0][Zen_XL][Yen_XL][Zen_XL][0][0][0]
 723:../LSM9DS1_Driver.c **** 	//	DEC[0:1] - Decimation of accel data on OUT REG and FIFO.
 724:../LSM9DS1_Driver.c **** 	//		00: None, 01: 2 samples, 10: 4 samples 11: 8 samples
 725:../LSM9DS1_Driver.c **** 	//	Zen_XL - Z-axis output enabled
 726:../LSM9DS1_Driver.c **** 	//	Yen_XL - Y-axis output enabled
 727:../LSM9DS1_Driver.c **** 	//	Xen_XL - X-axis output enabled
 728:../LSM9DS1_Driver.c **** 	if (settings.accel.enableZ) tempRegValue |= (1<<5);
 3086              		.loc 1 728 0
 3087 000c 40F20003 		movw	r3, #:lower16:settings
 3088 0010 C0F20003 		movt	r3, #:upper16:settings
 3089 0014 DB7E     		ldrb	r3, [r3, #27]	@ zero_extendqisi2
 3090 0016 002B     		cmp	r3, #0
 3091 0018 03D0     		beq	.L114
 3092              		.loc 1 728 0 is_stmt 0 discriminator 1
 3093 001a FB79     		ldrb	r3, [r7, #7]
 3094 001c 43F02003 		orr	r3, r3, #32
 3095 0020 FB71     		strb	r3, [r7, #7]
 3096              	.L114:
 729:../LSM9DS1_Driver.c **** 	if (settings.accel.enableY) tempRegValue |= (1<<4);
 3097              		.loc 1 729 0 is_stmt 1
 3098 0022 40F20003 		movw	r3, #:lower16:settings
 3099 0026 C0F20003 		movt	r3, #:upper16:settings
 3100 002a 9B7E     		ldrb	r3, [r3, #26]	@ zero_extendqisi2
 3101 002c 002B     		cmp	r3, #0
 3102 002e 03D0     		beq	.L115
 3103              		.loc 1 729 0 is_stmt 0 discriminator 1
 3104 0030 FB79     		ldrb	r3, [r7, #7]
 3105 0032 43F01003 		orr	r3, r3, #16
 3106 0036 FB71     		strb	r3, [r7, #7]
 3107              	.L115:
 730:../LSM9DS1_Driver.c **** 	if (settings.accel.enableX) tempRegValue |= (1<<3);
 3108              		.loc 1 730 0 is_stmt 1
 3109 0038 40F20003 		movw	r3, #:lower16:settings
 3110 003c C0F20003 		movt	r3, #:upper16:settings
 3111 0040 5B7E     		ldrb	r3, [r3, #25]	@ zero_extendqisi2
 3112 0042 002B     		cmp	r3, #0
 3113 0044 03D0     		beq	.L116
 3114              		.loc 1 730 0 is_stmt 0 discriminator 1
 3115 0046 FB79     		ldrb	r3, [r7, #7]
 3116 0048 43F00803 		orr	r3, r3, #8
 3117 004c FB71     		strb	r3, [r7, #7]
 3118              	.L116:
 731:../LSM9DS1_Driver.c **** 
 732:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG5_XL, tempRegValue);
 3119              		.loc 1 732 0 is_stmt 1
 3120 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3121 0050 4FF01F00 		mov	r0, #31
 3122 0054 1946     		mov	r1, r3
 3123 0056 FFF7FEFF 		bl	xgWriteByte
 733:../LSM9DS1_Driver.c **** 
 734:../LSM9DS1_Driver.c **** 	// CTRL_REG6_XL (0x20) (Default value: 0x00)
 735:../LSM9DS1_Driver.c **** 	// [ODR_XL2][ODR_XL1][ODR_XL0][FS1_XL][FS0_XL][BW_SCAL_ODR][BW_XL1][BW_XL0]
 736:../LSM9DS1_Driver.c **** 	// ODR_XL[2:0] - Output data rate & power mode selection
 737:../LSM9DS1_Driver.c **** 	// FS_XL[1:0] - Full-scale selection
 738:../LSM9DS1_Driver.c **** 	// BW_SCAL_ODR - Bandwidth selection
 739:../LSM9DS1_Driver.c **** 	// BW_XL[1:0] - Anti-aliasing filter bandwidth selection
 740:../LSM9DS1_Driver.c **** 	tempRegValue = 0;
 3124              		.loc 1 740 0
 3125 005a 4FF00003 		mov	r3, #0
 3126 005e FB71     		strb	r3, [r7, #7]
 741:../LSM9DS1_Driver.c **** 	// To disable the accel, set the sampleRate bits to 0.
 742:../LSM9DS1_Driver.c **** 	if (settings.accel.enabled)
 3127              		.loc 1 742 0
 3128 0060 40F20003 		movw	r3, #:lower16:settings
 3129 0064 C0F20003 		movt	r3, #:upper16:settings
 3130 0068 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 3131 006a 002B     		cmp	r3, #0
 3132 006c 0BD0     		beq	.L117
 743:../LSM9DS1_Driver.c **** 	{
 744:../LSM9DS1_Driver.c **** 		tempRegValue |= ((settings.accel.sampleRate & 0x07) << 5);
 3133              		.loc 1 744 0
 3134 006e 40F20003 		movw	r3, #:lower16:settings
 3135 0072 C0F20003 		movt	r3, #:upper16:settings
 3136 0076 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 3137 0078 4FEA4313 		lsl	r3, r3, #5
 3138 007c DAB2     		uxtb	r2, r3
 3139 007e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3140 0080 1343     		orrs	r3, r3, r2
 3141 0082 DBB2     		uxtb	r3, r3
 3142 0084 FB71     		strb	r3, [r7, #7]
 3143              	.L117:
 745:../LSM9DS1_Driver.c **** 	}
 746:../LSM9DS1_Driver.c **** 	switch (settings.accel.scale)
 3144              		.loc 1 746 0
 3145 0086 40F20003 		movw	r3, #:lower16:settings
 3146 008a C0F20003 		movt	r3, #:upper16:settings
 3147 008e DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 3148 0090 082B     		cmp	r3, #8
 3149 0092 08D0     		beq	.L120
 3150 0094 102B     		cmp	r3, #16
 3151 0096 0BD0     		beq	.L121
 3152 0098 042B     		cmp	r3, #4
 3153 009a 0ED1     		bne	.L118
 3154              	.L119:
 747:../LSM9DS1_Driver.c **** 	{
 748:../LSM9DS1_Driver.c **** 		case 4:
 749:../LSM9DS1_Driver.c **** 			tempRegValue |= (0x2 << 3);
 3155              		.loc 1 749 0
 3156 009c FB79     		ldrb	r3, [r7, #7]
 3157 009e 43F01003 		orr	r3, r3, #16
 3158 00a2 FB71     		strb	r3, [r7, #7]
 750:../LSM9DS1_Driver.c **** 			break;
 3159              		.loc 1 750 0
 3160 00a4 09E0     		b	.L118
 3161              	.L120:
 751:../LSM9DS1_Driver.c **** 		case 8:
 752:../LSM9DS1_Driver.c **** 			tempRegValue |= (0x3 << 3);
 3162              		.loc 1 752 0
 3163 00a6 FB79     		ldrb	r3, [r7, #7]
 3164 00a8 43F01803 		orr	r3, r3, #24
 3165 00ac FB71     		strb	r3, [r7, #7]
 753:../LSM9DS1_Driver.c **** 			break;
 3166              		.loc 1 753 0
 3167 00ae 04E0     		b	.L118
 3168              	.L121:
 754:../LSM9DS1_Driver.c **** 		case 16:
 755:../LSM9DS1_Driver.c **** 			tempRegValue |= (0x1 << 3);
 3169              		.loc 1 755 0
 3170 00b0 FB79     		ldrb	r3, [r7, #7]
 3171 00b2 43F00803 		orr	r3, r3, #8
 3172 00b6 FB71     		strb	r3, [r7, #7]
 756:../LSM9DS1_Driver.c **** 			break;
 3173              		.loc 1 756 0
 3174 00b8 00BF     		nop
 3175              	.L118:
 757:../LSM9DS1_Driver.c **** 		// Otherwise it'll be set to 2g (0x0 << 3)
 758:../LSM9DS1_Driver.c **** 	}
 759:../LSM9DS1_Driver.c **** 	if (settings.accel.bandwidth >= 0)
 3176              		.loc 1 759 0
 3177 00ba 40F20003 		movw	r3, #:lower16:settings
 3178 00be C0F20003 		movt	r3, #:upper16:settings
 3179 00c2 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 3180 00c4 5BB2     		sxtb	r3, r3
 3181 00c6 002B     		cmp	r3, #0
 3182 00c8 0FDB     		blt	.L122
 760:../LSM9DS1_Driver.c **** 	{
 761:../LSM9DS1_Driver.c **** 		tempRegValue |= (1<<2); // Set BW_SCAL_ODR
 3183              		.loc 1 761 0
 3184 00ca FB79     		ldrb	r3, [r7, #7]
 3185 00cc 43F00403 		orr	r3, r3, #4
 3186 00d0 FB71     		strb	r3, [r7, #7]
 762:../LSM9DS1_Driver.c **** 		tempRegValue |= (settings.accel.bandwidth & 0x03);
 3187              		.loc 1 762 0
 3188 00d2 40F20003 		movw	r3, #:lower16:settings
 3189 00d6 C0F20003 		movt	r3, #:upper16:settings
 3190 00da 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 3191 00dc 03F00303 		and	r3, r3, #3
 3192 00e0 DAB2     		uxtb	r2, r3
 3193 00e2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3194 00e4 1343     		orrs	r3, r3, r2
 3195 00e6 DBB2     		uxtb	r3, r3
 3196 00e8 FB71     		strb	r3, [r7, #7]
 3197              	.L122:
 763:../LSM9DS1_Driver.c **** 	}
 764:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG6_XL, tempRegValue);
 3198              		.loc 1 764 0
 3199 00ea FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3200 00ec 4FF02000 		mov	r0, #32
 3201 00f0 1946     		mov	r1, r3
 3202 00f2 FFF7FEFF 		bl	xgWriteByte
 765:../LSM9DS1_Driver.c **** 
 766:../LSM9DS1_Driver.c **** 	// CTRL_REG7_XL (0x21) (Default value: 0x00)
 767:../LSM9DS1_Driver.c **** 	// [HR][DCF1][DCF0][0][0][FDS][0][HPIS1]
 768:../LSM9DS1_Driver.c **** 	// HR - High resolution mode (0: disable, 1: enable)
 769:../LSM9DS1_Driver.c **** 	// DCF[1:0] - Digital filter cutoff frequency
 770:../LSM9DS1_Driver.c **** 	// FDS - Filtered data selection
 771:../LSM9DS1_Driver.c **** 	// HPIS1 - HPF enabled for interrupt function
 772:../LSM9DS1_Driver.c **** 	tempRegValue = 0;
 3203              		.loc 1 772 0
 3204 00f6 4FF00003 		mov	r3, #0
 3205 00fa FB71     		strb	r3, [r7, #7]
 773:../LSM9DS1_Driver.c **** 	if (settings.accel.highResEnable)
 3206              		.loc 1 773 0
 3207 00fc 40F20003 		movw	r3, #:lower16:settings
 3208 0100 C0F20003 		movt	r3, #:upper16:settings
 3209 0104 5B7F     		ldrb	r3, [r3, #29]	@ zero_extendqisi2
 3210 0106 002B     		cmp	r3, #0
 3211 0108 11D0     		beq	.L123
 774:../LSM9DS1_Driver.c **** 	{
 775:../LSM9DS1_Driver.c **** 		tempRegValue |= (1<<7); // Set HR bit
 3212              		.loc 1 775 0
 3213 010a FB79     		ldrb	r3, [r7, #7]
 3214 010c 63F07F03 		orn	r3, r3, #127
 3215 0110 FB71     		strb	r3, [r7, #7]
 776:../LSM9DS1_Driver.c **** 		tempRegValue |= (settings.accel.highResBandwidth & 0x3) << 5;
 3216              		.loc 1 776 0
 3217 0112 40F20003 		movw	r3, #:lower16:settings
 3218 0116 C0F20003 		movt	r3, #:upper16:settings
 3219 011a 9B7F     		ldrb	r3, [r3, #30]	@ zero_extendqisi2
 3220 011c 03F00303 		and	r3, r3, #3
 3221 0120 4FEA4313 		lsl	r3, r3, #5
 3222 0124 DAB2     		uxtb	r2, r3
 3223 0126 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3224 0128 1343     		orrs	r3, r3, r2
 3225 012a DBB2     		uxtb	r3, r3
 3226 012c FB71     		strb	r3, [r7, #7]
 3227              	.L123:
 777:../LSM9DS1_Driver.c **** 	}
 778:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG7_XL, tempRegValue);
 3228              		.loc 1 778 0
 3229 012e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3230 0130 4FF02100 		mov	r0, #33
 3231 0134 1946     		mov	r1, r3
 3232 0136 FFF7FEFF 		bl	xgWriteByte
 779:../LSM9DS1_Driver.c **** }
 3233              		.loc 1 779 0
 3234 013a 07F10807 		add	r7, r7, #8
 3235 013e BD46     		mov	sp, r7
 3236 0140 80BD     		pop	{r7, pc}
 3237              		.cfi_endproc
 3238              	.LFE149:
 3240 0142 00BF     		.section	.text.initMag,"ax",%progbits
 3241              		.align	2
 3242              		.global	initMag
 3243              		.thumb
 3244              		.thumb_func
 3246              	initMag:
 3247              	.LFB150:
 780:../LSM9DS1_Driver.c **** 
 781:../LSM9DS1_Driver.c **** void initMag(void)
 782:../LSM9DS1_Driver.c **** {
 3248              		.loc 1 782 0
 3249              		.cfi_startproc
 3250              		@ args = 0, pretend = 0, frame = 8
 3251              		@ frame_needed = 1, uses_anonymous_args = 0
 3252 0000 80B5     		push	{r7, lr}
 3253              	.LCFI88:
 3254              		.cfi_def_cfa_offset 8
 3255              		.cfi_offset 7, -8
 3256              		.cfi_offset 14, -4
 3257 0002 82B0     		sub	sp, sp, #8
 3258              	.LCFI89:
 3259              		.cfi_def_cfa_offset 16
 3260 0004 00AF     		add	r7, sp, #0
 3261              	.LCFI90:
 3262              		.cfi_def_cfa_register 7
 783:../LSM9DS1_Driver.c **** 	uint8_t tempRegValue = 0;
 3263              		.loc 1 783 0
 3264 0006 4FF00003 		mov	r3, #0
 3265 000a FB71     		strb	r3, [r7, #7]
 784:../LSM9DS1_Driver.c **** 
 785:../LSM9DS1_Driver.c **** 	// CTRL_REG1_M (Default value: 0x10)
 786:../LSM9DS1_Driver.c **** 	// [TEMP_COMP][OM1][OM0][DO2][DO1][DO0][0][ST]
 787:../LSM9DS1_Driver.c **** 	// TEMP_COMP - Temperature compensation
 788:../LSM9DS1_Driver.c **** 	// OM[1:0] - X & Y axes op mode selection
 789:../LSM9DS1_Driver.c **** 	//	00:low-power, 01:medium performance
 790:../LSM9DS1_Driver.c **** 	//	10: high performance, 11:ultra-high performance
 791:../LSM9DS1_Driver.c **** 	// DO[2:0] - Output data rate selection
 792:../LSM9DS1_Driver.c **** 	// ST - Self-test enable
 793:../LSM9DS1_Driver.c **** 	if (settings.mag.tempCompensationEnable) tempRegValue |= (1<<7);
 3266              		.loc 1 793 0
 3267 000c 40F20003 		movw	r3, #:lower16:settings
 3268 0010 C0F20003 		movt	r3, #:upper16:settings
 3269 0014 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 3270 0018 002B     		cmp	r3, #0
 3271 001a 03D0     		beq	.L125
 3272              		.loc 1 793 0 is_stmt 0 discriminator 1
 3273 001c FB79     		ldrb	r3, [r7, #7]
 3274 001e 63F07F03 		orn	r3, r3, #127
 3275 0022 FB71     		strb	r3, [r7, #7]
 3276              	.L125:
 794:../LSM9DS1_Driver.c **** 	tempRegValue |= (settings.mag.XYPerformance & 0x3) << 5;
 3277              		.loc 1 794 0 is_stmt 1
 3278 0024 40F20003 		movw	r3, #:lower16:settings
 3279 0028 C0F20003 		movt	r3, #:upper16:settings
 3280 002c 93F82330 		ldrb	r3, [r3, #35]	@ zero_extendqisi2
 3281 0030 03F00303 		and	r3, r3, #3
 3282 0034 4FEA4313 		lsl	r3, r3, #5
 3283 0038 DAB2     		uxtb	r2, r3
 3284 003a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3285 003c 1343     		orrs	r3, r3, r2
 3286 003e DBB2     		uxtb	r3, r3
 3287 0040 FB71     		strb	r3, [r7, #7]
 795:../LSM9DS1_Driver.c **** 	tempRegValue |= (settings.mag.sampleRate & 0x7) << 2;
 3288              		.loc 1 795 0
 3289 0042 40F20003 		movw	r3, #:lower16:settings
 3290 0046 C0F20003 		movt	r3, #:upper16:settings
 3291 004a 93F82130 		ldrb	r3, [r3, #33]	@ zero_extendqisi2
 3292 004e 03F00703 		and	r3, r3, #7
 3293 0052 4FEA8303 		lsl	r3, r3, #2
 3294 0056 DAB2     		uxtb	r2, r3
 3295 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3296 005a 1343     		orrs	r3, r3, r2
 3297 005c DBB2     		uxtb	r3, r3
 3298 005e FB71     		strb	r3, [r7, #7]
 796:../LSM9DS1_Driver.c **** 	mWriteByte(CTRL_REG1_M, tempRegValue);
 3299              		.loc 1 796 0
 3300 0060 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3301 0062 4FF02000 		mov	r0, #32
 3302 0066 1946     		mov	r1, r3
 3303 0068 FFF7FEFF 		bl	mWriteByte
 797:../LSM9DS1_Driver.c **** 
 798:../LSM9DS1_Driver.c **** 	// CTRL_REG2_M (Default value 0x00)
 799:../LSM9DS1_Driver.c **** 	// [0][FS1][FS0][0][REBOOT][SOFT_RST][0][0]
 800:../LSM9DS1_Driver.c **** 	// FS[1:0] - Full-scale configuration
 801:../LSM9DS1_Driver.c **** 	// REBOOT - Reboot memory content (0:normal, 1:reboot)
 802:../LSM9DS1_Driver.c **** 	// SOFT_RST - Reset config and user registers (0:default, 1:reset)
 803:../LSM9DS1_Driver.c **** 	tempRegValue = 0;
 3304              		.loc 1 803 0
 3305 006c 4FF00003 		mov	r3, #0
 3306 0070 FB71     		strb	r3, [r7, #7]
 804:../LSM9DS1_Driver.c **** 	switch (settings.mag.scale)
 3307              		.loc 1 804 0
 3308 0072 40F20003 		movw	r3, #:lower16:settings
 3309 0076 C0F20003 		movt	r3, #:upper16:settings
 3310 007a 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 3311 007e 0C2B     		cmp	r3, #12
 3312 0080 08D0     		beq	.L128
 3313 0082 102B     		cmp	r3, #16
 3314 0084 0BD0     		beq	.L129
 3315 0086 082B     		cmp	r3, #8
 3316 0088 0ED1     		bne	.L126
 3317              	.L127:
 805:../LSM9DS1_Driver.c **** 	{
 806:../LSM9DS1_Driver.c **** 	case 8:
 807:../LSM9DS1_Driver.c **** 		tempRegValue |= (0x1 << 5);
 3318              		.loc 1 807 0
 3319 008a FB79     		ldrb	r3, [r7, #7]
 3320 008c 43F02003 		orr	r3, r3, #32
 3321 0090 FB71     		strb	r3, [r7, #7]
 808:../LSM9DS1_Driver.c **** 		break;
 3322              		.loc 1 808 0
 3323 0092 09E0     		b	.L126
 3324              	.L128:
 809:../LSM9DS1_Driver.c **** 	case 12:
 810:../LSM9DS1_Driver.c **** 		tempRegValue |= (0x2 << 5);
 3325              		.loc 1 810 0
 3326 0094 FB79     		ldrb	r3, [r7, #7]
 3327 0096 43F04003 		orr	r3, r3, #64
 3328 009a FB71     		strb	r3, [r7, #7]
 811:../LSM9DS1_Driver.c **** 		break;
 3329              		.loc 1 811 0
 3330 009c 04E0     		b	.L126
 3331              	.L129:
 812:../LSM9DS1_Driver.c **** 	case 16:
 813:../LSM9DS1_Driver.c **** 		tempRegValue |= (0x3 << 5);
 3332              		.loc 1 813 0
 3333 009e FB79     		ldrb	r3, [r7, #7]
 3334 00a0 43F06003 		orr	r3, r3, #96
 3335 00a4 FB71     		strb	r3, [r7, #7]
 814:../LSM9DS1_Driver.c **** 		break;
 3336              		.loc 1 814 0
 3337 00a6 00BF     		nop
 3338              	.L126:
 815:../LSM9DS1_Driver.c **** 	// Otherwise we'll default to 4 gauss (00)
 816:../LSM9DS1_Driver.c **** 	}
 817:../LSM9DS1_Driver.c **** 	mWriteByte(CTRL_REG2_M, tempRegValue); // +/-4Gauss
 3339              		.loc 1 817 0
 3340 00a8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3341 00aa 4FF02100 		mov	r0, #33
 3342 00ae 1946     		mov	r1, r3
 3343 00b0 FFF7FEFF 		bl	mWriteByte
 818:../LSM9DS1_Driver.c **** 
 819:../LSM9DS1_Driver.c **** 	// CTRL_REG3_M (Default value: 0x03)
 820:../LSM9DS1_Driver.c **** 	// [I2C_DISABLE][0][LP][0][0][SIM][MD1][MD0]
 821:../LSM9DS1_Driver.c **** 	// I2C_DISABLE - Disable I2C interace (0:enable, 1:disable)
 822:../LSM9DS1_Driver.c **** 	// LP - Low-power mode cofiguration (1:enable)
 823:../LSM9DS1_Driver.c **** 	// SIM - SPI mode selection (0:write-only, 1:read/write enable)
 824:../LSM9DS1_Driver.c **** 	// MD[1:0] - Operating mode
 825:../LSM9DS1_Driver.c **** 	//	00:continuous conversion, 01:single-conversion,
 826:../LSM9DS1_Driver.c **** 	//  10,11: Power-down
 827:../LSM9DS1_Driver.c **** 	tempRegValue = 0;
 3344              		.loc 1 827 0
 3345 00b4 4FF00003 		mov	r3, #0
 3346 00b8 FB71     		strb	r3, [r7, #7]
 828:../LSM9DS1_Driver.c **** 	if (settings.mag.lowPowerEnable) tempRegValue |= (1<<5);
 3347              		.loc 1 828 0
 3348 00ba 40F20003 		movw	r3, #:lower16:settings
 3349 00be C0F20003 		movt	r3, #:upper16:settings
 3350 00c2 93F82530 		ldrb	r3, [r3, #37]	@ zero_extendqisi2
 3351 00c6 002B     		cmp	r3, #0
 3352 00c8 03D0     		beq	.L130
 3353              		.loc 1 828 0 is_stmt 0 discriminator 1
 3354 00ca FB79     		ldrb	r3, [r7, #7]
 3355 00cc 43F02003 		orr	r3, r3, #32
 3356 00d0 FB71     		strb	r3, [r7, #7]
 3357              	.L130:
 829:../LSM9DS1_Driver.c **** 	tempRegValue |= (settings.mag.operatingMode & 0x3);
 3358              		.loc 1 829 0 is_stmt 1
 3359 00d2 40F20003 		movw	r3, #:lower16:settings
 3360 00d6 C0F20003 		movt	r3, #:upper16:settings
 3361 00da 93F82630 		ldrb	r3, [r3, #38]	@ zero_extendqisi2
 3362 00de DBB2     		uxtb	r3, r3
 3363 00e0 03F00303 		and	r3, r3, #3
 3364 00e4 DAB2     		uxtb	r2, r3
 3365 00e6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3366 00e8 1343     		orrs	r3, r3, r2
 3367 00ea DBB2     		uxtb	r3, r3
 3368 00ec FB71     		strb	r3, [r7, #7]
 830:../LSM9DS1_Driver.c **** 	mWriteByte(CTRL_REG3_M, tempRegValue); // Continuous conversion mode
 3369              		.loc 1 830 0
 3370 00ee FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3371 00f0 4FF02200 		mov	r0, #34
 3372 00f4 1946     		mov	r1, r3
 3373 00f6 FFF7FEFF 		bl	mWriteByte
 831:../LSM9DS1_Driver.c **** 
 832:../LSM9DS1_Driver.c **** 	// CTRL_REG4_M (Default value: 0x00)
 833:../LSM9DS1_Driver.c **** 	// [0][0][0][0][OMZ1][OMZ0][BLE][0]
 834:../LSM9DS1_Driver.c **** 	// OMZ[1:0] - Z-axis operative mode selection
 835:../LSM9DS1_Driver.c **** 	//	00:low-power mode, 01:medium performance
 836:../LSM9DS1_Driver.c **** 	//	10:high performance, 10:ultra-high performance
 837:../LSM9DS1_Driver.c **** 	// BLE - Big/little endian data
 838:../LSM9DS1_Driver.c **** 	tempRegValue = 0;
 3374              		.loc 1 838 0
 3375 00fa 4FF00003 		mov	r3, #0
 3376 00fe FB71     		strb	r3, [r7, #7]
 839:../LSM9DS1_Driver.c **** 	tempRegValue = (settings.mag.ZPerformance & 0x3) << 2;
 3377              		.loc 1 839 0
 3378 0100 40F20003 		movw	r3, #:lower16:settings
 3379 0104 C0F20003 		movt	r3, #:upper16:settings
 3380 0108 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 3381 010c 03F00303 		and	r3, r3, #3
 3382 0110 DBB2     		uxtb	r3, r3
 3383 0112 4FEA8303 		lsl	r3, r3, #2
 3384 0116 FB71     		strb	r3, [r7, #7]
 840:../LSM9DS1_Driver.c **** 	mWriteByte(CTRL_REG4_M, tempRegValue);
 3385              		.loc 1 840 0
 3386 0118 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3387 011a 4FF02300 		mov	r0, #35
 3388 011e 1946     		mov	r1, r3
 3389 0120 FFF7FEFF 		bl	mWriteByte
 841:../LSM9DS1_Driver.c **** 
 842:../LSM9DS1_Driver.c **** 	// CTRL_REG5_M (Default value: 0x00)
 843:../LSM9DS1_Driver.c **** 	// [0][BDU][0][0][0][0][0][0]
 844:../LSM9DS1_Driver.c **** 	// BDU - Block data update for magnetic data
 845:../LSM9DS1_Driver.c **** 	//	0:continuous, 1:not updated until MSB/LSB are read
 846:../LSM9DS1_Driver.c **** 	tempRegValue = 0;
 3390              		.loc 1 846 0
 3391 0124 4FF00003 		mov	r3, #0
 3392 0128 FB71     		strb	r3, [r7, #7]
 847:../LSM9DS1_Driver.c **** 	mWriteByte(CTRL_REG5_M, tempRegValue);
 3393              		.loc 1 847 0
 3394 012a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3395 012c 4FF02400 		mov	r0, #36
 3396 0130 1946     		mov	r1, r3
 3397 0132 FFF7FEFF 		bl	mWriteByte
 848:../LSM9DS1_Driver.c **** }
 3398              		.loc 1 848 0
 3399 0136 07F10807 		add	r7, r7, #8
 3400 013a BD46     		mov	sp, r7
 3401 013c 80BD     		pop	{r7, pc}
 3402              		.cfi_endproc
 3403              	.LFE150:
 3405 013e 00BF     		.section	.text.mWriteByte,"ax",%progbits
 3406              		.align	2
 3407              		.global	mWriteByte
 3408              		.thumb
 3409              		.thumb_func
 3411              	mWriteByte:
 3412              	.LFB151:
 849:../LSM9DS1_Driver.c **** 
 850:../LSM9DS1_Driver.c **** void mWriteByte(uint8_t subAddress, uint8_t data)
 851:../LSM9DS1_Driver.c **** {
 3413              		.loc 1 851 0
 3414              		.cfi_startproc
 3415              		@ args = 0, pretend = 0, frame = 8
 3416              		@ frame_needed = 1, uses_anonymous_args = 0
 3417 0000 80B5     		push	{r7, lr}
 3418              	.LCFI91:
 3419              		.cfi_def_cfa_offset 8
 3420              		.cfi_offset 7, -8
 3421              		.cfi_offset 14, -4
 3422 0002 82B0     		sub	sp, sp, #8
 3423              	.LCFI92:
 3424              		.cfi_def_cfa_offset 16
 3425 0004 00AF     		add	r7, sp, #0
 3426              	.LCFI93:
 3427              		.cfi_def_cfa_register 7
 3428 0006 0246     		mov	r2, r0
 3429 0008 0B46     		mov	r3, r1
 3430 000a FA71     		strb	r2, [r7, #7]
 3431 000c BB71     		strb	r3, [r7, #6]
 852:../LSM9DS1_Driver.c **** 	// Whether we're using I2C or SPI, write a byte using the
 853:../LSM9DS1_Driver.c **** 	// accelerometer-specific I2C address or SPI CS pin.
 854:../LSM9DS1_Driver.c **** 	if (settings.device.commInterface == IMU_MODE_I2C)
 3432              		.loc 1 854 0
 3433 000e 40F20003 		movw	r3, #:lower16:settings
 3434 0012 C0F20003 		movt	r3, #:upper16:settings
 3435 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3436 0018 012B     		cmp	r3, #1
 3437 001a 0CD1     		bne	.L131
 855:../LSM9DS1_Driver.c **** 	{
 856:../LSM9DS1_Driver.c **** 		return I2CwriteByte(_mAddress, subAddress, data);
 3438              		.loc 1 856 0
 3439 001c 40F20003 		movw	r3, #:lower16:_mAddress
 3440 0020 C0F20003 		movt	r3, #:upper16:_mAddress
 3441 0024 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 3442 0026 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3443 0028 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3444 002a 0846     		mov	r0, r1
 3445 002c 1146     		mov	r1, r2
 3446 002e 1A46     		mov	r2, r3
 3447 0030 FFF7FEFF 		bl	I2CwriteByte
 3448 0034 00BF     		nop
 3449              	.L131:
 857:../LSM9DS1_Driver.c **** 	}
 858:../LSM9DS1_Driver.c **** }
 3450              		.loc 1 858 0
 3451 0036 07F10807 		add	r7, r7, #8
 3452 003a BD46     		mov	sp, r7
 3453 003c 80BD     		pop	{r7, pc}
 3454              		.cfi_endproc
 3455              	.LFE151:
 3457 003e 00BF     		.section	.text.enableFIFO,"ax",%progbits
 3458              		.align	2
 3459              		.global	enableFIFO
 3460              		.thumb
 3461              		.thumb_func
 3463              	enableFIFO:
 3464              	.LFB152:
 859:../LSM9DS1_Driver.c **** 
 860:../LSM9DS1_Driver.c **** void enableFIFO(bool enable)
 861:../LSM9DS1_Driver.c **** {
 3465              		.loc 1 861 0
 3466              		.cfi_startproc
 3467              		@ args = 0, pretend = 0, frame = 16
 3468              		@ frame_needed = 1, uses_anonymous_args = 0
 3469 0000 80B5     		push	{r7, lr}
 3470              	.LCFI94:
 3471              		.cfi_def_cfa_offset 8
 3472              		.cfi_offset 7, -8
 3473              		.cfi_offset 14, -4
 3474 0002 84B0     		sub	sp, sp, #16
 3475              	.LCFI95:
 3476              		.cfi_def_cfa_offset 24
 3477 0004 00AF     		add	r7, sp, #0
 3478              	.LCFI96:
 3479              		.cfi_def_cfa_register 7
 3480 0006 0346     		mov	r3, r0
 3481 0008 FB71     		strb	r3, [r7, #7]
 862:../LSM9DS1_Driver.c **** 	uint8_t temp = xgReadByte(CTRL_REG9);
 3482              		.loc 1 862 0
 3483 000a 4FF02300 		mov	r0, #35
 3484 000e FFF7FEFF 		bl	xgReadByte
 3485 0012 0346     		mov	r3, r0
 3486 0014 FB73     		strb	r3, [r7, #15]
 863:../LSM9DS1_Driver.c **** 	if(enable)
 3487              		.loc 1 863 0
 3488 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3489 0018 002B     		cmp	r3, #0
 3490 001a 04D0     		beq	.L134
 864:../LSM9DS1_Driver.c **** 	{
 865:../LSM9DS1_Driver.c **** 		temp |= (1<<1);
 3491              		.loc 1 865 0
 3492 001c FB7B     		ldrb	r3, [r7, #15]
 3493 001e 43F00203 		orr	r3, r3, #2
 3494 0022 FB73     		strb	r3, [r7, #15]
 3495 0024 03E0     		b	.L135
 3496              	.L134:
 866:../LSM9DS1_Driver.c **** 	}
 867:../LSM9DS1_Driver.c **** 	else
 868:../LSM9DS1_Driver.c **** 	{
 869:../LSM9DS1_Driver.c **** 		temp &= ~(1<<1);
 3497              		.loc 1 869 0
 3498 0026 FB7B     		ldrb	r3, [r7, #15]
 3499 0028 23F00203 		bic	r3, r3, #2
 3500 002c FB73     		strb	r3, [r7, #15]
 3501              	.L135:
 870:../LSM9DS1_Driver.c **** 	}
 871:../LSM9DS1_Driver.c **** 
 872:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG9, temp);
 3502              		.loc 1 872 0
 3503 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3504 0030 4FF02300 		mov	r0, #35
 3505 0034 1946     		mov	r1, r3
 3506 0036 FFF7FEFF 		bl	xgWriteByte
 873:../LSM9DS1_Driver.c **** }
 3507              		.loc 1 873 0
 3508 003a 07F11007 		add	r7, r7, #16
 3509 003e BD46     		mov	sp, r7
 3510 0040 80BD     		pop	{r7, pc}
 3511              		.cfi_endproc
 3512              	.LFE152:
 3514 0042 00BF     		.section	.text.setFIFO,"ax",%progbits
 3515              		.align	2
 3516              		.global	setFIFO
 3517              		.thumb
 3518              		.thumb_func
 3520              	setFIFO:
 3521              	.LFB153:
 874:../LSM9DS1_Driver.c **** 
 875:../LSM9DS1_Driver.c **** void setFIFO(fifoMode_type fifoMode, uint8_t fifoThs)
 876:../LSM9DS1_Driver.c **** {
 3522              		.loc 1 876 0
 3523              		.cfi_startproc
 3524              		@ args = 0, pretend = 0, frame = 16
 3525              		@ frame_needed = 1, uses_anonymous_args = 0
 3526 0000 80B5     		push	{r7, lr}
 3527              	.LCFI97:
 3528              		.cfi_def_cfa_offset 8
 3529              		.cfi_offset 7, -8
 3530              		.cfi_offset 14, -4
 3531 0002 84B0     		sub	sp, sp, #16
 3532              	.LCFI98:
 3533              		.cfi_def_cfa_offset 24
 3534 0004 00AF     		add	r7, sp, #0
 3535              	.LCFI99:
 3536              		.cfi_def_cfa_register 7
 3537 0006 0246     		mov	r2, r0
 3538 0008 0B46     		mov	r3, r1
 3539 000a FA71     		strb	r2, [r7, #7]
 3540 000c BB71     		strb	r3, [r7, #6]
 877:../LSM9DS1_Driver.c **** 	// Limit threshold - 0x1F (31) is the maximum. If more than that was asked
 878:../LSM9DS1_Driver.c **** 	// limit it to the maximum.
 879:../LSM9DS1_Driver.c **** 	uint8_t threshold = fifoThs <= 0x1F ? fifoThs : 0x1F;
 3541              		.loc 1 879 0
 3542 000e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3543 0010 1F2B     		cmp	r3, #31
 3544 0012 28BF     		it	cs
 3545 0014 1F23     		movcs	r3, #31
 3546 0016 FB73     		strb	r3, [r7, #15]
 880:../LSM9DS1_Driver.c **** 	xgWriteByte(FIFO_CTRL, ((fifoMode & 0x7) << 5) | (threshold & 0x1F));
 3547              		.loc 1 880 0
 3548 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3549 001a 4FEA4313 		lsl	r3, r3, #5
 3550 001e DAB2     		uxtb	r2, r3
 3551 0020 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3552 0022 03F01F03 		and	r3, r3, #31
 3553 0026 DBB2     		uxtb	r3, r3
 3554 0028 1343     		orrs	r3, r3, r2
 3555 002a DBB2     		uxtb	r3, r3
 3556 002c DBB2     		uxtb	r3, r3
 3557 002e 4FF02E00 		mov	r0, #46
 3558 0032 1946     		mov	r1, r3
 3559 0034 FFF7FEFF 		bl	xgWriteByte
 881:../LSM9DS1_Driver.c **** }
 3560              		.loc 1 881 0
 3561 0038 07F11007 		add	r7, r7, #16
 3562 003c BD46     		mov	sp, r7
 3563 003e 80BD     		pop	{r7, pc}
 3564              		.cfi_endproc
 3565              	.LFE153:
 3567              		.global	__aeabi_f2d
 3568              		.global	__aeabi_ddiv
 3569              		.global	__aeabi_d2iz
 3570              		.section	.text.calibrate,"ax",%progbits
 3571              		.align	2
 3572              		.global	calibrate
 3573              		.thumb
 3574              		.thumb_func
 3576              	calibrate:
 3577              	.LFB154:
 882:../LSM9DS1_Driver.c **** 
 883:../LSM9DS1_Driver.c **** void calibrate(bool autoCalc)
 884:../LSM9DS1_Driver.c **** {
 3578              		.loc 1 884 0
 3579              		.cfi_startproc
 3580              		@ args = 0, pretend = 0, frame = 48
 3581              		@ frame_needed = 1, uses_anonymous_args = 0
 3582 0000 B0B5     		push	{r4, r5, r7, lr}
 3583              	.LCFI100:
 3584              		.cfi_def_cfa_offset 16
 3585              		.cfi_offset 4, -16
 3586              		.cfi_offset 5, -12
 3587              		.cfi_offset 7, -8
 3588              		.cfi_offset 14, -4
 3589 0002 8CB0     		sub	sp, sp, #48
 3590              	.LCFI101:
 3591              		.cfi_def_cfa_offset 64
 3592 0004 00AF     		add	r7, sp, #0
 3593              	.LCFI102:
 3594              		.cfi_def_cfa_register 7
 3595 0006 0346     		mov	r3, r0
 3596 0008 FB71     		strb	r3, [r7, #7]
 885:../LSM9DS1_Driver.c **** 	uint8_t data[6] = {0, 0, 0, 0, 0, 0};
 3597              		.loc 1 885 0
 3598 000a 4FF00003 		mov	r3, #0
 3599 000e 87F82430 		strb	r3, [r7, #36]
 3600 0012 4FF00003 		mov	r3, #0
 3601 0016 87F82530 		strb	r3, [r7, #37]
 3602 001a 4FF00003 		mov	r3, #0
 3603 001e 87F82630 		strb	r3, [r7, #38]
 3604 0022 4FF00003 		mov	r3, #0
 3605 0026 87F82730 		strb	r3, [r7, #39]
 3606 002a 4FF00003 		mov	r3, #0
 3607 002e 87F82830 		strb	r3, [r7, #40]
 3608 0032 4FF00003 		mov	r3, #0
 3609 0036 87F82930 		strb	r3, [r7, #41]
 886:../LSM9DS1_Driver.c **** 	uint8_t samples = 0;
 3610              		.loc 1 886 0
 3611 003a 4FF00003 		mov	r3, #0
 3612 003e 87F82B30 		strb	r3, [r7, #43]
 887:../LSM9DS1_Driver.c **** 	int ii;
 888:../LSM9DS1_Driver.c **** 	int32_t aBiasRawTemp[3] = {0, 0, 0};
 3613              		.loc 1 888 0
 3614 0042 4FF00003 		mov	r3, #0
 3615 0046 BB61     		str	r3, [r7, #24]
 3616 0048 4FF00003 		mov	r3, #0
 3617 004c FB61     		str	r3, [r7, #28]
 3618 004e 4FF00003 		mov	r3, #0
 3619 0052 3B62     		str	r3, [r7, #32]
 889:../LSM9DS1_Driver.c **** 	int32_t gBiasRawTemp[3] = {0, 0, 0};
 3620              		.loc 1 889 0
 3621 0054 4FF00003 		mov	r3, #0
 3622 0058 FB60     		str	r3, [r7, #12]
 3623 005a 4FF00003 		mov	r3, #0
 3624 005e 3B61     		str	r3, [r7, #16]
 3625 0060 4FF00003 		mov	r3, #0
 3626 0064 7B61     		str	r3, [r7, #20]
 890:../LSM9DS1_Driver.c **** 
 891:../LSM9DS1_Driver.c **** 	// Turn on FIFO and set threshold to 32 samples
 892:../LSM9DS1_Driver.c **** 	enableFIFO(TRUE);
 3627              		.loc 1 892 0
 3628 0066 4FF00100 		mov	r0, #1
 3629 006a FFF7FEFF 		bl	enableFIFO
 893:../LSM9DS1_Driver.c **** 	setFIFO(FIFO_THS, 0x1F);
 3630              		.loc 1 893 0
 3631 006e 4FF00100 		mov	r0, #1
 3632 0072 4FF01F01 		mov	r1, #31
 3633 0076 FFF7FEFF 		bl	setFIFO
 894:../LSM9DS1_Driver.c **** 	/*while (samples < 29)
 895:../LSM9DS1_Driver.c **** 	{*/
 896:../LSM9DS1_Driver.c **** 		samples = (xgReadByte(FIFO_SRC) & 0x3F); // Read number of stored samples
 3634              		.loc 1 896 0
 3635 007a 4FF02F00 		mov	r0, #47
 3636 007e FFF7FEFF 		bl	xgReadByte
 3637 0082 0346     		mov	r3, r0
 3638 0084 03F03F03 		and	r3, r3, #63
 3639 0088 87F82B30 		strb	r3, [r7, #43]
 897:../LSM9DS1_Driver.c **** 		//samples = 10;
 898:../LSM9DS1_Driver.c **** 	//}
 899:../LSM9DS1_Driver.c **** 	for(ii = 0; ii < samples ; ii++)
 3640              		.loc 1 899 0
 3641 008c 4FF00003 		mov	r3, #0
 3642 0090 FB62     		str	r3, [r7, #44]
 3643 0092 59E0     		b	.L138
 3644              	.L139:
 900:../LSM9DS1_Driver.c **** 	{	// Read the gyro data stored in the FIFO
 901:../LSM9DS1_Driver.c **** 		readGyro1();
 3645              		.loc 1 901 0 discriminator 2
 3646 0094 FFF7FEFF 		bl	readGyro1
 902:../LSM9DS1_Driver.c **** 		gBiasRawTemp[0] += gx;
 3647              		.loc 1 902 0 discriminator 2
 3648 0098 FA68     		ldr	r2, [r7, #12]
 3649 009a 40F20003 		movw	r3, #:lower16:gx
 3650 009e C0F20003 		movt	r3, #:upper16:gx
 3651 00a2 1B88     		ldrh	r3, [r3, #0]
 3652 00a4 1BB2     		sxth	r3, r3
 3653 00a6 D318     		adds	r3, r2, r3
 3654 00a8 FB60     		str	r3, [r7, #12]
 903:../LSM9DS1_Driver.c **** 		gBiasRawTemp[1] += gy;
 3655              		.loc 1 903 0 discriminator 2
 3656 00aa 3A69     		ldr	r2, [r7, #16]
 3657 00ac 40F20003 		movw	r3, #:lower16:gy
 3658 00b0 C0F20003 		movt	r3, #:upper16:gy
 3659 00b4 1B88     		ldrh	r3, [r3, #0]
 3660 00b6 1BB2     		sxth	r3, r3
 3661 00b8 D318     		adds	r3, r2, r3
 3662 00ba 3B61     		str	r3, [r7, #16]
 904:../LSM9DS1_Driver.c **** 		gBiasRawTemp[2] += gz;
 3663              		.loc 1 904 0 discriminator 2
 3664 00bc 7A69     		ldr	r2, [r7, #20]
 3665 00be 40F20003 		movw	r3, #:lower16:gz
 3666 00c2 C0F20003 		movt	r3, #:upper16:gz
 3667 00c6 1B88     		ldrh	r3, [r3, #0]
 3668 00c8 1BB2     		sxth	r3, r3
 3669 00ca D318     		adds	r3, r2, r3
 3670 00cc 7B61     		str	r3, [r7, #20]
 905:../LSM9DS1_Driver.c **** 
 906:../LSM9DS1_Driver.c **** 		readAccel1();
 3671              		.loc 1 906 0 discriminator 2
 3672 00ce FFF7FEFF 		bl	readAccel1
 907:../LSM9DS1_Driver.c **** 		aBiasRawTemp[0] += ax;
 3673              		.loc 1 907 0 discriminator 2
 3674 00d2 BA69     		ldr	r2, [r7, #24]
 3675 00d4 40F20003 		movw	r3, #:lower16:ax
 3676 00d8 C0F20003 		movt	r3, #:upper16:ax
 3677 00dc 1B88     		ldrh	r3, [r3, #0]
 3678 00de 1BB2     		sxth	r3, r3
 3679 00e0 D318     		adds	r3, r2, r3
 3680 00e2 BB61     		str	r3, [r7, #24]
 908:../LSM9DS1_Driver.c **** 		aBiasRawTemp[1] += ay;
 3681              		.loc 1 908 0 discriminator 2
 3682 00e4 FA69     		ldr	r2, [r7, #28]
 3683 00e6 40F20003 		movw	r3, #:lower16:ay
 3684 00ea C0F20003 		movt	r3, #:upper16:ay
 3685 00ee 1B88     		ldrh	r3, [r3, #0]
 3686 00f0 1BB2     		sxth	r3, r3
 3687 00f2 D318     		adds	r3, r2, r3
 3688 00f4 FB61     		str	r3, [r7, #28]
 909:../LSM9DS1_Driver.c **** 		aBiasRawTemp[2] += az - (int16_t)(1./aRes); // Assumes sensor facing up!
 3689              		.loc 1 909 0 discriminator 2
 3690 00f6 3C6A     		ldr	r4, [r7, #32]
 3691 00f8 40F20003 		movw	r3, #:lower16:az
 3692 00fc C0F20003 		movt	r3, #:upper16:az
 3693 0100 1B88     		ldrh	r3, [r3, #0]
 3694 0102 1DB2     		sxth	r5, r3
 3695 0104 40F20003 		movw	r3, #:lower16:aRes
 3696 0108 C0F20003 		movt	r3, #:upper16:aRes
 3697 010c 1B68     		ldr	r3, [r3, #0]	@ float
 3698 010e 1846     		mov	r0, r3	@ float
 3699 0110 FFF7FEFF 		bl	__aeabi_f2d
 3700 0114 0246     		mov	r2, r0
 3701 0116 0B46     		mov	r3, r1
 3702 0118 4FF00000 		mov	r0, #0
 3703 011c 4FF00001 		mov	r1, #0
 3704 0120 C3F6F071 		movt	r1, 16368
 3705 0124 FFF7FEFF 		bl	__aeabi_ddiv
 3706 0128 0246     		mov	r2, r0
 3707 012a 0B46     		mov	r3, r1
 3708 012c 1046     		mov	r0, r2
 3709 012e 1946     		mov	r1, r3
 3710 0130 FFF7FEFF 		bl	__aeabi_d2iz
 3711 0134 0346     		mov	r3, r0
 3712 0136 9BB2     		uxth	r3, r3
 3713 0138 1BB2     		sxth	r3, r3
 3714 013a EB1A     		subs	r3, r5, r3
 3715 013c E318     		adds	r3, r4, r3
 3716 013e 3B62     		str	r3, [r7, #32]
 899:../LSM9DS1_Driver.c **** 	for(ii = 0; ii < samples ; ii++)
 3717              		.loc 1 899 0 discriminator 2
 3718 0140 FB6A     		ldr	r3, [r7, #44]
 3719 0142 03F10103 		add	r3, r3, #1
 3720 0146 FB62     		str	r3, [r7, #44]
 3721              	.L138:
 899:../LSM9DS1_Driver.c **** 	for(ii = 0; ii < samples ; ii++)
 3722              		.loc 1 899 0 is_stmt 0 discriminator 1
 3723 0148 97F82B20 		ldrb	r2, [r7, #43]	@ zero_extendqisi2
 3724 014c FB6A     		ldr	r3, [r7, #44]
 3725 014e 9A42     		cmp	r2, r3
 3726 0150 A0DC     		bgt	.L139
 910:../LSM9DS1_Driver.c **** 	}
 911:../LSM9DS1_Driver.c **** 	for (ii = 0; ii < samples/*3*/; ii++)
 3727              		.loc 1 911 0 is_stmt 1
 3728 0152 4FF00003 		mov	r3, #0
 3729 0156 FB62     		str	r3, [r7, #44]
 3730 0158 55E0     		b	.L140
 3731              	.L141:
 912:../LSM9DS1_Driver.c **** 	{
 913:../LSM9DS1_Driver.c **** 		gBiasRaw[ii] = gBiasRawTemp[ii] / samples;
 3732              		.loc 1 913 0 discriminator 2
 3733 015a FB6A     		ldr	r3, [r7, #44]
 3734 015c 4FEA8303 		lsl	r3, r3, #2
 3735 0160 07F13002 		add	r2, r7, #48
 3736 0164 D318     		adds	r3, r2, r3
 3737 0166 53F8242C 		ldr	r2, [r3, #-36]
 3738 016a 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 3739 016e 92FBF3F3 		sdiv	r3, r2, r3
 3740 0172 99B2     		uxth	r1, r3
 3741 0174 40F20003 		movw	r3, #:lower16:gBiasRaw
 3742 0178 C0F20003 		movt	r3, #:upper16:gBiasRaw
 3743 017c FA6A     		ldr	r2, [r7, #44]
 3744 017e 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 914:../LSM9DS1_Driver.c **** 		gBias[ii] = calcGyro(gBiasRaw[ii]);
 3745              		.loc 1 914 0 discriminator 2
 3746 0182 40F20003 		movw	r3, #:lower16:gBiasRaw
 3747 0186 C0F20003 		movt	r3, #:upper16:gBiasRaw
 3748 018a FA6A     		ldr	r2, [r7, #44]
 3749 018c 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 3750 0190 1BB2     		sxth	r3, r3
 3751 0192 1846     		mov	r0, r3
 3752 0194 FFF7FEFF 		bl	calcGyro
 3753 0198 0246     		mov	r2, r0	@ float
 3754 019a 40F20003 		movw	r3, #:lower16:gBias
 3755 019e C0F20003 		movt	r3, #:upper16:gBias
 3756 01a2 F96A     		ldr	r1, [r7, #44]
 3757 01a4 4FEA8101 		lsl	r1, r1, #2
 3758 01a8 5B18     		adds	r3, r3, r1
 3759 01aa 1A60     		str	r2, [r3, #0]	@ float
 915:../LSM9DS1_Driver.c **** 		aBiasRaw[ii] = aBiasRawTemp[ii] / samples;
 3760              		.loc 1 915 0 discriminator 2
 3761 01ac FB6A     		ldr	r3, [r7, #44]
 3762 01ae 4FEA8303 		lsl	r3, r3, #2
 3763 01b2 07F13002 		add	r2, r7, #48
 3764 01b6 D318     		adds	r3, r2, r3
 3765 01b8 53F8182C 		ldr	r2, [r3, #-24]
 3766 01bc 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 3767 01c0 92FBF3F3 		sdiv	r3, r2, r3
 3768 01c4 99B2     		uxth	r1, r3
 3769 01c6 40F20003 		movw	r3, #:lower16:aBiasRaw
 3770 01ca C0F20003 		movt	r3, #:upper16:aBiasRaw
 3771 01ce FA6A     		ldr	r2, [r7, #44]
 3772 01d0 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 916:../LSM9DS1_Driver.c **** 		aBias[ii] = calcAccel(aBiasRaw[ii]);
 3773              		.loc 1 916 0 discriminator 2
 3774 01d4 40F20003 		movw	r3, #:lower16:aBiasRaw
 3775 01d8 C0F20003 		movt	r3, #:upper16:aBiasRaw
 3776 01dc FA6A     		ldr	r2, [r7, #44]
 3777 01de 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 3778 01e2 1BB2     		sxth	r3, r3
 3779 01e4 1846     		mov	r0, r3
 3780 01e6 FFF7FEFF 		bl	calcAccel
 3781 01ea 0246     		mov	r2, r0	@ float
 3782 01ec 40F20003 		movw	r3, #:lower16:aBias
 3783 01f0 C0F20003 		movt	r3, #:upper16:aBias
 3784 01f4 F96A     		ldr	r1, [r7, #44]
 3785 01f6 4FEA8101 		lsl	r1, r1, #2
 3786 01fa 5B18     		adds	r3, r3, r1
 3787 01fc 1A60     		str	r2, [r3, #0]	@ float
 911:../LSM9DS1_Driver.c **** 	for (ii = 0; ii < samples/*3*/; ii++)
 3788              		.loc 1 911 0 discriminator 2
 3789 01fe FB6A     		ldr	r3, [r7, #44]
 3790 0200 03F10103 		add	r3, r3, #1
 3791 0204 FB62     		str	r3, [r7, #44]
 3792              	.L140:
 911:../LSM9DS1_Driver.c **** 	for (ii = 0; ii < samples/*3*/; ii++)
 3793              		.loc 1 911 0 is_stmt 0 discriminator 1
 3794 0206 97F82B20 		ldrb	r2, [r7, #43]	@ zero_extendqisi2
 3795 020a FB6A     		ldr	r3, [r7, #44]
 3796 020c 9A42     		cmp	r2, r3
 3797 020e A4DC     		bgt	.L141
 917:../LSM9DS1_Driver.c **** 	}
 918:../LSM9DS1_Driver.c **** 
 919:../LSM9DS1_Driver.c **** 	enableFIFO(FALSE);
 3798              		.loc 1 919 0 is_stmt 1
 3799 0210 4FF00000 		mov	r0, #0
 3800 0214 FFF7FEFF 		bl	enableFIFO
 920:../LSM9DS1_Driver.c **** 	setFIFO(FIFO_OFF, 0x00);
 3801              		.loc 1 920 0
 3802 0218 4FF00000 		mov	r0, #0
 3803 021c 4FF00001 		mov	r1, #0
 3804 0220 FFF7FEFF 		bl	setFIFO
 921:../LSM9DS1_Driver.c **** 
 922:../LSM9DS1_Driver.c **** 	if (autoCalc) _autoCalc = TRUE;
 3805              		.loc 1 922 0
 3806 0224 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3807 0226 002B     		cmp	r3, #0
 3808 0228 06D0     		beq	.L137
 3809              		.loc 1 922 0 is_stmt 0 discriminator 1
 3810 022a 40F20003 		movw	r3, #:lower16:_autoCalc
 3811 022e C0F20003 		movt	r3, #:upper16:_autoCalc
 3812 0232 4FF00102 		mov	r2, #1
 3813 0236 1A70     		strb	r2, [r3, #0]
 3814              	.L137:
 923:../LSM9DS1_Driver.c **** }
 3815              		.loc 1 923 0 is_stmt 1
 3816 0238 07F13007 		add	r7, r7, #48
 3817 023c BD46     		mov	sp, r7
 3818 023e B0BD     		pop	{r4, r5, r7, pc}
 3819              		.cfi_endproc
 3820              	.LFE154:
 3822              		.section	.text.xgReadBytes,"ax",%progbits
 3823              		.align	2
 3824              		.global	xgReadBytes
 3825              		.thumb
 3826              		.thumb_func
 3828              	xgReadBytes:
 3829              	.LFB155:
 924:../LSM9DS1_Driver.c **** 
 925:../LSM9DS1_Driver.c **** 
 926:../LSM9DS1_Driver.c **** void xgReadBytes(uint8_t subAddress, uint8_t * dest, uint8_t count)
 927:../LSM9DS1_Driver.c **** {
 3830              		.loc 1 927 0
 3831              		.cfi_startproc
 3832              		@ args = 0, pretend = 0, frame = 8
 3833              		@ frame_needed = 1, uses_anonymous_args = 0
 3834 0000 80B5     		push	{r7, lr}
 3835              	.LCFI103:
 3836              		.cfi_def_cfa_offset 8
 3837              		.cfi_offset 7, -8
 3838              		.cfi_offset 14, -4
 3839 0002 82B0     		sub	sp, sp, #8
 3840              	.LCFI104:
 3841              		.cfi_def_cfa_offset 16
 3842 0004 00AF     		add	r7, sp, #0
 3843              	.LCFI105:
 3844              		.cfi_def_cfa_register 7
 3845 0006 3960     		str	r1, [r7, #0]
 3846 0008 1346     		mov	r3, r2
 3847 000a 0246     		mov	r2, r0
 3848 000c FA71     		strb	r2, [r7, #7]
 3849 000e BB71     		strb	r3, [r7, #6]
 928:../LSM9DS1_Driver.c **** 	// Whether we're using I2C or SPI, read multiple bytes using the
 929:../LSM9DS1_Driver.c **** 	// gyro-specific I2C address or SPI CS pin.
 930:../LSM9DS1_Driver.c **** 	if (settings.device.commInterface == IMU_MODE_I2C)
 3850              		.loc 1 930 0
 3851 0010 40F20003 		movw	r3, #:lower16:settings
 3852 0014 C0F20003 		movt	r3, #:upper16:settings
 3853 0018 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3854 001a 012B     		cmp	r3, #1
 3855 001c 0CD1     		bne	.L144
 931:../LSM9DS1_Driver.c **** 		I2CreadBytes(_xgAddress, subAddress, dest, count);
 3856              		.loc 1 931 0
 3857 001e 40F20003 		movw	r3, #:lower16:_xgAddress
 3858 0022 C0F20003 		movt	r3, #:upper16:_xgAddress
 3859 0026 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 3860 0028 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3861 002a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3862 002c 0846     		mov	r0, r1
 3863 002e 1146     		mov	r1, r2
 3864 0030 3A68     		ldr	r2, [r7, #0]
 3865 0032 FFF7FEFF 		bl	I2CreadBytes
 3866 0036 12E0     		b	.L143
 3867              	.L144:
 932:../LSM9DS1_Driver.c **** 		//I2CreadBytes1(_xgAddress, subAddress, dest, count);
 933:../LSM9DS1_Driver.c **** 	else if (settings.device.commInterface == IMU_MODE_SPI)
 3868              		.loc 1 933 0
 3869 0038 40F20003 		movw	r3, #:lower16:settings
 3870 003c C0F20003 		movt	r3, #:upper16:settings
 3871 0040 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3872 0042 002B     		cmp	r3, #0
 3873 0044 0BD1     		bne	.L143
 934:../LSM9DS1_Driver.c **** 		SPIreadBytes(_xgAddress, subAddress, dest, count);
 3874              		.loc 1 934 0
 3875 0046 40F20003 		movw	r3, #:lower16:_xgAddress
 3876 004a C0F20003 		movt	r3, #:upper16:_xgAddress
 3877 004e 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 3878 0050 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3879 0052 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3880 0054 0846     		mov	r0, r1
 3881 0056 1146     		mov	r1, r2
 3882 0058 3A68     		ldr	r2, [r7, #0]
 3883 005a FFF7FEFF 		bl	SPIreadBytes
 3884              	.L143:
 935:../LSM9DS1_Driver.c **** }
 3885              		.loc 1 935 0
 3886 005e 07F10807 		add	r7, r7, #8
 3887 0062 BD46     		mov	sp, r7
 3888 0064 80BD     		pop	{r7, pc}
 3889              		.cfi_endproc
 3890              	.LFE155:
 3892              		.section	.text.SPIreadBytes,"ax",%progbits
 3893              		.align	2
 3894              		.global	SPIreadBytes
 3895              		.thumb
 3896              		.thumb_func
 3898              	SPIreadBytes:
 3899              	.LFB156:
 936:../LSM9DS1_Driver.c **** 
 937:../LSM9DS1_Driver.c **** void SPIreadBytes(uint8_t csPin, uint8_t subAddress, uint8_t * dest, uint8_t count)
 938:../LSM9DS1_Driver.c **** {
 3900              		.loc 1 938 0
 3901              		.cfi_startproc
 3902              		@ args = 0, pretend = 0, frame = 8
 3903              		@ frame_needed = 1, uses_anonymous_args = 0
 3904              		@ link register save eliminated.
 3905 0000 80B4     		push	{r7}
 3906              	.LCFI106:
 3907              		.cfi_def_cfa_offset 4
 3908              		.cfi_offset 7, -4
 3909 0002 83B0     		sub	sp, sp, #12
 3910              	.LCFI107:
 3911              		.cfi_def_cfa_offset 16
 3912 0004 00AF     		add	r7, sp, #0
 3913              	.LCFI108:
 3914              		.cfi_def_cfa_register 7
 3915 0006 3A60     		str	r2, [r7, #0]
 3916 0008 0246     		mov	r2, r0
 3917 000a FA71     		strb	r2, [r7, #7]
 3918 000c 0A46     		mov	r2, r1
 3919 000e BA71     		strb	r2, [r7, #6]
 3920 0010 7B71     		strb	r3, [r7, #5]
 939:../LSM9DS1_Driver.c **** 	;
 940:../LSM9DS1_Driver.c **** }
 3921              		.loc 1 940 0
 3922 0012 07F10C07 		add	r7, r7, #12
 3923 0016 BD46     		mov	sp, r7
 3924 0018 80BC     		pop	{r7}
 3925 001a 7047     		bx	lr
 3926              		.cfi_endproc
 3927              	.LFE156:
 3929              		.section	.text.readGyro1,"ax",%progbits
 3930              		.align	2
 3931              		.global	readGyro1
 3932              		.thumb
 3933              		.thumb_func
 3935              	readGyro1:
 3936              	.LFB157:
 941:../LSM9DS1_Driver.c **** 
 942:../LSM9DS1_Driver.c **** void readGyro1(void)
 943:../LSM9DS1_Driver.c **** {
 3937              		.loc 1 943 0
 3938              		.cfi_startproc
 3939              		@ args = 0, pretend = 0, frame = 8
 3940              		@ frame_needed = 1, uses_anonymous_args = 0
 3941 0000 90B5     		push	{r4, r7, lr}
 3942              	.LCFI109:
 3943              		.cfi_def_cfa_offset 12
 3944              		.cfi_offset 4, -12
 3945              		.cfi_offset 7, -8
 3946              		.cfi_offset 14, -4
 3947 0002 83B0     		sub	sp, sp, #12
 3948              	.LCFI110:
 3949              		.cfi_def_cfa_offset 24
 3950 0004 00AF     		add	r7, sp, #0
 3951              	.LCFI111:
 3952              		.cfi_def_cfa_register 7
 944:../LSM9DS1_Driver.c **** 	uint8_t i = 0; //licznik dla czytania
 3953              		.loc 1 944 0
 3954 0006 4FF00003 		mov	r3, #0
 3955 000a FB71     		strb	r3, [r7, #7]
 945:../LSM9DS1_Driver.c **** 	uint8_t temp[6]; // We'll read six bytes from the gyro into temp
 946:../LSM9DS1_Driver.c **** 	uint8_t subAddr = OUT_X_L_G;
 3956              		.loc 1 946 0
 3957 000c 4FF01803 		mov	r3, #24
 3958 0010 BB71     		strb	r3, [r7, #6]
 947:../LSM9DS1_Driver.c **** 
 948:../LSM9DS1_Driver.c **** 
 949:../LSM9DS1_Driver.c **** 	while(i < 6)
 3959              		.loc 1 949 0
 3960 0012 24E0     		b	.L148
 3961              	.L149:
 950:../LSM9DS1_Driver.c **** 	{
 951:../LSM9DS1_Driver.c **** 		subAddr = OUT_X_L_G;
 3962              		.loc 1 951 0
 3963 0014 4FF01803 		mov	r3, #24
 3964 0018 BB71     		strb	r3, [r7, #6]
 952:../LSM9DS1_Driver.c **** 		subAddr = subAddr + i;
 3965              		.loc 1 952 0
 3966 001a BA79     		ldrb	r2, [r7, #6]
 3967 001c FB79     		ldrb	r3, [r7, #7]
 3968 001e D318     		adds	r3, r2, r3
 3969 0020 BB71     		strb	r3, [r7, #6]
 953:../LSM9DS1_Driver.c **** 		temp[i] = I2CreadBytes(_xgAddress, subAddr, NULL, 0);
 3970              		.loc 1 953 0
 3971 0022 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 3972 0024 40F20003 		movw	r3, #:lower16:_xgAddress
 3973 0028 C0F20003 		movt	r3, #:upper16:_xgAddress
 3974 002c 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 3975 002e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3976 0030 1046     		mov	r0, r2
 3977 0032 1946     		mov	r1, r3
 3978 0034 4FF00002 		mov	r2, #0
 3979 0038 4FF00003 		mov	r3, #0
 3980 003c FFF7FEFF 		bl	I2CreadBytes
 3981 0040 0346     		mov	r3, r0
 3982 0042 1A46     		mov	r2, r3
 3983 0044 07F10801 		add	r1, r7, #8
 3984 0048 0B19     		adds	r3, r1, r4
 3985 004a 03F8082C 		strb	r2, [r3, #-8]
 954:../LSM9DS1_Driver.c **** 		delay(DELAY);
 3986              		.loc 1 954 0
 3987 004e 42F6E060 		movw	r0, #12000
 3988 0052 FFF7FEFF 		bl	delay
 955:../LSM9DS1_Driver.c **** 		i++;
 3989              		.loc 1 955 0
 3990 0056 FB79     		ldrb	r3, [r7, #7]
 3991 0058 03F10103 		add	r3, r3, #1
 3992 005c FB71     		strb	r3, [r7, #7]
 3993              	.L148:
 949:../LSM9DS1_Driver.c **** 	while(i < 6)
 3994              		.loc 1 949 0 discriminator 1
 3995 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3996 0060 052B     		cmp	r3, #5
 3997 0062 D7D9     		bls	.L149
 956:../LSM9DS1_Driver.c **** 	}
 957:../LSM9DS1_Driver.c **** 
 958:../LSM9DS1_Driver.c **** 	gx = ((int8_t)temp[1] << 8) | (int8_t)temp[0]; // Store x-axis values into gx
 3998              		.loc 1 958 0
 3999 0064 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 4000 0066 DBB2     		uxtb	r3, r3
 4001 0068 5BB2     		sxtb	r3, r3
 4002 006a 4FEA0323 		lsl	r3, r3, #8
 4003 006e 9AB2     		uxth	r2, r3
 4004 0070 3B78     		ldrb	r3, [r7, #0]	@ zero_extendqisi2
 4005 0072 DBB2     		uxtb	r3, r3
 4006 0074 5BB2     		sxtb	r3, r3
 4007 0076 9BB2     		uxth	r3, r3
 4008 0078 1343     		orrs	r3, r3, r2
 4009 007a 9AB2     		uxth	r2, r3
 4010 007c 40F20003 		movw	r3, #:lower16:gx
 4011 0080 C0F20003 		movt	r3, #:upper16:gx
 4012 0084 1A80     		strh	r2, [r3, #0]	@ movhi
 959:../LSM9DS1_Driver.c **** 
 960:../LSM9DS1_Driver.c **** 	gy = (temp[3] << 8) | temp[2]; // Store y-axis values into gy
 4013              		.loc 1 960 0
 4014 0086 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4015 0088 4FEA0323 		lsl	r3, r3, #8
 4016 008c 9AB2     		uxth	r2, r3
 4017 008e BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 4018 0090 1343     		orrs	r3, r3, r2
 4019 0092 9AB2     		uxth	r2, r3
 4020 0094 40F20003 		movw	r3, #:lower16:gy
 4021 0098 C0F20003 		movt	r3, #:upper16:gy
 4022 009c 1A80     		strh	r2, [r3, #0]	@ movhi
 961:../LSM9DS1_Driver.c **** 
 962:../LSM9DS1_Driver.c **** 	gz = (temp[5] << 8) | temp[4]; // Store z-axis values into gz
 4023              		.loc 1 962 0
 4024 009e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4025 00a0 4FEA0323 		lsl	r3, r3, #8
 4026 00a4 9AB2     		uxth	r2, r3
 4027 00a6 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 4028 00a8 1343     		orrs	r3, r3, r2
 4029 00aa 9AB2     		uxth	r2, r3
 4030 00ac 40F20003 		movw	r3, #:lower16:gz
 4031 00b0 C0F20003 		movt	r3, #:upper16:gz
 4032 00b4 1A80     		strh	r2, [r3, #0]	@ movhi
 963:../LSM9DS1_Driver.c **** 
 964:../LSM9DS1_Driver.c **** 
 965:../LSM9DS1_Driver.c **** 
 966:../LSM9DS1_Driver.c **** 	if (_autoCalc) //kalibracja
 4033              		.loc 1 966 0
 4034 00b6 40F20003 		movw	r3, #:lower16:_autoCalc
 4035 00ba C0F20003 		movt	r3, #:upper16:_autoCalc
 4036 00be 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 4037 00c0 002B     		cmp	r3, #0
 4038 00c2 3BD0     		beq	.L147
 967:../LSM9DS1_Driver.c **** 	{
 968:../LSM9DS1_Driver.c **** 		gx -= gBiasRaw[X_AXIS];
 4039              		.loc 1 968 0
 4040 00c4 40F20003 		movw	r3, #:lower16:gx
 4041 00c8 C0F20003 		movt	r3, #:upper16:gx
 4042 00cc 1B88     		ldrh	r3, [r3, #0]
 4043 00ce 9AB2     		uxth	r2, r3
 4044 00d0 40F20003 		movw	r3, #:lower16:gBiasRaw
 4045 00d4 C0F20003 		movt	r3, #:upper16:gBiasRaw
 4046 00d8 1B88     		ldrh	r3, [r3, #0]
 4047 00da 9BB2     		uxth	r3, r3
 4048 00dc D31A     		subs	r3, r2, r3
 4049 00de 9BB2     		uxth	r3, r3
 4050 00e0 9AB2     		uxth	r2, r3
 4051 00e2 40F20003 		movw	r3, #:lower16:gx
 4052 00e6 C0F20003 		movt	r3, #:upper16:gx
 4053 00ea 1A80     		strh	r2, [r3, #0]	@ movhi
 969:../LSM9DS1_Driver.c **** 		gy -= gBiasRaw[Y_AXIS];
 4054              		.loc 1 969 0
 4055 00ec 40F20003 		movw	r3, #:lower16:gy
 4056 00f0 C0F20003 		movt	r3, #:upper16:gy
 4057 00f4 1B88     		ldrh	r3, [r3, #0]
 4058 00f6 9AB2     		uxth	r2, r3
 4059 00f8 40F20003 		movw	r3, #:lower16:gBiasRaw
 4060 00fc C0F20003 		movt	r3, #:upper16:gBiasRaw
 4061 0100 5B88     		ldrh	r3, [r3, #2]
 4062 0102 9BB2     		uxth	r3, r3
 4063 0104 D31A     		subs	r3, r2, r3
 4064 0106 9BB2     		uxth	r3, r3
 4065 0108 9AB2     		uxth	r2, r3
 4066 010a 40F20003 		movw	r3, #:lower16:gy
 4067 010e C0F20003 		movt	r3, #:upper16:gy
 4068 0112 1A80     		strh	r2, [r3, #0]	@ movhi
 970:../LSM9DS1_Driver.c **** 		gz -= gBiasRaw[Z_AXIS];
 4069              		.loc 1 970 0
 4070 0114 40F20003 		movw	r3, #:lower16:gz
 4071 0118 C0F20003 		movt	r3, #:upper16:gz
 4072 011c 1B88     		ldrh	r3, [r3, #0]
 4073 011e 9AB2     		uxth	r2, r3
 4074 0120 40F20003 		movw	r3, #:lower16:gBiasRaw
 4075 0124 C0F20003 		movt	r3, #:upper16:gBiasRaw
 4076 0128 9B88     		ldrh	r3, [r3, #4]
 4077 012a 9BB2     		uxth	r3, r3
 4078 012c D31A     		subs	r3, r2, r3
 4079 012e 9BB2     		uxth	r3, r3
 4080 0130 9AB2     		uxth	r2, r3
 4081 0132 40F20003 		movw	r3, #:lower16:gz
 4082 0136 C0F20003 		movt	r3, #:upper16:gz
 4083 013a 1A80     		strh	r2, [r3, #0]	@ movhi
 4084              	.L147:
 971:../LSM9DS1_Driver.c **** 	}
 972:../LSM9DS1_Driver.c **** 	/*gx = calcGyro(gx);
 973:../LSM9DS1_Driver.c **** 	gy = calcGyro(gy);
 974:../LSM9DS1_Driver.c **** 	gz = calcGyro(gz);*/
 975:../LSM9DS1_Driver.c **** }
 4085              		.loc 1 975 0
 4086 013c 07F10C07 		add	r7, r7, #12
 4087 0140 BD46     		mov	sp, r7
 4088 0142 90BD     		pop	{r4, r7, pc}
 4089              		.cfi_endproc
 4090              	.LFE157:
 4092              		.section	.text.readAccel1,"ax",%progbits
 4093              		.align	2
 4094              		.global	readAccel1
 4095              		.thumb
 4096              		.thumb_func
 4098              	readAccel1:
 4099              	.LFB158:
 976:../LSM9DS1_Driver.c **** 
 977:../LSM9DS1_Driver.c **** void readAccel1(void)
 978:../LSM9DS1_Driver.c **** {
 4100              		.loc 1 978 0
 4101              		.cfi_startproc
 4102              		@ args = 0, pretend = 0, frame = 8
 4103              		@ frame_needed = 1, uses_anonymous_args = 0
 4104 0000 90B5     		push	{r4, r7, lr}
 4105              	.LCFI112:
 4106              		.cfi_def_cfa_offset 12
 4107              		.cfi_offset 4, -12
 4108              		.cfi_offset 7, -8
 4109              		.cfi_offset 14, -4
 4110 0002 83B0     		sub	sp, sp, #12
 4111              	.LCFI113:
 4112              		.cfi_def_cfa_offset 24
 4113 0004 00AF     		add	r7, sp, #0
 4114              	.LCFI114:
 4115              		.cfi_def_cfa_register 7
 979:../LSM9DS1_Driver.c **** 	uint8_t i = 0; //licznik dla czytania
 4116              		.loc 1 979 0
 4117 0006 4FF00003 		mov	r3, #0
 4118 000a FB71     		strb	r3, [r7, #7]
 980:../LSM9DS1_Driver.c **** 	uint8_t temp[6]; // We'll read six bytes from the gyro into temp
 981:../LSM9DS1_Driver.c **** 	uint8_t subAddr = OUT_X_L_XL;
 4119              		.loc 1 981 0
 4120 000c 4FF02803 		mov	r3, #40
 4121 0010 BB71     		strb	r3, [r7, #6]
 982:../LSM9DS1_Driver.c **** 
 983:../LSM9DS1_Driver.c **** 	while(i < 6)
 4122              		.loc 1 983 0
 4123 0012 20E0     		b	.L152
 4124              	.L153:
 984:../LSM9DS1_Driver.c **** 	{
 985:../LSM9DS1_Driver.c **** 		subAddr = OUT_X_L_XL;
 4125              		.loc 1 985 0
 4126 0014 4FF02803 		mov	r3, #40
 4127 0018 BB71     		strb	r3, [r7, #6]
 986:../LSM9DS1_Driver.c **** 		subAddr = subAddr + i;
 4128              		.loc 1 986 0
 4129 001a BA79     		ldrb	r2, [r7, #6]
 4130 001c FB79     		ldrb	r3, [r7, #7]
 4131 001e D318     		adds	r3, r2, r3
 4132 0020 BB71     		strb	r3, [r7, #6]
 987:../LSM9DS1_Driver.c **** 		temp[i] = I2CreadBytes(_xgAddress, subAddr, NULL, 0);
 4133              		.loc 1 987 0
 4134 0022 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 4135 0024 40F20003 		movw	r3, #:lower16:_xgAddress
 4136 0028 C0F20003 		movt	r3, #:upper16:_xgAddress
 4137 002c 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 4138 002e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4139 0030 1046     		mov	r0, r2
 4140 0032 1946     		mov	r1, r3
 4141 0034 4FF00002 		mov	r2, #0
 4142 0038 4FF00003 		mov	r3, #0
 4143 003c FFF7FEFF 		bl	I2CreadBytes
 4144 0040 0346     		mov	r3, r0
 4145 0042 1A46     		mov	r2, r3
 4146 0044 07F10801 		add	r1, r7, #8
 4147 0048 0B19     		adds	r3, r1, r4
 4148 004a 03F8082C 		strb	r2, [r3, #-8]
 988:../LSM9DS1_Driver.c **** 		i++;
 4149              		.loc 1 988 0
 4150 004e FB79     		ldrb	r3, [r7, #7]
 4151 0050 03F10103 		add	r3, r3, #1
 4152 0054 FB71     		strb	r3, [r7, #7]
 4153              	.L152:
 983:../LSM9DS1_Driver.c **** 	while(i < 6)
 4154              		.loc 1 983 0 discriminator 1
 4155 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4156 0058 052B     		cmp	r3, #5
 4157 005a DBD9     		bls	.L153
 989:../LSM9DS1_Driver.c **** 	}
 990:../LSM9DS1_Driver.c **** 
 991:../LSM9DS1_Driver.c **** 	ax = (temp[1] << 8) | temp[0]; // Store x-axis values into ax
 4158              		.loc 1 991 0
 4159 005c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 4160 005e 4FEA0323 		lsl	r3, r3, #8
 4161 0062 9AB2     		uxth	r2, r3
 4162 0064 3B78     		ldrb	r3, [r7, #0]	@ zero_extendqisi2
 4163 0066 1343     		orrs	r3, r3, r2
 4164 0068 9AB2     		uxth	r2, r3
 4165 006a 40F20003 		movw	r3, #:lower16:ax
 4166 006e C0F20003 		movt	r3, #:upper16:ax
 4167 0072 1A80     		strh	r2, [r3, #0]	@ movhi
 992:../LSM9DS1_Driver.c **** 	ay = (temp[3] << 8) | temp[2]; // Store y-axis values into ay
 4168              		.loc 1 992 0
 4169 0074 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4170 0076 4FEA0323 		lsl	r3, r3, #8
 4171 007a 9AB2     		uxth	r2, r3
 4172 007c BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 4173 007e 1343     		orrs	r3, r3, r2
 4174 0080 9AB2     		uxth	r2, r3
 4175 0082 40F20003 		movw	r3, #:lower16:ay
 4176 0086 C0F20003 		movt	r3, #:upper16:ay
 4177 008a 1A80     		strh	r2, [r3, #0]	@ movhi
 993:../LSM9DS1_Driver.c **** 	az = (temp[5] << 8) | temp[4]; // Store z-axis values into az
 4178              		.loc 1 993 0
 4179 008c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4180 008e 4FEA0323 		lsl	r3, r3, #8
 4181 0092 9AB2     		uxth	r2, r3
 4182 0094 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 4183 0096 1343     		orrs	r3, r3, r2
 4184 0098 9AB2     		uxth	r2, r3
 4185 009a 40F20003 		movw	r3, #:lower16:az
 4186 009e C0F20003 		movt	r3, #:upper16:az
 4187 00a2 1A80     		strh	r2, [r3, #0]	@ movhi
 994:../LSM9DS1_Driver.c **** 
 995:../LSM9DS1_Driver.c **** 	if (_autoCalc) //kalibracja
 4188              		.loc 1 995 0
 4189 00a4 40F20003 		movw	r3, #:lower16:_autoCalc
 4190 00a8 C0F20003 		movt	r3, #:upper16:_autoCalc
 4191 00ac 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 4192 00ae 002B     		cmp	r3, #0
 4193 00b0 3BD0     		beq	.L151
 996:../LSM9DS1_Driver.c **** 	{
 997:../LSM9DS1_Driver.c **** 		ax -= aBiasRaw[X_AXIS];
 4194              		.loc 1 997 0
 4195 00b2 40F20003 		movw	r3, #:lower16:ax
 4196 00b6 C0F20003 		movt	r3, #:upper16:ax
 4197 00ba 1B88     		ldrh	r3, [r3, #0]
 4198 00bc 9AB2     		uxth	r2, r3
 4199 00be 40F20003 		movw	r3, #:lower16:aBiasRaw
 4200 00c2 C0F20003 		movt	r3, #:upper16:aBiasRaw
 4201 00c6 1B88     		ldrh	r3, [r3, #0]
 4202 00c8 9BB2     		uxth	r3, r3
 4203 00ca D31A     		subs	r3, r2, r3
 4204 00cc 9BB2     		uxth	r3, r3
 4205 00ce 9AB2     		uxth	r2, r3
 4206 00d0 40F20003 		movw	r3, #:lower16:ax
 4207 00d4 C0F20003 		movt	r3, #:upper16:ax
 4208 00d8 1A80     		strh	r2, [r3, #0]	@ movhi
 998:../LSM9DS1_Driver.c **** 		ay -= aBiasRaw[Y_AXIS];
 4209              		.loc 1 998 0
 4210 00da 40F20003 		movw	r3, #:lower16:ay
 4211 00de C0F20003 		movt	r3, #:upper16:ay
 4212 00e2 1B88     		ldrh	r3, [r3, #0]
 4213 00e4 9AB2     		uxth	r2, r3
 4214 00e6 40F20003 		movw	r3, #:lower16:aBiasRaw
 4215 00ea C0F20003 		movt	r3, #:upper16:aBiasRaw
 4216 00ee 5B88     		ldrh	r3, [r3, #2]
 4217 00f0 9BB2     		uxth	r3, r3
 4218 00f2 D31A     		subs	r3, r2, r3
 4219 00f4 9BB2     		uxth	r3, r3
 4220 00f6 9AB2     		uxth	r2, r3
 4221 00f8 40F20003 		movw	r3, #:lower16:ay
 4222 00fc C0F20003 		movt	r3, #:upper16:ay
 4223 0100 1A80     		strh	r2, [r3, #0]	@ movhi
 999:../LSM9DS1_Driver.c **** 		az -= aBiasRaw[Z_AXIS];
 4224              		.loc 1 999 0
 4225 0102 40F20003 		movw	r3, #:lower16:az
 4226 0106 C0F20003 		movt	r3, #:upper16:az
 4227 010a 1B88     		ldrh	r3, [r3, #0]
 4228 010c 9AB2     		uxth	r2, r3
 4229 010e 40F20003 		movw	r3, #:lower16:aBiasRaw
 4230 0112 C0F20003 		movt	r3, #:upper16:aBiasRaw
 4231 0116 9B88     		ldrh	r3, [r3, #4]
 4232 0118 9BB2     		uxth	r3, r3
 4233 011a D31A     		subs	r3, r2, r3
 4234 011c 9BB2     		uxth	r3, r3
 4235 011e 9AB2     		uxth	r2, r3
 4236 0120 40F20003 		movw	r3, #:lower16:az
 4237 0124 C0F20003 		movt	r3, #:upper16:az
 4238 0128 1A80     		strh	r2, [r3, #0]	@ movhi
 4239              	.L151:
1000:../LSM9DS1_Driver.c **** 	}
1001:../LSM9DS1_Driver.c **** 
1002:../LSM9DS1_Driver.c **** 	/*ax = calcAccel(ax);
1003:../LSM9DS1_Driver.c **** 	ay = calcAccel(ay);
1004:../LSM9DS1_Driver.c **** 	az = calcAccel(az);*/
1005:../LSM9DS1_Driver.c **** }
 4240              		.loc 1 1005 0
 4241 012a 07F10C07 		add	r7, r7, #12
 4242 012e BD46     		mov	sp, r7
 4243 0130 90BD     		pop	{r4, r7, pc}
 4244              		.cfi_endproc
 4245              	.LFE158:
 4247 0132 00BF     		.section	.text.readAccelToSensor,"ax",%progbits
 4248              		.align	2
 4249              		.global	readAccelToSensor
 4250              		.thumb
 4251              		.thumb_func
 4253              	readAccelToSensor:
 4254              	.LFB159:
1006:../LSM9DS1_Driver.c **** 
1007:../LSM9DS1_Driver.c **** void readAccelToSensor(accel *pomiar)
1008:../LSM9DS1_Driver.c **** {
 4255              		.loc 1 1008 0
 4256              		.cfi_startproc
 4257              		@ args = 0, pretend = 0, frame = 16
 4258              		@ frame_needed = 1, uses_anonymous_args = 0
 4259 0000 90B5     		push	{r4, r7, lr}
 4260              	.LCFI115:
 4261              		.cfi_def_cfa_offset 12
 4262              		.cfi_offset 4, -12
 4263              		.cfi_offset 7, -8
 4264              		.cfi_offset 14, -4
 4265 0002 85B0     		sub	sp, sp, #20
 4266              	.LCFI116:
 4267              		.cfi_def_cfa_offset 32
 4268 0004 00AF     		add	r7, sp, #0
 4269              	.LCFI117:
 4270              		.cfi_def_cfa_register 7
 4271 0006 7860     		str	r0, [r7, #4]
1009:../LSM9DS1_Driver.c **** 	uint8_t i = 0; //licznik dla czytania
 4272              		.loc 1 1009 0
 4273 0008 4FF00003 		mov	r3, #0
 4274 000c FB73     		strb	r3, [r7, #15]
1010:../LSM9DS1_Driver.c **** 	uint8_t temp[6]; // We'll read six bytes from the gyro into temp
1011:../LSM9DS1_Driver.c **** 	uint8_t subAddr = OUT_X_L_XL;
 4275              		.loc 1 1011 0
 4276 000e 4FF02803 		mov	r3, #40
 4277 0012 BB73     		strb	r3, [r7, #14]
1012:../LSM9DS1_Driver.c **** 
1013:../LSM9DS1_Driver.c **** 	while(i < 6)
 4278              		.loc 1 1013 0
 4279 0014 20E0     		b	.L156
 4280              	.L157:
1014:../LSM9DS1_Driver.c **** 	{
1015:../LSM9DS1_Driver.c **** 		subAddr = OUT_X_L_XL;
 4281              		.loc 1 1015 0
 4282 0016 4FF02803 		mov	r3, #40
 4283 001a BB73     		strb	r3, [r7, #14]
1016:../LSM9DS1_Driver.c **** 		subAddr = subAddr + i;
 4284              		.loc 1 1016 0
 4285 001c BA7B     		ldrb	r2, [r7, #14]
 4286 001e FB7B     		ldrb	r3, [r7, #15]
 4287 0020 D318     		adds	r3, r2, r3
 4288 0022 BB73     		strb	r3, [r7, #14]
1017:../LSM9DS1_Driver.c **** 		temp[i] = I2CreadBytes(_xgAddress, subAddr, NULL, 0);
 4289              		.loc 1 1017 0
 4290 0024 FC7B     		ldrb	r4, [r7, #15]	@ zero_extendqisi2
 4291 0026 40F20003 		movw	r3, #:lower16:_xgAddress
 4292 002a C0F20003 		movt	r3, #:upper16:_xgAddress
 4293 002e 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 4294 0030 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 4295 0032 1046     		mov	r0, r2
 4296 0034 1946     		mov	r1, r3
 4297 0036 4FF00002 		mov	r2, #0
 4298 003a 4FF00003 		mov	r3, #0
 4299 003e FFF7FEFF 		bl	I2CreadBytes
 4300 0042 0346     		mov	r3, r0
 4301 0044 1A46     		mov	r2, r3
 4302 0046 07F11001 		add	r1, r7, #16
 4303 004a 0B19     		adds	r3, r1, r4
 4304 004c 03F8082C 		strb	r2, [r3, #-8]
1018:../LSM9DS1_Driver.c **** 		i++;
 4305              		.loc 1 1018 0
 4306 0050 FB7B     		ldrb	r3, [r7, #15]
 4307 0052 03F10103 		add	r3, r3, #1
 4308 0056 FB73     		strb	r3, [r7, #15]
 4309              	.L156:
1013:../LSM9DS1_Driver.c **** 	while(i < 6)
 4310              		.loc 1 1013 0 discriminator 1
 4311 0058 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4312 005a 052B     		cmp	r3, #5
 4313 005c DBD9     		bls	.L157
1019:../LSM9DS1_Driver.c **** 	}
1020:../LSM9DS1_Driver.c **** 
1021:../LSM9DS1_Driver.c **** 	ax = (temp[1] << 8) | temp[0]; // Store x-axis values into ax
 4314              		.loc 1 1021 0
 4315 005e 7B7A     		ldrb	r3, [r7, #9]	@ zero_extendqisi2
 4316 0060 4FEA0323 		lsl	r3, r3, #8
 4317 0064 9AB2     		uxth	r2, r3
 4318 0066 3B7A     		ldrb	r3, [r7, #8]	@ zero_extendqisi2
 4319 0068 1343     		orrs	r3, r3, r2
 4320 006a 9AB2     		uxth	r2, r3
 4321 006c 40F20003 		movw	r3, #:lower16:ax
 4322 0070 C0F20003 		movt	r3, #:upper16:ax
 4323 0074 1A80     		strh	r2, [r3, #0]	@ movhi
1022:../LSM9DS1_Driver.c **** 	ay = (temp[3] << 8) | temp[2]; // Store y-axis values into ay
 4324              		.loc 1 1022 0
 4325 0076 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 4326 0078 4FEA0323 		lsl	r3, r3, #8
 4327 007c 9AB2     		uxth	r2, r3
 4328 007e BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 4329 0080 1343     		orrs	r3, r3, r2
 4330 0082 9AB2     		uxth	r2, r3
 4331 0084 40F20003 		movw	r3, #:lower16:ay
 4332 0088 C0F20003 		movt	r3, #:upper16:ay
 4333 008c 1A80     		strh	r2, [r3, #0]	@ movhi
1023:../LSM9DS1_Driver.c **** 	az = (temp[5] << 8) | temp[4]; // Store z-axis values into az
 4334              		.loc 1 1023 0
 4335 008e 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 4336 0090 4FEA0323 		lsl	r3, r3, #8
 4337 0094 9AB2     		uxth	r2, r3
 4338 0096 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 4339 0098 1343     		orrs	r3, r3, r2
 4340 009a 9AB2     		uxth	r2, r3
 4341 009c 40F20003 		movw	r3, #:lower16:az
 4342 00a0 C0F20003 		movt	r3, #:upper16:az
 4343 00a4 1A80     		strh	r2, [r3, #0]	@ movhi
1024:../LSM9DS1_Driver.c **** 
1025:../LSM9DS1_Driver.c **** 	if (_autoCalc) //kalibracja
 4344              		.loc 1 1025 0
 4345 00a6 40F20003 		movw	r3, #:lower16:_autoCalc
 4346 00aa C0F20003 		movt	r3, #:upper16:_autoCalc
 4347 00ae 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 4348 00b0 002B     		cmp	r3, #0
 4349 00b2 3BD0     		beq	.L158
1026:../LSM9DS1_Driver.c **** 	{
1027:../LSM9DS1_Driver.c **** 		ax -= aBiasRaw[X_AXIS];
 4350              		.loc 1 1027 0
 4351 00b4 40F20003 		movw	r3, #:lower16:ax
 4352 00b8 C0F20003 		movt	r3, #:upper16:ax
 4353 00bc 1B88     		ldrh	r3, [r3, #0]
 4354 00be 9AB2     		uxth	r2, r3
 4355 00c0 40F20003 		movw	r3, #:lower16:aBiasRaw
 4356 00c4 C0F20003 		movt	r3, #:upper16:aBiasRaw
 4357 00c8 1B88     		ldrh	r3, [r3, #0]
 4358 00ca 9BB2     		uxth	r3, r3
 4359 00cc D31A     		subs	r3, r2, r3
 4360 00ce 9BB2     		uxth	r3, r3
 4361 00d0 9AB2     		uxth	r2, r3
 4362 00d2 40F20003 		movw	r3, #:lower16:ax
 4363 00d6 C0F20003 		movt	r3, #:upper16:ax
 4364 00da 1A80     		strh	r2, [r3, #0]	@ movhi
1028:../LSM9DS1_Driver.c **** 		ay -= aBiasRaw[Y_AXIS];
 4365              		.loc 1 1028 0
 4366 00dc 40F20003 		movw	r3, #:lower16:ay
 4367 00e0 C0F20003 		movt	r3, #:upper16:ay
 4368 00e4 1B88     		ldrh	r3, [r3, #0]
 4369 00e6 9AB2     		uxth	r2, r3
 4370 00e8 40F20003 		movw	r3, #:lower16:aBiasRaw
 4371 00ec C0F20003 		movt	r3, #:upper16:aBiasRaw
 4372 00f0 5B88     		ldrh	r3, [r3, #2]
 4373 00f2 9BB2     		uxth	r3, r3
 4374 00f4 D31A     		subs	r3, r2, r3
 4375 00f6 9BB2     		uxth	r3, r3
 4376 00f8 9AB2     		uxth	r2, r3
 4377 00fa 40F20003 		movw	r3, #:lower16:ay
 4378 00fe C0F20003 		movt	r3, #:upper16:ay
 4379 0102 1A80     		strh	r2, [r3, #0]	@ movhi
1029:../LSM9DS1_Driver.c **** 		az -= aBiasRaw[Z_AXIS];
 4380              		.loc 1 1029 0
 4381 0104 40F20003 		movw	r3, #:lower16:az
 4382 0108 C0F20003 		movt	r3, #:upper16:az
 4383 010c 1B88     		ldrh	r3, [r3, #0]
 4384 010e 9AB2     		uxth	r2, r3
 4385 0110 40F20003 		movw	r3, #:lower16:aBiasRaw
 4386 0114 C0F20003 		movt	r3, #:upper16:aBiasRaw
 4387 0118 9B88     		ldrh	r3, [r3, #4]
 4388 011a 9BB2     		uxth	r3, r3
 4389 011c D31A     		subs	r3, r2, r3
 4390 011e 9BB2     		uxth	r3, r3
 4391 0120 9AB2     		uxth	r2, r3
 4392 0122 40F20003 		movw	r3, #:lower16:az
 4393 0126 C0F20003 		movt	r3, #:upper16:az
 4394 012a 1A80     		strh	r2, [r3, #0]	@ movhi
 4395              	.L158:
1030:../LSM9DS1_Driver.c **** 	}
1031:../LSM9DS1_Driver.c **** 
1032:../LSM9DS1_Driver.c **** 	ax = calcAccel(ax);
 4396              		.loc 1 1032 0
 4397 012c 40F20003 		movw	r3, #:lower16:ax
 4398 0130 C0F20003 		movt	r3, #:upper16:ax
 4399 0134 1B88     		ldrh	r3, [r3, #0]
 4400 0136 1BB2     		sxth	r3, r3
 4401 0138 1846     		mov	r0, r3
 4402 013a FFF7FEFF 		bl	calcAccel
 4403 013e 07EE900A 		fmsr	s15, r0
 4404 0142 FDEEE77A 		ftosizs	s15, s15
 4405 0146 17EE903A 		fmrs	r3, s15	@ int
 4406 014a 9AB2     		uxth	r2, r3
 4407 014c 40F20003 		movw	r3, #:lower16:ax
 4408 0150 C0F20003 		movt	r3, #:upper16:ax
 4409 0154 1A80     		strh	r2, [r3, #0]	@ movhi
1033:../LSM9DS1_Driver.c **** 	ay = calcAccel(ay);
 4410              		.loc 1 1033 0
 4411 0156 40F20003 		movw	r3, #:lower16:ay
 4412 015a C0F20003 		movt	r3, #:upper16:ay
 4413 015e 1B88     		ldrh	r3, [r3, #0]
 4414 0160 1BB2     		sxth	r3, r3
 4415 0162 1846     		mov	r0, r3
 4416 0164 FFF7FEFF 		bl	calcAccel
 4417 0168 07EE900A 		fmsr	s15, r0
 4418 016c FDEEE77A 		ftosizs	s15, s15
 4419 0170 17EE903A 		fmrs	r3, s15	@ int
 4420 0174 9AB2     		uxth	r2, r3
 4421 0176 40F20003 		movw	r3, #:lower16:ay
 4422 017a C0F20003 		movt	r3, #:upper16:ay
 4423 017e 1A80     		strh	r2, [r3, #0]	@ movhi
1034:../LSM9DS1_Driver.c **** 	az = calcAccel(az);
 4424              		.loc 1 1034 0
 4425 0180 40F20003 		movw	r3, #:lower16:az
 4426 0184 C0F20003 		movt	r3, #:upper16:az
 4427 0188 1B88     		ldrh	r3, [r3, #0]
 4428 018a 1BB2     		sxth	r3, r3
 4429 018c 1846     		mov	r0, r3
 4430 018e FFF7FEFF 		bl	calcAccel
 4431 0192 07EE900A 		fmsr	s15, r0
 4432 0196 FDEEE77A 		ftosizs	s15, s15
 4433 019a 17EE903A 		fmrs	r3, s15	@ int
 4434 019e 9AB2     		uxth	r2, r3
 4435 01a0 40F20003 		movw	r3, #:lower16:az
 4436 01a4 C0F20003 		movt	r3, #:upper16:az
 4437 01a8 1A80     		strh	r2, [r3, #0]	@ movhi
1035:../LSM9DS1_Driver.c **** 
1036:../LSM9DS1_Driver.c **** 	pomiar->ax = ax;
 4438              		.loc 1 1036 0
 4439 01aa 40F20003 		movw	r3, #:lower16:ax
 4440 01ae C0F20003 		movt	r3, #:upper16:ax
 4441 01b2 1A88     		ldrh	r2, [r3, #0]
 4442 01b4 7B68     		ldr	r3, [r7, #4]
 4443 01b6 1A80     		strh	r2, [r3, #0]	@ movhi
1037:../LSM9DS1_Driver.c **** 	pomiar->ay = ay;
 4444              		.loc 1 1037 0
 4445 01b8 40F20003 		movw	r3, #:lower16:ay
 4446 01bc C0F20003 		movt	r3, #:upper16:ay
 4447 01c0 1A88     		ldrh	r2, [r3, #0]
 4448 01c2 7B68     		ldr	r3, [r7, #4]
 4449 01c4 5A80     		strh	r2, [r3, #2]	@ movhi
1038:../LSM9DS1_Driver.c **** 	pomiar->az = az;
 4450              		.loc 1 1038 0
 4451 01c6 40F20003 		movw	r3, #:lower16:az
 4452 01ca C0F20003 		movt	r3, #:upper16:az
 4453 01ce 1A88     		ldrh	r2, [r3, #0]
 4454 01d0 7B68     		ldr	r3, [r7, #4]
 4455 01d2 9A80     		strh	r2, [r3, #4]	@ movhi
1039:../LSM9DS1_Driver.c **** }
 4456              		.loc 1 1039 0
 4457 01d4 07F11407 		add	r7, r7, #20
 4458 01d8 BD46     		mov	sp, r7
 4459 01da 90BD     		pop	{r4, r7, pc}
 4460              		.cfi_endproc
 4461              	.LFE159:
 4463              		.section	.text.I2CreadBytes,"ax",%progbits
 4464              		.align	2
 4465              		.global	I2CreadBytes
 4466              		.thumb
 4467              		.thumb_func
 4469              	I2CreadBytes:
 4470              	.LFB160:
1040:../LSM9DS1_Driver.c **** 
1041:../LSM9DS1_Driver.c **** uint8_t I2CreadBytes(uint8_t address, uint8_t subAddress, uint8_t * dest, uint8_t count)
1042:../LSM9DS1_Driver.c **** {
 4471              		.loc 1 1042 0
 4472              		.cfi_startproc
 4473              		@ args = 0, pretend = 0, frame = 40
 4474              		@ frame_needed = 1, uses_anonymous_args = 0
 4475 0000 80B5     		push	{r7, lr}
 4476              	.LCFI118:
 4477              		.cfi_def_cfa_offset 8
 4478              		.cfi_offset 7, -8
 4479              		.cfi_offset 14, -4
 4480 0002 8AB0     		sub	sp, sp, #40
 4481              	.LCFI119:
 4482              		.cfi_def_cfa_offset 48
 4483 0004 00AF     		add	r7, sp, #0
 4484              	.LCFI120:
 4485              		.cfi_def_cfa_register 7
 4486 0006 3A60     		str	r2, [r7, #0]
 4487 0008 0246     		mov	r2, r0
 4488 000a FA71     		strb	r2, [r7, #7]
 4489 000c 0A46     		mov	r2, r1
 4490 000e BA71     		strb	r2, [r7, #6]
 4491 0010 7B71     		strb	r3, [r7, #5]
1043:../LSM9DS1_Driver.c **** 		USIC_CH_TypeDef* I2CRegs = I2C001_Handle0.I2CRegs;
 4492              		.loc 1 1043 0
 4493 0012 40F20003 		movw	r3, #:lower16:I2C001_Handle0
 4494 0016 C0F20003 		movt	r3, #:upper16:I2C001_Handle0
 4495 001a 5B68     		ldr	r3, [r3, #4]
 4496 001c 7B62     		str	r3, [r7, #36]
1044:../LSM9DS1_Driver.c **** 
1045:../LSM9DS1_Driver.c **** 		I2C001_DataType data1;
1046:../LSM9DS1_Driver.c **** 		data1.Data1.TDF_Type = I2C_TDF_MStart;
 4497              		.loc 1 1046 0
 4498 001e 4FF00403 		mov	r3, #4
 4499 0022 7B77     		strb	r3, [r7, #29]
1047:../LSM9DS1_Driver.c **** 		data1.Data1.Data = ((address<<1) | I2C_WRITE);
 4500              		.loc 1 1047 0
 4501 0024 FB79     		ldrb	r3, [r7, #7]
 4502 0026 4FEA4303 		lsl	r3, r3, #1
 4503 002a DBB2     		uxtb	r3, r3
 4504 002c 3B77     		strb	r3, [r7, #28]
1048:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data1))
 4505              		.loc 1 1048 0
 4506 002e 07E0     		b	.L160
 4507              	.L161:
1049:../LSM9DS1_Driver.c **** 		{
1050:../LSM9DS1_Driver.c **** 			USIC_FlushTxFIFO(I2CRegs);
 4508              		.loc 1 1050 0
 4509 0030 7B6A     		ldr	r3, [r7, #36]
 4510 0032 D3F81831 		ldr	r3, [r3, #280]
 4511 0036 43F40042 		orr	r2, r3, #32768
 4512 003a 7B6A     		ldr	r3, [r7, #36]
 4513 003c C3F81821 		str	r2, [r3, #280]
 4514              	.L160:
1048:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data1))
 4515              		.loc 1 1048 0 discriminator 1
 4516 0040 07F11C03 		add	r3, r7, #28
 4517 0044 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 4518 0048 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 4519 004c 1946     		mov	r1, r3
 4520 004e FFF7FEFF 		bl	I2C001_WriteData
 4521 0052 0346     		mov	r3, r0
 4522 0054 002B     		cmp	r3, #0
 4523 0056 EBD0     		beq	.L161
1051:../LSM9DS1_Driver.c **** 		}
1052:../LSM9DS1_Driver.c **** 		delay(DELAY);
 4524              		.loc 1 1052 0
 4525 0058 42F6E060 		movw	r0, #12000
 4526 005c FFF7FEFF 		bl	delay
1053:../LSM9DS1_Driver.c **** 
1054:../LSM9DS1_Driver.c **** 		I2C001_DataType data2;
1055:../LSM9DS1_Driver.c **** 		data2.Data1.TDF_Type = I2C_TDF_MTxData;
 4527              		.loc 1 1055 0
 4528 0060 4FF00003 		mov	r3, #0
 4529 0064 7B76     		strb	r3, [r7, #25]
1056:../LSM9DS1_Driver.c **** 		data2.Data1.Data = (subAddress);
 4530              		.loc 1 1056 0
 4531 0066 BB79     		ldrb	r3, [r7, #6]
 4532 0068 3B76     		strb	r3, [r7, #24]
1057:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data2))
 4533              		.loc 1 1057 0
 4534 006a 07E0     		b	.L162
 4535              	.L163:
1058:../LSM9DS1_Driver.c **** 		{
1059:../LSM9DS1_Driver.c **** 			USIC_FlushTxFIFO(I2CRegs);
 4536              		.loc 1 1059 0
 4537 006c 7B6A     		ldr	r3, [r7, #36]
 4538 006e D3F81831 		ldr	r3, [r3, #280]
 4539 0072 43F40042 		orr	r2, r3, #32768
 4540 0076 7B6A     		ldr	r3, [r7, #36]
 4541 0078 C3F81821 		str	r2, [r3, #280]
 4542              	.L162:
1057:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data2))
 4543              		.loc 1 1057 0 discriminator 1
 4544 007c 07F11803 		add	r3, r7, #24
 4545 0080 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 4546 0084 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 4547 0088 1946     		mov	r1, r3
 4548 008a FFF7FEFF 		bl	I2C001_WriteData
 4549 008e 0346     		mov	r3, r0
 4550 0090 002B     		cmp	r3, #0
 4551 0092 EBD0     		beq	.L163
1060:../LSM9DS1_Driver.c **** 		}
1061:../LSM9DS1_Driver.c **** 		delay(DELAY);
 4552              		.loc 1 1061 0
 4553 0094 42F6E060 		movw	r0, #12000
 4554 0098 FFF7FEFF 		bl	delay
1062:../LSM9DS1_Driver.c **** 
1063:../LSM9DS1_Driver.c **** 		I2C001_DataType data3;
1064:../LSM9DS1_Driver.c **** 		data3.Data1.TDF_Type = I2C_TDF_MRStart;
 4555              		.loc 1 1064 0
 4556 009c 4FF00503 		mov	r3, #5
 4557 00a0 7B75     		strb	r3, [r7, #21]
1065:../LSM9DS1_Driver.c **** 		data3.Data1.Data = ((address<<1) | I2C_READ);
 4558              		.loc 1 1065 0
 4559 00a2 FB79     		ldrb	r3, [r7, #7]
 4560 00a4 4FEA4303 		lsl	r3, r3, #1
 4561 00a8 DBB2     		uxtb	r3, r3
 4562 00aa 43F00103 		orr	r3, r3, #1
 4563 00ae DBB2     		uxtb	r3, r3
 4564 00b0 3B75     		strb	r3, [r7, #20]
1066:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data3))
 4565              		.loc 1 1066 0
 4566 00b2 07E0     		b	.L164
 4567              	.L165:
1067:../LSM9DS1_Driver.c **** 		{
1068:../LSM9DS1_Driver.c **** 			USIC_FlushTxFIFO(I2CRegs);
 4568              		.loc 1 1068 0
 4569 00b4 7B6A     		ldr	r3, [r7, #36]
 4570 00b6 D3F81831 		ldr	r3, [r3, #280]
 4571 00ba 43F40042 		orr	r2, r3, #32768
 4572 00be 7B6A     		ldr	r3, [r7, #36]
 4573 00c0 C3F81821 		str	r2, [r3, #280]
 4574              	.L164:
1066:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data3))
 4575              		.loc 1 1066 0 discriminator 1
 4576 00c4 07F11403 		add	r3, r7, #20
 4577 00c8 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 4578 00cc C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 4579 00d0 1946     		mov	r1, r3
 4580 00d2 FFF7FEFF 		bl	I2C001_WriteData
 4581 00d6 0346     		mov	r3, r0
 4582 00d8 002B     		cmp	r3, #0
 4583 00da EBD0     		beq	.L165
1069:../LSM9DS1_Driver.c **** 		}
1070:../LSM9DS1_Driver.c **** 		delay(DELAY);
 4584              		.loc 1 1070 0
 4585 00dc 42F6E060 		movw	r0, #12000
 4586 00e0 FFF7FEFF 		bl	delay
1071:../LSM9DS1_Driver.c **** 
1072:../LSM9DS1_Driver.c **** 		I2C001_DataType data4;
1073:../LSM9DS1_Driver.c **** 		data4.Data1.TDF_Type = I2C_TDF_MRxAck1;
 4587              		.loc 1 1073 0
 4588 00e4 4FF00303 		mov	r3, #3
 4589 00e8 7B74     		strb	r3, [r7, #17]
1074:../LSM9DS1_Driver.c **** 		data4.Data1.Data = ubyteFF;
 4590              		.loc 1 1074 0
 4591 00ea 4FF0FF03 		mov	r3, #255
 4592 00ee 3B74     		strb	r3, [r7, #16]
1075:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data4))
 4593              		.loc 1 1075 0
 4594 00f0 07E0     		b	.L166
 4595              	.L167:
1076:../LSM9DS1_Driver.c **** 		{
1077:../LSM9DS1_Driver.c **** 			USIC_FlushTxFIFO(I2CRegs);
 4596              		.loc 1 1077 0
 4597 00f2 7B6A     		ldr	r3, [r7, #36]
 4598 00f4 D3F81831 		ldr	r3, [r3, #280]
 4599 00f8 43F40042 		orr	r2, r3, #32768
 4600 00fc 7B6A     		ldr	r3, [r7, #36]
 4601 00fe C3F81821 		str	r2, [r3, #280]
 4602              	.L166:
1075:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data4))
 4603              		.loc 1 1075 0 discriminator 1
 4604 0102 07F11003 		add	r3, r7, #16
 4605 0106 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 4606 010a C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 4607 010e 1946     		mov	r1, r3
 4608 0110 FFF7FEFF 		bl	I2C001_WriteData
 4609 0114 0346     		mov	r3, r0
 4610 0116 002B     		cmp	r3, #0
 4611 0118 EBD0     		beq	.L167
1078:../LSM9DS1_Driver.c **** 		}
1079:../LSM9DS1_Driver.c **** 		delay(DELAY);
 4612              		.loc 1 1079 0
 4613 011a 42F6E060 		movw	r0, #12000
 4614 011e FFF7FEFF 		bl	delay
1080:../LSM9DS1_Driver.c **** 
1081:../LSM9DS1_Driver.c **** 		I2C001_DataType data5;
1082:../LSM9DS1_Driver.c **** 		data5.Data1.TDF_Type = I2C_TDF_MStop;
 4615              		.loc 1 1082 0
 4616 0122 4FF00603 		mov	r3, #6
 4617 0126 7B73     		strb	r3, [r7, #13]
1083:../LSM9DS1_Driver.c **** 		data5.Data1.Data = ubyteFF;
 4618              		.loc 1 1083 0
 4619 0128 4FF0FF03 		mov	r3, #255
 4620 012c 3B73     		strb	r3, [r7, #12]
1084:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data5))
 4621              		.loc 1 1084 0
 4622 012e 07E0     		b	.L168
 4623              	.L169:
1085:../LSM9DS1_Driver.c **** 		{
1086:../LSM9DS1_Driver.c **** 			USIC_FlushTxFIFO(I2CRegs);
 4624              		.loc 1 1086 0
 4625 0130 7B6A     		ldr	r3, [r7, #36]
 4626 0132 D3F81831 		ldr	r3, [r3, #280]
 4627 0136 43F40042 		orr	r2, r3, #32768
 4628 013a 7B6A     		ldr	r3, [r7, #36]
 4629 013c C3F81821 		str	r2, [r3, #280]
 4630              	.L168:
1084:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data5))
 4631              		.loc 1 1084 0 discriminator 1
 4632 0140 07F10C03 		add	r3, r7, #12
 4633 0144 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 4634 0148 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 4635 014c 1946     		mov	r1, r3
 4636 014e FFF7FEFF 		bl	I2C001_WriteData
 4637 0152 0346     		mov	r3, r0
 4638 0154 002B     		cmp	r3, #0
 4639 0156 EBD0     		beq	.L169
1087:../LSM9DS1_Driver.c **** 		}
1088:../LSM9DS1_Driver.c **** 		delay(DELAY);
 4640              		.loc 1 1088 0
 4641 0158 42F6E060 		movw	r0, #12000
 4642 015c FFF7FEFF 		bl	delay
1089:../LSM9DS1_Driver.c **** 
1090:../LSM9DS1_Driver.c **** 		int k = 0;
 4643              		.loc 1 1090 0
 4644 0160 4FF00003 		mov	r3, #0
 4645 0164 3B62     		str	r3, [r7, #32]
1091:../LSM9DS1_Driver.c **** 
1092:../LSM9DS1_Driver.c **** 		uint16_t buffer = 0;
 4646              		.loc 1 1092 0
 4647 0166 4FF00003 		mov	r3, #0
 4648 016a 7B81     		strh	r3, [r7, #10]	@ movhi
1093:../LSM9DS1_Driver.c **** 		if(I2C001_ReadData(&I2C001_Handle0,&buffer))
 4649              		.loc 1 1093 0
 4650 016c 07F10A03 		add	r3, r7, #10
 4651 0170 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 4652 0174 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 4653 0178 1946     		mov	r1, r3
 4654 017a FFF7FEFF 		bl	I2C001_ReadData
 4655 017e 0346     		mov	r3, r0
 4656 0180 002B     		cmp	r3, #0
 4657 0182 08D0     		beq	.L170
1094:../LSM9DS1_Driver.c **** 		{
1095:../LSM9DS1_Driver.c **** 			delay(DELAY);
 4658              		.loc 1 1095 0
 4659 0184 42F6E060 		movw	r0, #12000
 4660 0188 FFF7FEFF 		bl	delay
1096:../LSM9DS1_Driver.c **** 			k++;
 4661              		.loc 1 1096 0
 4662 018c 3B6A     		ldr	r3, [r7, #32]
 4663 018e 03F10103 		add	r3, r3, #1
 4664 0192 3B62     		str	r3, [r7, #32]
 4665 0194 03E0     		b	.L171
 4666              	.L170:
1097:../LSM9DS1_Driver.c **** 		}
1098:../LSM9DS1_Driver.c **** 		else
1099:../LSM9DS1_Driver.c **** 		{
1100:../LSM9DS1_Driver.c **** 			k--;
 4667              		.loc 1 1100 0
 4668 0196 3B6A     		ldr	r3, [r7, #32]
 4669 0198 03F1FF33 		add	r3, r3, #-1
 4670 019c 3B62     		str	r3, [r7, #32]
 4671              	.L171:
1101:../LSM9DS1_Driver.c **** 		}
1102:../LSM9DS1_Driver.c **** 		delay(DELAY);
 4672              		.loc 1 1102 0
 4673 019e 42F6E060 		movw	r0, #12000
 4674 01a2 FFF7FEFF 		bl	delay
1103:../LSM9DS1_Driver.c **** 		return (uint8_t)buffer;
 4675              		.loc 1 1103 0
 4676 01a6 7B89     		ldrh	r3, [r7, #10]
 4677 01a8 DBB2     		uxtb	r3, r3
1104:../LSM9DS1_Driver.c **** }
 4678              		.loc 1 1104 0
 4679 01aa 1846     		mov	r0, r3
 4680 01ac 07F12807 		add	r7, r7, #40
 4681 01b0 BD46     		mov	sp, r7
 4682 01b2 80BD     		pop	{r7, pc}
 4683              		.cfi_endproc
 4684              	.LFE160:
 4686              		.section	.text.magAvailable,"ax",%progbits
 4687              		.align	2
 4688              		.global	magAvailable
 4689              		.thumb
 4690              		.thumb_func
 4692              	magAvailable:
 4693              	.LFB161:
1105:../LSM9DS1_Driver.c **** 
1106:../LSM9DS1_Driver.c **** uint8_t magAvailable(lsm9ds1_axis axis)
1107:../LSM9DS1_Driver.c **** {
 4694              		.loc 1 1107 0
 4695              		.cfi_startproc
 4696              		@ args = 0, pretend = 0, frame = 16
 4697              		@ frame_needed = 1, uses_anonymous_args = 0
 4698 0000 80B5     		push	{r7, lr}
 4699              	.LCFI121:
 4700              		.cfi_def_cfa_offset 8
 4701              		.cfi_offset 7, -8
 4702              		.cfi_offset 14, -4
 4703 0002 84B0     		sub	sp, sp, #16
 4704              	.LCFI122:
 4705              		.cfi_def_cfa_offset 24
 4706 0004 00AF     		add	r7, sp, #0
 4707              	.LCFI123:
 4708              		.cfi_def_cfa_register 7
 4709 0006 0346     		mov	r3, r0
 4710 0008 FB71     		strb	r3, [r7, #7]
1108:../LSM9DS1_Driver.c **** 	uint8_t status;
1109:../LSM9DS1_Driver.c **** 	status = mReadByte(STATUS_REG_M);
 4711              		.loc 1 1109 0
 4712 000a 4FF02700 		mov	r0, #39
 4713 000e FFF7FEFF 		bl	mReadByte
 4714 0012 0346     		mov	r3, r0
 4715 0014 FB73     		strb	r3, [r7, #15]
1110:../LSM9DS1_Driver.c **** 
1111:../LSM9DS1_Driver.c **** 	return ((status & (1<<axis)) >> axis);
 4716              		.loc 1 1111 0
 4717 0016 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4718 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4719 001a 4FF00101 		mov	r1, #1
 4720 001e 01FA03F3 		lsl	r3, r1, r3
 4721 0022 1A40     		ands	r2, r2, r3
 4722 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4723 0026 42FA03F3 		asr	r3, r2, r3
 4724 002a DBB2     		uxtb	r3, r3
1112:../LSM9DS1_Driver.c **** }
 4725              		.loc 1 1112 0
 4726 002c 1846     		mov	r0, r3
 4727 002e 07F11007 		add	r7, r7, #16
 4728 0032 BD46     		mov	sp, r7
 4729 0034 80BD     		pop	{r7, pc}
 4730              		.cfi_endproc
 4731              	.LFE161:
 4733 0036 00BF     		.section	.text.readMag1,"ax",%progbits
 4734              		.align	2
 4735              		.global	readMag1
 4736              		.thumb
 4737              		.thumb_func
 4739              	readMag1:
 4740              	.LFB162:
1113:../LSM9DS1_Driver.c **** 
1114:../LSM9DS1_Driver.c **** void readMag1(void)
1115:../LSM9DS1_Driver.c **** {
 4741              		.loc 1 1115 0
 4742              		.cfi_startproc
 4743              		@ args = 0, pretend = 0, frame = 8
 4744              		@ frame_needed = 1, uses_anonymous_args = 0
 4745 0000 90B5     		push	{r4, r7, lr}
 4746              	.LCFI124:
 4747              		.cfi_def_cfa_offset 12
 4748              		.cfi_offset 4, -12
 4749              		.cfi_offset 7, -8
 4750              		.cfi_offset 14, -4
 4751 0002 83B0     		sub	sp, sp, #12
 4752              	.LCFI125:
 4753              		.cfi_def_cfa_offset 24
 4754 0004 00AF     		add	r7, sp, #0
 4755              	.LCFI126:
 4756              		.cfi_def_cfa_register 7
1116:../LSM9DS1_Driver.c **** 	//for(int kl = 0; kl < 10; kl++){
1117:../LSM9DS1_Driver.c **** 	uint8_t temp[6]; // We'll read six bytes from the mag into temp
1118:../LSM9DS1_Driver.c **** 	uint8_t subAddress = OUT_X_L_M;
 4757              		.loc 1 1118 0
 4758 0006 4FF02803 		mov	r3, #40
 4759 000a BB71     		strb	r3, [r7, #6]
1119:../LSM9DS1_Driver.c **** 	uint8_t i = 0;
 4760              		.loc 1 1119 0
 4761 000c 4FF00003 		mov	r3, #0
 4762 0010 FB71     		strb	r3, [r7, #7]
1120:../LSM9DS1_Driver.c **** 
1121:../LSM9DS1_Driver.c **** 	while(i < 6)
 4763              		.loc 1 1121 0
 4764 0012 19E0     		b	.L176
 4765              	.L177:
1122:../LSM9DS1_Driver.c **** 	{
1123:../LSM9DS1_Driver.c **** 		temp[i] = I2CreadBytes(_mAddress, subAddress, NULL, 0);
 4766              		.loc 1 1123 0
 4767 0014 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 4768 0016 40F20003 		movw	r3, #:lower16:_mAddress
 4769 001a C0F20003 		movt	r3, #:upper16:_mAddress
 4770 001e 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 4771 0020 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4772 0022 1046     		mov	r0, r2
 4773 0024 1946     		mov	r1, r3
 4774 0026 4FF00002 		mov	r2, #0
 4775 002a 4FF00003 		mov	r3, #0
 4776 002e FFF7FEFF 		bl	I2CreadBytes
 4777 0032 0346     		mov	r3, r0
 4778 0034 1A46     		mov	r2, r3
 4779 0036 07F10801 		add	r1, r7, #8
 4780 003a 0B19     		adds	r3, r1, r4
 4781 003c 03F8082C 		strb	r2, [r3, #-8]
1124:../LSM9DS1_Driver.c **** 		i++;
 4782              		.loc 1 1124 0
 4783 0040 FB79     		ldrb	r3, [r7, #7]
 4784 0042 03F10103 		add	r3, r3, #1
 4785 0046 FB71     		strb	r3, [r7, #7]
 4786              	.L176:
1121:../LSM9DS1_Driver.c **** 	while(i < 6)
 4787              		.loc 1 1121 0 discriminator 1
 4788 0048 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4789 004a 052B     		cmp	r3, #5
 4790 004c E2D9     		bls	.L177
1125:../LSM9DS1_Driver.c **** 	}
1126:../LSM9DS1_Driver.c **** 
1127:../LSM9DS1_Driver.c **** 	mx = (temp[1] << 8) | temp[0]; // Store x-axis values into mx
 4791              		.loc 1 1127 0
 4792 004e 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 4793 0050 4FEA0323 		lsl	r3, r3, #8
 4794 0054 9AB2     		uxth	r2, r3
 4795 0056 3B78     		ldrb	r3, [r7, #0]	@ zero_extendqisi2
 4796 0058 1343     		orrs	r3, r3, r2
 4797 005a 9AB2     		uxth	r2, r3
 4798 005c 40F20003 		movw	r3, #:lower16:mx
 4799 0060 C0F20003 		movt	r3, #:upper16:mx
 4800 0064 1A80     		strh	r2, [r3, #0]	@ movhi
1128:../LSM9DS1_Driver.c **** 	my = (temp[3] << 8) | temp[2]; // Store y-axis values into my
 4801              		.loc 1 1128 0
 4802 0066 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4803 0068 4FEA0323 		lsl	r3, r3, #8
 4804 006c 9AB2     		uxth	r2, r3
 4805 006e BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 4806 0070 1343     		orrs	r3, r3, r2
 4807 0072 9AB2     		uxth	r2, r3
 4808 0074 40F20003 		movw	r3, #:lower16:my
 4809 0078 C0F20003 		movt	r3, #:upper16:my
 4810 007c 1A80     		strh	r2, [r3, #0]	@ movhi
1129:../LSM9DS1_Driver.c **** 	mz = (temp[5] << 8) | temp[4]; // Store z-axis values into mz
 4811              		.loc 1 1129 0
 4812 007e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4813 0080 4FEA0323 		lsl	r3, r3, #8
 4814 0084 9AB2     		uxth	r2, r3
 4815 0086 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 4816 0088 1343     		orrs	r3, r3, r2
 4817 008a 9AB2     		uxth	r2, r3
 4818 008c 40F20003 		movw	r3, #:lower16:mz
 4819 0090 C0F20003 		movt	r3, #:upper16:mz
 4820 0094 1A80     		strh	r2, [r3, #0]	@ movhi
1130:../LSM9DS1_Driver.c **** 
1131:../LSM9DS1_Driver.c **** 	/*mx = calcMag(mx);
1132:../LSM9DS1_Driver.c **** 	my = calcMag(my);
1133:../LSM9DS1_Driver.c **** 	mz = calcMag(mz);*?
1134:../LSM9DS1_Driver.c **** 	/*}*/
1135:../LSM9DS1_Driver.c **** 
1136:../LSM9DS1_Driver.c **** 
1137:../LSM9DS1_Driver.c **** }
 4821              		.loc 1 1137 0
 4822 0096 07F10C07 		add	r7, r7, #12
 4823 009a BD46     		mov	sp, r7
 4824 009c 90BD     		pop	{r4, r7, pc}
 4825              		.cfi_endproc
 4826              	.LFE162:
 4828 009e 00BF     		.section	.text.calibrateMag,"ax",%progbits
 4829              		.align	2
 4830              		.global	calibrateMag
 4831              		.thumb
 4832              		.thumb_func
 4834              	calibrateMag:
 4835              	.LFB163:
1138:../LSM9DS1_Driver.c **** 
1139:../LSM9DS1_Driver.c **** 
1140:../LSM9DS1_Driver.c **** void calibrateMag(bool loadIn)
1141:../LSM9DS1_Driver.c **** {
 4836              		.loc 1 1141 0
 4837              		.cfi_startproc
 4838              		@ args = 0, pretend = 0, frame = 40
 4839              		@ frame_needed = 1, uses_anonymous_args = 0
 4840 0000 80B5     		push	{r7, lr}
 4841              	.LCFI127:
 4842              		.cfi_def_cfa_offset 8
 4843              		.cfi_offset 7, -8
 4844              		.cfi_offset 14, -4
 4845 0002 8AB0     		sub	sp, sp, #40
 4846              	.LCFI128:
 4847              		.cfi_def_cfa_offset 48
 4848 0004 00AF     		add	r7, sp, #0
 4849              	.LCFI129:
 4850              		.cfi_def_cfa_register 7
 4851 0006 0346     		mov	r3, r0
 4852 0008 FB71     		strb	r3, [r7, #7]
1142:../LSM9DS1_Driver.c **** 	int i, j;
1143:../LSM9DS1_Driver.c **** 	int16_t magMin[3] = {0, 0, 0};
 4853              		.loc 1 1143 0
 4854 000a 4FF00003 		mov	r3, #0
 4855 000e 3B83     		strh	r3, [r7, #24]	@ movhi
 4856 0010 4FF00003 		mov	r3, #0
 4857 0014 7B83     		strh	r3, [r7, #26]	@ movhi
 4858 0016 4FF00003 		mov	r3, #0
 4859 001a BB83     		strh	r3, [r7, #28]	@ movhi
1144:../LSM9DS1_Driver.c **** 	int16_t magMax[3] = {0, 0, 0}; // The road warrior
 4860              		.loc 1 1144 0
 4861 001c 4FF00003 		mov	r3, #0
 4862 0020 3B82     		strh	r3, [r7, #16]	@ movhi
 4863 0022 4FF00003 		mov	r3, #0
 4864 0026 7B82     		strh	r3, [r7, #18]	@ movhi
 4865 0028 4FF00003 		mov	r3, #0
 4866 002c BB82     		strh	r3, [r7, #20]	@ movhi
1145:../LSM9DS1_Driver.c **** 
1146:../LSM9DS1_Driver.c **** 	for (i=0; i<128; i++)
 4867              		.loc 1 1146 0
 4868 002e 4FF00003 		mov	r3, #0
 4869 0032 7B62     		str	r3, [r7, #36]
 4870 0034 7CE0     		b	.L179
 4871              	.L189:
 4872              	.LBB6:
1147:../LSM9DS1_Driver.c **** 	{
1148:../LSM9DS1_Driver.c **** 		//tu nie wiem
1149:../LSM9DS1_Driver.c **** 		while (!magAvailable(i))
 4873              		.loc 1 1149 0
 4874 0036 00BF     		nop
 4875              	.L180:
 4876              		.loc 1 1149 0 is_stmt 0 discriminator 1
 4877 0038 7B6A     		ldr	r3, [r7, #36]
 4878 003a DBB2     		uxtb	r3, r3
 4879 003c 1846     		mov	r0, r3
 4880 003e FFF7FEFF 		bl	magAvailable
 4881 0042 0346     		mov	r3, r0
 4882 0044 002B     		cmp	r3, #0
 4883 0046 F7D0     		beq	.L180
1150:../LSM9DS1_Driver.c **** 			;
1151:../LSM9DS1_Driver.c **** 		readMag1();
 4884              		.loc 1 1151 0 is_stmt 1
 4885 0048 FFF7FEFF 		bl	readMag1
1152:../LSM9DS1_Driver.c **** 		int16_t magTemp[3] = {0, 0, 0};
 4886              		.loc 1 1152 0
 4887 004c 4FF00003 		mov	r3, #0
 4888 0050 3B81     		strh	r3, [r7, #8]	@ movhi
 4889 0052 4FF00003 		mov	r3, #0
 4890 0056 7B81     		strh	r3, [r7, #10]	@ movhi
 4891 0058 4FF00003 		mov	r3, #0
 4892 005c BB81     		strh	r3, [r7, #12]	@ movhi
1153:../LSM9DS1_Driver.c **** 		magTemp[0] = mx;
 4893              		.loc 1 1153 0
 4894 005e 40F20003 		movw	r3, #:lower16:mx
 4895 0062 C0F20003 		movt	r3, #:upper16:mx
 4896 0066 1B88     		ldrh	r3, [r3, #0]
 4897 0068 3B81     		strh	r3, [r7, #8]	@ movhi
1154:../LSM9DS1_Driver.c **** 		magTemp[1] = my;
 4898              		.loc 1 1154 0
 4899 006a 40F20003 		movw	r3, #:lower16:my
 4900 006e C0F20003 		movt	r3, #:upper16:my
 4901 0072 1B88     		ldrh	r3, [r3, #0]
 4902 0074 7B81     		strh	r3, [r7, #10]	@ movhi
1155:../LSM9DS1_Driver.c **** 		magTemp[2] = mz;
 4903              		.loc 1 1155 0
 4904 0076 40F20003 		movw	r3, #:lower16:mz
 4905 007a C0F20003 		movt	r3, #:upper16:mz
 4906 007e 1B88     		ldrh	r3, [r3, #0]
 4907 0080 BB81     		strh	r3, [r7, #12]	@ movhi
1156:../LSM9DS1_Driver.c **** 		for (j = 0; j < 3; j++)
 4908              		.loc 1 1156 0
 4909 0082 4FF00003 		mov	r3, #0
 4910 0086 3B62     		str	r3, [r7, #32]
 4911 0088 4BE0     		b	.L181
 4912              	.L184:
1157:../LSM9DS1_Driver.c **** 		{
1158:../LSM9DS1_Driver.c **** 			if (magTemp[j] > magMax[j]) magMax[j] = magTemp[j];
 4913              		.loc 1 1158 0
 4914 008a 3B6A     		ldr	r3, [r7, #32]
 4915 008c 4FEA4303 		lsl	r3, r3, #1
 4916 0090 07F12801 		add	r1, r7, #40
 4917 0094 CB18     		adds	r3, r1, r3
 4918 0096 33F8202C 		ldrh	r2, [r3, #-32]
 4919 009a 3B6A     		ldr	r3, [r7, #32]
 4920 009c 4FEA4303 		lsl	r3, r3, #1
 4921 00a0 07F12801 		add	r1, r7, #40
 4922 00a4 CB18     		adds	r3, r1, r3
 4923 00a6 33F8183C 		ldrh	r3, [r3, #-24]
 4924 00aa 12B2     		sxth	r2, r2
 4925 00ac 1BB2     		sxth	r3, r3
 4926 00ae 9A42     		cmp	r2, r3
 4927 00b0 0FDD     		ble	.L182
 4928              		.loc 1 1158 0 is_stmt 0 discriminator 1
 4929 00b2 3B6A     		ldr	r3, [r7, #32]
 4930 00b4 4FEA4303 		lsl	r3, r3, #1
 4931 00b8 07F12802 		add	r2, r7, #40
 4932 00bc D318     		adds	r3, r2, r3
 4933 00be 33F8202C 		ldrh	r2, [r3, #-32]
 4934 00c2 3B6A     		ldr	r3, [r7, #32]
 4935 00c4 4FEA4303 		lsl	r3, r3, #1
 4936 00c8 07F12801 		add	r1, r7, #40
 4937 00cc CB18     		adds	r3, r1, r3
 4938 00ce 23F8182C 		strh	r2, [r3, #-24]	@ movhi
 4939              	.L182:
1159:../LSM9DS1_Driver.c **** 			if (magTemp[j] < magMin[j]) magMin[j] = magTemp[j];
 4940              		.loc 1 1159 0 is_stmt 1
 4941 00d2 3B6A     		ldr	r3, [r7, #32]
 4942 00d4 4FEA4303 		lsl	r3, r3, #1
 4943 00d8 07F12802 		add	r2, r7, #40
 4944 00dc D318     		adds	r3, r2, r3
 4945 00de 33F8202C 		ldrh	r2, [r3, #-32]
 4946 00e2 3B6A     		ldr	r3, [r7, #32]
 4947 00e4 4FEA4303 		lsl	r3, r3, #1
 4948 00e8 07F12801 		add	r1, r7, #40
 4949 00ec CB18     		adds	r3, r1, r3
 4950 00ee 33F8103C 		ldrh	r3, [r3, #-16]
 4951 00f2 12B2     		sxth	r2, r2
 4952 00f4 1BB2     		sxth	r3, r3
 4953 00f6 9A42     		cmp	r2, r3
 4954 00f8 0FDA     		bge	.L183
 4955              		.loc 1 1159 0 is_stmt 0 discriminator 1
 4956 00fa 3B6A     		ldr	r3, [r7, #32]
 4957 00fc 4FEA4303 		lsl	r3, r3, #1
 4958 0100 07F12802 		add	r2, r7, #40
 4959 0104 D318     		adds	r3, r2, r3
 4960 0106 33F8202C 		ldrh	r2, [r3, #-32]
 4961 010a 3B6A     		ldr	r3, [r7, #32]
 4962 010c 4FEA4303 		lsl	r3, r3, #1
 4963 0110 07F12801 		add	r1, r7, #40
 4964 0114 CB18     		adds	r3, r1, r3
 4965 0116 23F8102C 		strh	r2, [r3, #-16]	@ movhi
 4966              	.L183:
1156:../LSM9DS1_Driver.c **** 		for (j = 0; j < 3; j++)
 4967              		.loc 1 1156 0 is_stmt 1
 4968 011a 3B6A     		ldr	r3, [r7, #32]
 4969 011c 03F10103 		add	r3, r3, #1
 4970 0120 3B62     		str	r3, [r7, #32]
 4971              	.L181:
1156:../LSM9DS1_Driver.c **** 		for (j = 0; j < 3; j++)
 4972              		.loc 1 1156 0 is_stmt 0 discriminator 1
 4973 0122 3B6A     		ldr	r3, [r7, #32]
 4974 0124 022B     		cmp	r3, #2
 4975 0126 B0DD     		ble	.L184
 4976              	.LBE6:
1146:../LSM9DS1_Driver.c **** 	for (i=0; i<128; i++)
 4977              		.loc 1 1146 0 is_stmt 1
 4978 0128 7B6A     		ldr	r3, [r7, #36]
 4979 012a 03F10103 		add	r3, r3, #1
 4980 012e 7B62     		str	r3, [r7, #36]
 4981              	.L179:
1146:../LSM9DS1_Driver.c **** 	for (i=0; i<128; i++)
 4982              		.loc 1 1146 0 is_stmt 0 discriminator 1
 4983 0130 7B6A     		ldr	r3, [r7, #36]
 4984 0132 7F2B     		cmp	r3, #127
 4985 0134 7FF77FAF 		ble	.L189
1160:../LSM9DS1_Driver.c **** 		}
1161:../LSM9DS1_Driver.c **** 	}
1162:../LSM9DS1_Driver.c **** 	for (j = 0; j < 3; j++)
 4986              		.loc 1 1162 0 is_stmt 1
 4987 0138 4FF00003 		mov	r3, #0
 4988 013c 3B62     		str	r3, [r7, #32]
 4989 013e 49E0     		b	.L186
 4990              	.L188:
1163:../LSM9DS1_Driver.c **** 	{
1164:../LSM9DS1_Driver.c **** 		mBiasRaw[j] = (magMax[j] + magMin[j]) / 2;
 4991              		.loc 1 1164 0
 4992 0140 3B6A     		ldr	r3, [r7, #32]
 4993 0142 4FEA4303 		lsl	r3, r3, #1
 4994 0146 07F12802 		add	r2, r7, #40
 4995 014a D318     		adds	r3, r2, r3
 4996 014c 33F8183C 		ldrh	r3, [r3, #-24]
 4997 0150 1AB2     		sxth	r2, r3
 4998 0152 3B6A     		ldr	r3, [r7, #32]
 4999 0154 4FEA4303 		lsl	r3, r3, #1
 5000 0158 07F12801 		add	r1, r7, #40
 5001 015c CB18     		adds	r3, r1, r3
 5002 015e 33F8103C 		ldrh	r3, [r3, #-16]
 5003 0162 1BB2     		sxth	r3, r3
 5004 0164 D318     		adds	r3, r2, r3
 5005 0166 4FEAD372 		lsr	r2, r3, #31
 5006 016a D318     		adds	r3, r2, r3
 5007 016c 4FEA6303 		asr	r3, r3, #1
 5008 0170 99B2     		uxth	r1, r3
 5009 0172 40F20003 		movw	r3, #:lower16:mBiasRaw
 5010 0176 C0F20003 		movt	r3, #:upper16:mBiasRaw
 5011 017a 3A6A     		ldr	r2, [r7, #32]
 5012 017c 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
1165:../LSM9DS1_Driver.c **** 		mBias[j] = calcMag(mBiasRaw[j]);
 5013              		.loc 1 1165 0
 5014 0180 40F20003 		movw	r3, #:lower16:mBiasRaw
 5015 0184 C0F20003 		movt	r3, #:upper16:mBiasRaw
 5016 0188 3A6A     		ldr	r2, [r7, #32]
 5017 018a 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 5018 018e 1BB2     		sxth	r3, r3
 5019 0190 1846     		mov	r0, r3
 5020 0192 FFF7FEFF 		bl	calcMag
 5021 0196 0246     		mov	r2, r0	@ float
 5022 0198 40F20003 		movw	r3, #:lower16:mBias
 5023 019c C0F20003 		movt	r3, #:upper16:mBias
 5024 01a0 396A     		ldr	r1, [r7, #32]
 5025 01a2 4FEA8101 		lsl	r1, r1, #2
 5026 01a6 5B18     		adds	r3, r3, r1
 5027 01a8 1A60     		str	r2, [r3, #0]	@ float
1166:../LSM9DS1_Driver.c **** 		if (loadIn)
 5028              		.loc 1 1166 0
 5029 01aa FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5030 01ac 002B     		cmp	r3, #0
 5031 01ae 0DD0     		beq	.L187
1167:../LSM9DS1_Driver.c **** 			magOffset(j, mBiasRaw[j]);
 5032              		.loc 1 1167 0
 5033 01b0 3B6A     		ldr	r3, [r7, #32]
 5034 01b2 DAB2     		uxtb	r2, r3
 5035 01b4 40F20003 		movw	r3, #:lower16:mBiasRaw
 5036 01b8 C0F20003 		movt	r3, #:upper16:mBiasRaw
 5037 01bc 396A     		ldr	r1, [r7, #32]
 5038 01be 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 5039 01c2 1BB2     		sxth	r3, r3
 5040 01c4 1046     		mov	r0, r2
 5041 01c6 1946     		mov	r1, r3
 5042 01c8 FFF7FEFF 		bl	magOffset
 5043              	.L187:
1162:../LSM9DS1_Driver.c **** 	for (j = 0; j < 3; j++)
 5044              		.loc 1 1162 0
 5045 01cc 3B6A     		ldr	r3, [r7, #32]
 5046 01ce 03F10103 		add	r3, r3, #1
 5047 01d2 3B62     		str	r3, [r7, #32]
 5048              	.L186:
1162:../LSM9DS1_Driver.c **** 	for (j = 0; j < 3; j++)
 5049              		.loc 1 1162 0 is_stmt 0 discriminator 1
 5050 01d4 3B6A     		ldr	r3, [r7, #32]
 5051 01d6 022B     		cmp	r3, #2
 5052 01d8 B2DD     		ble	.L188
1168:../LSM9DS1_Driver.c **** 	}
1169:../LSM9DS1_Driver.c **** }
 5053              		.loc 1 1169 0 is_stmt 1
 5054 01da 07F12807 		add	r7, r7, #40
 5055 01de BD46     		mov	sp, r7
 5056 01e0 80BD     		pop	{r7, pc}
 5057              		.cfi_endproc
 5058              	.LFE163:
 5060 01e2 00BF     		.section	.text.calcMag,"ax",%progbits
 5061              		.align	2
 5062              		.global	calcMag
 5063              		.thumb
 5064              		.thumb_func
 5066              	calcMag:
 5067              	.LFB164:
1170:../LSM9DS1_Driver.c **** 
1171:../LSM9DS1_Driver.c **** float calcMag(int16_t mag)
1172:../LSM9DS1_Driver.c **** {
 5068              		.loc 1 1172 0
 5069              		.cfi_startproc
 5070              		@ args = 0, pretend = 0, frame = 8
 5071              		@ frame_needed = 1, uses_anonymous_args = 0
 5072              		@ link register save eliminated.
 5073 0000 80B4     		push	{r7}
 5074              	.LCFI130:
 5075              		.cfi_def_cfa_offset 4
 5076              		.cfi_offset 7, -4
 5077 0002 83B0     		sub	sp, sp, #12
 5078              	.LCFI131:
 5079              		.cfi_def_cfa_offset 16
 5080 0004 00AF     		add	r7, sp, #0
 5081              	.LCFI132:
 5082              		.cfi_def_cfa_register 7
 5083 0006 0346     		mov	r3, r0
 5084 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1173:../LSM9DS1_Driver.c **** 	// Return the mag raw reading times our pre-calculated Gs / (ADC tick):
1174:../LSM9DS1_Driver.c **** 	return /*ceil(*/mRes * mag/*)*/;
 5085              		.loc 1 1174 0
 5086 000a B7F90630 		ldrsh	r3, [r7, #6]
 5087 000e 07EE903A 		fmsr	s15, r3	@ int
 5088 0012 B8EEE77A 		fsitos	s14, s15
 5089 0016 40F20003 		movw	r3, #:lower16:mRes
 5090 001a C0F20003 		movt	r3, #:upper16:mRes
 5091 001e D3ED007A 		flds	s15, [r3, #0]
 5092 0022 67EE277A 		fmuls	s15, s14, s15
 5093 0026 17EE903A 		fmrs	r3, s15
1175:../LSM9DS1_Driver.c **** 	//return mag;
1176:../LSM9DS1_Driver.c **** }
 5094              		.loc 1 1176 0
 5095 002a 1846     		mov	r0, r3	@ float
 5096 002c 07F10C07 		add	r7, r7, #12
 5097 0030 BD46     		mov	sp, r7
 5098 0032 80BC     		pop	{r7}
 5099 0034 7047     		bx	lr
 5100              		.cfi_endproc
 5101              	.LFE164:
 5103 0036 00BF     		.section	.text.magOffset,"ax",%progbits
 5104              		.align	2
 5105              		.global	magOffset
 5106              		.thumb
 5107              		.thumb_func
 5109              	magOffset:
 5110              	.LFB165:
1177:../LSM9DS1_Driver.c **** 
1178:../LSM9DS1_Driver.c **** void magOffset(uint8_t axis, int16_t offset)
1179:../LSM9DS1_Driver.c **** {
 5111              		.loc 1 1179 0
 5112              		.cfi_startproc
 5113              		@ args = 0, pretend = 0, frame = 16
 5114              		@ frame_needed = 1, uses_anonymous_args = 0
 5115 0000 80B5     		push	{r7, lr}
 5116              	.LCFI133:
 5117              		.cfi_def_cfa_offset 8
 5118              		.cfi_offset 7, -8
 5119              		.cfi_offset 14, -4
 5120 0002 84B0     		sub	sp, sp, #16
 5121              	.LCFI134:
 5122              		.cfi_def_cfa_offset 24
 5123 0004 00AF     		add	r7, sp, #0
 5124              	.LCFI135:
 5125              		.cfi_def_cfa_register 7
 5126 0006 0246     		mov	r2, r0
 5127 0008 0B46     		mov	r3, r1
 5128 000a FA71     		strb	r2, [r7, #7]
 5129 000c BB80     		strh	r3, [r7, #4]	@ movhi
1180:../LSM9DS1_Driver.c **** 	if (axis > 2)
 5130              		.loc 1 1180 0
 5131 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5132 0010 022B     		cmp	r3, #2
 5133 0012 21D8     		bhi	.L195
 5134              	.L193:
1181:../LSM9DS1_Driver.c **** 		return;
1182:../LSM9DS1_Driver.c **** 	uint8_t msb, lsb;
1183:../LSM9DS1_Driver.c **** 	msb = (offset & 0xFF00) >> 8;
 5135              		.loc 1 1183 0
 5136 0014 B7F90430 		ldrsh	r3, [r7, #4]
 5137 0018 03F47F43 		and	r3, r3, #65280
 5138 001c 4FEA2323 		asr	r3, r3, #8
 5139 0020 FB73     		strb	r3, [r7, #15]
1184:../LSM9DS1_Driver.c **** 	lsb = offset & 0x00FF;
 5140              		.loc 1 1184 0
 5141 0022 BB88     		ldrh	r3, [r7, #4]	@ movhi
 5142 0024 BB73     		strb	r3, [r7, #14]
1185:../LSM9DS1_Driver.c **** 	mWriteByte(OFFSET_X_REG_L_M + (2 * axis), lsb);
 5143              		.loc 1 1185 0
 5144 0026 FB79     		ldrb	r3, [r7, #7]
 5145 0028 4FEA4303 		lsl	r3, r3, #1
 5146 002c DBB2     		uxtb	r3, r3
 5147 002e 03F10503 		add	r3, r3, #5
 5148 0032 DAB2     		uxtb	r2, r3
 5149 0034 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 5150 0036 1046     		mov	r0, r2
 5151 0038 1946     		mov	r1, r3
 5152 003a FFF7FEFF 		bl	mWriteByte
1186:../LSM9DS1_Driver.c **** 	mWriteByte(OFFSET_X_REG_H_M + (2 * axis), msb);
 5153              		.loc 1 1186 0
 5154 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5155 0040 03F10303 		add	r3, r3, #3
 5156 0044 DBB2     		uxtb	r3, r3
 5157 0046 4FEA4303 		lsl	r3, r3, #1
 5158 004a DAB2     		uxtb	r2, r3
 5159 004c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5160 004e 1046     		mov	r0, r2
 5161 0050 1946     		mov	r1, r3
 5162 0052 FFF7FEFF 		bl	mWriteByte
 5163 0056 00E0     		b	.L192
 5164              	.L195:
1181:../LSM9DS1_Driver.c **** 		return;
 5165              		.loc 1 1181 0
 5166 0058 00BF     		nop
 5167              	.L192:
1187:../LSM9DS1_Driver.c **** }
 5168              		.loc 1 1187 0
 5169 005a 07F11007 		add	r7, r7, #16
 5170 005e BD46     		mov	sp, r7
 5171 0060 80BD     		pop	{r7, pc}
 5172              		.cfi_endproc
 5173              	.LFE165:
 5175 0062 00BF     		.section	.text.accelAvailable,"ax",%progbits
 5176              		.align	2
 5177              		.global	accelAvailable
 5178              		.thumb
 5179              		.thumb_func
 5181              	accelAvailable:
 5182              	.LFB166:
1188:../LSM9DS1_Driver.c **** 
1189:../LSM9DS1_Driver.c **** uint8_t accelAvailable(void)
1190:../LSM9DS1_Driver.c **** {
 5183              		.loc 1 1190 0
 5184              		.cfi_startproc
 5185              		@ args = 0, pretend = 0, frame = 8
 5186              		@ frame_needed = 1, uses_anonymous_args = 0
 5187 0000 80B5     		push	{r7, lr}
 5188              	.LCFI136:
 5189              		.cfi_def_cfa_offset 8
 5190              		.cfi_offset 7, -8
 5191              		.cfi_offset 14, -4
 5192 0002 82B0     		sub	sp, sp, #8
 5193              	.LCFI137:
 5194              		.cfi_def_cfa_offset 16
 5195 0004 00AF     		add	r7, sp, #0
 5196              	.LCFI138:
 5197              		.cfi_def_cfa_register 7
1191:../LSM9DS1_Driver.c **** 	uint8_t status = xgReadByte(STATUS_REG_1);
 5198              		.loc 1 1191 0
 5199 0006 4FF02700 		mov	r0, #39
 5200 000a FFF7FEFF 		bl	xgReadByte
 5201 000e 0346     		mov	r3, r0
 5202 0010 FB71     		strb	r3, [r7, #7]
1192:../LSM9DS1_Driver.c **** 
1193:../LSM9DS1_Driver.c **** 	return (status & (1<<0));
 5203              		.loc 1 1193 0
 5204 0012 FB79     		ldrb	r3, [r7, #7]
 5205 0014 03F00103 		and	r3, r3, #1
 5206 0018 DBB2     		uxtb	r3, r3
1194:../LSM9DS1_Driver.c **** }
 5207              		.loc 1 1194 0
 5208 001a 1846     		mov	r0, r3
 5209 001c 07F10807 		add	r7, r7, #8
 5210 0020 BD46     		mov	sp, r7
 5211 0022 80BD     		pop	{r7, pc}
 5212              		.cfi_endproc
 5213              	.LFE166:
 5215              		.section	.text.gyroAvailable,"ax",%progbits
 5216              		.align	2
 5217              		.global	gyroAvailable
 5218              		.thumb
 5219              		.thumb_func
 5221              	gyroAvailable:
 5222              	.LFB167:
1195:../LSM9DS1_Driver.c **** 
1196:../LSM9DS1_Driver.c **** uint8_t gyroAvailable(void)
1197:../LSM9DS1_Driver.c **** {
 5223              		.loc 1 1197 0
 5224              		.cfi_startproc
 5225              		@ args = 0, pretend = 0, frame = 8
 5226              		@ frame_needed = 1, uses_anonymous_args = 0
 5227 0000 80B5     		push	{r7, lr}
 5228              	.LCFI139:
 5229              		.cfi_def_cfa_offset 8
 5230              		.cfi_offset 7, -8
 5231              		.cfi_offset 14, -4
 5232 0002 82B0     		sub	sp, sp, #8
 5233              	.LCFI140:
 5234              		.cfi_def_cfa_offset 16
 5235 0004 00AF     		add	r7, sp, #0
 5236              	.LCFI141:
 5237              		.cfi_def_cfa_register 7
1198:../LSM9DS1_Driver.c **** 	uint8_t status = xgReadByte(STATUS_REG_1);
 5238              		.loc 1 1198 0
 5239 0006 4FF02700 		mov	r0, #39
 5240 000a FFF7FEFF 		bl	xgReadByte
 5241 000e 0346     		mov	r3, r0
 5242 0010 FB71     		strb	r3, [r7, #7]
1199:../LSM9DS1_Driver.c **** 
1200:../LSM9DS1_Driver.c **** 	return ((status & (1<<1)) >> 1);
 5243              		.loc 1 1200 0
 5244 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5245 0014 03F00203 		and	r3, r3, #2
 5246 0018 4FEA6303 		asr	r3, r3, #1
 5247 001c DBB2     		uxtb	r3, r3
1201:../LSM9DS1_Driver.c **** }
 5248              		.loc 1 1201 0
 5249 001e 1846     		mov	r0, r3
 5250 0020 07F10807 		add	r7, r7, #8
 5251 0024 BD46     		mov	sp, r7
 5252 0026 80BD     		pop	{r7, pc}
 5253              		.cfi_endproc
 5254              	.LFE167:
 5256              		.section	.text.tempAvailable,"ax",%progbits
 5257              		.align	2
 5258              		.global	tempAvailable
 5259              		.thumb
 5260              		.thumb_func
 5262              	tempAvailable:
 5263              	.LFB168:
1202:../LSM9DS1_Driver.c **** 
1203:../LSM9DS1_Driver.c **** uint8_t tempAvailable(void)
1204:../LSM9DS1_Driver.c **** {
 5264              		.loc 1 1204 0
 5265              		.cfi_startproc
 5266              		@ args = 0, pretend = 0, frame = 8
 5267              		@ frame_needed = 1, uses_anonymous_args = 0
 5268 0000 80B5     		push	{r7, lr}
 5269              	.LCFI142:
 5270              		.cfi_def_cfa_offset 8
 5271              		.cfi_offset 7, -8
 5272              		.cfi_offset 14, -4
 5273 0002 82B0     		sub	sp, sp, #8
 5274              	.LCFI143:
 5275              		.cfi_def_cfa_offset 16
 5276 0004 00AF     		add	r7, sp, #0
 5277              	.LCFI144:
 5278              		.cfi_def_cfa_register 7
1205:../LSM9DS1_Driver.c **** 	uint8_t status = xgReadByte(STATUS_REG_1);
 5279              		.loc 1 1205 0
 5280 0006 4FF02700 		mov	r0, #39
 5281 000a FFF7FEFF 		bl	xgReadByte
 5282 000e 0346     		mov	r3, r0
 5283 0010 FB71     		strb	r3, [r7, #7]
1206:../LSM9DS1_Driver.c **** 
1207:../LSM9DS1_Driver.c **** 	return ((status & (1<<2)) >> 2);
 5284              		.loc 1 1207 0
 5285 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5286 0014 03F00403 		and	r3, r3, #4
 5287 0018 4FEAA303 		asr	r3, r3, #2
 5288 001c DBB2     		uxtb	r3, r3
1208:../LSM9DS1_Driver.c **** }
 5289              		.loc 1 1208 0
 5290 001e 1846     		mov	r0, r3
 5291 0020 07F10807 		add	r7, r7, #8
 5292 0024 BD46     		mov	sp, r7
 5293 0026 80BD     		pop	{r7, pc}
 5294              		.cfi_endproc
 5295              	.LFE168:
 5297              		.section	.text.readAccel,"ax",%progbits
 5298              		.align	2
 5299              		.global	readAccel
 5300              		.thumb
 5301              		.thumb_func
 5303              	readAccel:
 5304              	.LFB169:
1209:../LSM9DS1_Driver.c **** 
1210:../LSM9DS1_Driver.c **** int16_t readAccel(lsm9ds1_axis axis)
1211:../LSM9DS1_Driver.c **** {
 5305              		.loc 1 1211 0
 5306              		.cfi_startproc
 5307              		@ args = 0, pretend = 0, frame = 24
 5308              		@ frame_needed = 1, uses_anonymous_args = 0
 5309 0000 80B5     		push	{r7, lr}
 5310              	.LCFI145:
 5311              		.cfi_def_cfa_offset 8
 5312              		.cfi_offset 7, -8
 5313              		.cfi_offset 14, -4
 5314 0002 86B0     		sub	sp, sp, #24
 5315              	.LCFI146:
 5316              		.cfi_def_cfa_offset 32
 5317 0004 00AF     		add	r7, sp, #0
 5318              	.LCFI147:
 5319              		.cfi_def_cfa_register 7
 5320 0006 0346     		mov	r3, r0
 5321 0008 FB71     		strb	r3, [r7, #7]
1212:../LSM9DS1_Driver.c **** 	uint8_t temp[2];
1213:../LSM9DS1_Driver.c **** 	int16_t value;
1214:../LSM9DS1_Driver.c **** 	uint8_t subAddress = OUT_X_L_XL + (2 * axis);
 5322              		.loc 1 1214 0
 5323 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5324 000c 03F11403 		add	r3, r3, #20
 5325 0010 DBB2     		uxtb	r3, r3
 5326 0012 4FEA4303 		lsl	r3, r3, #1
 5327 0016 7B75     		strb	r3, [r7, #21]
1215:../LSM9DS1_Driver.c **** 	int i = 0;
 5328              		.loc 1 1215 0
 5329 0018 4FF00003 		mov	r3, #0
 5330 001c 3B61     		str	r3, [r7, #16]
1216:../LSM9DS1_Driver.c **** 	//xgReadBytes(OUT_X_L_XL + (2 * axis), temp, 2);
1217:../LSM9DS1_Driver.c **** 	while(i < 2)
 5331              		.loc 1 1217 0
 5332 001e 1DE0     		b	.L203
 5333              	.L204:
1218:../LSM9DS1_Driver.c **** 	{
1219:../LSM9DS1_Driver.c **** 		subAddress = subAddress + i;
 5334              		.loc 1 1219 0
 5335 0020 3B69     		ldr	r3, [r7, #16]
 5336 0022 DAB2     		uxtb	r2, r3
 5337 0024 7B7D     		ldrb	r3, [r7, #21]
 5338 0026 D318     		adds	r3, r2, r3
 5339 0028 7B75     		strb	r3, [r7, #21]
1220:../LSM9DS1_Driver.c **** 
1221:../LSM9DS1_Driver.c **** 		temp[i] = I2CreadBytes(_xgAddress, subAddress, NULL, 0);
 5340              		.loc 1 1221 0
 5341 002a 40F20003 		movw	r3, #:lower16:_xgAddress
 5342 002e C0F20003 		movt	r3, #:upper16:_xgAddress
 5343 0032 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 5344 0034 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 5345 0036 1046     		mov	r0, r2
 5346 0038 1946     		mov	r1, r3
 5347 003a 4FF00002 		mov	r2, #0
 5348 003e 4FF00003 		mov	r3, #0
 5349 0042 FFF7FEFF 		bl	I2CreadBytes
 5350 0046 0346     		mov	r3, r0
 5351 0048 1A46     		mov	r2, r3
 5352 004a 07F10C01 		add	r1, r7, #12
 5353 004e 3B69     		ldr	r3, [r7, #16]
 5354 0050 CB18     		adds	r3, r1, r3
 5355 0052 1A70     		strb	r2, [r3, #0]
1222:../LSM9DS1_Driver.c **** 
1223:../LSM9DS1_Driver.c **** 		i++;
 5356              		.loc 1 1223 0
 5357 0054 3B69     		ldr	r3, [r7, #16]
 5358 0056 03F10103 		add	r3, r3, #1
 5359 005a 3B61     		str	r3, [r7, #16]
 5360              	.L203:
1217:../LSM9DS1_Driver.c **** 	while(i < 2)
 5361              		.loc 1 1217 0 discriminator 1
 5362 005c 3B69     		ldr	r3, [r7, #16]
 5363 005e 012B     		cmp	r3, #1
 5364 0060 DEDD     		ble	.L204
1224:../LSM9DS1_Driver.c **** 	}
1225:../LSM9DS1_Driver.c **** 
1226:../LSM9DS1_Driver.c **** 	value = (temp[1] << 8) | temp[0];
 5365              		.loc 1 1226 0
 5366 0062 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 5367 0064 4FEA0323 		lsl	r3, r3, #8
 5368 0068 9AB2     		uxth	r2, r3
 5369 006a 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 5370 006c 1343     		orrs	r3, r3, r2
 5371 006e FB82     		strh	r3, [r7, #22]	@ movhi
1227:../LSM9DS1_Driver.c **** 
1228:../LSM9DS1_Driver.c **** 	if (_autoCalc)
 5372              		.loc 1 1228 0
 5373 0070 40F20003 		movw	r3, #:lower16:_autoCalc
 5374 0074 C0F20003 		movt	r3, #:upper16:_autoCalc
 5375 0078 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 5376 007a 002B     		cmp	r3, #0
 5377 007c 0BD0     		beq	.L205
1229:../LSM9DS1_Driver.c **** 		value -= aBiasRaw[axis];
 5378              		.loc 1 1229 0
 5379 007e FA8A     		ldrh	r2, [r7, #22]
 5380 0080 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 5381 0082 40F20003 		movw	r3, #:lower16:aBiasRaw
 5382 0086 C0F20003 		movt	r3, #:upper16:aBiasRaw
 5383 008a 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 5384 008e 9BB2     		uxth	r3, r3
 5385 0090 D31A     		subs	r3, r2, r3
 5386 0092 9BB2     		uxth	r3, r3
 5387 0094 FB82     		strh	r3, [r7, #22]	@ movhi
 5388              	.L205:
1230:../LSM9DS1_Driver.c **** 
1231:../LSM9DS1_Driver.c **** 	return value;
 5389              		.loc 1 1231 0
 5390 0096 FB8A     		ldrh	r3, [r7, #22]
 5391 0098 1BB2     		sxth	r3, r3
1232:../LSM9DS1_Driver.c **** }
 5392              		.loc 1 1232 0
 5393 009a 1846     		mov	r0, r3
 5394 009c 07F11807 		add	r7, r7, #24
 5395 00a0 BD46     		mov	sp, r7
 5396 00a2 80BD     		pop	{r7, pc}
 5397              		.cfi_endproc
 5398              	.LFE169:
 5400              		.section	.text.readMag,"ax",%progbits
 5401              		.align	2
 5402              		.global	readMag
 5403              		.thumb
 5404              		.thumb_func
 5406              	readMag:
 5407              	.LFB170:
1233:../LSM9DS1_Driver.c **** 
1234:../LSM9DS1_Driver.c **** int16_t readMag(lsm9ds1_axis axis)
1235:../LSM9DS1_Driver.c **** {
 5408              		.loc 1 1235 0
 5409              		.cfi_startproc
 5410              		@ args = 0, pretend = 0, frame = 24
 5411              		@ frame_needed = 1, uses_anonymous_args = 0
 5412 0000 80B5     		push	{r7, lr}
 5413              	.LCFI148:
 5414              		.cfi_def_cfa_offset 8
 5415              		.cfi_offset 7, -8
 5416              		.cfi_offset 14, -4
 5417 0002 86B0     		sub	sp, sp, #24
 5418              	.LCFI149:
 5419              		.cfi_def_cfa_offset 32
 5420 0004 00AF     		add	r7, sp, #0
 5421              	.LCFI150:
 5422              		.cfi_def_cfa_register 7
 5423 0006 0346     		mov	r3, r0
 5424 0008 FB71     		strb	r3, [r7, #7]
1236:../LSM9DS1_Driver.c **** 	uint8_t temp[2];
1237:../LSM9DS1_Driver.c **** 
1238:../LSM9DS1_Driver.c **** 	int i = 0;
 5425              		.loc 1 1238 0
 5426 000a 4FF00003 		mov	r3, #0
 5427 000e 7B61     		str	r3, [r7, #20]
1239:../LSM9DS1_Driver.c **** 	uint8_t subAddress = OUT_X_L_M + (2 * axis);
 5428              		.loc 1 1239 0
 5429 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5430 0012 03F11403 		add	r3, r3, #20
 5431 0016 DBB2     		uxtb	r3, r3
 5432 0018 4FEA4303 		lsl	r3, r3, #1
 5433 001c FB74     		strb	r3, [r7, #19]
1240:../LSM9DS1_Driver.c **** 
1241:../LSM9DS1_Driver.c **** 	while(i < 2)
 5434              		.loc 1 1241 0
 5435 001e 1DE0     		b	.L208
 5436              	.L209:
1242:../LSM9DS1_Driver.c **** 	{
1243:../LSM9DS1_Driver.c **** 		subAddress = subAddress + i;
 5437              		.loc 1 1243 0
 5438 0020 7B69     		ldr	r3, [r7, #20]
 5439 0022 DAB2     		uxtb	r2, r3
 5440 0024 FB7C     		ldrb	r3, [r7, #19]
 5441 0026 D318     		adds	r3, r2, r3
 5442 0028 FB74     		strb	r3, [r7, #19]
1244:../LSM9DS1_Driver.c **** 
1245:../LSM9DS1_Driver.c **** 		temp[i] = I2CreadBytes(_mAddress, subAddress, NULL, 0);
 5443              		.loc 1 1245 0
 5444 002a 40F20003 		movw	r3, #:lower16:_mAddress
 5445 002e C0F20003 		movt	r3, #:upper16:_mAddress
 5446 0032 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 5447 0034 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 5448 0036 1046     		mov	r0, r2
 5449 0038 1946     		mov	r1, r3
 5450 003a 4FF00002 		mov	r2, #0
 5451 003e 4FF00003 		mov	r3, #0
 5452 0042 FFF7FEFF 		bl	I2CreadBytes
 5453 0046 0346     		mov	r3, r0
 5454 0048 1A46     		mov	r2, r3
 5455 004a 07F10C01 		add	r1, r7, #12
 5456 004e 7B69     		ldr	r3, [r7, #20]
 5457 0050 CB18     		adds	r3, r1, r3
 5458 0052 1A70     		strb	r2, [r3, #0]
1246:../LSM9DS1_Driver.c **** 
1247:../LSM9DS1_Driver.c **** 		i++;
 5459              		.loc 1 1247 0
 5460 0054 7B69     		ldr	r3, [r7, #20]
 5461 0056 03F10103 		add	r3, r3, #1
 5462 005a 7B61     		str	r3, [r7, #20]
 5463              	.L208:
1241:../LSM9DS1_Driver.c **** 	while(i < 2)
 5464              		.loc 1 1241 0 discriminator 1
 5465 005c 7B69     		ldr	r3, [r7, #20]
 5466 005e 012B     		cmp	r3, #1
 5467 0060 DEDD     		ble	.L209
1248:../LSM9DS1_Driver.c **** 	}
1249:../LSM9DS1_Driver.c **** 
1250:../LSM9DS1_Driver.c **** 	int16_t value = (temp[1] << 8) | temp[0];
 5468              		.loc 1 1250 0
 5469 0062 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 5470 0064 4FEA0323 		lsl	r3, r3, #8
 5471 0068 9AB2     		uxth	r2, r3
 5472 006a 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 5473 006c 1343     		orrs	r3, r3, r2
 5474 006e 3B82     		strh	r3, [r7, #16]	@ movhi
1251:../LSM9DS1_Driver.c **** 	return value;
 5475              		.loc 1 1251 0
 5476 0070 3B8A     		ldrh	r3, [r7, #16]
 5477 0072 1BB2     		sxth	r3, r3
1252:../LSM9DS1_Driver.c **** }
 5478              		.loc 1 1252 0
 5479 0074 1846     		mov	r0, r3
 5480 0076 07F11807 		add	r7, r7, #24
 5481 007a BD46     		mov	sp, r7
 5482 007c 80BD     		pop	{r7, pc}
 5483              		.cfi_endproc
 5484              	.LFE170:
 5486 007e 00BF     		.section	.text.readTemp,"ax",%progbits
 5487              		.align	2
 5488              		.global	readTemp
 5489              		.thumb
 5490              		.thumb_func
 5492              	readTemp:
 5493              	.LFB171:
1253:../LSM9DS1_Driver.c **** 
1254:../LSM9DS1_Driver.c **** int16_t readTemp(void)
1255:../LSM9DS1_Driver.c **** {
 5494              		.loc 1 1255 0
 5495              		.cfi_startproc
 5496              		@ args = 0, pretend = 0, frame = 8
 5497              		@ frame_needed = 1, uses_anonymous_args = 0
 5498 0000 80B5     		push	{r7, lr}
 5499              	.LCFI151:
 5500              		.cfi_def_cfa_offset 8
 5501              		.cfi_offset 7, -8
 5502              		.cfi_offset 14, -4
 5503 0002 82B0     		sub	sp, sp, #8
 5504              	.LCFI152:
 5505              		.cfi_def_cfa_offset 16
 5506 0004 00AF     		add	r7, sp, #0
 5507              	.LCFI153:
 5508              		.cfi_def_cfa_register 7
1256:../LSM9DS1_Driver.c **** 	uint8_t temp[2]; // We'll read two bytes from the temperature sensor into temp
1257:../LSM9DS1_Driver.c **** 
1258:../LSM9DS1_Driver.c **** 	int i  = 0;
 5509              		.loc 1 1258 0
 5510 0006 4FF00003 		mov	r3, #0
 5511 000a 7B60     		str	r3, [r7, #4]
1259:../LSM9DS1_Driver.c **** 	uint8_t subAddress = OUT_TEMP_L;
 5512              		.loc 1 1259 0
 5513 000c 4FF01503 		mov	r3, #21
 5514 0010 FB70     		strb	r3, [r7, #3]
1260:../LSM9DS1_Driver.c **** 
1261:../LSM9DS1_Driver.c **** 	while(i < 2)
 5515              		.loc 1 1261 0
 5516 0012 1CE0     		b	.L212
 5517              	.L213:
1262:../LSM9DS1_Driver.c **** 	{
1263:../LSM9DS1_Driver.c **** 		subAddress = subAddress + i;
 5518              		.loc 1 1263 0
 5519 0014 7B68     		ldr	r3, [r7, #4]
 5520 0016 DAB2     		uxtb	r2, r3
 5521 0018 FB78     		ldrb	r3, [r7, #3]
 5522 001a D318     		adds	r3, r2, r3
 5523 001c FB70     		strb	r3, [r7, #3]
1264:../LSM9DS1_Driver.c **** 
1265:../LSM9DS1_Driver.c **** 		temp[i] = I2CreadBytes(_xgAddress, subAddress, NULL, 0);
 5524              		.loc 1 1265 0
 5525 001e 40F20003 		movw	r3, #:lower16:_xgAddress
 5526 0022 C0F20003 		movt	r3, #:upper16:_xgAddress
 5527 0026 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 5528 0028 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 5529 002a 1046     		mov	r0, r2
 5530 002c 1946     		mov	r1, r3
 5531 002e 4FF00002 		mov	r2, #0
 5532 0032 4FF00003 		mov	r3, #0
 5533 0036 FFF7FEFF 		bl	I2CreadBytes
 5534 003a 0346     		mov	r3, r0
 5535 003c 1A46     		mov	r2, r3
 5536 003e 3946     		mov	r1, r7
 5537 0040 7B68     		ldr	r3, [r7, #4]
 5538 0042 CB18     		adds	r3, r1, r3
 5539 0044 1A70     		strb	r2, [r3, #0]
1266:../LSM9DS1_Driver.c **** 
1267:../LSM9DS1_Driver.c **** 		i++;
 5540              		.loc 1 1267 0
 5541 0046 7B68     		ldr	r3, [r7, #4]
 5542 0048 03F10103 		add	r3, r3, #1
 5543 004c 7B60     		str	r3, [r7, #4]
 5544              	.L212:
1261:../LSM9DS1_Driver.c **** 	while(i < 2)
 5545              		.loc 1 1261 0 discriminator 1
 5546 004e 7B68     		ldr	r3, [r7, #4]
 5547 0050 012B     		cmp	r3, #1
 5548 0052 DFDD     		ble	.L213
1268:../LSM9DS1_Driver.c **** 	}
1269:../LSM9DS1_Driver.c **** 
1270:../LSM9DS1_Driver.c **** 	//xgReadBytes(OUT_TEMP_L, temp, 2); // Read 2 bytes, beginning at OUT_TEMP_L
1271:../LSM9DS1_Driver.c **** 	temperature = (temp[1] << 8) | temp[0];
 5549              		.loc 1 1271 0
 5550 0054 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 5551 0056 4FEA0323 		lsl	r3, r3, #8
 5552 005a 9AB2     		uxth	r2, r3
 5553 005c 3B78     		ldrb	r3, [r7, #0]	@ zero_extendqisi2
 5554 005e 1343     		orrs	r3, r3, r2
 5555 0060 9AB2     		uxth	r2, r3
 5556 0062 40F20003 		movw	r3, #:lower16:temperature
 5557 0066 C0F20003 		movt	r3, #:upper16:temperature
 5558 006a 1A80     		strh	r2, [r3, #0]	@ movhi
1272:../LSM9DS1_Driver.c **** 
1273:../LSM9DS1_Driver.c **** 	return temperature;
 5559              		.loc 1 1273 0
 5560 006c 40F20003 		movw	r3, #:lower16:temperature
 5561 0070 C0F20003 		movt	r3, #:upper16:temperature
 5562 0074 1B88     		ldrh	r3, [r3, #0]
 5563 0076 1BB2     		sxth	r3, r3
1274:../LSM9DS1_Driver.c **** }
 5564              		.loc 1 1274 0
 5565 0078 1846     		mov	r0, r3
 5566 007a 07F10807 		add	r7, r7, #8
 5567 007e BD46     		mov	sp, r7
 5568 0080 80BD     		pop	{r7, pc}
 5569              		.cfi_endproc
 5570              	.LFE171:
 5572 0082 00BF     		.section	.text.readGyro,"ax",%progbits
 5573              		.align	2
 5574              		.global	readGyro
 5575              		.thumb
 5576              		.thumb_func
 5578              	readGyro:
 5579              	.LFB172:
1275:../LSM9DS1_Driver.c **** 
1276:../LSM9DS1_Driver.c **** int16_t readGyro(lsm9ds1_axis axis)
1277:../LSM9DS1_Driver.c **** {
 5580              		.loc 1 1277 0
 5581              		.cfi_startproc
 5582              		@ args = 0, pretend = 0, frame = 24
 5583              		@ frame_needed = 1, uses_anonymous_args = 0
 5584 0000 80B5     		push	{r7, lr}
 5585              	.LCFI154:
 5586              		.cfi_def_cfa_offset 8
 5587              		.cfi_offset 7, -8
 5588              		.cfi_offset 14, -4
 5589 0002 86B0     		sub	sp, sp, #24
 5590              	.LCFI155:
 5591              		.cfi_def_cfa_offset 32
 5592 0004 00AF     		add	r7, sp, #0
 5593              	.LCFI156:
 5594              		.cfi_def_cfa_register 7
 5595 0006 0346     		mov	r3, r0
 5596 0008 FB71     		strb	r3, [r7, #7]
1278:../LSM9DS1_Driver.c **** 	uint8_t temp[2];
1279:../LSM9DS1_Driver.c **** 	int16_t value;
1280:../LSM9DS1_Driver.c **** 
1281:../LSM9DS1_Driver.c **** 	int i  = 0;
 5597              		.loc 1 1281 0
 5598 000a 4FF00003 		mov	r3, #0
 5599 000e 3B61     		str	r3, [r7, #16]
1282:../LSM9DS1_Driver.c **** 	uint8_t subAddress = OUT_X_L_G + (2 * axis);
 5600              		.loc 1 1282 0
 5601 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5602 0012 03F10C03 		add	r3, r3, #12
 5603 0016 DBB2     		uxtb	r3, r3
 5604 0018 4FEA4303 		lsl	r3, r3, #1
 5605 001c FB73     		strb	r3, [r7, #15]
1283:../LSM9DS1_Driver.c **** 
1284:../LSM9DS1_Driver.c **** 	while(i < 2)
 5606              		.loc 1 1284 0
 5607 001e 1DE0     		b	.L216
 5608              	.L217:
1285:../LSM9DS1_Driver.c **** 	{
1286:../LSM9DS1_Driver.c **** 		subAddress = subAddress + i;
 5609              		.loc 1 1286 0
 5610 0020 3B69     		ldr	r3, [r7, #16]
 5611 0022 DAB2     		uxtb	r2, r3
 5612 0024 FB7B     		ldrb	r3, [r7, #15]
 5613 0026 D318     		adds	r3, r2, r3
 5614 0028 FB73     		strb	r3, [r7, #15]
1287:../LSM9DS1_Driver.c **** 
1288:../LSM9DS1_Driver.c **** 		temp[i] = I2CreadBytes(_xgAddress, subAddress, NULL, 0);
 5615              		.loc 1 1288 0
 5616 002a 40F20003 		movw	r3, #:lower16:_xgAddress
 5617 002e C0F20003 		movt	r3, #:upper16:_xgAddress
 5618 0032 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 5619 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5620 0036 1046     		mov	r0, r2
 5621 0038 1946     		mov	r1, r3
 5622 003a 4FF00002 		mov	r2, #0
 5623 003e 4FF00003 		mov	r3, #0
 5624 0042 FFF7FEFF 		bl	I2CreadBytes
 5625 0046 0346     		mov	r3, r0
 5626 0048 1A46     		mov	r2, r3
 5627 004a 07F10C01 		add	r1, r7, #12
 5628 004e 3B69     		ldr	r3, [r7, #16]
 5629 0050 CB18     		adds	r3, r1, r3
 5630 0052 1A70     		strb	r2, [r3, #0]
1289:../LSM9DS1_Driver.c **** 		i++;
 5631              		.loc 1 1289 0
 5632 0054 3B69     		ldr	r3, [r7, #16]
 5633 0056 03F10103 		add	r3, r3, #1
 5634 005a 3B61     		str	r3, [r7, #16]
 5635              	.L216:
1284:../LSM9DS1_Driver.c **** 	while(i < 2)
 5636              		.loc 1 1284 0 discriminator 1
 5637 005c 3B69     		ldr	r3, [r7, #16]
 5638 005e 012B     		cmp	r3, #1
 5639 0060 DEDD     		ble	.L217
1290:../LSM9DS1_Driver.c **** 	}
1291:../LSM9DS1_Driver.c **** 
1292:../LSM9DS1_Driver.c **** 	value = (temp[1] << 8) | temp[0];
 5640              		.loc 1 1292 0
 5641 0062 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 5642 0064 4FEA0323 		lsl	r3, r3, #8
 5643 0068 9AB2     		uxth	r2, r3
 5644 006a 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 5645 006c 1343     		orrs	r3, r3, r2
 5646 006e FB82     		strh	r3, [r7, #22]	@ movhi
1293:../LSM9DS1_Driver.c **** 
1294:../LSM9DS1_Driver.c **** 	if (_autoCalc)
 5647              		.loc 1 1294 0
 5648 0070 40F20003 		movw	r3, #:lower16:_autoCalc
 5649 0074 C0F20003 		movt	r3, #:upper16:_autoCalc
 5650 0078 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 5651 007a 002B     		cmp	r3, #0
 5652 007c 0BD0     		beq	.L218
1295:../LSM9DS1_Driver.c **** 		value -= gBiasRaw[axis];
 5653              		.loc 1 1295 0
 5654 007e FA8A     		ldrh	r2, [r7, #22]
 5655 0080 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 5656 0082 40F20003 		movw	r3, #:lower16:gBiasRaw
 5657 0086 C0F20003 		movt	r3, #:upper16:gBiasRaw
 5658 008a 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 5659 008e 9BB2     		uxth	r3, r3
 5660 0090 D31A     		subs	r3, r2, r3
 5661 0092 9BB2     		uxth	r3, r3
 5662 0094 FB82     		strh	r3, [r7, #22]	@ movhi
 5663              	.L218:
1296:../LSM9DS1_Driver.c **** 
1297:../LSM9DS1_Driver.c **** 	return value;
 5664              		.loc 1 1297 0
 5665 0096 FB8A     		ldrh	r3, [r7, #22]
 5666 0098 1BB2     		sxth	r3, r3
1298:../LSM9DS1_Driver.c **** }
 5667              		.loc 1 1298 0
 5668 009a 1846     		mov	r0, r3
 5669 009c 07F11807 		add	r7, r7, #24
 5670 00a0 BD46     		mov	sp, r7
 5671 00a2 80BD     		pop	{r7, pc}
 5672              		.cfi_endproc
 5673              	.LFE172:
 5675              		.section	.text.calcGyro,"ax",%progbits
 5676              		.align	2
 5677              		.global	calcGyro
 5678              		.thumb
 5679              		.thumb_func
 5681              	calcGyro:
 5682              	.LFB173:
1299:../LSM9DS1_Driver.c **** 
1300:../LSM9DS1_Driver.c **** float calcGyro(int16_t gyro)
1301:../LSM9DS1_Driver.c **** {
 5683              		.loc 1 1301 0
 5684              		.cfi_startproc
 5685              		@ args = 0, pretend = 0, frame = 8
 5686              		@ frame_needed = 1, uses_anonymous_args = 0
 5687              		@ link register save eliminated.
 5688 0000 80B4     		push	{r7}
 5689              	.LCFI157:
 5690              		.cfi_def_cfa_offset 4
 5691              		.cfi_offset 7, -4
 5692 0002 83B0     		sub	sp, sp, #12
 5693              	.LCFI158:
 5694              		.cfi_def_cfa_offset 16
 5695 0004 00AF     		add	r7, sp, #0
 5696              	.LCFI159:
 5697              		.cfi_def_cfa_register 7
 5698 0006 0346     		mov	r3, r0
 5699 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1302:../LSM9DS1_Driver.c **** 	// Return the gyro raw reading times our pre-calculated DPS / (ADC tick):
1303:../LSM9DS1_Driver.c **** 	return /*round(*/gRes * gyro/*)*/;
 5700              		.loc 1 1303 0
 5701 000a B7F90630 		ldrsh	r3, [r7, #6]
 5702 000e 07EE903A 		fmsr	s15, r3	@ int
 5703 0012 B8EEE77A 		fsitos	s14, s15
 5704 0016 40F20003 		movw	r3, #:lower16:gRes
 5705 001a C0F20003 		movt	r3, #:upper16:gRes
 5706 001e D3ED007A 		flds	s15, [r3, #0]
 5707 0022 67EE277A 		fmuls	s15, s14, s15
 5708 0026 17EE903A 		fmrs	r3, s15
1304:../LSM9DS1_Driver.c **** 	//return gyro;
1305:../LSM9DS1_Driver.c **** }
 5709              		.loc 1 1305 0
 5710 002a 1846     		mov	r0, r3	@ float
 5711 002c 07F10C07 		add	r7, r7, #12
 5712 0030 BD46     		mov	sp, r7
 5713 0032 80BC     		pop	{r7}
 5714 0034 7047     		bx	lr
 5715              		.cfi_endproc
 5716              	.LFE173:
 5718 0036 00BF     		.section	.text.calcAccel,"ax",%progbits
 5719              		.align	2
 5720              		.global	calcAccel
 5721              		.thumb
 5722              		.thumb_func
 5724              	calcAccel:
 5725              	.LFB174:
1306:../LSM9DS1_Driver.c **** 
1307:../LSM9DS1_Driver.c **** float calcAccel(int16_t accel)
1308:../LSM9DS1_Driver.c **** {
 5726              		.loc 1 1308 0
 5727              		.cfi_startproc
 5728              		@ args = 0, pretend = 0, frame = 8
 5729              		@ frame_needed = 1, uses_anonymous_args = 0
 5730              		@ link register save eliminated.
 5731 0000 80B4     		push	{r7}
 5732              	.LCFI160:
 5733              		.cfi_def_cfa_offset 4
 5734              		.cfi_offset 7, -4
 5735 0002 83B0     		sub	sp, sp, #12
 5736              	.LCFI161:
 5737              		.cfi_def_cfa_offset 16
 5738 0004 00AF     		add	r7, sp, #0
 5739              	.LCFI162:
 5740              		.cfi_def_cfa_register 7
 5741 0006 0346     		mov	r3, r0
 5742 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1309:../LSM9DS1_Driver.c **** 	// Return the accel raw reading times our pre-calculated g's / (ADC tick):
1310:../LSM9DS1_Driver.c **** 	return /*round(*/aRes * accel/*)*/;
 5743              		.loc 1 1310 0
 5744 000a B7F90630 		ldrsh	r3, [r7, #6]
 5745 000e 07EE903A 		fmsr	s15, r3	@ int
 5746 0012 B8EEE77A 		fsitos	s14, s15
 5747 0016 40F20003 		movw	r3, #:lower16:aRes
 5748 001a C0F20003 		movt	r3, #:upper16:aRes
 5749 001e D3ED007A 		flds	s15, [r3, #0]
 5750 0022 67EE277A 		fmuls	s15, s14, s15
 5751 0026 17EE903A 		fmrs	r3, s15
1311:../LSM9DS1_Driver.c **** 	//return accel;
1312:../LSM9DS1_Driver.c **** }
 5752              		.loc 1 1312 0
 5753 002a 1846     		mov	r0, r3	@ float
 5754 002c 07F10C07 		add	r7, r7, #12
 5755 0030 BD46     		mov	sp, r7
 5756 0032 80BC     		pop	{r7}
 5757 0034 7047     		bx	lr
 5758              		.cfi_endproc
 5759              	.LFE174:
 5761 0036 00BF     		.section	.text.setGyroScale,"ax",%progbits
 5762              		.align	2
 5763              		.global	setGyroScale
 5764              		.thumb
 5765              		.thumb_func
 5767              	setGyroScale:
 5768              	.LFB175:
1313:../LSM9DS1_Driver.c **** 
1314:../LSM9DS1_Driver.c **** 
1315:../LSM9DS1_Driver.c **** void setGyroScale(uint16_t gScl)
1316:../LSM9DS1_Driver.c **** {
 5769              		.loc 1 1316 0
 5770              		.cfi_startproc
 5771              		@ args = 0, pretend = 0, frame = 16
 5772              		@ frame_needed = 1, uses_anonymous_args = 0
 5773 0000 80B5     		push	{r7, lr}
 5774              	.LCFI163:
 5775              		.cfi_def_cfa_offset 8
 5776              		.cfi_offset 7, -8
 5777              		.cfi_offset 14, -4
 5778 0002 84B0     		sub	sp, sp, #16
 5779              	.LCFI164:
 5780              		.cfi_def_cfa_offset 24
 5781 0004 00AF     		add	r7, sp, #0
 5782              	.LCFI165:
 5783              		.cfi_def_cfa_register 7
 5784 0006 0346     		mov	r3, r0
 5785 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1317:../LSM9DS1_Driver.c **** 	// Read current value of CTRL_REG1_G:
1318:../LSM9DS1_Driver.c **** 	uint8_t ctrl1RegValue = xgReadByte(CTRL_REG1_G);
 5786              		.loc 1 1318 0
 5787 000a 4FF01000 		mov	r0, #16
 5788 000e FFF7FEFF 		bl	xgReadByte
 5789 0012 0346     		mov	r3, r0
 5790 0014 FB73     		strb	r3, [r7, #15]
1319:../LSM9DS1_Driver.c **** 	// Mask out scale bits (3 & 4):
1320:../LSM9DS1_Driver.c **** 	ctrl1RegValue &= 0xE7;
 5791              		.loc 1 1320 0
 5792 0016 FB7B     		ldrb	r3, [r7, #15]
 5793 0018 23F01803 		bic	r3, r3, #24
 5794 001c FB73     		strb	r3, [r7, #15]
1321:../LSM9DS1_Driver.c **** 	switch (gScl)
 5795              		.loc 1 1321 0
 5796 001e FB88     		ldrh	r3, [r7, #6]
 5797 0020 B3F5FA7F 		cmp	r3, #500
 5798 0024 03D0     		beq	.L226
 5799 0026 B3F5FA6F 		cmp	r3, #2000
 5800 002a 0CD0     		beq	.L227
 5801 002c 17E0     		b	.L229
 5802              	.L226:
1322:../LSM9DS1_Driver.c **** 	{
1323:../LSM9DS1_Driver.c **** 		case 500:
1324:../LSM9DS1_Driver.c **** 			ctrl1RegValue |= (0x1 << 3);
 5803              		.loc 1 1324 0
 5804 002e FB7B     		ldrb	r3, [r7, #15]
 5805 0030 43F00803 		orr	r3, r3, #8
 5806 0034 FB73     		strb	r3, [r7, #15]
1325:../LSM9DS1_Driver.c **** 			settings.gyro.scale = 500;
 5807              		.loc 1 1325 0
 5808 0036 40F20003 		movw	r3, #:lower16:settings
 5809 003a C0F20003 		movt	r3, #:upper16:settings
 5810 003e 4FF4FA72 		mov	r2, #500
 5811 0042 DA80     		strh	r2, [r3, #6]	@ movhi
1326:../LSM9DS1_Driver.c **** 			break;
 5812              		.loc 1 1326 0
 5813 0044 13E0     		b	.L228
 5814              	.L227:
1327:../LSM9DS1_Driver.c **** 		case 2000:
1328:../LSM9DS1_Driver.c **** 			ctrl1RegValue |= (0x3 << 3);
 5815              		.loc 1 1328 0
 5816 0046 FB7B     		ldrb	r3, [r7, #15]
 5817 0048 43F01803 		orr	r3, r3, #24
 5818 004c FB73     		strb	r3, [r7, #15]
1329:../LSM9DS1_Driver.c **** 			settings.gyro.scale = 2000;
 5819              		.loc 1 1329 0
 5820 004e 40F20003 		movw	r3, #:lower16:settings
 5821 0052 C0F20003 		movt	r3, #:upper16:settings
 5822 0056 4FF4FA62 		mov	r2, #2000
 5823 005a DA80     		strh	r2, [r3, #6]	@ movhi
1330:../LSM9DS1_Driver.c **** 			break;
 5824              		.loc 1 1330 0
 5825 005c 07E0     		b	.L228
 5826              	.L229:
1331:../LSM9DS1_Driver.c **** 		default: // Otherwise we'll set it to 245 dps (0x0 << 4)
1332:../LSM9DS1_Driver.c **** 			settings.gyro.scale = 245;
 5827              		.loc 1 1332 0
 5828 005e 40F20003 		movw	r3, #:lower16:settings
 5829 0062 C0F20003 		movt	r3, #:upper16:settings
 5830 0066 4FF0F502 		mov	r2, #245
 5831 006a DA80     		strh	r2, [r3, #6]	@ movhi
1333:../LSM9DS1_Driver.c **** 			break;
 5832              		.loc 1 1333 0
 5833 006c 00BF     		nop
 5834              	.L228:
1334:../LSM9DS1_Driver.c **** 	}
1335:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG1_G, ctrl1RegValue);
 5835              		.loc 1 1335 0
 5836 006e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5837 0070 4FF01000 		mov	r0, #16
 5838 0074 1946     		mov	r1, r3
 5839 0076 FFF7FEFF 		bl	xgWriteByte
1336:../LSM9DS1_Driver.c **** 
1337:../LSM9DS1_Driver.c **** 	calcgRes();
 5840              		.loc 1 1337 0
 5841 007a FFF7FEFF 		bl	calcgRes
1338:../LSM9DS1_Driver.c **** }
 5842              		.loc 1 1338 0
 5843 007e 07F11007 		add	r7, r7, #16
 5844 0082 BD46     		mov	sp, r7
 5845 0084 80BD     		pop	{r7, pc}
 5846              		.cfi_endproc
 5847              	.LFE175:
 5849 0086 00BF     		.section	.text.setAccelScale,"ax",%progbits
 5850              		.align	2
 5851              		.global	setAccelScale
 5852              		.thumb
 5853              		.thumb_func
 5855              	setAccelScale:
 5856              	.LFB176:
1339:../LSM9DS1_Driver.c **** 
1340:../LSM9DS1_Driver.c **** void setAccelScale(uint8_t aScl)
1341:../LSM9DS1_Driver.c **** {
 5857              		.loc 1 1341 0
 5858              		.cfi_startproc
 5859              		@ args = 0, pretend = 0, frame = 16
 5860              		@ frame_needed = 1, uses_anonymous_args = 0
 5861 0000 80B5     		push	{r7, lr}
 5862              	.LCFI166:
 5863              		.cfi_def_cfa_offset 8
 5864              		.cfi_offset 7, -8
 5865              		.cfi_offset 14, -4
 5866 0002 84B0     		sub	sp, sp, #16
 5867              	.LCFI167:
 5868              		.cfi_def_cfa_offset 24
 5869 0004 00AF     		add	r7, sp, #0
 5870              	.LCFI168:
 5871              		.cfi_def_cfa_register 7
 5872 0006 0346     		mov	r3, r0
 5873 0008 FB71     		strb	r3, [r7, #7]
1342:../LSM9DS1_Driver.c **** 	// We need to preserve the other bytes in CTRL_REG6_XL. So, first read it:
1343:../LSM9DS1_Driver.c **** 	uint8_t tempRegValue = xgReadByte(CTRL_REG6_XL);
 5874              		.loc 1 1343 0
 5875 000a 4FF02000 		mov	r0, #32
 5876 000e FFF7FEFF 		bl	xgReadByte
 5877 0012 0346     		mov	r3, r0
 5878 0014 FB73     		strb	r3, [r7, #15]
1344:../LSM9DS1_Driver.c **** 	// Mask out accel scale bits:
1345:../LSM9DS1_Driver.c **** 	tempRegValue &= 0xE7;
 5879              		.loc 1 1345 0
 5880 0016 FB7B     		ldrb	r3, [r7, #15]
 5881 0018 23F01803 		bic	r3, r3, #24
 5882 001c FB73     		strb	r3, [r7, #15]
1346:../LSM9DS1_Driver.c **** 
1347:../LSM9DS1_Driver.c **** 	switch (aScl)
 5883              		.loc 1 1347 0
 5884 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5885 0020 082B     		cmp	r3, #8
 5886 0022 0FD0     		beq	.L233
 5887 0024 102B     		cmp	r3, #16
 5888 0026 19D0     		beq	.L234
 5889 0028 042B     		cmp	r3, #4
 5890 002a 23D1     		bne	.L236
 5891              	.L232:
1348:../LSM9DS1_Driver.c **** 	{
1349:../LSM9DS1_Driver.c **** 		case 4:
1350:../LSM9DS1_Driver.c **** 			tempRegValue |= (0x2 << 3);
 5892              		.loc 1 1350 0
 5893 002c FB7B     		ldrb	r3, [r7, #15]
 5894 002e 43F01003 		orr	r3, r3, #16
 5895 0032 FB73     		strb	r3, [r7, #15]
1351:../LSM9DS1_Driver.c **** 			settings.accel.scale = 4;
 5896              		.loc 1 1351 0
 5897 0034 40F20003 		movw	r3, #:lower16:settings
 5898 0038 C0F20003 		movt	r3, #:upper16:settings
 5899 003c 4FF00402 		mov	r2, #4
 5900 0040 DA75     		strb	r2, [r3, #23]
1352:../LSM9DS1_Driver.c **** 			break;
 5901              		.loc 1 1352 0
 5902 0042 1FE0     		b	.L235
 5903              	.L233:
1353:../LSM9DS1_Driver.c **** 		case 8:
1354:../LSM9DS1_Driver.c **** 			tempRegValue |= (0x3 << 3);
 5904              		.loc 1 1354 0
 5905 0044 FB7B     		ldrb	r3, [r7, #15]
 5906 0046 43F01803 		orr	r3, r3, #24
 5907 004a FB73     		strb	r3, [r7, #15]
1355:../LSM9DS1_Driver.c **** 			settings.accel.scale = 8;
 5908              		.loc 1 1355 0
 5909 004c 40F20003 		movw	r3, #:lower16:settings
 5910 0050 C0F20003 		movt	r3, #:upper16:settings
 5911 0054 4FF00802 		mov	r2, #8
 5912 0058 DA75     		strb	r2, [r3, #23]
1356:../LSM9DS1_Driver.c **** 			break;
 5913              		.loc 1 1356 0
 5914 005a 13E0     		b	.L235
 5915              	.L234:
1357:../LSM9DS1_Driver.c **** 		case 16:
1358:../LSM9DS1_Driver.c **** 			tempRegValue |= (0x1 << 3);
 5916              		.loc 1 1358 0
 5917 005c FB7B     		ldrb	r3, [r7, #15]
 5918 005e 43F00803 		orr	r3, r3, #8
 5919 0062 FB73     		strb	r3, [r7, #15]
1359:../LSM9DS1_Driver.c **** 			settings.accel.scale = 16;
 5920              		.loc 1 1359 0
 5921 0064 40F20003 		movw	r3, #:lower16:settings
 5922 0068 C0F20003 		movt	r3, #:upper16:settings
 5923 006c 4FF01002 		mov	r2, #16
 5924 0070 DA75     		strb	r2, [r3, #23]
1360:../LSM9DS1_Driver.c **** 			break;
 5925              		.loc 1 1360 0
 5926 0072 07E0     		b	.L235
 5927              	.L236:
1361:../LSM9DS1_Driver.c **** 		default: // Otherwise it'll be set to 2g (0x0 << 3)
1362:../LSM9DS1_Driver.c **** 			settings.accel.scale = 2;
 5928              		.loc 1 1362 0
 5929 0074 40F20003 		movw	r3, #:lower16:settings
 5930 0078 C0F20003 		movt	r3, #:upper16:settings
 5931 007c 4FF00202 		mov	r2, #2
 5932 0080 DA75     		strb	r2, [r3, #23]
1363:../LSM9DS1_Driver.c **** 			break;
 5933              		.loc 1 1363 0
 5934 0082 00BF     		nop
 5935              	.L235:
1364:../LSM9DS1_Driver.c **** 	}
1365:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG6_XL, tempRegValue);
 5936              		.loc 1 1365 0
 5937 0084 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5938 0086 4FF02000 		mov	r0, #32
 5939 008a 1946     		mov	r1, r3
 5940 008c FFF7FEFF 		bl	xgWriteByte
1366:../LSM9DS1_Driver.c **** 
1367:../LSM9DS1_Driver.c **** 	// Then calculate a new aRes, which relies on aScale being set correctly:
1368:../LSM9DS1_Driver.c **** 	calcaRes();
 5941              		.loc 1 1368 0
 5942 0090 FFF7FEFF 		bl	calcaRes
1369:../LSM9DS1_Driver.c **** }
 5943              		.loc 1 1369 0
 5944 0094 07F11007 		add	r7, r7, #16
 5945 0098 BD46     		mov	sp, r7
 5946 009a 80BD     		pop	{r7, pc}
 5947              		.cfi_endproc
 5948              	.LFE176:
 5950              		.section	.text.setMagScale,"ax",%progbits
 5951              		.align	2
 5952              		.global	setMagScale
 5953              		.thumb
 5954              		.thumb_func
 5956              	setMagScale:
 5957              	.LFB177:
1370:../LSM9DS1_Driver.c **** 
1371:../LSM9DS1_Driver.c **** void setMagScale(uint8_t mScl)
1372:../LSM9DS1_Driver.c **** {
 5958              		.loc 1 1372 0
 5959              		.cfi_startproc
 5960              		@ args = 0, pretend = 0, frame = 16
 5961              		@ frame_needed = 1, uses_anonymous_args = 0
 5962 0000 80B5     		push	{r7, lr}
 5963              	.LCFI169:
 5964              		.cfi_def_cfa_offset 8
 5965              		.cfi_offset 7, -8
 5966              		.cfi_offset 14, -4
 5967 0002 84B0     		sub	sp, sp, #16
 5968              	.LCFI170:
 5969              		.cfi_def_cfa_offset 24
 5970 0004 00AF     		add	r7, sp, #0
 5971              	.LCFI171:
 5972              		.cfi_def_cfa_register 7
 5973 0006 0346     		mov	r3, r0
 5974 0008 FB71     		strb	r3, [r7, #7]
1373:../LSM9DS1_Driver.c **** 	// We need to preserve the other bytes in CTRL_REG6_XM. So, first read it:
1374:../LSM9DS1_Driver.c **** 	uint8_t temp = mReadByte(CTRL_REG2_M);
 5975              		.loc 1 1374 0
 5976 000a 4FF02100 		mov	r0, #33
 5977 000e FFF7FEFF 		bl	mReadByte
 5978 0012 0346     		mov	r3, r0
 5979 0014 FB73     		strb	r3, [r7, #15]
1375:../LSM9DS1_Driver.c **** 	// Then mask out the mag scale bits:
1376:../LSM9DS1_Driver.c **** 	temp &= 0xFF^(0x3 << 5);
 5980              		.loc 1 1376 0
 5981 0016 FB7B     		ldrb	r3, [r7, #15]
 5982 0018 23F06003 		bic	r3, r3, #96
 5983 001c FB73     		strb	r3, [r7, #15]
1377:../LSM9DS1_Driver.c **** 
1378:../LSM9DS1_Driver.c **** 	switch (mScl)
 5984              		.loc 1 1378 0
 5985 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5986 0020 0C2B     		cmp	r3, #12
 5987 0022 10D0     		beq	.L240
 5988 0024 102B     		cmp	r3, #16
 5989 0026 1BD0     		beq	.L241
 5990 0028 082B     		cmp	r3, #8
 5991 002a 26D1     		bne	.L243
 5992              	.L239:
1379:../LSM9DS1_Driver.c **** 	{
1380:../LSM9DS1_Driver.c **** 		case 8:
1381:../LSM9DS1_Driver.c **** 			temp |= (0x1 << 5);
 5993              		.loc 1 1381 0
 5994 002c FB7B     		ldrb	r3, [r7, #15]
 5995 002e 43F02003 		orr	r3, r3, #32
 5996 0032 FB73     		strb	r3, [r7, #15]
1382:../LSM9DS1_Driver.c **** 			settings.mag.scale = 8;
 5997              		.loc 1 1382 0
 5998 0034 40F20003 		movw	r3, #:lower16:settings
 5999 0038 C0F20003 		movt	r3, #:upper16:settings
 6000 003c 4FF00802 		mov	r2, #8
 6001 0040 83F82020 		strb	r2, [r3, #32]
1383:../LSM9DS1_Driver.c **** 			break;
 6002              		.loc 1 1383 0
 6003 0044 22E0     		b	.L242
 6004              	.L240:
1384:../LSM9DS1_Driver.c **** 		case 12:
1385:../LSM9DS1_Driver.c **** 			temp |= (0x2 << 5);
 6005              		.loc 1 1385 0
 6006 0046 FB7B     		ldrb	r3, [r7, #15]
 6007 0048 43F04003 		orr	r3, r3, #64
 6008 004c FB73     		strb	r3, [r7, #15]
1386:../LSM9DS1_Driver.c **** 			settings.mag.scale = 12;
 6009              		.loc 1 1386 0
 6010 004e 40F20003 		movw	r3, #:lower16:settings
 6011 0052 C0F20003 		movt	r3, #:upper16:settings
 6012 0056 4FF00C02 		mov	r2, #12
 6013 005a 83F82020 		strb	r2, [r3, #32]
1387:../LSM9DS1_Driver.c **** 			break;
 6014              		.loc 1 1387 0
 6015 005e 15E0     		b	.L242
 6016              	.L241:
1388:../LSM9DS1_Driver.c **** 		case 16:
1389:../LSM9DS1_Driver.c **** 			temp |= (0x3 << 5);
 6017              		.loc 1 1389 0
 6018 0060 FB7B     		ldrb	r3, [r7, #15]
 6019 0062 43F06003 		orr	r3, r3, #96
 6020 0066 FB73     		strb	r3, [r7, #15]
1390:../LSM9DS1_Driver.c **** 			settings.mag.scale = 16;
 6021              		.loc 1 1390 0
 6022 0068 40F20003 		movw	r3, #:lower16:settings
 6023 006c C0F20003 		movt	r3, #:upper16:settings
 6024 0070 4FF01002 		mov	r2, #16
 6025 0074 83F82020 		strb	r2, [r3, #32]
1391:../LSM9DS1_Driver.c **** 			break;
 6026              		.loc 1 1391 0
 6027 0078 08E0     		b	.L242
 6028              	.L243:
1392:../LSM9DS1_Driver.c **** 		default: // Otherwise we'll default to 4 gauss (00)
1393:../LSM9DS1_Driver.c **** 			settings.mag.scale = 4;
 6029              		.loc 1 1393 0
 6030 007a 40F20003 		movw	r3, #:lower16:settings
 6031 007e C0F20003 		movt	r3, #:upper16:settings
 6032 0082 4FF00402 		mov	r2, #4
 6033 0086 83F82020 		strb	r2, [r3, #32]
1394:../LSM9DS1_Driver.c **** 			break;
 6034              		.loc 1 1394 0
 6035 008a 00BF     		nop
 6036              	.L242:
1395:../LSM9DS1_Driver.c **** 	}
1396:../LSM9DS1_Driver.c **** 
1397:../LSM9DS1_Driver.c **** 	// And write the new register value back into CTRL_REG6_XM:
1398:../LSM9DS1_Driver.c **** 	mWriteByte(CTRL_REG2_M, temp);
 6037              		.loc 1 1398 0
 6038 008c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6039 008e 4FF02100 		mov	r0, #33
 6040 0092 1946     		mov	r1, r3
 6041 0094 FFF7FEFF 		bl	mWriteByte
1399:../LSM9DS1_Driver.c **** 
1400:../LSM9DS1_Driver.c **** 	// We've updated the sensor, but we also need to update our class variables
1401:../LSM9DS1_Driver.c **** 	// First update mScale:
1402:../LSM9DS1_Driver.c **** 	//mScale = mScl;
1403:../LSM9DS1_Driver.c **** 	// Then calculate a new mRes, which relies on mScale being set correctly:
1404:../LSM9DS1_Driver.c **** 	calcmRes();
 6042              		.loc 1 1404 0
 6043 0098 FFF7FEFF 		bl	calcmRes
1405:../LSM9DS1_Driver.c **** }
 6044              		.loc 1 1405 0
 6045 009c 07F11007 		add	r7, r7, #16
 6046 00a0 BD46     		mov	sp, r7
 6047 00a2 80BD     		pop	{r7, pc}
 6048              		.cfi_endproc
 6049              	.LFE177:
 6051              		.section	.text.setGyroODR,"ax",%progbits
 6052              		.align	2
 6053              		.global	setGyroODR
 6054              		.thumb
 6055              		.thumb_func
 6057              	setGyroODR:
 6058              	.LFB178:
1406:../LSM9DS1_Driver.c **** 
1407:../LSM9DS1_Driver.c **** void setGyroODR(uint8_t gRate)
1408:../LSM9DS1_Driver.c **** {
 6059              		.loc 1 1408 0
 6060              		.cfi_startproc
 6061              		@ args = 0, pretend = 0, frame = 16
 6062              		@ frame_needed = 1, uses_anonymous_args = 0
 6063 0000 80B5     		push	{r7, lr}
 6064              	.LCFI172:
 6065              		.cfi_def_cfa_offset 8
 6066              		.cfi_offset 7, -8
 6067              		.cfi_offset 14, -4
 6068 0002 84B0     		sub	sp, sp, #16
 6069              	.LCFI173:
 6070              		.cfi_def_cfa_offset 24
 6071 0004 00AF     		add	r7, sp, #0
 6072              	.LCFI174:
 6073              		.cfi_def_cfa_register 7
 6074 0006 0346     		mov	r3, r0
 6075 0008 FB71     		strb	r3, [r7, #7]
1409:../LSM9DS1_Driver.c **** 	// Only do this if gRate is not 0 (which would disable the gyro)
1410:../LSM9DS1_Driver.c **** 	if ((gRate & 0x07) != 0)
 6076              		.loc 1 1410 0
 6077 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6078 000c 03F00703 		and	r3, r3, #7
 6079 0010 002B     		cmp	r3, #0
 6080 0012 20D0     		beq	.L244
 6081              	.LBB7:
1411:../LSM9DS1_Driver.c **** 	{
1412:../LSM9DS1_Driver.c **** 		// We need to preserve the other bytes in CTRL_REG1_G. So, first read it:
1413:../LSM9DS1_Driver.c **** 		uint8_t temp = xgReadByte(CTRL_REG1_G);
 6082              		.loc 1 1413 0
 6083 0014 4FF01000 		mov	r0, #16
 6084 0018 FFF7FEFF 		bl	xgReadByte
 6085 001c 0346     		mov	r3, r0
 6086 001e FB73     		strb	r3, [r7, #15]
1414:../LSM9DS1_Driver.c **** 		// Then mask out the gyro ODR bits:
1415:../LSM9DS1_Driver.c **** 		temp &= 0xFF^(0x7 << 5);
 6087              		.loc 1 1415 0
 6088 0020 FB7B     		ldrb	r3, [r7, #15]
 6089 0022 03F01F03 		and	r3, r3, #31
 6090 0026 FB73     		strb	r3, [r7, #15]
1416:../LSM9DS1_Driver.c **** 		temp |= (gRate & 0x07) << 5;
 6091              		.loc 1 1416 0
 6092 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6093 002a 4FEA4313 		lsl	r3, r3, #5
 6094 002e DAB2     		uxtb	r2, r3
 6095 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6096 0032 1343     		orrs	r3, r3, r2
 6097 0034 DBB2     		uxtb	r3, r3
 6098 0036 FB73     		strb	r3, [r7, #15]
1417:../LSM9DS1_Driver.c **** 		// Update our settings struct
1418:../LSM9DS1_Driver.c **** 		settings.gyro.sampleRate = gRate & 0x07;
 6099              		.loc 1 1418 0
 6100 0038 FB79     		ldrb	r3, [r7, #7]
 6101 003a 03F00703 		and	r3, r3, #7
 6102 003e DAB2     		uxtb	r2, r3
 6103 0040 40F20003 		movw	r3, #:lower16:settings
 6104 0044 C0F20003 		movt	r3, #:upper16:settings
 6105 0048 1A72     		strb	r2, [r3, #8]
1419:../LSM9DS1_Driver.c **** 		// And write the new register value back into CTRL_REG1_G:
1420:../LSM9DS1_Driver.c **** 		xgWriteByte(CTRL_REG1_G, temp);
 6106              		.loc 1 1420 0
 6107 004a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6108 004c 4FF01000 		mov	r0, #16
 6109 0050 1946     		mov	r1, r3
 6110 0052 FFF7FEFF 		bl	xgWriteByte
 6111              	.L244:
 6112              	.LBE7:
1421:../LSM9DS1_Driver.c **** 	}
1422:../LSM9DS1_Driver.c **** }
 6113              		.loc 1 1422 0
 6114 0056 07F11007 		add	r7, r7, #16
 6115 005a BD46     		mov	sp, r7
 6116 005c 80BD     		pop	{r7, pc}
 6117              		.cfi_endproc
 6118              	.LFE178:
 6120 005e 00BF     		.section	.text.setAccelODR,"ax",%progbits
 6121              		.align	2
 6122              		.global	setAccelODR
 6123              		.thumb
 6124              		.thumb_func
 6126              	setAccelODR:
 6127              	.LFB179:
1423:../LSM9DS1_Driver.c **** 
1424:../LSM9DS1_Driver.c **** void setAccelODR(uint8_t aRate)
1425:../LSM9DS1_Driver.c **** {
 6128              		.loc 1 1425 0
 6129              		.cfi_startproc
 6130              		@ args = 0, pretend = 0, frame = 16
 6131              		@ frame_needed = 1, uses_anonymous_args = 0
 6132 0000 80B5     		push	{r7, lr}
 6133              	.LCFI175:
 6134              		.cfi_def_cfa_offset 8
 6135              		.cfi_offset 7, -8
 6136              		.cfi_offset 14, -4
 6137 0002 84B0     		sub	sp, sp, #16
 6138              	.LCFI176:
 6139              		.cfi_def_cfa_offset 24
 6140 0004 00AF     		add	r7, sp, #0
 6141              	.LCFI177:
 6142              		.cfi_def_cfa_register 7
 6143 0006 0346     		mov	r3, r0
 6144 0008 FB71     		strb	r3, [r7, #7]
1426:../LSM9DS1_Driver.c **** 	// Only do this if aRate is not 0 (which would disable the accel)
1427:../LSM9DS1_Driver.c **** 	if ((aRate & 0x07) != 0)
 6145              		.loc 1 1427 0
 6146 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6147 000c 03F00703 		and	r3, r3, #7
 6148 0010 002B     		cmp	r3, #0
 6149 0012 20D0     		beq	.L246
 6150              	.LBB8:
1428:../LSM9DS1_Driver.c **** 	{
1429:../LSM9DS1_Driver.c **** 		// We need to preserve the other bytes in CTRL_REG1_XM. So, first read it:
1430:../LSM9DS1_Driver.c **** 		uint8_t temp = xgReadByte(CTRL_REG6_XL);
 6151              		.loc 1 1430 0
 6152 0014 4FF02000 		mov	r0, #32
 6153 0018 FFF7FEFF 		bl	xgReadByte
 6154 001c 0346     		mov	r3, r0
 6155 001e FB73     		strb	r3, [r7, #15]
1431:../LSM9DS1_Driver.c **** 		// Then mask out the accel ODR bits:
1432:../LSM9DS1_Driver.c **** 		temp &= 0x1F;
 6156              		.loc 1 1432 0
 6157 0020 FB7B     		ldrb	r3, [r7, #15]
 6158 0022 03F01F03 		and	r3, r3, #31
 6159 0026 FB73     		strb	r3, [r7, #15]
1433:../LSM9DS1_Driver.c **** 		// Then shift in our new ODR bits:
1434:../LSM9DS1_Driver.c **** 		temp |= ((aRate & 0x07) << 5);
 6160              		.loc 1 1434 0
 6161 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6162 002a 4FEA4313 		lsl	r3, r3, #5
 6163 002e DAB2     		uxtb	r2, r3
 6164 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6165 0032 1343     		orrs	r3, r3, r2
 6166 0034 DBB2     		uxtb	r3, r3
 6167 0036 FB73     		strb	r3, [r7, #15]
1435:../LSM9DS1_Driver.c **** 		settings.accel.sampleRate = aRate & 0x07;
 6168              		.loc 1 1435 0
 6169 0038 FB79     		ldrb	r3, [r7, #7]
 6170 003a 03F00703 		and	r3, r3, #7
 6171 003e DAB2     		uxtb	r2, r3
 6172 0040 40F20003 		movw	r3, #:lower16:settings
 6173 0044 C0F20003 		movt	r3, #:upper16:settings
 6174 0048 1A76     		strb	r2, [r3, #24]
1436:../LSM9DS1_Driver.c **** 		// And write the new register value back into CTRL_REG1_XM:
1437:../LSM9DS1_Driver.c **** 		xgWriteByte(CTRL_REG6_XL, temp);
 6175              		.loc 1 1437 0
 6176 004a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6177 004c 4FF02000 		mov	r0, #32
 6178 0050 1946     		mov	r1, r3
 6179 0052 FFF7FEFF 		bl	xgWriteByte
 6180              	.L246:
 6181              	.LBE8:
1438:../LSM9DS1_Driver.c **** 	}
1439:../LSM9DS1_Driver.c **** }
 6182              		.loc 1 1439 0
 6183 0056 07F11007 		add	r7, r7, #16
 6184 005a BD46     		mov	sp, r7
 6185 005c 80BD     		pop	{r7, pc}
 6186              		.cfi_endproc
 6187              	.LFE179:
 6189 005e 00BF     		.section	.text.setMagODR,"ax",%progbits
 6190              		.align	2
 6191              		.global	setMagODR
 6192              		.thumb
 6193              		.thumb_func
 6195              	setMagODR:
 6196              	.LFB180:
1440:../LSM9DS1_Driver.c **** 
1441:../LSM9DS1_Driver.c **** void setMagODR(uint8_t mRate)
1442:../LSM9DS1_Driver.c **** {
 6197              		.loc 1 1442 0
 6198              		.cfi_startproc
 6199              		@ args = 0, pretend = 0, frame = 16
 6200              		@ frame_needed = 1, uses_anonymous_args = 0
 6201 0000 80B5     		push	{r7, lr}
 6202              	.LCFI178:
 6203              		.cfi_def_cfa_offset 8
 6204              		.cfi_offset 7, -8
 6205              		.cfi_offset 14, -4
 6206 0002 84B0     		sub	sp, sp, #16
 6207              	.LCFI179:
 6208              		.cfi_def_cfa_offset 24
 6209 0004 00AF     		add	r7, sp, #0
 6210              	.LCFI180:
 6211              		.cfi_def_cfa_register 7
 6212 0006 0346     		mov	r3, r0
 6213 0008 FB71     		strb	r3, [r7, #7]
1443:../LSM9DS1_Driver.c **** 	// We need to preserve the other bytes in CTRL_REG5_XM. So, first read it:
1444:../LSM9DS1_Driver.c **** 	uint8_t temp = mReadByte(CTRL_REG1_M);
 6214              		.loc 1 1444 0
 6215 000a 4FF02000 		mov	r0, #32
 6216 000e FFF7FEFF 		bl	mReadByte
 6217 0012 0346     		mov	r3, r0
 6218 0014 FB73     		strb	r3, [r7, #15]
1445:../LSM9DS1_Driver.c **** 	// Then mask out the mag ODR bits:
1446:../LSM9DS1_Driver.c **** 	temp &= 0xFF^(0x7 << 2);
 6219              		.loc 1 1446 0
 6220 0016 FB7B     		ldrb	r3, [r7, #15]
 6221 0018 23F01C03 		bic	r3, r3, #28
 6222 001c FB73     		strb	r3, [r7, #15]
1447:../LSM9DS1_Driver.c **** 	// Then shift in our new ODR bits:
1448:../LSM9DS1_Driver.c **** 	temp |= ((mRate & 0x07) << 2);
 6223              		.loc 1 1448 0
 6224 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6225 0020 03F00703 		and	r3, r3, #7
 6226 0024 4FEA8303 		lsl	r3, r3, #2
 6227 0028 DAB2     		uxtb	r2, r3
 6228 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6229 002c 1343     		orrs	r3, r3, r2
 6230 002e DBB2     		uxtb	r3, r3
 6231 0030 FB73     		strb	r3, [r7, #15]
1449:../LSM9DS1_Driver.c **** 	settings.mag.sampleRate = mRate & 0x07;
 6232              		.loc 1 1449 0
 6233 0032 FB79     		ldrb	r3, [r7, #7]
 6234 0034 03F00703 		and	r3, r3, #7
 6235 0038 DAB2     		uxtb	r2, r3
 6236 003a 40F20003 		movw	r3, #:lower16:settings
 6237 003e C0F20003 		movt	r3, #:upper16:settings
 6238 0042 83F82120 		strb	r2, [r3, #33]
1450:../LSM9DS1_Driver.c **** 	// And write the new register value back into CTRL_REG5_XM:
1451:../LSM9DS1_Driver.c **** 	mWriteByte(CTRL_REG1_M, temp);
 6239              		.loc 1 1451 0
 6240 0046 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6241 0048 4FF02000 		mov	r0, #32
 6242 004c 1946     		mov	r1, r3
 6243 004e FFF7FEFF 		bl	mWriteByte
1452:../LSM9DS1_Driver.c **** }
 6244              		.loc 1 1452 0
 6245 0052 07F11007 		add	r7, r7, #16
 6246 0056 BD46     		mov	sp, r7
 6247 0058 80BD     		pop	{r7, pc}
 6248              		.cfi_endproc
 6249              	.LFE180:
 6251 005a 00BF     		.section	.text.configInt,"ax",%progbits
 6252              		.align	2
 6253              		.global	configInt
 6254              		.thumb
 6255              		.thumb_func
 6257              	configInt:
 6258              	.LFB181:
1453:../LSM9DS1_Driver.c **** 
1454:../LSM9DS1_Driver.c **** void configInt(interrupt_select interupt, uint8_t generator, h_lactive activeLow, pp_od pushPull)
1455:../LSM9DS1_Driver.c **** {
 6259              		.loc 1 1455 0
 6260              		.cfi_startproc
 6261              		@ args = 0, pretend = 0, frame = 16
 6262              		@ frame_needed = 1, uses_anonymous_args = 0
 6263 0000 80B5     		push	{r7, lr}
 6264              	.LCFI181:
 6265              		.cfi_def_cfa_offset 8
 6266              		.cfi_offset 7, -8
 6267              		.cfi_offset 14, -4
 6268 0002 84B0     		sub	sp, sp, #16
 6269              	.LCFI182:
 6270              		.cfi_def_cfa_offset 24
 6271 0004 00AF     		add	r7, sp, #0
 6272              	.LCFI183:
 6273              		.cfi_def_cfa_register 7
 6274 0006 F871     		strb	r0, [r7, #7]
 6275 0008 B971     		strb	r1, [r7, #6]
 6276 000a 7A71     		strb	r2, [r7, #5]
 6277 000c 3B71     		strb	r3, [r7, #4]
1456:../LSM9DS1_Driver.c **** 	// Write to INT1_CTRL or INT2_CTRL. [interupt] should already be one of
1457:../LSM9DS1_Driver.c **** 	// those two values.
1458:../LSM9DS1_Driver.c **** 	// [generator] should be an OR'd list of values from the interrupt_generators enum
1459:../LSM9DS1_Driver.c **** 	xgWriteByte(interupt, generator);
 6278              		.loc 1 1459 0
 6279 000e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6280 0010 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 6281 0012 1046     		mov	r0, r2
 6282 0014 1946     		mov	r1, r3
 6283 0016 FFF7FEFF 		bl	xgWriteByte
1460:../LSM9DS1_Driver.c **** 
1461:../LSM9DS1_Driver.c **** 	// Configure CTRL_REG8
1462:../LSM9DS1_Driver.c **** 	uint8_t temp;
1463:../LSM9DS1_Driver.c **** 	temp = xgReadByte(CTRL_REG8);
 6284              		.loc 1 1463 0
 6285 001a 4FF02200 		mov	r0, #34
 6286 001e FFF7FEFF 		bl	xgReadByte
 6287 0022 0346     		mov	r3, r0
 6288 0024 FB73     		strb	r3, [r7, #15]
1464:../LSM9DS1_Driver.c **** 
1465:../LSM9DS1_Driver.c **** 	if (activeLow) temp |= (1<<5);
 6289              		.loc 1 1465 0
 6290 0026 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 6291 0028 002B     		cmp	r3, #0
 6292 002a 04D0     		beq	.L250
 6293              		.loc 1 1465 0 is_stmt 0 discriminator 1
 6294 002c FB7B     		ldrb	r3, [r7, #15]
 6295 002e 43F02003 		orr	r3, r3, #32
 6296 0032 FB73     		strb	r3, [r7, #15]
 6297 0034 03E0     		b	.L251
 6298              	.L250:
1466:../LSM9DS1_Driver.c **** 	else temp &= ~(1<<5);
 6299              		.loc 1 1466 0 is_stmt 1
 6300 0036 FB7B     		ldrb	r3, [r7, #15]
 6301 0038 23F02003 		bic	r3, r3, #32
 6302 003c FB73     		strb	r3, [r7, #15]
 6303              	.L251:
1467:../LSM9DS1_Driver.c **** 
1468:../LSM9DS1_Driver.c **** 	if (pushPull) temp &= ~(1<<4);
 6304              		.loc 1 1468 0
 6305 003e 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 6306 0040 002B     		cmp	r3, #0
 6307 0042 04D0     		beq	.L252
 6308              		.loc 1 1468 0 is_stmt 0 discriminator 1
 6309 0044 FB7B     		ldrb	r3, [r7, #15]
 6310 0046 23F01003 		bic	r3, r3, #16
 6311 004a FB73     		strb	r3, [r7, #15]
 6312 004c 03E0     		b	.L253
 6313              	.L252:
1469:../LSM9DS1_Driver.c **** 	else temp |= (1<<4);
 6314              		.loc 1 1469 0 is_stmt 1
 6315 004e FB7B     		ldrb	r3, [r7, #15]
 6316 0050 43F01003 		orr	r3, r3, #16
 6317 0054 FB73     		strb	r3, [r7, #15]
 6318              	.L253:
1470:../LSM9DS1_Driver.c **** 
1471:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG8, temp);
 6319              		.loc 1 1471 0
 6320 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6321 0058 4FF02200 		mov	r0, #34
 6322 005c 1946     		mov	r1, r3
 6323 005e FFF7FEFF 		bl	xgWriteByte
1472:../LSM9DS1_Driver.c **** }
 6324              		.loc 1 1472 0
 6325 0062 07F11007 		add	r7, r7, #16
 6326 0066 BD46     		mov	sp, r7
 6327 0068 80BD     		pop	{r7, pc}
 6328              		.cfi_endproc
 6329              	.LFE181:
 6331 006a 00BF     		.section	.text.configInactivity,"ax",%progbits
 6332              		.align	2
 6333              		.global	configInactivity
 6334              		.thumb
 6335              		.thumb_func
 6337              	configInactivity:
 6338              	.LFB182:
1473:../LSM9DS1_Driver.c **** 
1474:../LSM9DS1_Driver.c **** 
1475:../LSM9DS1_Driver.c **** void configInactivity(uint8_t duration, uint8_t threshold, bool sleepOn)
1476:../LSM9DS1_Driver.c **** {
 6339              		.loc 1 1476 0
 6340              		.cfi_startproc
 6341              		@ args = 0, pretend = 0, frame = 16
 6342              		@ frame_needed = 1, uses_anonymous_args = 0
 6343 0000 80B5     		push	{r7, lr}
 6344              	.LCFI184:
 6345              		.cfi_def_cfa_offset 8
 6346              		.cfi_offset 7, -8
 6347              		.cfi_offset 14, -4
 6348 0002 84B0     		sub	sp, sp, #16
 6349              	.LCFI185:
 6350              		.cfi_def_cfa_offset 24
 6351 0004 00AF     		add	r7, sp, #0
 6352              	.LCFI186:
 6353              		.cfi_def_cfa_register 7
 6354 0006 1346     		mov	r3, r2
 6355 0008 0246     		mov	r2, r0
 6356 000a FA71     		strb	r2, [r7, #7]
 6357 000c 0A46     		mov	r2, r1
 6358 000e BA71     		strb	r2, [r7, #6]
 6359 0010 7B71     		strb	r3, [r7, #5]
1477:../LSM9DS1_Driver.c **** 	uint8_t temp = 0;
 6360              		.loc 1 1477 0
 6361 0012 4FF00003 		mov	r3, #0
 6362 0016 FB73     		strb	r3, [r7, #15]
1478:../LSM9DS1_Driver.c **** 
1479:../LSM9DS1_Driver.c **** 	temp = threshold & 0x7F;
 6363              		.loc 1 1479 0
 6364 0018 BB79     		ldrb	r3, [r7, #6]
 6365 001a 03F07F03 		and	r3, r3, #127
 6366 001e FB73     		strb	r3, [r7, #15]
1480:../LSM9DS1_Driver.c **** 	if (sleepOn) temp |= (1<<7);
 6367              		.loc 1 1480 0
 6368 0020 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 6369 0022 002B     		cmp	r3, #0
 6370 0024 03D0     		beq	.L255
 6371              		.loc 1 1480 0 is_stmt 0 discriminator 1
 6372 0026 FB7B     		ldrb	r3, [r7, #15]
 6373 0028 63F07F03 		orn	r3, r3, #127
 6374 002c FB73     		strb	r3, [r7, #15]
 6375              	.L255:
1481:../LSM9DS1_Driver.c **** 	xgWriteByte(ACT_THS, temp);
 6376              		.loc 1 1481 0 is_stmt 1
 6377 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6378 0030 4FF00400 		mov	r0, #4
 6379 0034 1946     		mov	r1, r3
 6380 0036 FFF7FEFF 		bl	xgWriteByte
1482:../LSM9DS1_Driver.c **** 
1483:../LSM9DS1_Driver.c **** 	xgWriteByte(ACT_DUR, duration);
 6381              		.loc 1 1483 0
 6382 003a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6383 003c 4FF00500 		mov	r0, #5
 6384 0040 1946     		mov	r1, r3
 6385 0042 FFF7FEFF 		bl	xgWriteByte
1484:../LSM9DS1_Driver.c **** }
 6386              		.loc 1 1484 0
 6387 0046 07F11007 		add	r7, r7, #16
 6388 004a BD46     		mov	sp, r7
 6389 004c 80BD     		pop	{r7, pc}
 6390              		.cfi_endproc
 6391              	.LFE182:
 6393 004e 00BF     		.section	.text.getInactivity,"ax",%progbits
 6394              		.align	2
 6395              		.global	getInactivity
 6396              		.thumb
 6397              		.thumb_func
 6399              	getInactivity:
 6400              	.LFB183:
1485:../LSM9DS1_Driver.c **** 
1486:../LSM9DS1_Driver.c **** 
1487:../LSM9DS1_Driver.c **** uint8_t getInactivity(void)
1488:../LSM9DS1_Driver.c **** {
 6401              		.loc 1 1488 0
 6402              		.cfi_startproc
 6403              		@ args = 0, pretend = 0, frame = 8
 6404              		@ frame_needed = 1, uses_anonymous_args = 0
 6405 0000 80B5     		push	{r7, lr}
 6406              	.LCFI187:
 6407              		.cfi_def_cfa_offset 8
 6408              		.cfi_offset 7, -8
 6409              		.cfi_offset 14, -4
 6410 0002 82B0     		sub	sp, sp, #8
 6411              	.LCFI188:
 6412              		.cfi_def_cfa_offset 16
 6413 0004 00AF     		add	r7, sp, #0
 6414              	.LCFI189:
 6415              		.cfi_def_cfa_register 7
1489:../LSM9DS1_Driver.c **** 	uint8_t temp = xgReadByte(STATUS_REG_0);
 6416              		.loc 1 1489 0
 6417 0006 4FF01700 		mov	r0, #23
 6418 000a FFF7FEFF 		bl	xgReadByte
 6419 000e 0346     		mov	r3, r0
 6420 0010 FB71     		strb	r3, [r7, #7]
1490:../LSM9DS1_Driver.c **** 	temp &= (0x10);
 6421              		.loc 1 1490 0
 6422 0012 FB79     		ldrb	r3, [r7, #7]
 6423 0014 03F01003 		and	r3, r3, #16
 6424 0018 FB71     		strb	r3, [r7, #7]
1491:../LSM9DS1_Driver.c **** 	return temp;
 6425              		.loc 1 1491 0
 6426 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1492:../LSM9DS1_Driver.c **** }
 6427              		.loc 1 1492 0
 6428 001c 1846     		mov	r0, r3
 6429 001e 07F10807 		add	r7, r7, #8
 6430 0022 BD46     		mov	sp, r7
 6431 0024 80BD     		pop	{r7, pc}
 6432              		.cfi_endproc
 6433              	.LFE183:
 6435 0026 00BF     		.section	.text.configAccelInt,"ax",%progbits
 6436              		.align	2
 6437              		.global	configAccelInt
 6438              		.thumb
 6439              		.thumb_func
 6441              	configAccelInt:
 6442              	.LFB184:
1493:../LSM9DS1_Driver.c **** 
1494:../LSM9DS1_Driver.c **** void configAccelInt(uint8_t generator, bool andInterrupts)
1495:../LSM9DS1_Driver.c **** {
 6443              		.loc 1 1495 0
 6444              		.cfi_startproc
 6445              		@ args = 0, pretend = 0, frame = 16
 6446              		@ frame_needed = 1, uses_anonymous_args = 0
 6447 0000 80B5     		push	{r7, lr}
 6448              	.LCFI190:
 6449              		.cfi_def_cfa_offset 8
 6450              		.cfi_offset 7, -8
 6451              		.cfi_offset 14, -4
 6452 0002 84B0     		sub	sp, sp, #16
 6453              	.LCFI191:
 6454              		.cfi_def_cfa_offset 24
 6455 0004 00AF     		add	r7, sp, #0
 6456              	.LCFI192:
 6457              		.cfi_def_cfa_register 7
 6458 0006 0246     		mov	r2, r0
 6459 0008 0B46     		mov	r3, r1
 6460 000a FA71     		strb	r2, [r7, #7]
 6461 000c BB71     		strb	r3, [r7, #6]
1496:../LSM9DS1_Driver.c **** 	// Use variables from accel_interrupt_generator, OR'd together to create
1497:../LSM9DS1_Driver.c **** 	// the [generator]value.
1498:../LSM9DS1_Driver.c **** 	uint8_t temp = generator;
 6462              		.loc 1 1498 0
 6463 000e FB79     		ldrb	r3, [r7, #7]
 6464 0010 FB73     		strb	r3, [r7, #15]
1499:../LSM9DS1_Driver.c **** 	if (andInterrupts) temp |= 0x80;
 6465              		.loc 1 1499 0
 6466 0012 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 6467 0014 002B     		cmp	r3, #0
 6468 0016 03D0     		beq	.L259
 6469              		.loc 1 1499 0 is_stmt 0 discriminator 1
 6470 0018 FB7B     		ldrb	r3, [r7, #15]
 6471 001a 63F07F03 		orn	r3, r3, #127
 6472 001e FB73     		strb	r3, [r7, #15]
 6473              	.L259:
1500:../LSM9DS1_Driver.c **** 	xgWriteByte(INT_GEN_CFG_XL, temp);
 6474              		.loc 1 1500 0 is_stmt 1
 6475 0020 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6476 0022 4FF00600 		mov	r0, #6
 6477 0026 1946     		mov	r1, r3
 6478 0028 FFF7FEFF 		bl	xgWriteByte
1501:../LSM9DS1_Driver.c **** }
 6479              		.loc 1 1501 0
 6480 002c 07F11007 		add	r7, r7, #16
 6481 0030 BD46     		mov	sp, r7
 6482 0032 80BD     		pop	{r7, pc}
 6483              		.cfi_endproc
 6484              	.LFE184:
 6486              		.section	.text.configAccelThs,"ax",%progbits
 6487              		.align	2
 6488              		.global	configAccelThs
 6489              		.thumb
 6490              		.thumb_func
 6492              	configAccelThs:
 6493              	.LFB185:
1502:../LSM9DS1_Driver.c **** 
1503:../LSM9DS1_Driver.c **** void configAccelThs(uint8_t threshold, lsm9ds1_axis axis, uint8_t duration, bool wait)
1504:../LSM9DS1_Driver.c **** {
 6494              		.loc 1 1504 0
 6495              		.cfi_startproc
 6496              		@ args = 0, pretend = 0, frame = 16
 6497              		@ frame_needed = 1, uses_anonymous_args = 0
 6498 0000 80B5     		push	{r7, lr}
 6499              	.LCFI193:
 6500              		.cfi_def_cfa_offset 8
 6501              		.cfi_offset 7, -8
 6502              		.cfi_offset 14, -4
 6503 0002 84B0     		sub	sp, sp, #16
 6504              	.LCFI194:
 6505              		.cfi_def_cfa_offset 24
 6506 0004 00AF     		add	r7, sp, #0
 6507              	.LCFI195:
 6508              		.cfi_def_cfa_register 7
 6509 0006 F871     		strb	r0, [r7, #7]
 6510 0008 B971     		strb	r1, [r7, #6]
 6511 000a 7A71     		strb	r2, [r7, #5]
 6512 000c 3B71     		strb	r3, [r7, #4]
1505:../LSM9DS1_Driver.c **** 	// Write threshold value to INT_GEN_THS_?_XL.
1506:../LSM9DS1_Driver.c **** 	// axis will be 0, 1, or 2 (x, y, z respectively)
1507:../LSM9DS1_Driver.c **** 	xgWriteByte(INT_GEN_THS_X_XL + axis, threshold);
 6513              		.loc 1 1507 0
 6514 000e BB79     		ldrb	r3, [r7, #6]
 6515 0010 03F10703 		add	r3, r3, #7
 6516 0014 DAB2     		uxtb	r2, r3
 6517 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6518 0018 1046     		mov	r0, r2
 6519 001a 1946     		mov	r1, r3
 6520 001c FFF7FEFF 		bl	xgWriteByte
1508:../LSM9DS1_Driver.c **** 
1509:../LSM9DS1_Driver.c **** 	// Write duration and wait to INT_GEN_DUR_XL
1510:../LSM9DS1_Driver.c **** 	uint8_t temp;
1511:../LSM9DS1_Driver.c **** 	temp = (duration & 0x7F);
 6521              		.loc 1 1511 0
 6522 0020 7B79     		ldrb	r3, [r7, #5]
 6523 0022 03F07F03 		and	r3, r3, #127
 6524 0026 FB73     		strb	r3, [r7, #15]
1512:../LSM9DS1_Driver.c **** 	if (wait) temp |= 0x80;
 6525              		.loc 1 1512 0
 6526 0028 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 6527 002a 002B     		cmp	r3, #0
 6528 002c 03D0     		beq	.L261
 6529              		.loc 1 1512 0 is_stmt 0 discriminator 1
 6530 002e FB7B     		ldrb	r3, [r7, #15]
 6531 0030 63F07F03 		orn	r3, r3, #127
 6532 0034 FB73     		strb	r3, [r7, #15]
 6533              	.L261:
1513:../LSM9DS1_Driver.c **** 	xgWriteByte(INT_GEN_DUR_XL, temp);
 6534              		.loc 1 1513 0 is_stmt 1
 6535 0036 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6536 0038 4FF00A00 		mov	r0, #10
 6537 003c 1946     		mov	r1, r3
 6538 003e FFF7FEFF 		bl	xgWriteByte
1514:../LSM9DS1_Driver.c **** }
 6539              		.loc 1 1514 0
 6540 0042 07F11007 		add	r7, r7, #16
 6541 0046 BD46     		mov	sp, r7
 6542 0048 80BD     		pop	{r7, pc}
 6543              		.cfi_endproc
 6544              	.LFE185:
 6546 004a 00BF     		.section	.text.getAccelIntSrc,"ax",%progbits
 6547              		.align	2
 6548              		.global	getAccelIntSrc
 6549              		.thumb
 6550              		.thumb_func
 6552              	getAccelIntSrc:
 6553              	.LFB186:
1515:../LSM9DS1_Driver.c **** 
1516:../LSM9DS1_Driver.c **** uint8_t getAccelIntSrc(void)
1517:../LSM9DS1_Driver.c **** {
 6554              		.loc 1 1517 0
 6555              		.cfi_startproc
 6556              		@ args = 0, pretend = 0, frame = 8
 6557              		@ frame_needed = 1, uses_anonymous_args = 0
 6558 0000 80B5     		push	{r7, lr}
 6559              	.LCFI196:
 6560              		.cfi_def_cfa_offset 8
 6561              		.cfi_offset 7, -8
 6562              		.cfi_offset 14, -4
 6563 0002 82B0     		sub	sp, sp, #8
 6564              	.LCFI197:
 6565              		.cfi_def_cfa_offset 16
 6566 0004 00AF     		add	r7, sp, #0
 6567              	.LCFI198:
 6568              		.cfi_def_cfa_register 7
1518:../LSM9DS1_Driver.c **** 	uint8_t intSrc = xgReadByte(INT_GEN_SRC_XL);
 6569              		.loc 1 1518 0
 6570 0006 4FF02600 		mov	r0, #38
 6571 000a FFF7FEFF 		bl	xgReadByte
 6572 000e 0346     		mov	r3, r0
 6573 0010 FB71     		strb	r3, [r7, #7]
1519:../LSM9DS1_Driver.c **** 
1520:../LSM9DS1_Driver.c **** 	// Check if the IA_XL (interrupt active) bit is set
1521:../LSM9DS1_Driver.c **** 	if (intSrc & (1<<6))
 6574              		.loc 1 1521 0
 6575 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6576 0014 03F04003 		and	r3, r3, #64
 6577 0018 002B     		cmp	r3, #0
 6578 001a 04D0     		beq	.L263
1522:../LSM9DS1_Driver.c **** 	{
1523:../LSM9DS1_Driver.c **** 		return (intSrc & 0x3F);
 6579              		.loc 1 1523 0
 6580 001c FB79     		ldrb	r3, [r7, #7]
 6581 001e 03F03F03 		and	r3, r3, #63
 6582 0022 DBB2     		uxtb	r3, r3
 6583 0024 01E0     		b	.L264
 6584              	.L263:
1524:../LSM9DS1_Driver.c **** 	}
1525:../LSM9DS1_Driver.c **** 
1526:../LSM9DS1_Driver.c **** 	return 0;
 6585              		.loc 1 1526 0
 6586 0026 4FF00003 		mov	r3, #0
 6587              	.L264:
1527:../LSM9DS1_Driver.c **** }
 6588              		.loc 1 1527 0
 6589 002a 1846     		mov	r0, r3
 6590 002c 07F10807 		add	r7, r7, #8
 6591 0030 BD46     		mov	sp, r7
 6592 0032 80BD     		pop	{r7, pc}
 6593              		.cfi_endproc
 6594              	.LFE186:
 6596              		.section	.text.configGyroInt,"ax",%progbits
 6597              		.align	2
 6598              		.global	configGyroInt
 6599              		.thumb
 6600              		.thumb_func
 6602              	configGyroInt:
 6603              	.LFB187:
1528:../LSM9DS1_Driver.c **** 
1529:../LSM9DS1_Driver.c **** void configGyroInt(uint8_t generator, bool aoi, bool latch)
1530:../LSM9DS1_Driver.c **** {
 6604              		.loc 1 1530 0
 6605              		.cfi_startproc
 6606              		@ args = 0, pretend = 0, frame = 16
 6607              		@ frame_needed = 1, uses_anonymous_args = 0
 6608 0000 80B5     		push	{r7, lr}
 6609              	.LCFI199:
 6610              		.cfi_def_cfa_offset 8
 6611              		.cfi_offset 7, -8
 6612              		.cfi_offset 14, -4
 6613 0002 84B0     		sub	sp, sp, #16
 6614              	.LCFI200:
 6615              		.cfi_def_cfa_offset 24
 6616 0004 00AF     		add	r7, sp, #0
 6617              	.LCFI201:
 6618              		.cfi_def_cfa_register 7
 6619 0006 1346     		mov	r3, r2
 6620 0008 0246     		mov	r2, r0
 6621 000a FA71     		strb	r2, [r7, #7]
 6622 000c 0A46     		mov	r2, r1
 6623 000e BA71     		strb	r2, [r7, #6]
 6624 0010 7B71     		strb	r3, [r7, #5]
1531:../LSM9DS1_Driver.c **** 	// Use variables from accel_interrupt_generator, OR'd together to create
1532:../LSM9DS1_Driver.c **** 	// the [generator]value.
1533:../LSM9DS1_Driver.c **** 	uint8_t temp = generator;
 6625              		.loc 1 1533 0
 6626 0012 FB79     		ldrb	r3, [r7, #7]
 6627 0014 FB73     		strb	r3, [r7, #15]
1534:../LSM9DS1_Driver.c **** 	if (aoi) temp |= 0x80;
 6628              		.loc 1 1534 0
 6629 0016 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 6630 0018 002B     		cmp	r3, #0
 6631 001a 03D0     		beq	.L266
 6632              		.loc 1 1534 0 is_stmt 0 discriminator 1
 6633 001c FB7B     		ldrb	r3, [r7, #15]
 6634 001e 63F07F03 		orn	r3, r3, #127
 6635 0022 FB73     		strb	r3, [r7, #15]
 6636              	.L266:
1535:../LSM9DS1_Driver.c **** 	if (latch) temp |= 0x40;
 6637              		.loc 1 1535 0 is_stmt 1
 6638 0024 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 6639 0026 002B     		cmp	r3, #0
 6640 0028 03D0     		beq	.L267
 6641              		.loc 1 1535 0 is_stmt 0 discriminator 1
 6642 002a FB7B     		ldrb	r3, [r7, #15]
 6643 002c 43F04003 		orr	r3, r3, #64
 6644 0030 FB73     		strb	r3, [r7, #15]
 6645              	.L267:
1536:../LSM9DS1_Driver.c **** 	xgWriteByte(INT_GEN_CFG_G, temp);
 6646              		.loc 1 1536 0 is_stmt 1
 6647 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6648 0034 4FF03000 		mov	r0, #48
 6649 0038 1946     		mov	r1, r3
 6650 003a FFF7FEFF 		bl	xgWriteByte
1537:../LSM9DS1_Driver.c **** }
 6651              		.loc 1 1537 0
 6652 003e 07F11007 		add	r7, r7, #16
 6653 0042 BD46     		mov	sp, r7
 6654 0044 80BD     		pop	{r7, pc}
 6655              		.cfi_endproc
 6656              	.LFE187:
 6658 0046 00BF     		.section	.text.configGyroThs,"ax",%progbits
 6659              		.align	2
 6660              		.global	configGyroThs
 6661              		.thumb
 6662              		.thumb_func
 6664              	configGyroThs:
 6665              	.LFB188:
1538:../LSM9DS1_Driver.c **** 
1539:../LSM9DS1_Driver.c **** 
1540:../LSM9DS1_Driver.c **** void configGyroThs(int16_t threshold, lsm9ds1_axis axis, uint8_t duration, bool wait)
1541:../LSM9DS1_Driver.c **** {
 6666              		.loc 1 1541 0
 6667              		.cfi_startproc
 6668              		@ args = 0, pretend = 0, frame = 16
 6669              		@ frame_needed = 1, uses_anonymous_args = 0
 6670 0000 80B5     		push	{r7, lr}
 6671              	.LCFI202:
 6672              		.cfi_def_cfa_offset 8
 6673              		.cfi_offset 7, -8
 6674              		.cfi_offset 14, -4
 6675 0002 84B0     		sub	sp, sp, #16
 6676              	.LCFI203:
 6677              		.cfi_def_cfa_offset 24
 6678 0004 00AF     		add	r7, sp, #0
 6679              	.LCFI204:
 6680              		.cfi_def_cfa_register 7
 6681 0006 F880     		strh	r0, [r7, #6]	@ movhi
 6682 0008 7971     		strb	r1, [r7, #5]
 6683 000a 3A71     		strb	r2, [r7, #4]
 6684 000c FB70     		strb	r3, [r7, #3]
1542:../LSM9DS1_Driver.c **** 	uint8_t buffer[2];
1543:../LSM9DS1_Driver.c **** 	buffer[0] = (threshold & 0x7F00) >> 8;
 6685              		.loc 1 1543 0
 6686 000e FB88     		ldrh	r3, [r7, #6]
 6687 0010 03F4FE43 		and	r3, r3, #32512
 6688 0014 4FEA2323 		asr	r3, r3, #8
 6689 0018 DBB2     		uxtb	r3, r3
 6690 001a 3B73     		strb	r3, [r7, #12]
1544:../LSM9DS1_Driver.c **** 	buffer[1] = (threshold & 0x00FF);
 6691              		.loc 1 1544 0
 6692 001c FB88     		ldrh	r3, [r7, #6]	@ movhi
 6693 001e DBB2     		uxtb	r3, r3
 6694 0020 7B73     		strb	r3, [r7, #13]
1545:../LSM9DS1_Driver.c **** 	// Write threshold value to INT_GEN_THS_?H_G and  INT_GEN_THS_?L_G.
1546:../LSM9DS1_Driver.c **** 	// axis will be 0, 1, or 2 (x, y, z respectively)
1547:../LSM9DS1_Driver.c **** 	xgWriteByte(INT_GEN_THS_XH_G + (axis * 2), buffer[0]);
 6695              		.loc 1 1547 0
 6696 0022 7B79     		ldrb	r3, [r7, #5]
 6697 0024 4FEA4303 		lsl	r3, r3, #1
 6698 0028 DBB2     		uxtb	r3, r3
 6699 002a 03F13103 		add	r3, r3, #49
 6700 002e DAB2     		uxtb	r2, r3
 6701 0030 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 6702 0032 1046     		mov	r0, r2
 6703 0034 1946     		mov	r1, r3
 6704 0036 FFF7FEFF 		bl	xgWriteByte
1548:../LSM9DS1_Driver.c **** 	xgWriteByte(INT_GEN_THS_XH_G + 1 + (axis * 2), buffer[1]);
 6705              		.loc 1 1548 0
 6706 003a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 6707 003c 03F11903 		add	r3, r3, #25
 6708 0040 DBB2     		uxtb	r3, r3
 6709 0042 4FEA4303 		lsl	r3, r3, #1
 6710 0046 DAB2     		uxtb	r2, r3
 6711 0048 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 6712 004a 1046     		mov	r0, r2
 6713 004c 1946     		mov	r1, r3
 6714 004e FFF7FEFF 		bl	xgWriteByte
1549:../LSM9DS1_Driver.c **** 
1550:../LSM9DS1_Driver.c **** 	// Write duration and wait to INT_GEN_DUR_XL
1551:../LSM9DS1_Driver.c **** 	uint8_t temp;
1552:../LSM9DS1_Driver.c **** 	temp = (duration & 0x7F);
 6715              		.loc 1 1552 0
 6716 0052 3B79     		ldrb	r3, [r7, #4]
 6717 0054 03F07F03 		and	r3, r3, #127
 6718 0058 FB73     		strb	r3, [r7, #15]
1553:../LSM9DS1_Driver.c **** 	if (wait) temp |= 0x80;
 6719              		.loc 1 1553 0
 6720 005a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 6721 005c 002B     		cmp	r3, #0
 6722 005e 03D0     		beq	.L269
 6723              		.loc 1 1553 0 is_stmt 0 discriminator 1
 6724 0060 FB7B     		ldrb	r3, [r7, #15]
 6725 0062 63F07F03 		orn	r3, r3, #127
 6726 0066 FB73     		strb	r3, [r7, #15]
 6727              	.L269:
1554:../LSM9DS1_Driver.c **** 	xgWriteByte(INT_GEN_DUR_G, temp);
 6728              		.loc 1 1554 0 is_stmt 1
 6729 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6730 006a 4FF03700 		mov	r0, #55
 6731 006e 1946     		mov	r1, r3
 6732 0070 FFF7FEFF 		bl	xgWriteByte
1555:../LSM9DS1_Driver.c **** }
 6733              		.loc 1 1555 0
 6734 0074 07F11007 		add	r7, r7, #16
 6735 0078 BD46     		mov	sp, r7
 6736 007a 80BD     		pop	{r7, pc}
 6737              		.cfi_endproc
 6738              	.LFE188:
 6740              		.section	.text.getGyroIntSrc,"ax",%progbits
 6741              		.align	2
 6742              		.global	getGyroIntSrc
 6743              		.thumb
 6744              		.thumb_func
 6746              	getGyroIntSrc:
 6747              	.LFB189:
1556:../LSM9DS1_Driver.c **** 
1557:../LSM9DS1_Driver.c **** 
1558:../LSM9DS1_Driver.c **** uint8_t getGyroIntSrc()
1559:../LSM9DS1_Driver.c **** {
 6748              		.loc 1 1559 0
 6749              		.cfi_startproc
 6750              		@ args = 0, pretend = 0, frame = 8
 6751              		@ frame_needed = 1, uses_anonymous_args = 0
 6752 0000 80B5     		push	{r7, lr}
 6753              	.LCFI205:
 6754              		.cfi_def_cfa_offset 8
 6755              		.cfi_offset 7, -8
 6756              		.cfi_offset 14, -4
 6757 0002 82B0     		sub	sp, sp, #8
 6758              	.LCFI206:
 6759              		.cfi_def_cfa_offset 16
 6760 0004 00AF     		add	r7, sp, #0
 6761              	.LCFI207:
 6762              		.cfi_def_cfa_register 7
1560:../LSM9DS1_Driver.c **** 	uint8_t intSrc = xgReadByte(INT_GEN_SRC_G);
 6763              		.loc 1 1560 0
 6764 0006 4FF01400 		mov	r0, #20
 6765 000a FFF7FEFF 		bl	xgReadByte
 6766 000e 0346     		mov	r3, r0
 6767 0010 FB71     		strb	r3, [r7, #7]
1561:../LSM9DS1_Driver.c **** 
1562:../LSM9DS1_Driver.c **** 	// Check if the IA_G (interrupt active) bit is set
1563:../LSM9DS1_Driver.c **** 	if (intSrc & (1<<6))
 6768              		.loc 1 1563 0
 6769 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6770 0014 03F04003 		and	r3, r3, #64
 6771 0018 002B     		cmp	r3, #0
 6772 001a 04D0     		beq	.L271
1564:../LSM9DS1_Driver.c **** 	{
1565:../LSM9DS1_Driver.c **** 		return (intSrc & 0x3F);
 6773              		.loc 1 1565 0
 6774 001c FB79     		ldrb	r3, [r7, #7]
 6775 001e 03F03F03 		and	r3, r3, #63
 6776 0022 DBB2     		uxtb	r3, r3
 6777 0024 01E0     		b	.L272
 6778              	.L271:
1566:../LSM9DS1_Driver.c **** 	}
1567:../LSM9DS1_Driver.c **** 
1568:../LSM9DS1_Driver.c **** 	return 0;
 6779              		.loc 1 1568 0
 6780 0026 4FF00003 		mov	r3, #0
 6781              	.L272:
1569:../LSM9DS1_Driver.c **** }
 6782              		.loc 1 1569 0
 6783 002a 1846     		mov	r0, r3
 6784 002c 07F10807 		add	r7, r7, #8
 6785 0030 BD46     		mov	sp, r7
 6786 0032 80BD     		pop	{r7, pc}
 6787              		.cfi_endproc
 6788              	.LFE189:
 6790              		.section	.text.configMagInt,"ax",%progbits
 6791              		.align	2
 6792              		.global	configMagInt
 6793              		.thumb
 6794              		.thumb_func
 6796              	configMagInt:
 6797              	.LFB190:
1570:../LSM9DS1_Driver.c **** 
1571:../LSM9DS1_Driver.c **** 
1572:../LSM9DS1_Driver.c **** void configMagInt(uint8_t generator, h_lactive activeLow, bool latch)
1573:../LSM9DS1_Driver.c **** {
 6798              		.loc 1 1573 0
 6799              		.cfi_startproc
 6800              		@ args = 0, pretend = 0, frame = 16
 6801              		@ frame_needed = 1, uses_anonymous_args = 0
 6802 0000 80B5     		push	{r7, lr}
 6803              	.LCFI208:
 6804              		.cfi_def_cfa_offset 8
 6805              		.cfi_offset 7, -8
 6806              		.cfi_offset 14, -4
 6807 0002 84B0     		sub	sp, sp, #16
 6808              	.LCFI209:
 6809              		.cfi_def_cfa_offset 24
 6810 0004 00AF     		add	r7, sp, #0
 6811              	.LCFI210:
 6812              		.cfi_def_cfa_register 7
 6813 0006 1346     		mov	r3, r2
 6814 0008 0246     		mov	r2, r0
 6815 000a FA71     		strb	r2, [r7, #7]
 6816 000c 0A46     		mov	r2, r1
 6817 000e BA71     		strb	r2, [r7, #6]
 6818 0010 7B71     		strb	r3, [r7, #5]
1574:../LSM9DS1_Driver.c **** 	// Mask out non-generator bits (0-4)
1575:../LSM9DS1_Driver.c **** 	uint8_t config = (generator & 0xE0);
 6819              		.loc 1 1575 0
 6820 0012 FB79     		ldrb	r3, [r7, #7]
 6821 0014 23F01F03 		bic	r3, r3, #31
 6822 0018 FB73     		strb	r3, [r7, #15]
1576:../LSM9DS1_Driver.c **** 	// IEA bit is 0 for active-low, 1 for active-high.
1577:../LSM9DS1_Driver.c **** 	if (activeLow == INT_ACTIVE_HIGH) config |= (1<<2);
 6823              		.loc 1 1577 0
 6824 001a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 6825 001c 002B     		cmp	r3, #0
 6826 001e 03D1     		bne	.L274
 6827              		.loc 1 1577 0 is_stmt 0 discriminator 1
 6828 0020 FB7B     		ldrb	r3, [r7, #15]
 6829 0022 43F00403 		orr	r3, r3, #4
 6830 0026 FB73     		strb	r3, [r7, #15]
 6831              	.L274:
1578:../LSM9DS1_Driver.c **** 	// IEL bit is 0 for latched, 1 for not-latched
1579:../LSM9DS1_Driver.c **** 	if (!latch) config |= (1<<1);
 6832              		.loc 1 1579 0 is_stmt 1
 6833 0028 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 6834 002a 002B     		cmp	r3, #0
 6835 002c 03D1     		bne	.L275
 6836              		.loc 1 1579 0 is_stmt 0 discriminator 1
 6837 002e FB7B     		ldrb	r3, [r7, #15]
 6838 0030 43F00203 		orr	r3, r3, #2
 6839 0034 FB73     		strb	r3, [r7, #15]
 6840              	.L275:
1580:../LSM9DS1_Driver.c **** 	// As long as we have at least 1 generator, enable the interrupt
1581:../LSM9DS1_Driver.c **** 	if (generator != 0) config |= (1<<0);
 6841              		.loc 1 1581 0 is_stmt 1
 6842 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6843 0038 002B     		cmp	r3, #0
 6844 003a 03D0     		beq	.L276
 6845              		.loc 1 1581 0 is_stmt 0 discriminator 1
 6846 003c FB7B     		ldrb	r3, [r7, #15]
 6847 003e 43F00103 		orr	r3, r3, #1
 6848 0042 FB73     		strb	r3, [r7, #15]
 6849              	.L276:
1582:../LSM9DS1_Driver.c **** 
1583:../LSM9DS1_Driver.c **** 	mWriteByte(INT_CFG_M, config);
 6850              		.loc 1 1583 0 is_stmt 1
 6851 0044 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6852 0046 4FF03000 		mov	r0, #48
 6853 004a 1946     		mov	r1, r3
 6854 004c FFF7FEFF 		bl	mWriteByte
1584:../LSM9DS1_Driver.c **** }
 6855              		.loc 1 1584 0
 6856 0050 07F11007 		add	r7, r7, #16
 6857 0054 BD46     		mov	sp, r7
 6858 0056 80BD     		pop	{r7, pc}
 6859              		.cfi_endproc
 6860              	.LFE190:
 6862              		.section	.text.configMagThs,"ax",%progbits
 6863              		.align	2
 6864              		.global	configMagThs
 6865              		.thumb
 6866              		.thumb_func
 6868              	configMagThs:
 6869              	.LFB191:
1585:../LSM9DS1_Driver.c **** 
1586:../LSM9DS1_Driver.c **** 
1587:../LSM9DS1_Driver.c **** void configMagThs(uint16_t threshold)
1588:../LSM9DS1_Driver.c **** {
 6870              		.loc 1 1588 0
 6871              		.cfi_startproc
 6872              		@ args = 0, pretend = 0, frame = 8
 6873              		@ frame_needed = 1, uses_anonymous_args = 0
 6874 0000 80B5     		push	{r7, lr}
 6875              	.LCFI211:
 6876              		.cfi_def_cfa_offset 8
 6877              		.cfi_offset 7, -8
 6878              		.cfi_offset 14, -4
 6879 0002 82B0     		sub	sp, sp, #8
 6880              	.LCFI212:
 6881              		.cfi_def_cfa_offset 16
 6882 0004 00AF     		add	r7, sp, #0
 6883              	.LCFI213:
 6884              		.cfi_def_cfa_register 7
 6885 0006 0346     		mov	r3, r0
 6886 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1589:../LSM9DS1_Driver.c **** 	// Write high eight bits of [threshold] to INT_THS_H_M
1590:../LSM9DS1_Driver.c **** 	mWriteByte(INT_THS_H_M, (uint8_t)((threshold & 0x7F00) >> 8));
 6887              		.loc 1 1590 0
 6888 000a FB88     		ldrh	r3, [r7, #6]
 6889 000c 03F4FE43 		and	r3, r3, #32512
 6890 0010 4FEA2323 		asr	r3, r3, #8
 6891 0014 DBB2     		uxtb	r3, r3
 6892 0016 4FF03300 		mov	r0, #51
 6893 001a 1946     		mov	r1, r3
 6894 001c FFF7FEFF 		bl	mWriteByte
1591:../LSM9DS1_Driver.c **** 	// Write low eight bits of [threshold] to INT_THS_L_M
1592:../LSM9DS1_Driver.c **** 	mWriteByte(INT_THS_L_M, (uint8_t)(threshold & 0x00FF));
 6895              		.loc 1 1592 0
 6896 0020 FB88     		ldrh	r3, [r7, #6]	@ movhi
 6897 0022 DBB2     		uxtb	r3, r3
 6898 0024 4FF03200 		mov	r0, #50
 6899 0028 1946     		mov	r1, r3
 6900 002a FFF7FEFF 		bl	mWriteByte
1593:../LSM9DS1_Driver.c **** }
 6901              		.loc 1 1593 0
 6902 002e 07F10807 		add	r7, r7, #8
 6903 0032 BD46     		mov	sp, r7
 6904 0034 80BD     		pop	{r7, pc}
 6905              		.cfi_endproc
 6906              	.LFE191:
 6908 0036 00BF     		.section	.text.getMagIntSrc,"ax",%progbits
 6909              		.align	2
 6910              		.global	getMagIntSrc
 6911              		.thumb
 6912              		.thumb_func
 6914              	getMagIntSrc:
 6915              	.LFB192:
1594:../LSM9DS1_Driver.c **** 
1595:../LSM9DS1_Driver.c **** uint8_t getMagIntSrc(void)
1596:../LSM9DS1_Driver.c **** {
 6916              		.loc 1 1596 0
 6917              		.cfi_startproc
 6918              		@ args = 0, pretend = 0, frame = 8
 6919              		@ frame_needed = 1, uses_anonymous_args = 0
 6920 0000 80B5     		push	{r7, lr}
 6921              	.LCFI214:
 6922              		.cfi_def_cfa_offset 8
 6923              		.cfi_offset 7, -8
 6924              		.cfi_offset 14, -4
 6925 0002 82B0     		sub	sp, sp, #8
 6926              	.LCFI215:
 6927              		.cfi_def_cfa_offset 16
 6928 0004 00AF     		add	r7, sp, #0
 6929              	.LCFI216:
 6930              		.cfi_def_cfa_register 7
1597:../LSM9DS1_Driver.c **** 	uint8_t intSrc = mReadByte(INT_SRC_M);
 6931              		.loc 1 1597 0
 6932 0006 4FF03000 		mov	r0, #48
 6933 000a FFF7FEFF 		bl	mReadByte
 6934 000e 0346     		mov	r3, r0
 6935 0010 FB71     		strb	r3, [r7, #7]
1598:../LSM9DS1_Driver.c **** 
1599:../LSM9DS1_Driver.c **** 	// Check if the INT (interrupt active) bit is set
1600:../LSM9DS1_Driver.c **** 	if (intSrc & (1<<0))
 6936              		.loc 1 1600 0
 6937 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6938 0014 03F00103 		and	r3, r3, #1
 6939 0018 002B     		cmp	r3, #0
 6940 001a 04D0     		beq	.L279
1601:../LSM9DS1_Driver.c **** 	{
1602:../LSM9DS1_Driver.c **** 		return (intSrc & 0xFE);
 6941              		.loc 1 1602 0
 6942 001c FB79     		ldrb	r3, [r7, #7]
 6943 001e 23F00103 		bic	r3, r3, #1
 6944 0022 DBB2     		uxtb	r3, r3
 6945 0024 01E0     		b	.L280
 6946              	.L279:
1603:../LSM9DS1_Driver.c **** 	}
1604:../LSM9DS1_Driver.c **** 
1605:../LSM9DS1_Driver.c **** 	return 0;
 6947              		.loc 1 1605 0
 6948 0026 4FF00003 		mov	r3, #0
 6949              	.L280:
1606:../LSM9DS1_Driver.c **** }
 6950              		.loc 1 1606 0
 6951 002a 1846     		mov	r0, r3
 6952 002c 07F10807 		add	r7, r7, #8
 6953 0030 BD46     		mov	sp, r7
 6954 0032 80BD     		pop	{r7, pc}
 6955              		.cfi_endproc
 6956              	.LFE192:
 6958              		.section	.text.sleepGyro,"ax",%progbits
 6959              		.align	2
 6960              		.global	sleepGyro
 6961              		.thumb
 6962              		.thumb_func
 6964              	sleepGyro:
 6965              	.LFB193:
1607:../LSM9DS1_Driver.c **** 
1608:../LSM9DS1_Driver.c **** void sleepGyro(bool enable)
1609:../LSM9DS1_Driver.c **** {
 6966              		.loc 1 1609 0
 6967              		.cfi_startproc
 6968              		@ args = 0, pretend = 0, frame = 16
 6969              		@ frame_needed = 1, uses_anonymous_args = 0
 6970 0000 80B5     		push	{r7, lr}
 6971              	.LCFI217:
 6972              		.cfi_def_cfa_offset 8
 6973              		.cfi_offset 7, -8
 6974              		.cfi_offset 14, -4
 6975 0002 84B0     		sub	sp, sp, #16
 6976              	.LCFI218:
 6977              		.cfi_def_cfa_offset 24
 6978 0004 00AF     		add	r7, sp, #0
 6979              	.LCFI219:
 6980              		.cfi_def_cfa_register 7
 6981 0006 0346     		mov	r3, r0
 6982 0008 FB71     		strb	r3, [r7, #7]
1610:../LSM9DS1_Driver.c **** 	uint8_t temp = xgReadByte(CTRL_REG9);
 6983              		.loc 1 1610 0
 6984 000a 4FF02300 		mov	r0, #35
 6985 000e FFF7FEFF 		bl	xgReadByte
 6986 0012 0346     		mov	r3, r0
 6987 0014 FB73     		strb	r3, [r7, #15]
1611:../LSM9DS1_Driver.c **** 	if (enable) temp |= (1<<6);
 6988              		.loc 1 1611 0
 6989 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6990 0018 002B     		cmp	r3, #0
 6991 001a 04D0     		beq	.L282
 6992              		.loc 1 1611 0 is_stmt 0 discriminator 1
 6993 001c FB7B     		ldrb	r3, [r7, #15]
 6994 001e 43F04003 		orr	r3, r3, #64
 6995 0022 FB73     		strb	r3, [r7, #15]
 6996 0024 03E0     		b	.L283
 6997              	.L282:
1612:../LSM9DS1_Driver.c **** 	else temp &= ~(1<<6);
 6998              		.loc 1 1612 0 is_stmt 1
 6999 0026 FB7B     		ldrb	r3, [r7, #15]
 7000 0028 23F04003 		bic	r3, r3, #64
 7001 002c FB73     		strb	r3, [r7, #15]
 7002              	.L283:
1613:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG9, temp);
 7003              		.loc 1 1613 0
 7004 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7005 0030 4FF02300 		mov	r0, #35
 7006 0034 1946     		mov	r1, r3
 7007 0036 FFF7FEFF 		bl	xgWriteByte
1614:../LSM9DS1_Driver.c **** }
 7008              		.loc 1 1614 0
 7009 003a 07F11007 		add	r7, r7, #16
 7010 003e BD46     		mov	sp, r7
 7011 0040 80BD     		pop	{r7, pc}
 7012              		.cfi_endproc
 7013              	.LFE193:
 7015 0042 00BF     		.section	.text.getFIFOSamples,"ax",%progbits
 7016              		.align	2
 7017              		.global	getFIFOSamples
 7018              		.thumb
 7019              		.thumb_func
 7021              	getFIFOSamples:
 7022              	.LFB194:
1615:../LSM9DS1_Driver.c **** 
1616:../LSM9DS1_Driver.c **** 
1617:../LSM9DS1_Driver.c **** uint8_t getFIFOSamples(void)
1618:../LSM9DS1_Driver.c **** {
 7023              		.loc 1 1618 0
 7024              		.cfi_startproc
 7025              		@ args = 0, pretend = 0, frame = 0
 7026              		@ frame_needed = 1, uses_anonymous_args = 0
 7027 0000 80B5     		push	{r7, lr}
 7028              	.LCFI220:
 7029              		.cfi_def_cfa_offset 8
 7030              		.cfi_offset 7, -8
 7031              		.cfi_offset 14, -4
 7032 0002 00AF     		add	r7, sp, #0
 7033              	.LCFI221:
 7034              		.cfi_def_cfa_register 7
1619:../LSM9DS1_Driver.c **** 	return (xgReadByte(FIFO_SRC) & 0x3F);
 7035              		.loc 1 1619 0
 7036 0004 4FF02F00 		mov	r0, #47
 7037 0008 FFF7FEFF 		bl	xgReadByte
 7038 000c 0346     		mov	r3, r0
 7039 000e 03F03F03 		and	r3, r3, #63
 7040 0012 DBB2     		uxtb	r3, r3
1620:../LSM9DS1_Driver.c **** }
 7041              		.loc 1 1620 0
 7042 0014 1846     		mov	r0, r3
 7043 0016 80BD     		pop	{r7, pc}
 7044              		.cfi_endproc
 7045              	.LFE194:
 7047              		.section	.text.timerHandlerSendMsg,"ax",%progbits
 7048              		.align	2
 7049              		.global	timerHandlerSendMsg
 7050              		.thumb
 7051              		.thumb_func
 7053              	timerHandlerSendMsg:
 7054              	.LFB195:
1621:../LSM9DS1_Driver.c **** 
1622:../LSM9DS1_Driver.c **** void timerHandlerSendMsg(void *T)
1623:../LSM9DS1_Driver.c **** {
 7055              		.loc 1 1623 0
 7056              		.cfi_startproc
 7057              		@ args = 0, pretend = 0, frame = 8
 7058              		@ frame_needed = 1, uses_anonymous_args = 0
 7059 0000 90B5     		push	{r4, r7, lr}
 7060              	.LCFI222:
 7061              		.cfi_def_cfa_offset 12
 7062              		.cfi_offset 4, -12
 7063              		.cfi_offset 7, -8
 7064              		.cfi_offset 14, -4
 7065 0002 83B0     		sub	sp, sp, #12
 7066              	.LCFI223:
 7067              		.cfi_def_cfa_offset 24
 7068 0004 00AF     		add	r7, sp, #0
 7069              	.LCFI224:
 7070              		.cfi_def_cfa_register 7
 7071 0006 7860     		str	r0, [r7, #4]
1624:../LSM9DS1_Driver.c **** 	static int counter = 0;
1625:../LSM9DS1_Driver.c **** 
1626:../LSM9DS1_Driver.c **** 	send(&accelOsX[counter], strlen(&accelOsX[counter]));
 7072              		.loc 1 1626 0
 7073 0008 40F20003 		movw	r3, #:lower16:counter.9990
 7074 000c C0F20003 		movt	r3, #:upper16:counter.9990
 7075 0010 1A68     		ldr	r2, [r3, #0]
 7076 0012 40F20003 		movw	r3, #:lower16:accelOsX
 7077 0016 C0F20003 		movt	r3, #:upper16:accelOsX
 7078 001a D418     		adds	r4, r2, r3
 7079 001c 40F20003 		movw	r3, #:lower16:counter.9990
 7080 0020 C0F20003 		movt	r3, #:upper16:counter.9990
 7081 0024 1A68     		ldr	r2, [r3, #0]
 7082 0026 40F20003 		movw	r3, #:lower16:accelOsX
 7083 002a C0F20003 		movt	r3, #:upper16:accelOsX
 7084 002e D318     		adds	r3, r2, r3
 7085 0030 1846     		mov	r0, r3
 7086 0032 FFF7FEFF 		bl	strlen
 7087 0036 0346     		mov	r3, r0
 7088 0038 2046     		mov	r0, r4
 7089 003a 1946     		mov	r1, r3
 7090 003c FFF7FEFF 		bl	send
1627:../LSM9DS1_Driver.c **** 	send(&accelOsY[counter], strlen(&accelOsY[counter]));
 7091              		.loc 1 1627 0
 7092 0040 40F20003 		movw	r3, #:lower16:counter.9990
 7093 0044 C0F20003 		movt	r3, #:upper16:counter.9990
 7094 0048 1A68     		ldr	r2, [r3, #0]
 7095 004a 40F20003 		movw	r3, #:lower16:accelOsY
 7096 004e C0F20003 		movt	r3, #:upper16:accelOsY
 7097 0052 D418     		adds	r4, r2, r3
 7098 0054 40F20003 		movw	r3, #:lower16:counter.9990
 7099 0058 C0F20003 		movt	r3, #:upper16:counter.9990
 7100 005c 1A68     		ldr	r2, [r3, #0]
 7101 005e 40F20003 		movw	r3, #:lower16:accelOsY
 7102 0062 C0F20003 		movt	r3, #:upper16:accelOsY
 7103 0066 D318     		adds	r3, r2, r3
 7104 0068 1846     		mov	r0, r3
 7105 006a FFF7FEFF 		bl	strlen
 7106 006e 0346     		mov	r3, r0
 7107 0070 2046     		mov	r0, r4
 7108 0072 1946     		mov	r1, r3
 7109 0074 FFF7FEFF 		bl	send
1628:../LSM9DS1_Driver.c **** 	send(&accelOsZ[counter], strlen(&accelOsZ[counter]));
 7110              		.loc 1 1628 0
 7111 0078 40F20003 		movw	r3, #:lower16:counter.9990
 7112 007c C0F20003 		movt	r3, #:upper16:counter.9990
 7113 0080 1A68     		ldr	r2, [r3, #0]
 7114 0082 40F20003 		movw	r3, #:lower16:accelOsZ
 7115 0086 C0F20003 		movt	r3, #:upper16:accelOsZ
 7116 008a D418     		adds	r4, r2, r3
 7117 008c 40F20003 		movw	r3, #:lower16:counter.9990
 7118 0090 C0F20003 		movt	r3, #:upper16:counter.9990
 7119 0094 1A68     		ldr	r2, [r3, #0]
 7120 0096 40F20003 		movw	r3, #:lower16:accelOsZ
 7121 009a C0F20003 		movt	r3, #:upper16:accelOsZ
 7122 009e D318     		adds	r3, r2, r3
 7123 00a0 1846     		mov	r0, r3
 7124 00a2 FFF7FEFF 		bl	strlen
 7125 00a6 0346     		mov	r3, r0
 7126 00a8 2046     		mov	r0, r4
 7127 00aa 1946     		mov	r1, r3
 7128 00ac FFF7FEFF 		bl	send
1629:../LSM9DS1_Driver.c **** 
1630:../LSM9DS1_Driver.c **** 	counter++;
 7129              		.loc 1 1630 0
 7130 00b0 40F20003 		movw	r3, #:lower16:counter.9990
 7131 00b4 C0F20003 		movt	r3, #:upper16:counter.9990
 7132 00b8 1B68     		ldr	r3, [r3, #0]
 7133 00ba 03F10102 		add	r2, r3, #1
 7134 00be 40F20003 		movw	r3, #:lower16:counter.9990
 7135 00c2 C0F20003 		movt	r3, #:upper16:counter.9990
 7136 00c6 1A60     		str	r2, [r3, #0]
1631:../LSM9DS1_Driver.c **** 
1632:../LSM9DS1_Driver.c **** 	if(100 == counter)
1633:../LSM9DS1_Driver.c **** 	{
1634:../LSM9DS1_Driver.c **** 		;
1635:../LSM9DS1_Driver.c **** 	}
1636:../LSM9DS1_Driver.c **** }
 7137              		.loc 1 1636 0
 7138 00c8 07F10C07 		add	r7, r7, #12
 7139 00cc BD46     		mov	sp, r7
 7140 00ce 90BD     		pop	{r4, r7, pc}
 7141              		.cfi_endproc
 7142              	.LFE195:
 7144              		.section	.text.timerHandlerReceiveOneMeasurementEachSensor,"ax",%progbits
 7145              		.align	2
 7146              		.global	timerHandlerReceiveOneMeasurementEachSensor
 7147              		.thumb
 7148              		.thumb_func
 7150              	timerHandlerReceiveOneMeasurementEachSensor:
 7151              	.LFB196:
1637:../LSM9DS1_Driver.c **** 
1638:../LSM9DS1_Driver.c **** void timerHandlerReceiveOneMeasurementEachSensor(void *T)
1639:../LSM9DS1_Driver.c **** {
 7152              		.loc 1 1639 0
 7153              		.cfi_startproc
 7154              		@ args = 0, pretend = 0, frame = 16
 7155              		@ frame_needed = 1, uses_anonymous_args = 0
 7156 0000 80B5     		push	{r7, lr}
 7157              	.LCFI225:
 7158              		.cfi_def_cfa_offset 8
 7159              		.cfi_offset 7, -8
 7160              		.cfi_offset 14, -4
 7161 0002 84B0     		sub	sp, sp, #16
 7162              	.LCFI226:
 7163              		.cfi_def_cfa_offset 24
 7164 0004 00AF     		add	r7, sp, #0
 7165              	.LCFI227:
 7166              		.cfi_def_cfa_register 7
 7167 0006 7860     		str	r0, [r7, #4]
1640:../LSM9DS1_Driver.c **** 	static volatile uint32_t stageOfReading = 0;
1641:../LSM9DS1_Driver.c **** 	static uint8_t whichByte = 0;
1642:../LSM9DS1_Driver.c **** 	static uint8_t whichDevice = 0;
1643:../LSM9DS1_Driver.c **** 	addressAndData *address = (addressAndData*)T;
 7168              		.loc 1 1643 0
 7169 0008 7B68     		ldr	r3, [r7, #4]
 7170 000a FB60     		str	r3, [r7, #12]
1644:../LSM9DS1_Driver.c **** 
1645:../LSM9DS1_Driver.c **** 	if(readingAllowed == TRUE)
 7171              		.loc 1 1645 0
 7172 000c 40F20003 		movw	r3, #:lower16:readingAllowed
 7173 0010 C0F20003 		movt	r3, #:upper16:readingAllowed
 7174 0014 1B78     		ldrb	r3, [r3, #0]
 7175 0016 DBB2     		uxtb	r3, r3
 7176 0018 012B     		cmp	r3, #1
 7177 001a 40F0F980 		bne	.L287
1646:../LSM9DS1_Driver.c **** 	{
1647:../LSM9DS1_Driver.c **** 		if(0 == whichDevice) //accel
 7178              		.loc 1 1647 0
 7179 001e 40F20003 		movw	r3, #:lower16:whichDevice.9998
 7180 0022 C0F20003 		movt	r3, #:upper16:whichDevice.9998
 7181 0026 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7182 0028 002B     		cmp	r3, #0
 7183 002a 47D1     		bne	.L289
1648:../LSM9DS1_Driver.c **** 		{
1649:../LSM9DS1_Driver.c **** 			receiveByte(address->adr.addressDevice[0], (address->adr.subAddress[0] + whichByte), &(address->
 7184              		.loc 1 1649 0
 7185 002c FB68     		ldr	r3, [r7, #12]
 7186 002e 997C     		ldrb	r1, [r3, #18]	@ zero_extendqisi2
 7187 0030 FB68     		ldr	r3, [r7, #12]
 7188 0032 1A7D     		ldrb	r2, [r3, #20]	@ zero_extendqisi2
 7189 0034 40F20003 		movw	r3, #:lower16:whichByte.9997
 7190 0038 C0F20003 		movt	r3, #:upper16:whichByte.9997
 7191 003c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7192 003e D318     		adds	r3, r2, r3
 7193 0040 DAB2     		uxtb	r2, r3
 7194 0042 40F20003 		movw	r3, #:lower16:whichByte.9997
 7195 0046 C0F20003 		movt	r3, #:upper16:whichByte.9997
 7196 004a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7197 004c F868     		ldr	r0, [r7, #12]
 7198 004e C318     		adds	r3, r0, r3
 7199 0050 0846     		mov	r0, r1
 7200 0052 1146     		mov	r1, r2
 7201 0054 1A46     		mov	r2, r3
 7202 0056 FFF7FEFF 		bl	receiveByte
1650:../LSM9DS1_Driver.c **** 			whichByte++;
 7203              		.loc 1 1650 0
 7204 005a 40F20003 		movw	r3, #:lower16:whichByte.9997
 7205 005e C0F20003 		movt	r3, #:upper16:whichByte.9997
 7206 0062 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7207 0064 03F10103 		add	r3, r3, #1
 7208 0068 DAB2     		uxtb	r2, r3
 7209 006a 40F20003 		movw	r3, #:lower16:whichByte.9997
 7210 006e C0F20003 		movt	r3, #:upper16:whichByte.9997
 7211 0072 1A70     		strb	r2, [r3, #0]
1651:../LSM9DS1_Driver.c **** 
1652:../LSM9DS1_Driver.c **** 			if(whichByte == 6)
 7212              		.loc 1 1652 0
 7213 0074 40F20003 		movw	r3, #:lower16:whichByte.9997
 7214 0078 C0F20003 		movt	r3, #:upper16:whichByte.9997
 7215 007c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7216 007e 062B     		cmp	r3, #6
 7217 0080 40F0C680 		bne	.L287
1653:../LSM9DS1_Driver.c **** 			{
1654:../LSM9DS1_Driver.c **** 				//readingAllowed = FALSE;
1655:../LSM9DS1_Driver.c **** 
1656:../LSM9DS1_Driver.c **** 				whichDevice++;
 7218              		.loc 1 1656 0
 7219 0084 40F20003 		movw	r3, #:lower16:whichDevice.9998
 7220 0088 C0F20003 		movt	r3, #:upper16:whichDevice.9998
 7221 008c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7222 008e 03F10103 		add	r3, r3, #1
 7223 0092 DAB2     		uxtb	r2, r3
 7224 0094 40F20003 		movw	r3, #:lower16:whichDevice.9998
 7225 0098 C0F20003 		movt	r3, #:upper16:whichDevice.9998
 7226 009c 1A70     		strb	r2, [r3, #0]
1657:../LSM9DS1_Driver.c **** 
1658:../LSM9DS1_Driver.c **** 				whichByte = 0;
 7227              		.loc 1 1658 0
 7228 009e 40F20003 		movw	r3, #:lower16:whichByte.9997
 7229 00a2 C0F20003 		movt	r3, #:upper16:whichByte.9997
 7230 00a6 4FF00002 		mov	r2, #0
 7231 00aa 1A70     		strb	r2, [r3, #0]
1659:../LSM9DS1_Driver.c **** 				stageOfReading = 0;
 7232              		.loc 1 1659 0
 7233 00ac 40F20003 		movw	r3, #:lower16:stageOfReading.9996
 7234 00b0 C0F20003 		movt	r3, #:upper16:stageOfReading.9996
 7235 00b4 4FF00002 		mov	r2, #0
 7236 00b8 1A60     		str	r2, [r3, #0]
 7237 00ba A9E0     		b	.L287
 7238              	.L289:
1660:../LSM9DS1_Driver.c **** 			}
1661:../LSM9DS1_Driver.c **** 		}
1662:../LSM9DS1_Driver.c **** 		else if(1 == whichDevice) //gyro
 7239              		.loc 1 1662 0
 7240 00bc 40F20003 		movw	r3, #:lower16:whichDevice.9998
 7241 00c0 C0F20003 		movt	r3, #:upper16:whichDevice.9998
 7242 00c4 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7243 00c6 012B     		cmp	r3, #1
 7244 00c8 4DD1     		bne	.L290
1663:../LSM9DS1_Driver.c **** 		{
1664:../LSM9DS1_Driver.c **** 			receiveByte(address->adr.addressDevice[0], (address->adr.subAddress[1] + whichByte), &(address->
 7245              		.loc 1 1664 0
 7246 00ca FB68     		ldr	r3, [r7, #12]
 7247 00cc 997C     		ldrb	r1, [r3, #18]	@ zero_extendqisi2
 7248 00ce FB68     		ldr	r3, [r7, #12]
 7249 00d0 5A7D     		ldrb	r2, [r3, #21]	@ zero_extendqisi2
 7250 00d2 40F20003 		movw	r3, #:lower16:whichByte.9997
 7251 00d6 C0F20003 		movt	r3, #:upper16:whichByte.9997
 7252 00da 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7253 00dc D318     		adds	r3, r2, r3
 7254 00de DAB2     		uxtb	r2, r3
 7255 00e0 40F20003 		movw	r3, #:lower16:whichByte.9997
 7256 00e4 C0F20003 		movt	r3, #:upper16:whichByte.9997
 7257 00e8 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7258 00ea 03F10603 		add	r3, r3, #6
 7259 00ee F868     		ldr	r0, [r7, #12]
 7260 00f0 C318     		adds	r3, r0, r3
 7261 00f2 0846     		mov	r0, r1
 7262 00f4 1146     		mov	r1, r2
 7263 00f6 1A46     		mov	r2, r3
 7264 00f8 FFF7FEFF 		bl	receiveByte
1665:../LSM9DS1_Driver.c **** 			whichByte++;
 7265              		.loc 1 1665 0
 7266 00fc 40F20003 		movw	r3, #:lower16:whichByte.9997
 7267 0100 C0F20003 		movt	r3, #:upper16:whichByte.9997
 7268 0104 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7269 0106 03F10103 		add	r3, r3, #1
 7270 010a DAB2     		uxtb	r2, r3
 7271 010c 40F20003 		movw	r3, #:lower16:whichByte.9997
 7272 0110 C0F20003 		movt	r3, #:upper16:whichByte.9997
 7273 0114 1A70     		strb	r2, [r3, #0]
1666:../LSM9DS1_Driver.c **** 
1667:../LSM9DS1_Driver.c **** 			if(whichByte == 6)
 7274              		.loc 1 1667 0
 7275 0116 40F20003 		movw	r3, #:lower16:whichByte.9997
 7276 011a C0F20003 		movt	r3, #:upper16:whichByte.9997
 7277 011e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7278 0120 062B     		cmp	r3, #6
 7279 0122 75D1     		bne	.L287
1668:../LSM9DS1_Driver.c **** 			{
1669:../LSM9DS1_Driver.c **** 				//readingAllowed = FALSE;
1670:../LSM9DS1_Driver.c **** 
1671:../LSM9DS1_Driver.c **** 				whichDevice++;
 7280              		.loc 1 1671 0
 7281 0124 40F20003 		movw	r3, #:lower16:whichDevice.9998
 7282 0128 C0F20003 		movt	r3, #:upper16:whichDevice.9998
 7283 012c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7284 012e 03F10103 		add	r3, r3, #1
 7285 0132 DAB2     		uxtb	r2, r3
 7286 0134 40F20003 		movw	r3, #:lower16:whichDevice.9998
 7287 0138 C0F20003 		movt	r3, #:upper16:whichDevice.9998
 7288 013c 1A70     		strb	r2, [r3, #0]
1672:../LSM9DS1_Driver.c **** 
1673:../LSM9DS1_Driver.c **** 				whichByte = 0;
 7289              		.loc 1 1673 0
 7290 013e 40F20003 		movw	r3, #:lower16:whichByte.9997
 7291 0142 C0F20003 		movt	r3, #:upper16:whichByte.9997
 7292 0146 4FF00002 		mov	r2, #0
 7293 014a 1A70     		strb	r2, [r3, #0]
1674:../LSM9DS1_Driver.c **** 				stageOfReading++;
 7294              		.loc 1 1674 0
 7295 014c 40F20003 		movw	r3, #:lower16:stageOfReading.9996
 7296 0150 C0F20003 		movt	r3, #:upper16:stageOfReading.9996
 7297 0154 1B68     		ldr	r3, [r3, #0]
 7298 0156 03F10102 		add	r2, r3, #1
 7299 015a 40F20003 		movw	r3, #:lower16:stageOfReading.9996
 7300 015e C0F20003 		movt	r3, #:upper16:stageOfReading.9996
 7301 0162 1A60     		str	r2, [r3, #0]
 7302 0164 54E0     		b	.L287
 7303              	.L290:
1675:../LSM9DS1_Driver.c **** 			}
1676:../LSM9DS1_Driver.c **** 		}
1677:../LSM9DS1_Driver.c **** 		else if(2 == whichDevice)
 7304              		.loc 1 1677 0
 7305 0166 40F20003 		movw	r3, #:lower16:whichDevice.9998
 7306 016a C0F20003 		movt	r3, #:upper16:whichDevice.9998
 7307 016e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7308 0170 022B     		cmp	r3, #2
 7309 0172 4DD1     		bne	.L287
1678:../LSM9DS1_Driver.c **** 		{
1679:../LSM9DS1_Driver.c **** 			receiveByte(address->adr.addressDevice[1], (address->adr.subAddress[2] + whichByte), &(address->
 7310              		.loc 1 1679 0
 7311 0174 FB68     		ldr	r3, [r7, #12]
 7312 0176 D97C     		ldrb	r1, [r3, #19]	@ zero_extendqisi2
 7313 0178 FB68     		ldr	r3, [r7, #12]
 7314 017a 9A7D     		ldrb	r2, [r3, #22]	@ zero_extendqisi2
 7315 017c 40F20003 		movw	r3, #:lower16:whichByte.9997
 7316 0180 C0F20003 		movt	r3, #:upper16:whichByte.9997
 7317 0184 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7318 0186 D318     		adds	r3, r2, r3
 7319 0188 DAB2     		uxtb	r2, r3
 7320 018a 40F20003 		movw	r3, #:lower16:whichByte.9997
 7321 018e C0F20003 		movt	r3, #:upper16:whichByte.9997
 7322 0192 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7323 0194 03F10C03 		add	r3, r3, #12
 7324 0198 F868     		ldr	r0, [r7, #12]
 7325 019a C318     		adds	r3, r0, r3
 7326 019c 0846     		mov	r0, r1
 7327 019e 1146     		mov	r1, r2
 7328 01a0 1A46     		mov	r2, r3
 7329 01a2 FFF7FEFF 		bl	receiveByte
1680:../LSM9DS1_Driver.c **** 			whichByte++;
 7330              		.loc 1 1680 0
 7331 01a6 40F20003 		movw	r3, #:lower16:whichByte.9997
 7332 01aa C0F20003 		movt	r3, #:upper16:whichByte.9997
 7333 01ae 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7334 01b0 03F10103 		add	r3, r3, #1
 7335 01b4 DAB2     		uxtb	r2, r3
 7336 01b6 40F20003 		movw	r3, #:lower16:whichByte.9997
 7337 01ba C0F20003 		movt	r3, #:upper16:whichByte.9997
 7338 01be 1A70     		strb	r2, [r3, #0]
1681:../LSM9DS1_Driver.c **** 
1682:../LSM9DS1_Driver.c **** 			if(whichByte == 6)
 7339              		.loc 1 1682 0
 7340 01c0 40F20003 		movw	r3, #:lower16:whichByte.9997
 7341 01c4 C0F20003 		movt	r3, #:upper16:whichByte.9997
 7342 01c8 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7343 01ca 062B     		cmp	r3, #6
 7344 01cc 20D1     		bne	.L287
1683:../LSM9DS1_Driver.c **** 			{
1684:../LSM9DS1_Driver.c **** 				readingAllowed = FALSE;
 7345              		.loc 1 1684 0
 7346 01ce 40F20003 		movw	r3, #:lower16:readingAllowed
 7347 01d2 C0F20003 		movt	r3, #:upper16:readingAllowed
 7348 01d6 4FF00002 		mov	r2, #0
 7349 01da 1A70     		strb	r2, [r3, #0]
1685:../LSM9DS1_Driver.c **** 
1686:../LSM9DS1_Driver.c **** 				whichDevice = 0;
 7350              		.loc 1 1686 0
 7351 01dc 40F20003 		movw	r3, #:lower16:whichDevice.9998
 7352 01e0 C0F20003 		movt	r3, #:upper16:whichDevice.9998
 7353 01e4 4FF00002 		mov	r2, #0
 7354 01e8 1A70     		strb	r2, [r3, #0]
1687:../LSM9DS1_Driver.c **** 
1688:../LSM9DS1_Driver.c **** 				whichByte = 0;
 7355              		.loc 1 1688 0
 7356 01ea 40F20003 		movw	r3, #:lower16:whichByte.9997
 7357 01ee C0F20003 		movt	r3, #:upper16:whichByte.9997
 7358 01f2 4FF00002 		mov	r2, #0
 7359 01f6 1A70     		strb	r2, [r3, #0]
1689:../LSM9DS1_Driver.c **** 				stageOfReading++;
 7360              		.loc 1 1689 0
 7361 01f8 40F20003 		movw	r3, #:lower16:stageOfReading.9996
 7362 01fc C0F20003 		movt	r3, #:upper16:stageOfReading.9996
 7363 0200 1B68     		ldr	r3, [r3, #0]
 7364 0202 03F10102 		add	r2, r3, #1
 7365 0206 40F20003 		movw	r3, #:lower16:stageOfReading.9996
 7366 020a C0F20003 		movt	r3, #:upper16:stageOfReading.9996
 7367 020e 1A60     		str	r2, [r3, #0]
 7368              	.L287:
1690:../LSM9DS1_Driver.c **** 			}
1691:../LSM9DS1_Driver.c **** 		}
1692:../LSM9DS1_Driver.c **** 
1693:../LSM9DS1_Driver.c **** 	}
1694:../LSM9DS1_Driver.c **** }
 7369              		.loc 1 1694 0
 7370 0210 07F11007 		add	r7, r7, #16
 7371 0214 BD46     		mov	sp, r7
 7372 0216 80BD     		pop	{r7, pc}
 7373              		.cfi_endproc
 7374              	.LFE196:
 7376              		.section	.text.receiveByte,"ax",%progbits
 7377              		.align	2
 7378              		.global	receiveByte
 7379              		.thumb
 7380              		.thumb_func
 7382              	receiveByte:
 7383              	.LFB197:
1695:../LSM9DS1_Driver.c **** 
1696:../LSM9DS1_Driver.c **** void receiveByte(uint8_t adr, uint8_t subAdr, uint8_t *buffer)
1697:../LSM9DS1_Driver.c **** {
 7384              		.loc 1 1697 0
 7385              		.cfi_startproc
 7386              		@ args = 0, pretend = 0, frame = 40
 7387              		@ frame_needed = 1, uses_anonymous_args = 0
 7388 0000 80B5     		push	{r7, lr}
 7389              	.LCFI228:
 7390              		.cfi_def_cfa_offset 8
 7391              		.cfi_offset 7, -8
 7392              		.cfi_offset 14, -4
 7393 0002 8AB0     		sub	sp, sp, #40
 7394              	.LCFI229:
 7395              		.cfi_def_cfa_offset 48
 7396 0004 00AF     		add	r7, sp, #0
 7397              	.LCFI230:
 7398              		.cfi_def_cfa_register 7
 7399 0006 0B46     		mov	r3, r1
 7400 0008 3A60     		str	r2, [r7, #0]
 7401 000a 0246     		mov	r2, r0
 7402 000c FA71     		strb	r2, [r7, #7]
 7403 000e BB71     		strb	r3, [r7, #6]
1698:../LSM9DS1_Driver.c **** 	clearErrorFlags();
 7404              		.loc 1 1698 0
 7405 0010 FFF7FEFF 		bl	clearErrorFlags
1699:../LSM9DS1_Driver.c **** 
1700:../LSM9DS1_Driver.c **** 	I2C001_DataType data1;
1701:../LSM9DS1_Driver.c **** 	data1.Data1.TDF_Type = I2C_TDF_MStart;
 7406              		.loc 1 1701 0
 7407 0014 4FF00403 		mov	r3, #4
 7408 0018 87F82130 		strb	r3, [r7, #33]
1702:../LSM9DS1_Driver.c **** 
1703:../LSM9DS1_Driver.c **** 	data1.Data1.Data = ((adr << 1) | I2C_WRITE);
 7409              		.loc 1 1703 0
 7410 001c FB79     		ldrb	r3, [r7, #7]
 7411 001e 4FEA4303 		lsl	r3, r3, #1
 7412 0022 DBB2     		uxtb	r3, r3
 7413 0024 87F82030 		strb	r3, [r7, #32]
1704:../LSM9DS1_Driver.c **** 	while(!I2C001_WriteData(&I2C001_Handle0,&data1))
 7414              		.loc 1 1704 0
 7415 0028 01E0     		b	.L292
 7416              	.L293:
1705:../LSM9DS1_Driver.c **** 	{
1706:../LSM9DS1_Driver.c **** 		flushFIFO();
 7417              		.loc 1 1706 0
 7418 002a FFF7FEFF 		bl	flushFIFO
 7419              	.L292:
1704:../LSM9DS1_Driver.c **** 	while(!I2C001_WriteData(&I2C001_Handle0,&data1))
 7420              		.loc 1 1704 0 discriminator 1
 7421 002e 07F12003 		add	r3, r7, #32
 7422 0032 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 7423 0036 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 7424 003a 1946     		mov	r1, r3
 7425 003c FFF7FEFF 		bl	I2C001_WriteData
 7426 0040 0346     		mov	r3, r0
 7427 0042 002B     		cmp	r3, #0
 7428 0044 F1D0     		beq	.L293
1707:../LSM9DS1_Driver.c **** 	}
1708:../LSM9DS1_Driver.c **** 
1709:../LSM9DS1_Driver.c **** 	delay(DELAY);
 7429              		.loc 1 1709 0
 7430 0046 42F6E060 		movw	r0, #12000
 7431 004a FFF7FEFF 		bl	delay
1710:../LSM9DS1_Driver.c **** 
1711:../LSM9DS1_Driver.c **** 	I2C001_DataType data2;
1712:../LSM9DS1_Driver.c **** 	data2.Data1.TDF_Type = I2C_TDF_MTxData;
 7432              		.loc 1 1712 0
 7433 004e 4FF00003 		mov	r3, #0
 7434 0052 7B77     		strb	r3, [r7, #29]
1713:../LSM9DS1_Driver.c **** 
1714:../LSM9DS1_Driver.c **** 	data2.Data1.Data = subAdr;
 7435              		.loc 1 1714 0
 7436 0054 BB79     		ldrb	r3, [r7, #6]
 7437 0056 3B77     		strb	r3, [r7, #28]
1715:../LSM9DS1_Driver.c **** 	while(!I2C001_WriteData(&I2C001_Handle0,&data2))
 7438              		.loc 1 1715 0
 7439 0058 01E0     		b	.L294
 7440              	.L295:
1716:../LSM9DS1_Driver.c **** 	{
1717:../LSM9DS1_Driver.c **** 		flushFIFO();
 7441              		.loc 1 1717 0
 7442 005a FFF7FEFF 		bl	flushFIFO
 7443              	.L294:
1715:../LSM9DS1_Driver.c **** 	while(!I2C001_WriteData(&I2C001_Handle0,&data2))
 7444              		.loc 1 1715 0 discriminator 1
 7445 005e 07F11C03 		add	r3, r7, #28
 7446 0062 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 7447 0066 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 7448 006a 1946     		mov	r1, r3
 7449 006c FFF7FEFF 		bl	I2C001_WriteData
 7450 0070 0346     		mov	r3, r0
 7451 0072 002B     		cmp	r3, #0
 7452 0074 F1D0     		beq	.L295
1718:../LSM9DS1_Driver.c **** 	}
1719:../LSM9DS1_Driver.c **** 
1720:../LSM9DS1_Driver.c **** 	delay(DELAY);
 7453              		.loc 1 1720 0
 7454 0076 42F6E060 		movw	r0, #12000
 7455 007a FFF7FEFF 		bl	delay
1721:../LSM9DS1_Driver.c **** 
1722:../LSM9DS1_Driver.c **** 	I2C001_DataType data3;
1723:../LSM9DS1_Driver.c **** 	data3.Data1.TDF_Type = I2C_TDF_MRStart;
 7456              		.loc 1 1723 0
 7457 007e 4FF00503 		mov	r3, #5
 7458 0082 7B76     		strb	r3, [r7, #25]
1724:../LSM9DS1_Driver.c **** 	//uint8_t adr1 = address->adr.addressDevice;
1725:../LSM9DS1_Driver.c **** 	data3.Data1.Data = ((adr << 1) | I2C_READ);
 7459              		.loc 1 1725 0
 7460 0084 FB79     		ldrb	r3, [r7, #7]
 7461 0086 4FEA4303 		lsl	r3, r3, #1
 7462 008a DBB2     		uxtb	r3, r3
 7463 008c 43F00103 		orr	r3, r3, #1
 7464 0090 DBB2     		uxtb	r3, r3
 7465 0092 3B76     		strb	r3, [r7, #24]
1726:../LSM9DS1_Driver.c **** 	while(!I2C001_WriteData(&I2C001_Handle0,&data3))
 7466              		.loc 1 1726 0
 7467 0094 01E0     		b	.L296
 7468              	.L297:
1727:../LSM9DS1_Driver.c **** 	{
1728:../LSM9DS1_Driver.c **** 		flushFIFO();
 7469              		.loc 1 1728 0
 7470 0096 FFF7FEFF 		bl	flushFIFO
 7471              	.L296:
1726:../LSM9DS1_Driver.c **** 	while(!I2C001_WriteData(&I2C001_Handle0,&data3))
 7472              		.loc 1 1726 0 discriminator 1
 7473 009a 07F11803 		add	r3, r7, #24
 7474 009e 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 7475 00a2 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 7476 00a6 1946     		mov	r1, r3
 7477 00a8 FFF7FEFF 		bl	I2C001_WriteData
 7478 00ac 0346     		mov	r3, r0
 7479 00ae 002B     		cmp	r3, #0
 7480 00b0 F1D0     		beq	.L297
1729:../LSM9DS1_Driver.c **** 	}
1730:../LSM9DS1_Driver.c **** 
1731:../LSM9DS1_Driver.c **** 	delay(DELAY);
 7481              		.loc 1 1731 0
 7482 00b2 42F6E060 		movw	r0, #12000
 7483 00b6 FFF7FEFF 		bl	delay
1732:../LSM9DS1_Driver.c **** 
1733:../LSM9DS1_Driver.c **** 	I2C001_DataType data4;
1734:../LSM9DS1_Driver.c **** 	data4.Data1.TDF_Type = I2C_TDF_MRxAck1;
 7484              		.loc 1 1734 0
 7485 00ba 4FF00303 		mov	r3, #3
 7486 00be 7B75     		strb	r3, [r7, #21]
1735:../LSM9DS1_Driver.c **** 	data4.Data1.Data = ubyteFF;
 7487              		.loc 1 1735 0
 7488 00c0 4FF0FF03 		mov	r3, #255
 7489 00c4 3B75     		strb	r3, [r7, #20]
1736:../LSM9DS1_Driver.c **** 	while(!I2C001_WriteData(&I2C001_Handle0,&data4))
 7490              		.loc 1 1736 0
 7491 00c6 01E0     		b	.L298
 7492              	.L299:
1737:../LSM9DS1_Driver.c **** 	{
1738:../LSM9DS1_Driver.c **** 		flushFIFO();
 7493              		.loc 1 1738 0
 7494 00c8 FFF7FEFF 		bl	flushFIFO
 7495              	.L298:
1736:../LSM9DS1_Driver.c **** 	while(!I2C001_WriteData(&I2C001_Handle0,&data4))
 7496              		.loc 1 1736 0 discriminator 1
 7497 00cc 07F11403 		add	r3, r7, #20
 7498 00d0 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 7499 00d4 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 7500 00d8 1946     		mov	r1, r3
 7501 00da FFF7FEFF 		bl	I2C001_WriteData
 7502 00de 0346     		mov	r3, r0
 7503 00e0 002B     		cmp	r3, #0
 7504 00e2 F1D0     		beq	.L299
1739:../LSM9DS1_Driver.c **** 	}
1740:../LSM9DS1_Driver.c **** 
1741:../LSM9DS1_Driver.c **** 	delay(DELAY);
 7505              		.loc 1 1741 0
 7506 00e4 42F6E060 		movw	r0, #12000
 7507 00e8 FFF7FEFF 		bl	delay
1742:../LSM9DS1_Driver.c **** 
1743:../LSM9DS1_Driver.c **** 	I2C001_DataType data5;
1744:../LSM9DS1_Driver.c **** 	data5.Data1.TDF_Type = I2C_TDF_MStop;
 7508              		.loc 1 1744 0
 7509 00ec 4FF00603 		mov	r3, #6
 7510 00f0 7B74     		strb	r3, [r7, #17]
1745:../LSM9DS1_Driver.c **** 	data5.Data1.Data = ubyteFF;
 7511              		.loc 1 1745 0
 7512 00f2 4FF0FF03 		mov	r3, #255
 7513 00f6 3B74     		strb	r3, [r7, #16]
1746:../LSM9DS1_Driver.c **** 	while(!I2C001_WriteData(&I2C001_Handle0,&data5))
 7514              		.loc 1 1746 0
 7515 00f8 01E0     		b	.L300
 7516              	.L301:
1747:../LSM9DS1_Driver.c **** 	{
1748:../LSM9DS1_Driver.c **** 		flushFIFO();
 7517              		.loc 1 1748 0
 7518 00fa FFF7FEFF 		bl	flushFIFO
 7519              	.L300:
1746:../LSM9DS1_Driver.c **** 	while(!I2C001_WriteData(&I2C001_Handle0,&data5))
 7520              		.loc 1 1746 0 discriminator 1
 7521 00fe 07F11003 		add	r3, r7, #16
 7522 0102 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 7523 0106 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 7524 010a 1946     		mov	r1, r3
 7525 010c FFF7FEFF 		bl	I2C001_WriteData
 7526 0110 0346     		mov	r3, r0
 7527 0112 002B     		cmp	r3, #0
 7528 0114 F1D0     		beq	.L301
1749:../LSM9DS1_Driver.c **** 	}
1750:../LSM9DS1_Driver.c **** 
1751:../LSM9DS1_Driver.c **** 	delay(DELAY);
 7529              		.loc 1 1751 0
 7530 0116 42F6E060 		movw	r0, #12000
 7531 011a FFF7FEFF 		bl	delay
1752:../LSM9DS1_Driver.c **** 
1753:../LSM9DS1_Driver.c **** 	int k = 0;
 7532              		.loc 1 1753 0
 7533 011e 4FF00003 		mov	r3, #0
 7534 0122 7B62     		str	r3, [r7, #36]
1754:../LSM9DS1_Driver.c **** 	uint16_t bufferToRead = 0;
 7535              		.loc 1 1754 0
 7536 0124 4FF00003 		mov	r3, #0
 7537 0128 FB81     		strh	r3, [r7, #14]	@ movhi
1755:../LSM9DS1_Driver.c **** 	if(I2C001_ReadData(&I2C001_Handle0,&bufferToRead))
 7538              		.loc 1 1755 0
 7539 012a 07F10E03 		add	r3, r7, #14
 7540 012e 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 7541 0132 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 7542 0136 1946     		mov	r1, r3
 7543 0138 FFF7FEFF 		bl	I2C001_ReadData
 7544 013c 0346     		mov	r3, r0
 7545 013e 002B     		cmp	r3, #0
 7546 0140 14D0     		beq	.L302
1756:../LSM9DS1_Driver.c **** 	{
1757:../LSM9DS1_Driver.c **** 		I2C001_ClearFlag(&I2C001_Handle0, I2C001_FLAG_RIF);
 7547              		.loc 1 1757 0
 7548 0142 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 7549 0146 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 7550 014a 4FF00401 		mov	r1, #4
 7551 014e FFF7FEFF 		bl	I2C001_ClearFlag
1758:../LSM9DS1_Driver.c **** 		I2C001_ClearFlag(&I2C001_Handle0, I2C001_FLAG_RSIF);
 7552              		.loc 1 1758 0
 7553 0152 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 7554 0156 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 7555 015a 4FF00001 		mov	r1, #0
 7556 015e FFF7FEFF 		bl	I2C001_ClearFlag
1759:../LSM9DS1_Driver.c **** 		k++;
 7557              		.loc 1 1759 0
 7558 0162 7B6A     		ldr	r3, [r7, #36]
 7559 0164 03F10103 		add	r3, r3, #1
 7560 0168 7B62     		str	r3, [r7, #36]
 7561 016a 03E0     		b	.L303
 7562              	.L302:
1760:../LSM9DS1_Driver.c **** 	}
1761:../LSM9DS1_Driver.c **** 	else
1762:../LSM9DS1_Driver.c **** 	{
1763:../LSM9DS1_Driver.c **** 		k--;
 7563              		.loc 1 1763 0
 7564 016c 7B6A     		ldr	r3, [r7, #36]
 7565 016e 03F1FF33 		add	r3, r3, #-1
 7566 0172 7B62     		str	r3, [r7, #36]
 7567              	.L303:
1764:../LSM9DS1_Driver.c **** 	}
1765:../LSM9DS1_Driver.c **** 
1766:../LSM9DS1_Driver.c **** 	delay(DELAY);
 7568              		.loc 1 1766 0
 7569 0174 42F6E060 		movw	r0, #12000
 7570 0178 FFF7FEFF 		bl	delay
1767:../LSM9DS1_Driver.c **** 	*buffer = (uint8_t)bufferToRead;
 7571              		.loc 1 1767 0
 7572 017c FB89     		ldrh	r3, [r7, #14]
 7573 017e DAB2     		uxtb	r2, r3
 7574 0180 3B68     		ldr	r3, [r7, #0]
 7575 0182 1A70     		strb	r2, [r3, #0]
1768:../LSM9DS1_Driver.c **** 
1769:../LSM9DS1_Driver.c **** }
 7576              		.loc 1 1769 0
 7577 0184 07F12807 		add	r7, r7, #40
 7578 0188 BD46     		mov	sp, r7
 7579 018a 80BD     		pop	{r7, pc}
 7580              		.cfi_endproc
 7581              	.LFE197:
 7583              		.bss
 7584              	whichDevice.9998:
 7585 0051 00       		.space	1
 7586              	whichByte.9997:
 7587 0052 00       		.space	1
 7588 0053 00       		.align	2
 7589              	stageOfReading.9996:
 7590 0054 00000000 		.space	4
 7591              		.align	2
 7592              	counter.9990:
 7593 0058 00000000 		.space	4
 7594              		.text
 7595              	.Letext0:
 7596              		.file 2 "c:\\dave-3.1.10\\arm-gcc\\bin\\../lib/gcc/arm-none-eabi/4.7.4/../../../../arm-none-eabi/i
 7597              		.file 3 "../LSM9DS1_Types.h"
 7598              		.file 4 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 7599              		.file 5 "C:\\DAVE3_workspace\\mojWorkspace\\Bachelor_improved\\Dave\\Generated\\inc\\DAVESupport/.
 7600              		.file 6 "C:\\DAVE3_workspace\\mojWorkspace\\Bachelor_improved\\Dave\\Generated\\inc\\DAVESupport/.
 7601              		.file 7 "C:\\DAVE3_workspace\\mojWorkspace\\Bachelor_improved\\Dave\\Generated\\inc\\DAVESupport/.
 7602              		.file 8 "C:\\DAVE3_workspace\\mojWorkspace\\Bachelor_improved\\Dave\\Generated\\inc\\DAVESupport/.
 7603              		.file 9 "../LSM9DS1_Driver.h"
 7604              		.file 10 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Include/core_cm4.h"
 7605              		.file 11 "C:\\DAVE3_workspace\\mojWorkspace\\Bachelor_improved\\Dave\\Generated\\inc\\DAVESupport/
DEFINED SYMBOLS
                            *ABS*:00000000 LSM9DS1_Driver.c
                            *COM*:00000004 TimerId
                            *COM*:00000004 Status
                            *COM*:00000004 WriteTimerId
                            *COM*:00000004 WriteTimerStatus
                            *COM*:00000004 TimerIdReadBytes
                            *COM*:00000004 StatusReadBytes
                            *COM*:00000028 settings
                            *COM*:0000000c gBias
                            *COM*:0000000c aBias
                            *COM*:0000000c mBias
                            *COM*:00000006 gBiasRaw
                            *COM*:00000006 aBiasRaw
                            *COM*:00000006 mBiasRaw
                            *COM*:00000001 _autoCalc
                            *COM*:00000001 _mAddress
                            *COM*:00000001 _xgAddress
                            *COM*:00000004 gRes
                            *COM*:00000004 aRes
                            *COM*:00000004 mRes
                            *COM*:00000002 gx
                            *COM*:00000002 gy
                            *COM*:00000002 gz
                            *COM*:00000002 ax
                            *COM*:00000002 ay
                            *COM*:00000002 az
                            *COM*:00000002 mx
                            *COM*:00000002 my
                            *COM*:00000002 mz
                            *COM*:00000002 temperature
                            *COM*:00000064 accelOsX
                            *COM*:00000064 accelOsY
                            *COM*:00000064 accelOsZ
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:56     .bss:00000000 TimerIdReadMeasurements
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:53     .bss:00000000 $d
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:63     .data:00000000 StatusTimerReadMeasurements
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:60     .data:00000000 $d
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:68     .data:00000004 readingAllowed
                            *COM*:000004b0 pomiaryAccel
                            *COM*:00000017 adrAndData
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:73     .bss:00000004 sendMsgTimerExpired
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:79     .bss:00000008 TimerIDSendMsg
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:86     .data:00000008 statusTimerSendMsg
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:92     .bss:0000000c sendingInProgress
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:98     .bss:00000010 counter
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:105    .data:0000000c magSensitivity
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:115    .bss:00000014 accelX
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:121    .bss:00000016 accelY
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:127    .bss:00000018 accelZ
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:133    .bss:0000001c accelXf
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:139    .bss:00000020 accelYf
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:145    .bss:00000024 accelZf
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:151    .bss:00000028 gyroX
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:157    .bss:0000002a gyroY
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:163    .bss:0000002c gyroZ
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:169    .bss:00000030 gyroXf
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:175    .bss:00000034 gyroYf
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:181    .bss:00000038 gyroZf
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:187    .bss:0000003c magnetX
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:193    .bss:0000003e magnetY
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:199    .bss:00000040 magnetZ
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:205    .bss:00000044 magnetXf
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:211    .bss:00000048 magnetYf
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:217    .bss:0000004c magnetZf
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:222    .bss:00000050 copied
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:225    .text.getAccelXf:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:230    .text.getAccelXf:00000000 getAccelXf
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:258    .text.getAccelX:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:263    .text.getAccelX:00000000 getAccelX
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:291    .text.getAccelYf:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:296    .text.getAccelYf:00000000 getAccelYf
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:323    .text.getAccelY:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:328    .text.getAccelY:00000000 getAccelY
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:356    .text.getAccelZf:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:361    .text.getAccelZf:00000000 getAccelZf
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:388    .text.getAccelZ:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:393    .text.getAccelZ:00000000 getAccelZ
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:421    .text.getGyroXf:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:426    .text.getGyroXf:00000000 getGyroXf
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:453    .text.getGyroX:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:458    .text.getGyroX:00000000 getGyroX
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:486    .text.getGyroYf:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:491    .text.getGyroYf:00000000 getGyroYf
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:518    .text.getGyroY:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:523    .text.getGyroY:00000000 getGyroY
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:551    .text.getGyroZf:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:556    .text.getGyroZf:00000000 getGyroZf
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:583    .text.getGyroZ:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:588    .text.getGyroZ:00000000 getGyroZ
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:616    .text.getMagnetXf:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:621    .text.getMagnetXf:00000000 getMagnetXf
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:648    .text.getMagnetX:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:653    .text.getMagnetX:00000000 getMagnetX
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:681    .text.getMagnetYf:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:686    .text.getMagnetYf:00000000 getMagnetYf
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:713    .text.getMagnetY:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:718    .text.getMagnetY:00000000 getMagnetY
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:746    .text.getMagnetZf:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:751    .text.getMagnetZf:00000000 getMagnetZf
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:778    .text.getMagnetZ:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:783    .text.getMagnetZ:00000000 getMagnetZ
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:811    .text.startMeasurements:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:816    .text.startMeasurements:00000000 startMeasurements
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:7150   .text.timerHandlerReceiveOneMeasurementEachSensor:00000000 timerHandlerReceiveOneMeasurementEachSensor
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:854    .text.readAndSendMeasurements:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:859    .text.readAndSendMeasurements:00000000 readAndSendMeasurements
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:5724   .text.calcAccel:00000000 calcAccel
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:5681   .text.calcGyro:00000000 calcGyro
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:5066   .text.calcMag:00000000 calcMag
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:1487   .text.initAdrAndSubAdr:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:1492   .text.initAdrAndSubAdr:00000000 initAdrAndSubAdr
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:1539   .text.initLSM9DS1:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:1544   .text.initLSM9DS1:00000000 initLSM9DS1
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:1607   .text.init:00000000 init
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:1887   .text.begin:00000000 begin
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:1602   .text.init:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:1882   .text.begin:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:1996   .text.constrainScales:00000000 constrainScales
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:2156   .text.calcgRes:00000000 calcgRes
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:2240   .text.calcmRes:00000000 calcmRes
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:2198   .text.calcaRes:00000000 calcaRes
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:2102   .text.initI2C:00000000 initI2C
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:2129   .text.initSPI:00000000 initSPI
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:2566   .text.mReadByte:00000000 mReadByte
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:2617   .text.xgReadByte:00000000 xgReadByte
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:2668   .text.initGyro:00000000 initGyro
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:3066   .text.initAccel:00000000 initAccel
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:3246   .text.initMag:00000000 initMag
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:1991   .text.constrainScales:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:2097   .text.initI2C:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:2124   .text.initSPI:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:2151   .text.calcgRes:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:2188   .text.calcgRes:00000030 $d
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:2193   .text.calcaRes:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:2230   .text.calcaRes:00000030 $d
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:2235   .text.calcmRes:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:2265   .text.calcmRes:00000020 $d
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:2280   .text.calcmRes:00000054 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:2327   .text.delay:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:2332   .text.delay:00000000 delay
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:2379   .text.I2CreadByte:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:2384   .text.I2CreadByte:00000000 I2CreadByte
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:2561   .text.mReadByte:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:2612   .text.xgReadByte:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:2663   .text.initGyro:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:2891   .text.xgWriteByte:00000000 xgWriteByte
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:2886   .text.xgWriteByte:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:2942   .text.I2CwriteByte:00000000 I2CwriteByte
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:2937   .text.I2CwriteByte:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:3061   .text.initAccel:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:3241   .text.initMag:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:3411   .text.mWriteByte:00000000 mWriteByte
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:3406   .text.mWriteByte:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:3458   .text.enableFIFO:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:3463   .text.enableFIFO:00000000 enableFIFO
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:3515   .text.setFIFO:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:3520   .text.setFIFO:00000000 setFIFO
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:3571   .text.calibrate:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:3576   .text.calibrate:00000000 calibrate
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:3935   .text.readGyro1:00000000 readGyro1
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:4098   .text.readAccel1:00000000 readAccel1
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:3823   .text.xgReadBytes:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:3828   .text.xgReadBytes:00000000 xgReadBytes
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:4469   .text.I2CreadBytes:00000000 I2CreadBytes
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:3898   .text.SPIreadBytes:00000000 SPIreadBytes
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:3893   .text.SPIreadBytes:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:3930   .text.readGyro1:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:4093   .text.readAccel1:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:4248   .text.readAccelToSensor:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:4253   .text.readAccelToSensor:00000000 readAccelToSensor
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:4464   .text.I2CreadBytes:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:4687   .text.magAvailable:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:4692   .text.magAvailable:00000000 magAvailable
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:4734   .text.readMag1:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:4739   .text.readMag1:00000000 readMag1
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:4829   .text.calibrateMag:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:4834   .text.calibrateMag:00000000 calibrateMag
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:5109   .text.magOffset:00000000 magOffset
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:5061   .text.calcMag:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:5104   .text.magOffset:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:5176   .text.accelAvailable:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:5181   .text.accelAvailable:00000000 accelAvailable
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:5216   .text.gyroAvailable:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:5221   .text.gyroAvailable:00000000 gyroAvailable
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:5257   .text.tempAvailable:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:5262   .text.tempAvailable:00000000 tempAvailable
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:5298   .text.readAccel:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:5303   .text.readAccel:00000000 readAccel
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:5401   .text.readMag:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:5406   .text.readMag:00000000 readMag
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:5487   .text.readTemp:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:5492   .text.readTemp:00000000 readTemp
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:5573   .text.readGyro:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:5578   .text.readGyro:00000000 readGyro
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:5676   .text.calcGyro:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:5719   .text.calcAccel:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:5762   .text.setGyroScale:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:5767   .text.setGyroScale:00000000 setGyroScale
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:5850   .text.setAccelScale:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:5855   .text.setAccelScale:00000000 setAccelScale
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:5951   .text.setMagScale:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:5956   .text.setMagScale:00000000 setMagScale
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:6052   .text.setGyroODR:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:6057   .text.setGyroODR:00000000 setGyroODR
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:6121   .text.setAccelODR:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:6126   .text.setAccelODR:00000000 setAccelODR
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:6190   .text.setMagODR:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:6195   .text.setMagODR:00000000 setMagODR
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:6252   .text.configInt:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:6257   .text.configInt:00000000 configInt
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:6332   .text.configInactivity:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:6337   .text.configInactivity:00000000 configInactivity
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:6394   .text.getInactivity:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:6399   .text.getInactivity:00000000 getInactivity
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:6436   .text.configAccelInt:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:6441   .text.configAccelInt:00000000 configAccelInt
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:6487   .text.configAccelThs:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:6492   .text.configAccelThs:00000000 configAccelThs
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:6547   .text.getAccelIntSrc:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:6552   .text.getAccelIntSrc:00000000 getAccelIntSrc
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:6597   .text.configGyroInt:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:6602   .text.configGyroInt:00000000 configGyroInt
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:6659   .text.configGyroThs:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:6664   .text.configGyroThs:00000000 configGyroThs
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:6741   .text.getGyroIntSrc:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:6746   .text.getGyroIntSrc:00000000 getGyroIntSrc
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:6791   .text.configMagInt:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:6796   .text.configMagInt:00000000 configMagInt
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:6863   .text.configMagThs:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:6868   .text.configMagThs:00000000 configMagThs
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:6909   .text.getMagIntSrc:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:6914   .text.getMagIntSrc:00000000 getMagIntSrc
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:6959   .text.sleepGyro:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:6964   .text.sleepGyro:00000000 sleepGyro
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:7016   .text.getFIFOSamples:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:7021   .text.getFIFOSamples:00000000 getFIFOSamples
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:7048   .text.timerHandlerSendMsg:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:7053   .text.timerHandlerSendMsg:00000000 timerHandlerSendMsg
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:7592   .bss:00000058 counter.9990
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:7145   .text.timerHandlerReceiveOneMeasurementEachSensor:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:7584   .bss:00000051 whichDevice.9998
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:7586   .bss:00000052 whichByte.9997
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:7382   .text.receiveByte:00000000 receiveByte
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:7589   .bss:00000054 stageOfReading.9996
C:\Users\Mateusz\AppData\Local\Temp\ccGxk5oP.s:7377   .text.receiveByte:00000000 $t
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.35166846b5321d4273ad8c4248893ac3
                           .group:00000000 wm4.LSM9DS1_Driver.h.9.225085f752270af24a0df342ed7d3479
                           .group:00000000 wm4.LSM9DS1_Registers.h.9.72af380d6da01de607f77d245bf32825
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.7aefdac4826acebbfc9f3822a0aeb14c
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.XMC4500.h.45.215f4b8c79f46c7645c15373868d08c0
                           .group:00000000 wm4.core_cm4.h.47.41af406cb4cda82c972f112a9cd0a024
                           .group:00000000 wm4.core_cmInstr.h.39.3d3d1b4a79aef37532666dc6ee87c6ac
                           .group:00000000 wm4.core_cm4_simd.h.43.b5d1d38735af6366227b4256d330cf13
                           .group:00000000 wm4.core_cm4.h.178.e5ef5ce66d198d7f00f9d0076e267c41
                           .group:00000000 wm4.system_XMC4500.h.29.827f68baa362c84f2abae4ab67dde7c9
                           .group:00000000 wm4.XMC4500.h.198.8e022f279ff353ed081df898dc7b9cf3
                           .group:00000000 wm4.stddef.h.40.50cf36416e06376af8a9dca28536f2e4
                           .group:00000000 wm4.types.h.60.e75c47576398c648cdcf9000ace5e3d8
                           .group:00000000 wm4.MULTIPLEXER.h.46.4a863fbae1c79f0db26da3ce2dc30d02
                           .group:00000000 wm4.CCU8PWMLIB.h.74.725ec81203769525cc7a424597055f47
                           .group:00000000 wm4.MOTORLIB.h.62.951091d95913dd2ff36d761323a1771d
                           .group:00000000 wm4.DBG001.h.116.d6d9e7459a0faa3905c97c1d2edb339d
                           .group:00000000 wm4.IO004.h.53.442ea5eb47ad9eedc675253aa35f3107
                           .group:00000000 wm4.uc_id.h.35.fa57ecd9f559d2767f56c96da2848c12
                           .group:00000000 wm4.CLK001_Const.h.50.e5e9c2ddc89f4cc9e7b93e9648fa94e4
                           .group:00000000 wm4.CLK001_Conf.h.81.82a8db895dc146da001475dd68223522
                           .group:00000000 wm4.Usic.h.54.8af9f733ba5771eeb374435d205ea54b
                           .group:00000000 wm4.UART001_Conf.h.53.ea28968cb6c53b1be9f53a4d9f42a86f
                           .group:00000000 wm4.SYSTM001.h.64.6ecb31c49bc3e7691644fdcdfc11b5cd
                           .group:00000000 wm4.I2C001.h.97.5277d52889d6c741e048ea45ee1277b5
                           .group:00000000 wm4.I2C001_Conf.h.58.e3e909c2ec9c29fee288b93938e533a2
                           .group:00000000 wm4.stdio.h.31.f48311dde756a2aec27351b58a280fb9
                           .group:00000000 wm4.stddef.h.161.e50ff8a9d5d1abbc15641da28ac571bf
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4.stddef.h.161.c6104a0666cf681b6269ddc9b4f516d4
                           .group:00000000 wm4.reent.h.16.9e42f0e588b85e70b2bf6572af57ce64
                           .group:00000000 wm4.types.h.23.0d949686bbcadd1621462d4fa1f884f9
                           .group:00000000 wm4.types.h.2.e9cec8c90ab35f77d9f499e06ae02400
                           .group:00000000 wm4.types.h.80.1f2c84c0d57dd52dd9936095d9ac218e
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.63.dfdea6580b080784d08faace69b6ed76
                           .group:00000000 wm4.inttypes.h.14.da8ab5c14bc76feb3bf694db03b8ec46
                           .group:00000000 wm4.inttypes.h.20.54b7c434bb63171d5145327a6d429f51
                           .group:00000000 wm4.math.h.35.cc9264b0ced3bd063c5784e64e89cf51
                           .group:00000000 wm4.stdlib.h.13.603ed7eb09a1561ab06840b7c0fcff58
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.53.c69c7609933ff56d59c757cec2d13230
                           .group:00000000 wm4.string.h.8.ef946ad0bc9ad5c970c365dcd1fc4b0a
                           .group:00000000 wm4.string.h.86.d5c872ff52e2712c985b588a0ef39f3c

UNDEFINED SYMBOLS
SYSTM001_CreateTimer
SYSTM001_StartTimer
I2C001_Handle0
I2C001_WriteData
I2C001_ReadData
__aeabi_f2d
__aeabi_ddiv
__aeabi_d2iz
strlen
send
clearErrorFlags
flushFIFO
I2C001_ClearFlag
