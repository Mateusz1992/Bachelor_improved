   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"LSM9DS1_Driver.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	TimerId,4,4
  20              		.comm	Status,4,4
  21              		.comm	WriteTimerId,4,4
  22              		.comm	WriteTimerStatus,4,4
  23              		.comm	TimerIdReadBytes,4,4
  24              		.comm	StatusReadBytes,4,4
  25              		.comm	settings,40,4
  26              		.comm	gBias,12,4
  27              		.comm	aBias,12,4
  28              		.comm	mBias,12,4
  29              		.comm	gBiasRaw,6,4
  30              		.comm	aBiasRaw,6,4
  31              		.comm	mBiasRaw,6,4
  32              		.comm	_autoCalc,1,1
  33              		.comm	_mAddress,1,1
  34              		.comm	_xgAddress,1,1
  35              		.comm	gRes,4,4
  36              		.comm	aRes,4,4
  37              		.comm	mRes,4,4
  38              		.comm	gx,2,2
  39              		.comm	gy,2,2
  40              		.comm	gz,2,2
  41              		.comm	ax,2,2
  42              		.comm	ay,2,2
  43              		.comm	az,2,2
  44              		.comm	mx,2,2
  45              		.comm	my,2,2
  46              		.comm	mz,2,2
  47              		.comm	temperature,2,2
  48              		.comm	accelOsX,100,4
  49              		.comm	accelOsY,100,4
  50              		.comm	accelOsZ,100,4
  51              		.global	TimerIdReadMeasurements
  52              		.bss
  53              		.align	2
  56              	TimerIdReadMeasurements:
  57 0000 00000000 		.space	4
  58              		.global	StatusTimerReadMeasurements
  59              		.data
  60              		.align	2
  63              	StatusTimerReadMeasurements:
  64 0000 02000000 		.word	2
  65              		.global	readingAllowed
  68              	readingAllowed:
  69 0004 01       		.byte	1
  70              		.comm	pomiaryAccel,1200,4
  71              		.comm	adrAndData,23,4
  72              		.bss
  73              	sendMsgTimerExpired:
  74 0004 00       		.space	1
  75              		.global	TimerIDSendMsg
  76 0005 000000   		.align	2
  79              	TimerIDSendMsg:
  80 0008 00000000 		.space	4
  81              		.global	statusTimerSendMsg
  82              		.data
  83 0005 000000   		.align	2
  86              	statusTimerSendMsg:
  87 0008 02000000 		.word	2
  88              		.global	sendingInProgress
  89              		.bss
  92              	sendingInProgress:
  93 000c 00       		.space	1
  94              		.global	counter
  95 000d 000000   		.align	2
  98              	counter:
  99 0010 00000000 		.space	4
 100              		.global	magSensitivity
 101              		.data
 102              		.align	2
 105              	magSensitivity:
 106 000c F7CC1239 		.word	957533431
 107 0010 240B9839 		.word	966265636
 108 0014 9F71E139 		.word	971075999
 109 0018 240B183A 		.word	974654244
 110              		.global	accelX
 111              		.bss
 112              		.align	1
 115              	accelX:
 116 0014 0000     		.space	2
 117              		.global	accelY
 118              		.align	1
 121              	accelY:
 122 0016 0000     		.space	2
 123              		.global	accelZ
 124              		.align	1
 127              	accelZ:
 128 0018 0000     		.space	2
 129              		.global	accelXf
 130 001a 0000     		.align	2
 133              	accelXf:
 134 001c 00000000 		.space	4
 135              		.global	accelYf
 136              		.align	2
 139              	accelYf:
 140 0020 00000000 		.space	4
 141              		.global	accelZf
 142              		.align	2
 145              	accelZf:
 146 0024 00000000 		.space	4
 147              		.global	gyroX
 148              		.align	1
 151              	gyroX:
 152 0028 0000     		.space	2
 153              		.global	gyroY
 154              		.align	1
 157              	gyroY:
 158 002a 0000     		.space	2
 159              		.global	gyroZ
 160              		.align	1
 163              	gyroZ:
 164 002c 0000     		.space	2
 165              		.global	gyroXf
 166 002e 0000     		.align	2
 169              	gyroXf:
 170 0030 00000000 		.space	4
 171              		.global	gyroYf
 172              		.align	2
 175              	gyroYf:
 176 0034 00000000 		.space	4
 177              		.global	gyroZf
 178              		.align	2
 181              	gyroZf:
 182 0038 00000000 		.space	4
 183              		.global	magnetX
 184              		.align	1
 187              	magnetX:
 188 003c 0000     		.space	2
 189              		.global	magnetY
 190              		.align	1
 193              	magnetY:
 194 003e 0000     		.space	2
 195              		.global	magnetZ
 196              		.align	1
 199              	magnetZ:
 200 0040 0000     		.space	2
 201              		.global	magnetXf
 202 0042 0000     		.align	2
 205              	magnetXf:
 206 0044 00000000 		.space	4
 207              		.global	magnetYf
 208              		.align	2
 211              	magnetYf:
 212 0048 00000000 		.space	4
 213              		.global	magnetZf
 214              		.align	2
 217              	magnetZf:
 218 004c 00000000 		.space	4
 219              		.global	copied
 222              	copied:
 223 0050 00       		.space	1
 224              		.section	.text.getAccelXf,"ax",%progbits
 225              		.align	2
 226              		.global	getAccelXf
 227              		.thumb
 228              		.thumb_func
 230              	getAccelXf:
 231              	.LFB112:
 232              		.file 1 "../LSM9DS1_Driver.c"
   1:../LSM9DS1_Driver.c **** /*
   2:../LSM9DS1_Driver.c ****  * LSM9DS1_Driver.c
   3:../LSM9DS1_Driver.c ****  *
   4:../LSM9DS1_Driver.c ****  *  Created on: 12-02-2016
   5:../LSM9DS1_Driver.c ****  *      Author: Mateusz
   6:../LSM9DS1_Driver.c ****  */
   7:../LSM9DS1_Driver.c **** #include "LSM9DS1_Driver.h"
   8:../LSM9DS1_Driver.c **** #include "LSM9DS1_Registers.h"
   9:../LSM9DS1_Driver.c **** #include "LSM9DS1_Types.h"
  10:../LSM9DS1_Driver.c **** #include "FIFO_functions.h"
  11:../LSM9DS1_Driver.c **** 
  12:../LSM9DS1_Driver.c **** #include <stdint.h>
  13:../LSM9DS1_Driver.c **** #include <inttypes.h>
  14:../LSM9DS1_Driver.c **** #include <math.h>
  15:../LSM9DS1_Driver.c **** #include <stdlib.h>
  16:../LSM9DS1_Driver.c **** #include <string.h>
  17:../LSM9DS1_Driver.c **** 
  18:../LSM9DS1_Driver.c **** //#define DELAY 10000
  19:../LSM9DS1_Driver.c **** #define DELAY 12000
  20:../LSM9DS1_Driver.c **** 
  21:../LSM9DS1_Driver.c **** #define LSM9DS1_M	0x1E // Would be 0x1C if SDO_M is LOW
  22:../LSM9DS1_Driver.c **** #define LSM9DS1_AG	0x6B // Would be 0x6A if SDO_AG is LOW
  23:../LSM9DS1_Driver.c **** 
  24:../LSM9DS1_Driver.c **** char accelOsX[100];
  25:../LSM9DS1_Driver.c **** char accelOsY[100];
  26:../LSM9DS1_Driver.c **** char accelOsZ[100];
  27:../LSM9DS1_Driver.c **** 
  28:../LSM9DS1_Driver.c **** #define TRUE 1
  29:../LSM9DS1_Driver.c **** #define FALSE 0
  30:../LSM9DS1_Driver.c **** 
  31:../LSM9DS1_Driver.c **** handle_t TimerIdReadMeasurements = 0;
  32:../LSM9DS1_Driver.c **** uint32_t StatusTimerReadMeasurements = SYSTM001_ERROR;
  33:../LSM9DS1_Driver.c **** 
  34:../LSM9DS1_Driver.c **** volatile bool readingAllowed = TRUE;
  35:../LSM9DS1_Driver.c **** 
  36:../LSM9DS1_Driver.c **** accel pomiaryAccel[100];
  37:../LSM9DS1_Driver.c **** extern accel copiedData[100];
  38:../LSM9DS1_Driver.c **** //accel pomiaryAccel1[100];
  39:../LSM9DS1_Driver.c **** 
  40:../LSM9DS1_Driver.c **** addressAndData adrAndData;
  41:../LSM9DS1_Driver.c **** 
  42:../LSM9DS1_Driver.c **** //tools for sending MSG
  43:../LSM9DS1_Driver.c **** static bool sendMsgTimerExpired = FALSE;
  44:../LSM9DS1_Driver.c **** handle_t TimerIDSendMsg = 0;
  45:../LSM9DS1_Driver.c **** uint32_t statusTimerSendMsg = SYSTM001_ERROR;
  46:../LSM9DS1_Driver.c **** bool sendingInProgress = FALSE;
  47:../LSM9DS1_Driver.c **** //tools for sending MSG
  48:../LSM9DS1_Driver.c **** 
  49:../LSM9DS1_Driver.c **** int counter = 0;
  50:../LSM9DS1_Driver.c **** 
  51:../LSM9DS1_Driver.c **** float magSensitivity[4] = {0.00014, 0.00029, 0.00043, 0.00058};
  52:../LSM9DS1_Driver.c **** 
  53:../LSM9DS1_Driver.c **** //linear acceleration all axes
  54:../LSM9DS1_Driver.c **** int16_t accelX = 0;
  55:../LSM9DS1_Driver.c **** int16_t accelY = 0;
  56:../LSM9DS1_Driver.c **** int16_t accelZ = 0;
  57:../LSM9DS1_Driver.c **** 
  58:../LSM9DS1_Driver.c **** float accelXf = 0;
  59:../LSM9DS1_Driver.c **** float accelYf = 0;
  60:../LSM9DS1_Driver.c **** float accelZf = 0;
  61:../LSM9DS1_Driver.c **** //linear acceleration all axes
  62:../LSM9DS1_Driver.c **** 
  63:../LSM9DS1_Driver.c **** //gyroscope all axes
  64:../LSM9DS1_Driver.c **** int16_t gyroX = 0;
  65:../LSM9DS1_Driver.c **** int16_t gyroY = 0;
  66:../LSM9DS1_Driver.c **** int16_t gyroZ = 0;
  67:../LSM9DS1_Driver.c **** 
  68:../LSM9DS1_Driver.c **** float gyroXf = 0;
  69:../LSM9DS1_Driver.c **** float gyroYf = 0;
  70:../LSM9DS1_Driver.c **** float gyroZf = 0;
  71:../LSM9DS1_Driver.c **** 
  72:../LSM9DS1_Driver.c **** //gyroscope all axes
  73:../LSM9DS1_Driver.c **** 
  74:../LSM9DS1_Driver.c **** //magnetometer all axes
  75:../LSM9DS1_Driver.c **** int16_t magnetX = 0;
  76:../LSM9DS1_Driver.c **** int16_t magnetY = 0;
  77:../LSM9DS1_Driver.c **** int16_t magnetZ = 0;
  78:../LSM9DS1_Driver.c **** 
  79:../LSM9DS1_Driver.c **** float magnetXf = 0;
  80:../LSM9DS1_Driver.c **** float magnetYf = 0;
  81:../LSM9DS1_Driver.c **** float magnetZf = 0;
  82:../LSM9DS1_Driver.c **** //magnetometer all axes
  83:../LSM9DS1_Driver.c **** 
  84:../LSM9DS1_Driver.c **** 
  85:../LSM9DS1_Driver.c **** extern char copied = 0;
  86:../LSM9DS1_Driver.c **** 
  87:../LSM9DS1_Driver.c **** float getAccelXf(void)
  88:../LSM9DS1_Driver.c **** {
 233              		.loc 1 88 0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 1, uses_anonymous_args = 0
 237              		@ link register save eliminated.
 238 0000 80B4     		push	{r7}
 239              	.LCFI0:
 240              		.cfi_def_cfa_offset 4
 241              		.cfi_offset 7, -4
 242 0002 00AF     		add	r7, sp, #0
 243              	.LCFI1:
 244              		.cfi_def_cfa_register 7
  89:../LSM9DS1_Driver.c **** 	return accelXf;
 245              		.loc 1 89 0
 246 0004 40F20003 		movw	r3, #:lower16:accelXf
 247 0008 C0F20003 		movt	r3, #:upper16:accelXf
 248 000c 1B68     		ldr	r3, [r3, #0]	@ float
  90:../LSM9DS1_Driver.c **** }
 249              		.loc 1 90 0
 250 000e 1846     		mov	r0, r3	@ float
 251 0010 BD46     		mov	sp, r7
 252 0012 80BC     		pop	{r7}
 253 0014 7047     		bx	lr
 254              		.cfi_endproc
 255              	.LFE112:
 257 0016 00BF     		.section	.text.getAccelX,"ax",%progbits
 258              		.align	2
 259              		.global	getAccelX
 260              		.thumb
 261              		.thumb_func
 263              	getAccelX:
 264              	.LFB113:
  91:../LSM9DS1_Driver.c **** 
  92:../LSM9DS1_Driver.c **** int16_t getAccelX(void)
  93:../LSM9DS1_Driver.c **** {
 265              		.loc 1 93 0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 0
 268              		@ frame_needed = 1, uses_anonymous_args = 0
 269              		@ link register save eliminated.
 270 0000 80B4     		push	{r7}
 271              	.LCFI2:
 272              		.cfi_def_cfa_offset 4
 273              		.cfi_offset 7, -4
 274 0002 00AF     		add	r7, sp, #0
 275              	.LCFI3:
 276              		.cfi_def_cfa_register 7
  94:../LSM9DS1_Driver.c **** 	return accelX;
 277              		.loc 1 94 0
 278 0004 40F20003 		movw	r3, #:lower16:accelX
 279 0008 C0F20003 		movt	r3, #:upper16:accelX
 280 000c 1B88     		ldrh	r3, [r3, #0]
 281 000e 1BB2     		sxth	r3, r3
  95:../LSM9DS1_Driver.c **** }
 282              		.loc 1 95 0
 283 0010 1846     		mov	r0, r3
 284 0012 BD46     		mov	sp, r7
 285 0014 80BC     		pop	{r7}
 286 0016 7047     		bx	lr
 287              		.cfi_endproc
 288              	.LFE113:
 290              		.section	.text.getAccelYf,"ax",%progbits
 291              		.align	2
 292              		.global	getAccelYf
 293              		.thumb
 294              		.thumb_func
 296              	getAccelYf:
 297              	.LFB114:
  96:../LSM9DS1_Driver.c **** 
  97:../LSM9DS1_Driver.c **** float getAccelYf(void)
  98:../LSM9DS1_Driver.c **** {
 298              		.loc 1 98 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 1, uses_anonymous_args = 0
 302              		@ link register save eliminated.
 303 0000 80B4     		push	{r7}
 304              	.LCFI4:
 305              		.cfi_def_cfa_offset 4
 306              		.cfi_offset 7, -4
 307 0002 00AF     		add	r7, sp, #0
 308              	.LCFI5:
 309              		.cfi_def_cfa_register 7
  99:../LSM9DS1_Driver.c **** 	return accelYf;
 310              		.loc 1 99 0
 311 0004 40F20003 		movw	r3, #:lower16:accelYf
 312 0008 C0F20003 		movt	r3, #:upper16:accelYf
 313 000c 1B68     		ldr	r3, [r3, #0]	@ float
 100:../LSM9DS1_Driver.c **** }
 314              		.loc 1 100 0
 315 000e 1846     		mov	r0, r3	@ float
 316 0010 BD46     		mov	sp, r7
 317 0012 80BC     		pop	{r7}
 318 0014 7047     		bx	lr
 319              		.cfi_endproc
 320              	.LFE114:
 322 0016 00BF     		.section	.text.getAccelY,"ax",%progbits
 323              		.align	2
 324              		.global	getAccelY
 325              		.thumb
 326              		.thumb_func
 328              	getAccelY:
 329              	.LFB115:
 101:../LSM9DS1_Driver.c **** 
 102:../LSM9DS1_Driver.c **** int16_t getAccelY(void)
 103:../LSM9DS1_Driver.c **** {
 330              		.loc 1 103 0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 1, uses_anonymous_args = 0
 334              		@ link register save eliminated.
 335 0000 80B4     		push	{r7}
 336              	.LCFI6:
 337              		.cfi_def_cfa_offset 4
 338              		.cfi_offset 7, -4
 339 0002 00AF     		add	r7, sp, #0
 340              	.LCFI7:
 341              		.cfi_def_cfa_register 7
 104:../LSM9DS1_Driver.c **** 	return accelY;
 342              		.loc 1 104 0
 343 0004 40F20003 		movw	r3, #:lower16:accelY
 344 0008 C0F20003 		movt	r3, #:upper16:accelY
 345 000c 1B88     		ldrh	r3, [r3, #0]
 346 000e 1BB2     		sxth	r3, r3
 105:../LSM9DS1_Driver.c **** }
 347              		.loc 1 105 0
 348 0010 1846     		mov	r0, r3
 349 0012 BD46     		mov	sp, r7
 350 0014 80BC     		pop	{r7}
 351 0016 7047     		bx	lr
 352              		.cfi_endproc
 353              	.LFE115:
 355              		.section	.text.getAccelZf,"ax",%progbits
 356              		.align	2
 357              		.global	getAccelZf
 358              		.thumb
 359              		.thumb_func
 361              	getAccelZf:
 362              	.LFB116:
 106:../LSM9DS1_Driver.c **** 
 107:../LSM9DS1_Driver.c **** float getAccelZf(void)
 108:../LSM9DS1_Driver.c **** {
 363              		.loc 1 108 0
 364              		.cfi_startproc
 365              		@ args = 0, pretend = 0, frame = 0
 366              		@ frame_needed = 1, uses_anonymous_args = 0
 367              		@ link register save eliminated.
 368 0000 80B4     		push	{r7}
 369              	.LCFI8:
 370              		.cfi_def_cfa_offset 4
 371              		.cfi_offset 7, -4
 372 0002 00AF     		add	r7, sp, #0
 373              	.LCFI9:
 374              		.cfi_def_cfa_register 7
 109:../LSM9DS1_Driver.c **** 	return accelZf;
 375              		.loc 1 109 0
 376 0004 40F20003 		movw	r3, #:lower16:accelZf
 377 0008 C0F20003 		movt	r3, #:upper16:accelZf
 378 000c 1B68     		ldr	r3, [r3, #0]	@ float
 110:../LSM9DS1_Driver.c **** }
 379              		.loc 1 110 0
 380 000e 1846     		mov	r0, r3	@ float
 381 0010 BD46     		mov	sp, r7
 382 0012 80BC     		pop	{r7}
 383 0014 7047     		bx	lr
 384              		.cfi_endproc
 385              	.LFE116:
 387 0016 00BF     		.section	.text.getAccelZ,"ax",%progbits
 388              		.align	2
 389              		.global	getAccelZ
 390              		.thumb
 391              		.thumb_func
 393              	getAccelZ:
 394              	.LFB117:
 111:../LSM9DS1_Driver.c **** 
 112:../LSM9DS1_Driver.c **** int16_t getAccelZ(void)
 113:../LSM9DS1_Driver.c **** {
 395              		.loc 1 113 0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 0
 398              		@ frame_needed = 1, uses_anonymous_args = 0
 399              		@ link register save eliminated.
 400 0000 80B4     		push	{r7}
 401              	.LCFI10:
 402              		.cfi_def_cfa_offset 4
 403              		.cfi_offset 7, -4
 404 0002 00AF     		add	r7, sp, #0
 405              	.LCFI11:
 406              		.cfi_def_cfa_register 7
 114:../LSM9DS1_Driver.c **** 	return accelZ;
 407              		.loc 1 114 0
 408 0004 40F20003 		movw	r3, #:lower16:accelZ
 409 0008 C0F20003 		movt	r3, #:upper16:accelZ
 410 000c 1B88     		ldrh	r3, [r3, #0]
 411 000e 1BB2     		sxth	r3, r3
 115:../LSM9DS1_Driver.c **** }
 412              		.loc 1 115 0
 413 0010 1846     		mov	r0, r3
 414 0012 BD46     		mov	sp, r7
 415 0014 80BC     		pop	{r7}
 416 0016 7047     		bx	lr
 417              		.cfi_endproc
 418              	.LFE117:
 420              		.section	.text.getGyroXf,"ax",%progbits
 421              		.align	2
 422              		.global	getGyroXf
 423              		.thumb
 424              		.thumb_func
 426              	getGyroXf:
 427              	.LFB118:
 116:../LSM9DS1_Driver.c **** 
 117:../LSM9DS1_Driver.c **** float getGyroXf(void)
 118:../LSM9DS1_Driver.c **** {
 428              		.loc 1 118 0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 0
 431              		@ frame_needed = 1, uses_anonymous_args = 0
 432              		@ link register save eliminated.
 433 0000 80B4     		push	{r7}
 434              	.LCFI12:
 435              		.cfi_def_cfa_offset 4
 436              		.cfi_offset 7, -4
 437 0002 00AF     		add	r7, sp, #0
 438              	.LCFI13:
 439              		.cfi_def_cfa_register 7
 119:../LSM9DS1_Driver.c **** 	return gyroXf;
 440              		.loc 1 119 0
 441 0004 40F20003 		movw	r3, #:lower16:gyroXf
 442 0008 C0F20003 		movt	r3, #:upper16:gyroXf
 443 000c 1B68     		ldr	r3, [r3, #0]	@ float
 120:../LSM9DS1_Driver.c **** }
 444              		.loc 1 120 0
 445 000e 1846     		mov	r0, r3	@ float
 446 0010 BD46     		mov	sp, r7
 447 0012 80BC     		pop	{r7}
 448 0014 7047     		bx	lr
 449              		.cfi_endproc
 450              	.LFE118:
 452 0016 00BF     		.section	.text.getGyroX,"ax",%progbits
 453              		.align	2
 454              		.global	getGyroX
 455              		.thumb
 456              		.thumb_func
 458              	getGyroX:
 459              	.LFB119:
 121:../LSM9DS1_Driver.c **** 
 122:../LSM9DS1_Driver.c **** int16_t getGyroX(void)
 123:../LSM9DS1_Driver.c **** {
 460              		.loc 1 123 0
 461              		.cfi_startproc
 462              		@ args = 0, pretend = 0, frame = 0
 463              		@ frame_needed = 1, uses_anonymous_args = 0
 464              		@ link register save eliminated.
 465 0000 80B4     		push	{r7}
 466              	.LCFI14:
 467              		.cfi_def_cfa_offset 4
 468              		.cfi_offset 7, -4
 469 0002 00AF     		add	r7, sp, #0
 470              	.LCFI15:
 471              		.cfi_def_cfa_register 7
 124:../LSM9DS1_Driver.c **** 	return gyroX;
 472              		.loc 1 124 0
 473 0004 40F20003 		movw	r3, #:lower16:gyroX
 474 0008 C0F20003 		movt	r3, #:upper16:gyroX
 475 000c 1B88     		ldrh	r3, [r3, #0]
 476 000e 1BB2     		sxth	r3, r3
 125:../LSM9DS1_Driver.c **** }
 477              		.loc 1 125 0
 478 0010 1846     		mov	r0, r3
 479 0012 BD46     		mov	sp, r7
 480 0014 80BC     		pop	{r7}
 481 0016 7047     		bx	lr
 482              		.cfi_endproc
 483              	.LFE119:
 485              		.section	.text.getGyroYf,"ax",%progbits
 486              		.align	2
 487              		.global	getGyroYf
 488              		.thumb
 489              		.thumb_func
 491              	getGyroYf:
 492              	.LFB120:
 126:../LSM9DS1_Driver.c **** 
 127:../LSM9DS1_Driver.c **** float getGyroYf(void)
 128:../LSM9DS1_Driver.c **** {
 493              		.loc 1 128 0
 494              		.cfi_startproc
 495              		@ args = 0, pretend = 0, frame = 0
 496              		@ frame_needed = 1, uses_anonymous_args = 0
 497              		@ link register save eliminated.
 498 0000 80B4     		push	{r7}
 499              	.LCFI16:
 500              		.cfi_def_cfa_offset 4
 501              		.cfi_offset 7, -4
 502 0002 00AF     		add	r7, sp, #0
 503              	.LCFI17:
 504              		.cfi_def_cfa_register 7
 129:../LSM9DS1_Driver.c **** 	return gyroYf;
 505              		.loc 1 129 0
 506 0004 40F20003 		movw	r3, #:lower16:gyroYf
 507 0008 C0F20003 		movt	r3, #:upper16:gyroYf
 508 000c 1B68     		ldr	r3, [r3, #0]	@ float
 130:../LSM9DS1_Driver.c **** }
 509              		.loc 1 130 0
 510 000e 1846     		mov	r0, r3	@ float
 511 0010 BD46     		mov	sp, r7
 512 0012 80BC     		pop	{r7}
 513 0014 7047     		bx	lr
 514              		.cfi_endproc
 515              	.LFE120:
 517 0016 00BF     		.section	.text.getGyroY,"ax",%progbits
 518              		.align	2
 519              		.global	getGyroY
 520              		.thumb
 521              		.thumb_func
 523              	getGyroY:
 524              	.LFB121:
 131:../LSM9DS1_Driver.c **** 
 132:../LSM9DS1_Driver.c **** int16_t getGyroY(void)
 133:../LSM9DS1_Driver.c **** {
 525              		.loc 1 133 0
 526              		.cfi_startproc
 527              		@ args = 0, pretend = 0, frame = 0
 528              		@ frame_needed = 1, uses_anonymous_args = 0
 529              		@ link register save eliminated.
 530 0000 80B4     		push	{r7}
 531              	.LCFI18:
 532              		.cfi_def_cfa_offset 4
 533              		.cfi_offset 7, -4
 534 0002 00AF     		add	r7, sp, #0
 535              	.LCFI19:
 536              		.cfi_def_cfa_register 7
 134:../LSM9DS1_Driver.c **** 	return gyroY;
 537              		.loc 1 134 0
 538 0004 40F20003 		movw	r3, #:lower16:gyroY
 539 0008 C0F20003 		movt	r3, #:upper16:gyroY
 540 000c 1B88     		ldrh	r3, [r3, #0]
 541 000e 1BB2     		sxth	r3, r3
 135:../LSM9DS1_Driver.c **** }
 542              		.loc 1 135 0
 543 0010 1846     		mov	r0, r3
 544 0012 BD46     		mov	sp, r7
 545 0014 80BC     		pop	{r7}
 546 0016 7047     		bx	lr
 547              		.cfi_endproc
 548              	.LFE121:
 550              		.section	.text.getGyroZf,"ax",%progbits
 551              		.align	2
 552              		.global	getGyroZf
 553              		.thumb
 554              		.thumb_func
 556              	getGyroZf:
 557              	.LFB122:
 136:../LSM9DS1_Driver.c **** 
 137:../LSM9DS1_Driver.c **** float getGyroZf(void)
 138:../LSM9DS1_Driver.c **** {
 558              		.loc 1 138 0
 559              		.cfi_startproc
 560              		@ args = 0, pretend = 0, frame = 0
 561              		@ frame_needed = 1, uses_anonymous_args = 0
 562              		@ link register save eliminated.
 563 0000 80B4     		push	{r7}
 564              	.LCFI20:
 565              		.cfi_def_cfa_offset 4
 566              		.cfi_offset 7, -4
 567 0002 00AF     		add	r7, sp, #0
 568              	.LCFI21:
 569              		.cfi_def_cfa_register 7
 139:../LSM9DS1_Driver.c **** 	return gyroZf;
 570              		.loc 1 139 0
 571 0004 40F20003 		movw	r3, #:lower16:gyroZf
 572 0008 C0F20003 		movt	r3, #:upper16:gyroZf
 573 000c 1B68     		ldr	r3, [r3, #0]	@ float
 140:../LSM9DS1_Driver.c **** }
 574              		.loc 1 140 0
 575 000e 1846     		mov	r0, r3	@ float
 576 0010 BD46     		mov	sp, r7
 577 0012 80BC     		pop	{r7}
 578 0014 7047     		bx	lr
 579              		.cfi_endproc
 580              	.LFE122:
 582 0016 00BF     		.section	.text.getGyroZ,"ax",%progbits
 583              		.align	2
 584              		.global	getGyroZ
 585              		.thumb
 586              		.thumb_func
 588              	getGyroZ:
 589              	.LFB123:
 141:../LSM9DS1_Driver.c **** 
 142:../LSM9DS1_Driver.c **** int16_t getGyroZ(void)
 143:../LSM9DS1_Driver.c **** {
 590              		.loc 1 143 0
 591              		.cfi_startproc
 592              		@ args = 0, pretend = 0, frame = 0
 593              		@ frame_needed = 1, uses_anonymous_args = 0
 594              		@ link register save eliminated.
 595 0000 80B4     		push	{r7}
 596              	.LCFI22:
 597              		.cfi_def_cfa_offset 4
 598              		.cfi_offset 7, -4
 599 0002 00AF     		add	r7, sp, #0
 600              	.LCFI23:
 601              		.cfi_def_cfa_register 7
 144:../LSM9DS1_Driver.c **** 	return gyroZ;
 602              		.loc 1 144 0
 603 0004 40F20003 		movw	r3, #:lower16:gyroZ
 604 0008 C0F20003 		movt	r3, #:upper16:gyroZ
 605 000c 1B88     		ldrh	r3, [r3, #0]
 606 000e 1BB2     		sxth	r3, r3
 145:../LSM9DS1_Driver.c **** }
 607              		.loc 1 145 0
 608 0010 1846     		mov	r0, r3
 609 0012 BD46     		mov	sp, r7
 610 0014 80BC     		pop	{r7}
 611 0016 7047     		bx	lr
 612              		.cfi_endproc
 613              	.LFE123:
 615              		.section	.text.getMagnetXf,"ax",%progbits
 616              		.align	2
 617              		.global	getMagnetXf
 618              		.thumb
 619              		.thumb_func
 621              	getMagnetXf:
 622              	.LFB124:
 146:../LSM9DS1_Driver.c **** 
 147:../LSM9DS1_Driver.c **** float getMagnetXf(void)
 148:../LSM9DS1_Driver.c **** {
 623              		.loc 1 148 0
 624              		.cfi_startproc
 625              		@ args = 0, pretend = 0, frame = 0
 626              		@ frame_needed = 1, uses_anonymous_args = 0
 627              		@ link register save eliminated.
 628 0000 80B4     		push	{r7}
 629              	.LCFI24:
 630              		.cfi_def_cfa_offset 4
 631              		.cfi_offset 7, -4
 632 0002 00AF     		add	r7, sp, #0
 633              	.LCFI25:
 634              		.cfi_def_cfa_register 7
 149:../LSM9DS1_Driver.c **** 	return magnetXf;
 635              		.loc 1 149 0
 636 0004 40F20003 		movw	r3, #:lower16:magnetXf
 637 0008 C0F20003 		movt	r3, #:upper16:magnetXf
 638 000c 1B68     		ldr	r3, [r3, #0]	@ float
 150:../LSM9DS1_Driver.c **** }
 639              		.loc 1 150 0
 640 000e 1846     		mov	r0, r3	@ float
 641 0010 BD46     		mov	sp, r7
 642 0012 80BC     		pop	{r7}
 643 0014 7047     		bx	lr
 644              		.cfi_endproc
 645              	.LFE124:
 647 0016 00BF     		.section	.text.getMagnetX,"ax",%progbits
 648              		.align	2
 649              		.global	getMagnetX
 650              		.thumb
 651              		.thumb_func
 653              	getMagnetX:
 654              	.LFB125:
 151:../LSM9DS1_Driver.c **** 
 152:../LSM9DS1_Driver.c **** int16_t getMagnetX(void)
 153:../LSM9DS1_Driver.c **** {
 655              		.loc 1 153 0
 656              		.cfi_startproc
 657              		@ args = 0, pretend = 0, frame = 0
 658              		@ frame_needed = 1, uses_anonymous_args = 0
 659              		@ link register save eliminated.
 660 0000 80B4     		push	{r7}
 661              	.LCFI26:
 662              		.cfi_def_cfa_offset 4
 663              		.cfi_offset 7, -4
 664 0002 00AF     		add	r7, sp, #0
 665              	.LCFI27:
 666              		.cfi_def_cfa_register 7
 154:../LSM9DS1_Driver.c **** 	return magnetX;
 667              		.loc 1 154 0
 668 0004 40F20003 		movw	r3, #:lower16:magnetX
 669 0008 C0F20003 		movt	r3, #:upper16:magnetX
 670 000c 1B88     		ldrh	r3, [r3, #0]
 671 000e 1BB2     		sxth	r3, r3
 155:../LSM9DS1_Driver.c **** }
 672              		.loc 1 155 0
 673 0010 1846     		mov	r0, r3
 674 0012 BD46     		mov	sp, r7
 675 0014 80BC     		pop	{r7}
 676 0016 7047     		bx	lr
 677              		.cfi_endproc
 678              	.LFE125:
 680              		.section	.text.getMagnetYf,"ax",%progbits
 681              		.align	2
 682              		.global	getMagnetYf
 683              		.thumb
 684              		.thumb_func
 686              	getMagnetYf:
 687              	.LFB126:
 156:../LSM9DS1_Driver.c **** 
 157:../LSM9DS1_Driver.c **** float getMagnetYf(void)
 158:../LSM9DS1_Driver.c **** {
 688              		.loc 1 158 0
 689              		.cfi_startproc
 690              		@ args = 0, pretend = 0, frame = 0
 691              		@ frame_needed = 1, uses_anonymous_args = 0
 692              		@ link register save eliminated.
 693 0000 80B4     		push	{r7}
 694              	.LCFI28:
 695              		.cfi_def_cfa_offset 4
 696              		.cfi_offset 7, -4
 697 0002 00AF     		add	r7, sp, #0
 698              	.LCFI29:
 699              		.cfi_def_cfa_register 7
 159:../LSM9DS1_Driver.c **** 	return magnetYf;
 700              		.loc 1 159 0
 701 0004 40F20003 		movw	r3, #:lower16:magnetYf
 702 0008 C0F20003 		movt	r3, #:upper16:magnetYf
 703 000c 1B68     		ldr	r3, [r3, #0]	@ float
 160:../LSM9DS1_Driver.c **** }
 704              		.loc 1 160 0
 705 000e 1846     		mov	r0, r3	@ float
 706 0010 BD46     		mov	sp, r7
 707 0012 80BC     		pop	{r7}
 708 0014 7047     		bx	lr
 709              		.cfi_endproc
 710              	.LFE126:
 712 0016 00BF     		.section	.text.getMagnetY,"ax",%progbits
 713              		.align	2
 714              		.global	getMagnetY
 715              		.thumb
 716              		.thumb_func
 718              	getMagnetY:
 719              	.LFB127:
 161:../LSM9DS1_Driver.c **** 
 162:../LSM9DS1_Driver.c **** int16_t getMagnetY(void)
 163:../LSM9DS1_Driver.c **** {
 720              		.loc 1 163 0
 721              		.cfi_startproc
 722              		@ args = 0, pretend = 0, frame = 0
 723              		@ frame_needed = 1, uses_anonymous_args = 0
 724              		@ link register save eliminated.
 725 0000 80B4     		push	{r7}
 726              	.LCFI30:
 727              		.cfi_def_cfa_offset 4
 728              		.cfi_offset 7, -4
 729 0002 00AF     		add	r7, sp, #0
 730              	.LCFI31:
 731              		.cfi_def_cfa_register 7
 164:../LSM9DS1_Driver.c **** 	return magnetY;
 732              		.loc 1 164 0
 733 0004 40F20003 		movw	r3, #:lower16:magnetY
 734 0008 C0F20003 		movt	r3, #:upper16:magnetY
 735 000c 1B88     		ldrh	r3, [r3, #0]
 736 000e 1BB2     		sxth	r3, r3
 165:../LSM9DS1_Driver.c **** }
 737              		.loc 1 165 0
 738 0010 1846     		mov	r0, r3
 739 0012 BD46     		mov	sp, r7
 740 0014 80BC     		pop	{r7}
 741 0016 7047     		bx	lr
 742              		.cfi_endproc
 743              	.LFE127:
 745              		.section	.text.getMagnetZf,"ax",%progbits
 746              		.align	2
 747              		.global	getMagnetZf
 748              		.thumb
 749              		.thumb_func
 751              	getMagnetZf:
 752              	.LFB128:
 166:../LSM9DS1_Driver.c **** 
 167:../LSM9DS1_Driver.c **** float getMagnetZf(void)
 168:../LSM9DS1_Driver.c **** {
 753              		.loc 1 168 0
 754              		.cfi_startproc
 755              		@ args = 0, pretend = 0, frame = 0
 756              		@ frame_needed = 1, uses_anonymous_args = 0
 757              		@ link register save eliminated.
 758 0000 80B4     		push	{r7}
 759              	.LCFI32:
 760              		.cfi_def_cfa_offset 4
 761              		.cfi_offset 7, -4
 762 0002 00AF     		add	r7, sp, #0
 763              	.LCFI33:
 764              		.cfi_def_cfa_register 7
 169:../LSM9DS1_Driver.c **** 	return magnetZf;
 765              		.loc 1 169 0
 766 0004 40F20003 		movw	r3, #:lower16:magnetZf
 767 0008 C0F20003 		movt	r3, #:upper16:magnetZf
 768 000c 1B68     		ldr	r3, [r3, #0]	@ float
 170:../LSM9DS1_Driver.c **** }
 769              		.loc 1 170 0
 770 000e 1846     		mov	r0, r3	@ float
 771 0010 BD46     		mov	sp, r7
 772 0012 80BC     		pop	{r7}
 773 0014 7047     		bx	lr
 774              		.cfi_endproc
 775              	.LFE128:
 777 0016 00BF     		.section	.text.getMagnetZ,"ax",%progbits
 778              		.align	2
 779              		.global	getMagnetZ
 780              		.thumb
 781              		.thumb_func
 783              	getMagnetZ:
 784              	.LFB129:
 171:../LSM9DS1_Driver.c **** 
 172:../LSM9DS1_Driver.c **** int16_t getMagnetZ(void)
 173:../LSM9DS1_Driver.c **** {
 785              		.loc 1 173 0
 786              		.cfi_startproc
 787              		@ args = 0, pretend = 0, frame = 0
 788              		@ frame_needed = 1, uses_anonymous_args = 0
 789              		@ link register save eliminated.
 790 0000 80B4     		push	{r7}
 791              	.LCFI34:
 792              		.cfi_def_cfa_offset 4
 793              		.cfi_offset 7, -4
 794 0002 00AF     		add	r7, sp, #0
 795              	.LCFI35:
 796              		.cfi_def_cfa_register 7
 174:../LSM9DS1_Driver.c **** 	return magnetZ;
 797              		.loc 1 174 0
 798 0004 40F20003 		movw	r3, #:lower16:magnetZ
 799 0008 C0F20003 		movt	r3, #:upper16:magnetZ
 800 000c 1B88     		ldrh	r3, [r3, #0]
 801 000e 1BB2     		sxth	r3, r3
 175:../LSM9DS1_Driver.c **** }
 802              		.loc 1 175 0
 803 0010 1846     		mov	r0, r3
 804 0012 BD46     		mov	sp, r7
 805 0014 80BC     		pop	{r7}
 806 0016 7047     		bx	lr
 807              		.cfi_endproc
 808              	.LFE129:
 810              		.section	.text.startMeasurements,"ax",%progbits
 811              		.align	2
 812              		.global	startMeasurements
 813              		.thumb
 814              		.thumb_func
 816              	startMeasurements:
 817              	.LFB130:
 176:../LSM9DS1_Driver.c **** 
 177:../LSM9DS1_Driver.c **** void startMeasurements(void)
 178:../LSM9DS1_Driver.c **** {
 818              		.loc 1 178 0
 819              		.cfi_startproc
 820              		@ args = 0, pretend = 0, frame = 0
 821              		@ frame_needed = 1, uses_anonymous_args = 0
 822 0000 80B5     		push	{r7, lr}
 823              	.LCFI36:
 824              		.cfi_def_cfa_offset 8
 825              		.cfi_offset 7, -8
 826              		.cfi_offset 14, -4
 827 0002 00AF     		add	r7, sp, #0
 828              	.LCFI37:
 829              		.cfi_def_cfa_register 7
 179:../LSM9DS1_Driver.c **** 	TimerIdReadMeasurements=SYSTM001_CreateTimer(35,SYSTM001_PERIODIC,timerHandlerReceiveOneMeasuremen
 830              		.loc 1 179 0
 831 0004 4FF02300 		mov	r0, #35
 832 0008 4FF00101 		mov	r1, #1
 833 000c 40F20002 		movw	r2, #:lower16:timerHandlerReceiveOneMeasurementEachSensor
 834 0010 C0F20002 		movt	r2, #:upper16:timerHandlerReceiveOneMeasurementEachSensor
 835 0014 40F20003 		movw	r3, #:lower16:adrAndData
 836 0018 C0F20003 		movt	r3, #:upper16:adrAndData
 837 001c FFF7FEFF 		bl	SYSTM001_CreateTimer
 838 0020 0246     		mov	r2, r0
 839 0022 40F20003 		movw	r3, #:lower16:TimerIdReadMeasurements
 840 0026 C0F20003 		movt	r3, #:upper16:TimerIdReadMeasurements
 841 002a 1A60     		str	r2, [r3, #0]
 180:../LSM9DS1_Driver.c **** 	SYSTM001_StartTimer(TimerIdReadMeasurements);
 842              		.loc 1 180 0
 843 002c 40F20003 		movw	r3, #:lower16:TimerIdReadMeasurements
 844 0030 C0F20003 		movt	r3, #:upper16:TimerIdReadMeasurements
 845 0034 1B68     		ldr	r3, [r3, #0]
 846 0036 1846     		mov	r0, r3
 847 0038 FFF7FEFF 		bl	SYSTM001_StartTimer
 181:../LSM9DS1_Driver.c **** }
 848              		.loc 1 181 0
 849 003c 80BD     		pop	{r7, pc}
 850              		.cfi_endproc
 851              	.LFE130:
 853 003e 00BF     		.section	.text.readAndSendMeasurements,"ax",%progbits
 854              		.align	2
 855              		.global	readAndSendMeasurements
 856              		.thumb
 857              		.thumb_func
 859              	readAndSendMeasurements:
 860              	.LFB131:
 182:../LSM9DS1_Driver.c **** 
 183:../LSM9DS1_Driver.c **** 
 184:../LSM9DS1_Driver.c **** 
 185:../LSM9DS1_Driver.c **** void readAndSendMeasurements(void (*sendFunction)(char *str, int len))
 186:../LSM9DS1_Driver.c **** {
 861              		.loc 1 186 0
 862              		.cfi_startproc
 863              		@ args = 0, pretend = 0, frame = 16
 864              		@ frame_needed = 1, uses_anonymous_args = 0
 865 0000 80B5     		push	{r7, lr}
 866              	.LCFI38:
 867              		.cfi_def_cfa_offset 8
 868              		.cfi_offset 7, -8
 869              		.cfi_offset 14, -4
 870 0002 84B0     		sub	sp, sp, #16
 871              	.LCFI39:
 872              		.cfi_def_cfa_offset 24
 873 0004 00AF     		add	r7, sp, #0
 874              	.LCFI40:
 875              		.cfi_def_cfa_register 7
 876 0006 7860     		str	r0, [r7, #4]
 187:../LSM9DS1_Driver.c **** 	if(!readingAllowed && (counter < 1))
 877              		.loc 1 187 0
 878 0008 40F20003 		movw	r3, #:lower16:readingAllowed
 879 000c C0F20003 		movt	r3, #:upper16:readingAllowed
 880 0010 1B78     		ldrb	r3, [r3, #0]
 881 0012 DBB2     		uxtb	r3, r3
 882 0014 002B     		cmp	r3, #0
 883 0016 40F02083 		bne	.L39
 884              		.loc 1 187 0 is_stmt 0 discriminator 1
 885 001a 40F20003 		movw	r3, #:lower16:counter
 886 001e C0F20003 		movt	r3, #:upper16:counter
 887 0022 1B68     		ldr	r3, [r3, #0]
 888 0024 002B     		cmp	r3, #0
 889 0026 00F31883 		bgt	.L39
 188:../LSM9DS1_Driver.c **** 	{
 189:../LSM9DS1_Driver.c **** 
 190:../LSM9DS1_Driver.c **** 		accelX = (adrAndData.dane[1] << 8) | adrAndData.dane[0]; // Store x-axis values into gx
 890              		.loc 1 190 0 is_stmt 1
 891 002a 40F20003 		movw	r3, #:lower16:adrAndData
 892 002e C0F20003 		movt	r3, #:upper16:adrAndData
 893 0032 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 894 0034 4FEA0323 		lsl	r3, r3, #8
 895 0038 9AB2     		uxth	r2, r3
 896 003a 40F20003 		movw	r3, #:lower16:adrAndData
 897 003e C0F20003 		movt	r3, #:upper16:adrAndData
 898 0042 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 899 0044 1343     		orrs	r3, r3, r2
 900 0046 9AB2     		uxth	r2, r3
 901 0048 40F20003 		movw	r3, #:lower16:accelX
 902 004c C0F20003 		movt	r3, #:upper16:accelX
 903 0050 1A80     		strh	r2, [r3, #0]	@ movhi
 191:../LSM9DS1_Driver.c **** 
 192:../LSM9DS1_Driver.c **** 		accelY = (adrAndData.dane[3] << 8) | adrAndData.dane[2]; // Store y-axis values into gy
 904              		.loc 1 192 0
 905 0052 40F20003 		movw	r3, #:lower16:adrAndData
 906 0056 C0F20003 		movt	r3, #:upper16:adrAndData
 907 005a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 908 005c 4FEA0323 		lsl	r3, r3, #8
 909 0060 9AB2     		uxth	r2, r3
 910 0062 40F20003 		movw	r3, #:lower16:adrAndData
 911 0066 C0F20003 		movt	r3, #:upper16:adrAndData
 912 006a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 913 006c 1343     		orrs	r3, r3, r2
 914 006e 9AB2     		uxth	r2, r3
 915 0070 40F20003 		movw	r3, #:lower16:accelY
 916 0074 C0F20003 		movt	r3, #:upper16:accelY
 917 0078 1A80     		strh	r2, [r3, #0]	@ movhi
 193:../LSM9DS1_Driver.c **** 
 194:../LSM9DS1_Driver.c **** 		accelZ = (adrAndData.dane[5] << 8) | adrAndData.dane[4]; // Store z-axis values into gz
 918              		.loc 1 194 0
 919 007a 40F20003 		movw	r3, #:lower16:adrAndData
 920 007e C0F20003 		movt	r3, #:upper16:adrAndData
 921 0082 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 922 0084 4FEA0323 		lsl	r3, r3, #8
 923 0088 9AB2     		uxth	r2, r3
 924 008a 40F20003 		movw	r3, #:lower16:adrAndData
 925 008e C0F20003 		movt	r3, #:upper16:adrAndData
 926 0092 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 927 0094 1343     		orrs	r3, r3, r2
 928 0096 9AB2     		uxth	r2, r3
 929 0098 40F20003 		movw	r3, #:lower16:accelZ
 930 009c C0F20003 		movt	r3, #:upper16:accelZ
 931 00a0 1A80     		strh	r2, [r3, #0]	@ movhi
 195:../LSM9DS1_Driver.c **** 
 196:../LSM9DS1_Driver.c **** 		if (_autoCalc) //kalibracja
 932              		.loc 1 196 0
 933 00a2 40F20003 		movw	r3, #:lower16:_autoCalc
 934 00a6 C0F20003 		movt	r3, #:upper16:_autoCalc
 935 00aa 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 936 00ac 002B     		cmp	r3, #0
 937 00ae 3BD0     		beq	.L40
 197:../LSM9DS1_Driver.c **** 		{
 198:../LSM9DS1_Driver.c **** 			accelX -= aBiasRaw[X_AXIS];
 938              		.loc 1 198 0
 939 00b0 40F20003 		movw	r3, #:lower16:accelX
 940 00b4 C0F20003 		movt	r3, #:upper16:accelX
 941 00b8 1B88     		ldrh	r3, [r3, #0]
 942 00ba 9AB2     		uxth	r2, r3
 943 00bc 40F20003 		movw	r3, #:lower16:aBiasRaw
 944 00c0 C0F20003 		movt	r3, #:upper16:aBiasRaw
 945 00c4 1B88     		ldrh	r3, [r3, #0]
 946 00c6 9BB2     		uxth	r3, r3
 947 00c8 D31A     		subs	r3, r2, r3
 948 00ca 9BB2     		uxth	r3, r3
 949 00cc 9AB2     		uxth	r2, r3
 950 00ce 40F20003 		movw	r3, #:lower16:accelX
 951 00d2 C0F20003 		movt	r3, #:upper16:accelX
 952 00d6 1A80     		strh	r2, [r3, #0]	@ movhi
 199:../LSM9DS1_Driver.c **** 			accelX -= aBiasRaw[Y_AXIS];
 953              		.loc 1 199 0
 954 00d8 40F20003 		movw	r3, #:lower16:accelX
 955 00dc C0F20003 		movt	r3, #:upper16:accelX
 956 00e0 1B88     		ldrh	r3, [r3, #0]
 957 00e2 9AB2     		uxth	r2, r3
 958 00e4 40F20003 		movw	r3, #:lower16:aBiasRaw
 959 00e8 C0F20003 		movt	r3, #:upper16:aBiasRaw
 960 00ec 5B88     		ldrh	r3, [r3, #2]
 961 00ee 9BB2     		uxth	r3, r3
 962 00f0 D31A     		subs	r3, r2, r3
 963 00f2 9BB2     		uxth	r3, r3
 964 00f4 9AB2     		uxth	r2, r3
 965 00f6 40F20003 		movw	r3, #:lower16:accelX
 966 00fa C0F20003 		movt	r3, #:upper16:accelX
 967 00fe 1A80     		strh	r2, [r3, #0]	@ movhi
 200:../LSM9DS1_Driver.c **** 			accelX -= aBiasRaw[Z_AXIS];
 968              		.loc 1 200 0
 969 0100 40F20003 		movw	r3, #:lower16:accelX
 970 0104 C0F20003 		movt	r3, #:upper16:accelX
 971 0108 1B88     		ldrh	r3, [r3, #0]
 972 010a 9AB2     		uxth	r2, r3
 973 010c 40F20003 		movw	r3, #:lower16:aBiasRaw
 974 0110 C0F20003 		movt	r3, #:upper16:aBiasRaw
 975 0114 9B88     		ldrh	r3, [r3, #4]
 976 0116 9BB2     		uxth	r3, r3
 977 0118 D31A     		subs	r3, r2, r3
 978 011a 9BB2     		uxth	r3, r3
 979 011c 9AB2     		uxth	r2, r3
 980 011e 40F20003 		movw	r3, #:lower16:accelX
 981 0122 C0F20003 		movt	r3, #:upper16:accelX
 982 0126 1A80     		strh	r2, [r3, #0]	@ movhi
 983              	.L40:
 201:../LSM9DS1_Driver.c **** 		}
 202:../LSM9DS1_Driver.c **** 
 203:../LSM9DS1_Driver.c **** 		accelXf = calcAccel(accelX);
 984              		.loc 1 203 0
 985 0128 40F20003 		movw	r3, #:lower16:accelX
 986 012c C0F20003 		movt	r3, #:upper16:accelX
 987 0130 1B88     		ldrh	r3, [r3, #0]
 988 0132 1BB2     		sxth	r3, r3
 989 0134 1846     		mov	r0, r3
 990 0136 FFF7FEFF 		bl	calcAccel
 991 013a 0246     		mov	r2, r0	@ float
 992 013c 40F20003 		movw	r3, #:lower16:accelXf
 993 0140 C0F20003 		movt	r3, #:upper16:accelXf
 994 0144 1A60     		str	r2, [r3, #0]	@ float
 204:../LSM9DS1_Driver.c **** 		accelYf = calcAccel(accelY);
 995              		.loc 1 204 0
 996 0146 40F20003 		movw	r3, #:lower16:accelY
 997 014a C0F20003 		movt	r3, #:upper16:accelY
 998 014e 1B88     		ldrh	r3, [r3, #0]
 999 0150 1BB2     		sxth	r3, r3
 1000 0152 1846     		mov	r0, r3
 1001 0154 FFF7FEFF 		bl	calcAccel
 1002 0158 0246     		mov	r2, r0	@ float
 1003 015a 40F20003 		movw	r3, #:lower16:accelYf
 1004 015e C0F20003 		movt	r3, #:upper16:accelYf
 1005 0162 1A60     		str	r2, [r3, #0]	@ float
 205:../LSM9DS1_Driver.c **** 		accelZf = calcAccel(accelZ);
 1006              		.loc 1 205 0
 1007 0164 40F20003 		movw	r3, #:lower16:accelZ
 1008 0168 C0F20003 		movt	r3, #:upper16:accelZ
 1009 016c 1B88     		ldrh	r3, [r3, #0]
 1010 016e 1BB2     		sxth	r3, r3
 1011 0170 1846     		mov	r0, r3
 1012 0172 FFF7FEFF 		bl	calcAccel
 1013 0176 0246     		mov	r2, r0	@ float
 1014 0178 40F20003 		movw	r3, #:lower16:accelZf
 1015 017c C0F20003 		movt	r3, #:upper16:accelZf
 1016 0180 1A60     		str	r2, [r3, #0]	@ float
 206:../LSM9DS1_Driver.c **** 
 207:../LSM9DS1_Driver.c **** 		accelX = calcAccel(accelX);
 1017              		.loc 1 207 0
 1018 0182 40F20003 		movw	r3, #:lower16:accelX
 1019 0186 C0F20003 		movt	r3, #:upper16:accelX
 1020 018a 1B88     		ldrh	r3, [r3, #0]
 1021 018c 1BB2     		sxth	r3, r3
 1022 018e 1846     		mov	r0, r3
 1023 0190 FFF7FEFF 		bl	calcAccel
 1024 0194 07EE900A 		fmsr	s15, r0
 1025 0198 FDEEE77A 		ftosizs	s15, s15
 1026 019c 17EE903A 		fmrs	r3, s15	@ int
 1027 01a0 9AB2     		uxth	r2, r3
 1028 01a2 40F20003 		movw	r3, #:lower16:accelX
 1029 01a6 C0F20003 		movt	r3, #:upper16:accelX
 1030 01aa 1A80     		strh	r2, [r3, #0]	@ movhi
 208:../LSM9DS1_Driver.c **** 		accelY = calcAccel(accelY);
 1031              		.loc 1 208 0
 1032 01ac 40F20003 		movw	r3, #:lower16:accelY
 1033 01b0 C0F20003 		movt	r3, #:upper16:accelY
 1034 01b4 1B88     		ldrh	r3, [r3, #0]
 1035 01b6 1BB2     		sxth	r3, r3
 1036 01b8 1846     		mov	r0, r3
 1037 01ba FFF7FEFF 		bl	calcAccel
 1038 01be 07EE900A 		fmsr	s15, r0
 1039 01c2 FDEEE77A 		ftosizs	s15, s15
 1040 01c6 17EE903A 		fmrs	r3, s15	@ int
 1041 01ca 9AB2     		uxth	r2, r3
 1042 01cc 40F20003 		movw	r3, #:lower16:accelY
 1043 01d0 C0F20003 		movt	r3, #:upper16:accelY
 1044 01d4 1A80     		strh	r2, [r3, #0]	@ movhi
 209:../LSM9DS1_Driver.c **** 		accelZ = calcAccel(accelZ);
 1045              		.loc 1 209 0
 1046 01d6 40F20003 		movw	r3, #:lower16:accelZ
 1047 01da C0F20003 		movt	r3, #:upper16:accelZ
 1048 01de 1B88     		ldrh	r3, [r3, #0]
 1049 01e0 1BB2     		sxth	r3, r3
 1050 01e2 1846     		mov	r0, r3
 1051 01e4 FFF7FEFF 		bl	calcAccel
 1052 01e8 07EE900A 		fmsr	s15, r0
 1053 01ec FDEEE77A 		ftosizs	s15, s15
 1054 01f0 17EE903A 		fmrs	r3, s15	@ int
 1055 01f4 9AB2     		uxth	r2, r3
 1056 01f6 40F20003 		movw	r3, #:lower16:accelZ
 1057 01fa C0F20003 		movt	r3, #:upper16:accelZ
 1058 01fe 1A80     		strh	r2, [r3, #0]	@ movhi
 210:../LSM9DS1_Driver.c **** 
 211:../LSM9DS1_Driver.c **** 
 212:../LSM9DS1_Driver.c **** 		pomiaryAccel[counter].ax = accelX;
 1059              		.loc 1 212 0
 1060 0200 40F20003 		movw	r3, #:lower16:counter
 1061 0204 C0F20003 		movt	r3, #:upper16:counter
 1062 0208 1968     		ldr	r1, [r3, #0]
 1063 020a 40F20003 		movw	r3, #:lower16:accelX
 1064 020e C0F20003 		movt	r3, #:upper16:accelX
 1065 0212 1888     		ldrh	r0, [r3, #0]
 1066 0214 40F20002 		movw	r2, #:lower16:pomiaryAccel
 1067 0218 C0F20002 		movt	r2, #:upper16:pomiaryAccel
 1068 021c 0B46     		mov	r3, r1
 1069 021e 4FEA4303 		lsl	r3, r3, #1
 1070 0222 5B18     		adds	r3, r3, r1
 1071 0224 4FEA8303 		lsl	r3, r3, #2
 1072 0228 D318     		adds	r3, r2, r3
 1073 022a 0246     		mov	r2, r0	@ movhi
 1074 022c 1A80     		strh	r2, [r3, #0]	@ movhi
 213:../LSM9DS1_Driver.c **** 		pomiaryAccel[counter].ay = accelY;
 1075              		.loc 1 213 0
 1076 022e 40F20003 		movw	r3, #:lower16:counter
 1077 0232 C0F20003 		movt	r3, #:upper16:counter
 1078 0236 1968     		ldr	r1, [r3, #0]
 1079 0238 40F20003 		movw	r3, #:lower16:accelY
 1080 023c C0F20003 		movt	r3, #:upper16:accelY
 1081 0240 1888     		ldrh	r0, [r3, #0]
 1082 0242 40F20002 		movw	r2, #:lower16:pomiaryAccel
 1083 0246 C0F20002 		movt	r2, #:upper16:pomiaryAccel
 1084 024a 0B46     		mov	r3, r1
 1085 024c 4FEA4303 		lsl	r3, r3, #1
 1086 0250 5B18     		adds	r3, r3, r1
 1087 0252 4FEA8303 		lsl	r3, r3, #2
 1088 0256 D318     		adds	r3, r2, r3
 1089 0258 0246     		mov	r2, r0	@ movhi
 1090 025a 5A80     		strh	r2, [r3, #2]	@ movhi
 214:../LSM9DS1_Driver.c **** 		pomiaryAccel[counter].az = accelZ;
 1091              		.loc 1 214 0
 1092 025c 40F20003 		movw	r3, #:lower16:counter
 1093 0260 C0F20003 		movt	r3, #:upper16:counter
 1094 0264 1968     		ldr	r1, [r3, #0]
 1095 0266 40F20003 		movw	r3, #:lower16:accelZ
 1096 026a C0F20003 		movt	r3, #:upper16:accelZ
 1097 026e 1888     		ldrh	r0, [r3, #0]
 1098 0270 40F20002 		movw	r2, #:lower16:pomiaryAccel
 1099 0274 C0F20002 		movt	r2, #:upper16:pomiaryAccel
 1100 0278 0B46     		mov	r3, r1
 1101 027a 4FEA4303 		lsl	r3, r3, #1
 1102 027e 5B18     		adds	r3, r3, r1
 1103 0280 4FEA8303 		lsl	r3, r3, #2
 1104 0284 D318     		adds	r3, r2, r3
 1105 0286 0246     		mov	r2, r0	@ movhi
 1106 0288 9A80     		strh	r2, [r3, #4]	@ movhi
 215:../LSM9DS1_Driver.c **** 
 216:../LSM9DS1_Driver.c **** 
 217:../LSM9DS1_Driver.c **** 		gyroX = (adrAndData.dane[7] << 1) | adrAndData.dane[6];
 1107              		.loc 1 217 0
 1108 028a 40F20003 		movw	r3, #:lower16:adrAndData
 1109 028e C0F20003 		movt	r3, #:upper16:adrAndData
 1110 0292 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 1111 0294 4FEA4303 		lsl	r3, r3, #1
 1112 0298 9AB2     		uxth	r2, r3
 1113 029a 40F20003 		movw	r3, #:lower16:adrAndData
 1114 029e C0F20003 		movt	r3, #:upper16:adrAndData
 1115 02a2 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 1116 02a4 1343     		orrs	r3, r3, r2
 1117 02a6 9AB2     		uxth	r2, r3
 1118 02a8 40F20003 		movw	r3, #:lower16:gyroX
 1119 02ac C0F20003 		movt	r3, #:upper16:gyroX
 1120 02b0 1A80     		strh	r2, [r3, #0]	@ movhi
 218:../LSM9DS1_Driver.c **** 
 219:../LSM9DS1_Driver.c **** 		gyroY = (adrAndData.dane[9] << 1) | adrAndData.dane[8];
 1121              		.loc 1 219 0
 1122 02b2 40F20003 		movw	r3, #:lower16:adrAndData
 1123 02b6 C0F20003 		movt	r3, #:upper16:adrAndData
 1124 02ba 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 1125 02bc 4FEA4303 		lsl	r3, r3, #1
 1126 02c0 9AB2     		uxth	r2, r3
 1127 02c2 40F20003 		movw	r3, #:lower16:adrAndData
 1128 02c6 C0F20003 		movt	r3, #:upper16:adrAndData
 1129 02ca 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 1130 02cc 1343     		orrs	r3, r3, r2
 1131 02ce 9AB2     		uxth	r2, r3
 1132 02d0 40F20003 		movw	r3, #:lower16:gyroY
 1133 02d4 C0F20003 		movt	r3, #:upper16:gyroY
 1134 02d8 1A80     		strh	r2, [r3, #0]	@ movhi
 220:../LSM9DS1_Driver.c **** 
 221:../LSM9DS1_Driver.c **** 		gyroZ = (adrAndData.dane[11] << 1) | adrAndData.dane[10];
 1135              		.loc 1 221 0
 1136 02da 40F20003 		movw	r3, #:lower16:adrAndData
 1137 02de C0F20003 		movt	r3, #:upper16:adrAndData
 1138 02e2 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 1139 02e4 4FEA4303 		lsl	r3, r3, #1
 1140 02e8 9AB2     		uxth	r2, r3
 1141 02ea 40F20003 		movw	r3, #:lower16:adrAndData
 1142 02ee C0F20003 		movt	r3, #:upper16:adrAndData
 1143 02f2 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 1144 02f4 1343     		orrs	r3, r3, r2
 1145 02f6 9AB2     		uxth	r2, r3
 1146 02f8 40F20003 		movw	r3, #:lower16:gyroZ
 1147 02fc C0F20003 		movt	r3, #:upper16:gyroZ
 1148 0300 1A80     		strh	r2, [r3, #0]	@ movhi
 222:../LSM9DS1_Driver.c **** 
 223:../LSM9DS1_Driver.c **** 
 224:../LSM9DS1_Driver.c **** 		if (_autoCalc) //kalibracja
 1149              		.loc 1 224 0
 1150 0302 40F20003 		movw	r3, #:lower16:_autoCalc
 1151 0306 C0F20003 		movt	r3, #:upper16:_autoCalc
 1152 030a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1153 030c 002B     		cmp	r3, #0
 1154 030e 3BD0     		beq	.L41
 225:../LSM9DS1_Driver.c **** 		{
 226:../LSM9DS1_Driver.c **** 			gyroX -= gBiasRaw[X_AXIS];
 1155              		.loc 1 226 0
 1156 0310 40F20003 		movw	r3, #:lower16:gyroX
 1157 0314 C0F20003 		movt	r3, #:upper16:gyroX
 1158 0318 1B88     		ldrh	r3, [r3, #0]
 1159 031a 9AB2     		uxth	r2, r3
 1160 031c 40F20003 		movw	r3, #:lower16:gBiasRaw
 1161 0320 C0F20003 		movt	r3, #:upper16:gBiasRaw
 1162 0324 1B88     		ldrh	r3, [r3, #0]
 1163 0326 9BB2     		uxth	r3, r3
 1164 0328 D31A     		subs	r3, r2, r3
 1165 032a 9BB2     		uxth	r3, r3
 1166 032c 9AB2     		uxth	r2, r3
 1167 032e 40F20003 		movw	r3, #:lower16:gyroX
 1168 0332 C0F20003 		movt	r3, #:upper16:gyroX
 1169 0336 1A80     		strh	r2, [r3, #0]	@ movhi
 227:../LSM9DS1_Driver.c **** 			gyroY -= gBiasRaw[Y_AXIS];
 1170              		.loc 1 227 0
 1171 0338 40F20003 		movw	r3, #:lower16:gyroY
 1172 033c C0F20003 		movt	r3, #:upper16:gyroY
 1173 0340 1B88     		ldrh	r3, [r3, #0]
 1174 0342 9AB2     		uxth	r2, r3
 1175 0344 40F20003 		movw	r3, #:lower16:gBiasRaw
 1176 0348 C0F20003 		movt	r3, #:upper16:gBiasRaw
 1177 034c 5B88     		ldrh	r3, [r3, #2]
 1178 034e 9BB2     		uxth	r3, r3
 1179 0350 D31A     		subs	r3, r2, r3
 1180 0352 9BB2     		uxth	r3, r3
 1181 0354 9AB2     		uxth	r2, r3
 1182 0356 40F20003 		movw	r3, #:lower16:gyroY
 1183 035a C0F20003 		movt	r3, #:upper16:gyroY
 1184 035e 1A80     		strh	r2, [r3, #0]	@ movhi
 228:../LSM9DS1_Driver.c **** 			gyroZ -= gBiasRaw[Z_AXIS];
 1185              		.loc 1 228 0
 1186 0360 40F20003 		movw	r3, #:lower16:gyroZ
 1187 0364 C0F20003 		movt	r3, #:upper16:gyroZ
 1188 0368 1B88     		ldrh	r3, [r3, #0]
 1189 036a 9AB2     		uxth	r2, r3
 1190 036c 40F20003 		movw	r3, #:lower16:gBiasRaw
 1191 0370 C0F20003 		movt	r3, #:upper16:gBiasRaw
 1192 0374 9B88     		ldrh	r3, [r3, #4]
 1193 0376 9BB2     		uxth	r3, r3
 1194 0378 D31A     		subs	r3, r2, r3
 1195 037a 9BB2     		uxth	r3, r3
 1196 037c 9AB2     		uxth	r2, r3
 1197 037e 40F20003 		movw	r3, #:lower16:gyroZ
 1198 0382 C0F20003 		movt	r3, #:upper16:gyroZ
 1199 0386 1A80     		strh	r2, [r3, #0]	@ movhi
 1200              	.L41:
 229:../LSM9DS1_Driver.c **** 		}
 230:../LSM9DS1_Driver.c **** 
 231:../LSM9DS1_Driver.c **** 		gyroXf = calcGyro(gyroX);
 1201              		.loc 1 231 0
 1202 0388 40F20003 		movw	r3, #:lower16:gyroX
 1203 038c C0F20003 		movt	r3, #:upper16:gyroX
 1204 0390 1B88     		ldrh	r3, [r3, #0]
 1205 0392 1BB2     		sxth	r3, r3
 1206 0394 1846     		mov	r0, r3
 1207 0396 FFF7FEFF 		bl	calcGyro
 1208 039a 0246     		mov	r2, r0	@ float
 1209 039c 40F20003 		movw	r3, #:lower16:gyroXf
 1210 03a0 C0F20003 		movt	r3, #:upper16:gyroXf
 1211 03a4 1A60     		str	r2, [r3, #0]	@ float
 232:../LSM9DS1_Driver.c **** 		gyroYf = calcGyro(gyroY);
 1212              		.loc 1 232 0
 1213 03a6 40F20003 		movw	r3, #:lower16:gyroY
 1214 03aa C0F20003 		movt	r3, #:upper16:gyroY
 1215 03ae 1B88     		ldrh	r3, [r3, #0]
 1216 03b0 1BB2     		sxth	r3, r3
 1217 03b2 1846     		mov	r0, r3
 1218 03b4 FFF7FEFF 		bl	calcGyro
 1219 03b8 0246     		mov	r2, r0	@ float
 1220 03ba 40F20003 		movw	r3, #:lower16:gyroYf
 1221 03be C0F20003 		movt	r3, #:upper16:gyroYf
 1222 03c2 1A60     		str	r2, [r3, #0]	@ float
 233:../LSM9DS1_Driver.c **** 		gyroZf = calcGyro(gyroZ);
 1223              		.loc 1 233 0
 1224 03c4 40F20003 		movw	r3, #:lower16:gyroZ
 1225 03c8 C0F20003 		movt	r3, #:upper16:gyroZ
 1226 03cc 1B88     		ldrh	r3, [r3, #0]
 1227 03ce 1BB2     		sxth	r3, r3
 1228 03d0 1846     		mov	r0, r3
 1229 03d2 FFF7FEFF 		bl	calcGyro
 1230 03d6 0246     		mov	r2, r0	@ float
 1231 03d8 40F20003 		movw	r3, #:lower16:gyroZf
 1232 03dc C0F20003 		movt	r3, #:upper16:gyroZf
 1233 03e0 1A60     		str	r2, [r3, #0]	@ float
 234:../LSM9DS1_Driver.c **** 
 235:../LSM9DS1_Driver.c **** 		gyroX = calcGyro(gyroX);
 1234              		.loc 1 235 0
 1235 03e2 40F20003 		movw	r3, #:lower16:gyroX
 1236 03e6 C0F20003 		movt	r3, #:upper16:gyroX
 1237 03ea 1B88     		ldrh	r3, [r3, #0]
 1238 03ec 1BB2     		sxth	r3, r3
 1239 03ee 1846     		mov	r0, r3
 1240 03f0 FFF7FEFF 		bl	calcGyro
 1241 03f4 07EE900A 		fmsr	s15, r0
 1242 03f8 FDEEE77A 		ftosizs	s15, s15
 1243 03fc 17EE903A 		fmrs	r3, s15	@ int
 1244 0400 9AB2     		uxth	r2, r3
 1245 0402 40F20003 		movw	r3, #:lower16:gyroX
 1246 0406 C0F20003 		movt	r3, #:upper16:gyroX
 1247 040a 1A80     		strh	r2, [r3, #0]	@ movhi
 236:../LSM9DS1_Driver.c **** 		gyroY = calcGyro(gyroY);
 1248              		.loc 1 236 0
 1249 040c 40F20003 		movw	r3, #:lower16:gyroY
 1250 0410 C0F20003 		movt	r3, #:upper16:gyroY
 1251 0414 1B88     		ldrh	r3, [r3, #0]
 1252 0416 1BB2     		sxth	r3, r3
 1253 0418 1846     		mov	r0, r3
 1254 041a FFF7FEFF 		bl	calcGyro
 1255 041e 07EE900A 		fmsr	s15, r0
 1256 0422 FDEEE77A 		ftosizs	s15, s15
 1257 0426 17EE903A 		fmrs	r3, s15	@ int
 1258 042a 9AB2     		uxth	r2, r3
 1259 042c 40F20003 		movw	r3, #:lower16:gyroY
 1260 0430 C0F20003 		movt	r3, #:upper16:gyroY
 1261 0434 1A80     		strh	r2, [r3, #0]	@ movhi
 237:../LSM9DS1_Driver.c **** 		gyroZ = calcGyro(gyroZ);
 1262              		.loc 1 237 0
 1263 0436 40F20003 		movw	r3, #:lower16:gyroZ
 1264 043a C0F20003 		movt	r3, #:upper16:gyroZ
 1265 043e 1B88     		ldrh	r3, [r3, #0]
 1266 0440 1BB2     		sxth	r3, r3
 1267 0442 1846     		mov	r0, r3
 1268 0444 FFF7FEFF 		bl	calcGyro
 1269 0448 07EE900A 		fmsr	s15, r0
 1270 044c FDEEE77A 		ftosizs	s15, s15
 1271 0450 17EE903A 		fmrs	r3, s15	@ int
 1272 0454 9AB2     		uxth	r2, r3
 1273 0456 40F20003 		movw	r3, #:lower16:gyroZ
 1274 045a C0F20003 		movt	r3, #:upper16:gyroZ
 1275 045e 1A80     		strh	r2, [r3, #0]	@ movhi
 238:../LSM9DS1_Driver.c **** 
 239:../LSM9DS1_Driver.c **** 		pomiaryAccel[counter].gx = gyroX;
 1276              		.loc 1 239 0
 1277 0460 40F20003 		movw	r3, #:lower16:counter
 1278 0464 C0F20003 		movt	r3, #:upper16:counter
 1279 0468 1968     		ldr	r1, [r3, #0]
 1280 046a 40F20003 		movw	r3, #:lower16:gyroX
 1281 046e C0F20003 		movt	r3, #:upper16:gyroX
 1282 0472 1888     		ldrh	r0, [r3, #0]
 1283 0474 40F20002 		movw	r2, #:lower16:pomiaryAccel
 1284 0478 C0F20002 		movt	r2, #:upper16:pomiaryAccel
 1285 047c 0B46     		mov	r3, r1
 1286 047e 4FEA4303 		lsl	r3, r3, #1
 1287 0482 5B18     		adds	r3, r3, r1
 1288 0484 4FEA8303 		lsl	r3, r3, #2
 1289 0488 D318     		adds	r3, r2, r3
 1290 048a 0246     		mov	r2, r0	@ movhi
 1291 048c DA80     		strh	r2, [r3, #6]	@ movhi
 240:../LSM9DS1_Driver.c **** 		pomiaryAccel[counter].gy = gyroY;
 1292              		.loc 1 240 0
 1293 048e 40F20003 		movw	r3, #:lower16:counter
 1294 0492 C0F20003 		movt	r3, #:upper16:counter
 1295 0496 1968     		ldr	r1, [r3, #0]
 1296 0498 40F20003 		movw	r3, #:lower16:gyroY
 1297 049c C0F20003 		movt	r3, #:upper16:gyroY
 1298 04a0 1888     		ldrh	r0, [r3, #0]
 1299 04a2 40F20002 		movw	r2, #:lower16:pomiaryAccel
 1300 04a6 C0F20002 		movt	r2, #:upper16:pomiaryAccel
 1301 04aa 0B46     		mov	r3, r1
 1302 04ac 4FEA4303 		lsl	r3, r3, #1
 1303 04b0 5B18     		adds	r3, r3, r1
 1304 04b2 4FEA8303 		lsl	r3, r3, #2
 1305 04b6 D318     		adds	r3, r2, r3
 1306 04b8 03F10803 		add	r3, r3, #8
 1307 04bc 0246     		mov	r2, r0	@ movhi
 1308 04be 1A80     		strh	r2, [r3, #0]	@ movhi
 241:../LSM9DS1_Driver.c **** 		pomiaryAccel[counter].gz = gyroZ;
 1309              		.loc 1 241 0
 1310 04c0 40F20003 		movw	r3, #:lower16:counter
 1311 04c4 C0F20003 		movt	r3, #:upper16:counter
 1312 04c8 1968     		ldr	r1, [r3, #0]
 1313 04ca 40F20003 		movw	r3, #:lower16:gyroZ
 1314 04ce C0F20003 		movt	r3, #:upper16:gyroZ
 1315 04d2 1888     		ldrh	r0, [r3, #0]
 1316 04d4 40F20002 		movw	r2, #:lower16:pomiaryAccel
 1317 04d8 C0F20002 		movt	r2, #:upper16:pomiaryAccel
 1318 04dc 0B46     		mov	r3, r1
 1319 04de 4FEA4303 		lsl	r3, r3, #1
 1320 04e2 5B18     		adds	r3, r3, r1
 1321 04e4 4FEA8303 		lsl	r3, r3, #2
 1322 04e8 D318     		adds	r3, r2, r3
 1323 04ea 03F10803 		add	r3, r3, #8
 1324 04ee 0246     		mov	r2, r0	@ movhi
 1325 04f0 5A80     		strh	r2, [r3, #2]	@ movhi
 242:../LSM9DS1_Driver.c **** 
 243:../LSM9DS1_Driver.c **** 
 244:../LSM9DS1_Driver.c **** 
 245:../LSM9DS1_Driver.c **** 		magnetX = (adrAndData.dane[13] << 1) | adrAndData.dane[12];
 1326              		.loc 1 245 0
 1327 04f2 40F20003 		movw	r3, #:lower16:adrAndData
 1328 04f6 C0F20003 		movt	r3, #:upper16:adrAndData
 1329 04fa 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 1330 04fc 4FEA4303 		lsl	r3, r3, #1
 1331 0500 9AB2     		uxth	r2, r3
 1332 0502 40F20003 		movw	r3, #:lower16:adrAndData
 1333 0506 C0F20003 		movt	r3, #:upper16:adrAndData
 1334 050a 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1335 050c 1343     		orrs	r3, r3, r2
 1336 050e 9AB2     		uxth	r2, r3
 1337 0510 40F20003 		movw	r3, #:lower16:magnetX
 1338 0514 C0F20003 		movt	r3, #:upper16:magnetX
 1339 0518 1A80     		strh	r2, [r3, #0]	@ movhi
 246:../LSM9DS1_Driver.c **** 
 247:../LSM9DS1_Driver.c **** 		magnetY = (adrAndData.dane[15] << 1) | adrAndData.dane[14];
 1340              		.loc 1 247 0
 1341 051a 40F20003 		movw	r3, #:lower16:adrAndData
 1342 051e C0F20003 		movt	r3, #:upper16:adrAndData
 1343 0522 DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
 1344 0524 4FEA4303 		lsl	r3, r3, #1
 1345 0528 9AB2     		uxth	r2, r3
 1346 052a 40F20003 		movw	r3, #:lower16:adrAndData
 1347 052e C0F20003 		movt	r3, #:upper16:adrAndData
 1348 0532 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 1349 0534 1343     		orrs	r3, r3, r2
 1350 0536 9AB2     		uxth	r2, r3
 1351 0538 40F20003 		movw	r3, #:lower16:magnetY
 1352 053c C0F20003 		movt	r3, #:upper16:magnetY
 1353 0540 1A80     		strh	r2, [r3, #0]	@ movhi
 248:../LSM9DS1_Driver.c **** 
 249:../LSM9DS1_Driver.c **** 		magnetY = (adrAndData.dane[17] << 1) | adrAndData.dane[16];
 1354              		.loc 1 249 0
 1355 0542 40F20003 		movw	r3, #:lower16:adrAndData
 1356 0546 C0F20003 		movt	r3, #:upper16:adrAndData
 1357 054a 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
 1358 054c 4FEA4303 		lsl	r3, r3, #1
 1359 0550 9AB2     		uxth	r2, r3
 1360 0552 40F20003 		movw	r3, #:lower16:adrAndData
 1361 0556 C0F20003 		movt	r3, #:upper16:adrAndData
 1362 055a 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 1363 055c 1343     		orrs	r3, r3, r2
 1364 055e 9AB2     		uxth	r2, r3
 1365 0560 40F20003 		movw	r3, #:lower16:magnetY
 1366 0564 C0F20003 		movt	r3, #:upper16:magnetY
 1367 0568 1A80     		strh	r2, [r3, #0]	@ movhi
 250:../LSM9DS1_Driver.c **** 
 251:../LSM9DS1_Driver.c **** 
 252:../LSM9DS1_Driver.c **** 		magnetXf = calcMag(magnetX);
 1368              		.loc 1 252 0
 1369 056a 40F20003 		movw	r3, #:lower16:magnetX
 1370 056e C0F20003 		movt	r3, #:upper16:magnetX
 1371 0572 1B88     		ldrh	r3, [r3, #0]
 1372 0574 1BB2     		sxth	r3, r3
 1373 0576 1846     		mov	r0, r3
 1374 0578 FFF7FEFF 		bl	calcMag
 1375 057c 0246     		mov	r2, r0	@ float
 1376 057e 40F20003 		movw	r3, #:lower16:magnetXf
 1377 0582 C0F20003 		movt	r3, #:upper16:magnetXf
 1378 0586 1A60     		str	r2, [r3, #0]	@ float
 253:../LSM9DS1_Driver.c **** 		magnetYf = calcMag(magnetY);
 1379              		.loc 1 253 0
 1380 0588 40F20003 		movw	r3, #:lower16:magnetY
 1381 058c C0F20003 		movt	r3, #:upper16:magnetY
 1382 0590 1B88     		ldrh	r3, [r3, #0]
 1383 0592 1BB2     		sxth	r3, r3
 1384 0594 1846     		mov	r0, r3
 1385 0596 FFF7FEFF 		bl	calcMag
 1386 059a 0246     		mov	r2, r0	@ float
 1387 059c 40F20003 		movw	r3, #:lower16:magnetYf
 1388 05a0 C0F20003 		movt	r3, #:upper16:magnetYf
 1389 05a4 1A60     		str	r2, [r3, #0]	@ float
 254:../LSM9DS1_Driver.c **** 		magnetZf = calcMag(magnetZ);
 1390              		.loc 1 254 0
 1391 05a6 40F20003 		movw	r3, #:lower16:magnetZ
 1392 05aa C0F20003 		movt	r3, #:upper16:magnetZ
 1393 05ae 1B88     		ldrh	r3, [r3, #0]
 1394 05b0 1BB2     		sxth	r3, r3
 1395 05b2 1846     		mov	r0, r3
 1396 05b4 FFF7FEFF 		bl	calcMag
 1397 05b8 0246     		mov	r2, r0	@ float
 1398 05ba 40F20003 		movw	r3, #:lower16:magnetZf
 1399 05be C0F20003 		movt	r3, #:upper16:magnetZf
 1400 05c2 1A60     		str	r2, [r3, #0]	@ float
 255:../LSM9DS1_Driver.c **** 
 256:../LSM9DS1_Driver.c **** 		magnetX = calcMag(magnetX);
 1401              		.loc 1 256 0
 1402 05c4 40F20003 		movw	r3, #:lower16:magnetX
 1403 05c8 C0F20003 		movt	r3, #:upper16:magnetX
 1404 05cc 1B88     		ldrh	r3, [r3, #0]
 1405 05ce 1BB2     		sxth	r3, r3
 1406 05d0 1846     		mov	r0, r3
 1407 05d2 FFF7FEFF 		bl	calcMag
 1408 05d6 07EE900A 		fmsr	s15, r0
 1409 05da FDEEE77A 		ftosizs	s15, s15
 1410 05de 17EE903A 		fmrs	r3, s15	@ int
 1411 05e2 9AB2     		uxth	r2, r3
 1412 05e4 40F20003 		movw	r3, #:lower16:magnetX
 1413 05e8 C0F20003 		movt	r3, #:upper16:magnetX
 1414 05ec 1A80     		strh	r2, [r3, #0]	@ movhi
 257:../LSM9DS1_Driver.c **** 		magnetY = calcMag(magnetY);
 1415              		.loc 1 257 0
 1416 05ee 40F20003 		movw	r3, #:lower16:magnetY
 1417 05f2 C0F20003 		movt	r3, #:upper16:magnetY
 1418 05f6 1B88     		ldrh	r3, [r3, #0]
 1419 05f8 1BB2     		sxth	r3, r3
 1420 05fa 1846     		mov	r0, r3
 1421 05fc FFF7FEFF 		bl	calcMag
 1422 0600 07EE900A 		fmsr	s15, r0
 1423 0604 FDEEE77A 		ftosizs	s15, s15
 1424 0608 17EE903A 		fmrs	r3, s15	@ int
 1425 060c 9AB2     		uxth	r2, r3
 1426 060e 40F20003 		movw	r3, #:lower16:magnetY
 1427 0612 C0F20003 		movt	r3, #:upper16:magnetY
 1428 0616 1A80     		strh	r2, [r3, #0]	@ movhi
 258:../LSM9DS1_Driver.c **** 		magnetZ = calcMag(magnetZ);
 1429              		.loc 1 258 0
 1430 0618 40F20003 		movw	r3, #:lower16:magnetZ
 1431 061c C0F20003 		movt	r3, #:upper16:magnetZ
 1432 0620 1B88     		ldrh	r3, [r3, #0]
 1433 0622 1BB2     		sxth	r3, r3
 1434 0624 1846     		mov	r0, r3
 1435 0626 FFF7FEFF 		bl	calcMag
 1436 062a 07EE900A 		fmsr	s15, r0
 1437 062e FDEEE77A 		ftosizs	s15, s15
 1438 0632 17EE903A 		fmrs	r3, s15	@ int
 1439 0636 9AB2     		uxth	r2, r3
 1440 0638 40F20003 		movw	r3, #:lower16:magnetZ
 1441 063c C0F20003 		movt	r3, #:upper16:magnetZ
 1442 0640 1A80     		strh	r2, [r3, #0]	@ movhi
 259:../LSM9DS1_Driver.c **** 
 260:../LSM9DS1_Driver.c **** 		counter++;
 1443              		.loc 1 260 0
 1444 0642 40F20003 		movw	r3, #:lower16:counter
 1445 0646 C0F20003 		movt	r3, #:upper16:counter
 1446 064a 1B68     		ldr	r3, [r3, #0]
 1447 064c 03F10102 		add	r2, r3, #1
 1448 0650 40F20003 		movw	r3, #:lower16:counter
 1449 0654 C0F20003 		movt	r3, #:upper16:counter
 1450 0658 1A60     		str	r2, [r3, #0]
 1451              	.L39:
 261:../LSM9DS1_Driver.c **** 
 262:../LSM9DS1_Driver.c **** 		/*if(counter < 50)
 263:../LSM9DS1_Driver.c **** 		{
 264:../LSM9DS1_Driver.c **** 			readingAllowed = TRUE;
 265:../LSM9DS1_Driver.c **** 		}*/
 266:../LSM9DS1_Driver.c **** 	}
 267:../LSM9DS1_Driver.c **** 
 268:../LSM9DS1_Driver.c **** 	if(counter >= 1/* && copied == 0*/)
 1452              		.loc 1 268 0
 1453 065a 40F20003 		movw	r3, #:lower16:counter
 1454 065e C0F20003 		movt	r3, #:upper16:counter
 1455 0662 1B68     		ldr	r3, [r3, #0]
 1456 0664 002B     		cmp	r3, #0
 1457 0666 17DD     		ble	.L38
 1458              	.LBB2:
 269:../LSM9DS1_Driver.c **** 	{
 270:../LSM9DS1_Driver.c **** 		int i = 0;
 1459              		.loc 1 270 0
 1460 0668 4FF00003 		mov	r3, #0
 1461 066c FB60     		str	r3, [r7, #12]
 271:../LSM9DS1_Driver.c **** 
 272:../LSM9DS1_Driver.c **** 		/*for(i = 0; i < 50; i++)
 273:../LSM9DS1_Driver.c **** 		{
 274:../LSM9DS1_Driver.c **** 			copiedData[i].ax = pomiaryAccel[i].ax;
 275:../LSM9DS1_Driver.c **** 			copiedData[i].ay = pomiaryAccel[i].ay;
 276:../LSM9DS1_Driver.c **** 			copiedData[i].az = pomiaryAccel[i].az;
 277:../LSM9DS1_Driver.c **** 
 278:../LSM9DS1_Driver.c **** 			copiedData[i].gx = pomiaryAccel[i].gx;
 279:../LSM9DS1_Driver.c **** 			copiedData[i].gy = pomiaryAccel[i].gy;
 280:../LSM9DS1_Driver.c **** 			copiedData[i].gz = pomiaryAccel[i].gz;
 281:../LSM9DS1_Driver.c **** 		}*/
 282:../LSM9DS1_Driver.c **** 
 283:../LSM9DS1_Driver.c **** 		counter = 0;
 1462              		.loc 1 283 0
 1463 066e 40F20003 		movw	r3, #:lower16:counter
 1464 0672 C0F20003 		movt	r3, #:upper16:counter
 1465 0676 4FF00002 		mov	r2, #0
 1466 067a 1A60     		str	r2, [r3, #0]
 284:../LSM9DS1_Driver.c **** 		copied = 1;
 1467              		.loc 1 284 0
 1468 067c 40F20003 		movw	r3, #:lower16:copied
 1469 0680 C0F20003 		movt	r3, #:upper16:copied
 1470 0684 4FF00102 		mov	r2, #1
 1471 0688 1A70     		strb	r2, [r3, #0]
 285:../LSM9DS1_Driver.c **** 		readingAllowed = TRUE;
 1472              		.loc 1 285 0
 1473 068a 40F20003 		movw	r3, #:lower16:readingAllowed
 1474 068e C0F20003 		movt	r3, #:upper16:readingAllowed
 1475 0692 4FF00102 		mov	r2, #1
 1476 0696 1A70     		strb	r2, [r3, #0]
 1477              	.L38:
 1478              	.LBE2:
 286:../LSM9DS1_Driver.c **** 	}
 287:../LSM9DS1_Driver.c **** }
 1479              		.loc 1 287 0
 1480 0698 07F11007 		add	r7, r7, #16
 1481 069c BD46     		mov	sp, r7
 1482 069e 80BD     		pop	{r7, pc}
 1483              		.cfi_endproc
 1484              	.LFE131:
 1486              		.section	.text.initAdrAndSubAdr,"ax",%progbits
 1487              		.align	2
 1488              		.global	initAdrAndSubAdr
 1489              		.thumb
 1490              		.thumb_func
 1492              	initAdrAndSubAdr:
 1493              	.LFB132:
 288:../LSM9DS1_Driver.c **** 
 289:../LSM9DS1_Driver.c **** void initAdrAndSubAdr(void)
 290:../LSM9DS1_Driver.c **** {
 1494              		.loc 1 290 0
 1495              		.cfi_startproc
 1496              		@ args = 0, pretend = 0, frame = 0
 1497              		@ frame_needed = 1, uses_anonymous_args = 0
 1498              		@ link register save eliminated.
 1499 0000 80B4     		push	{r7}
 1500              	.LCFI41:
 1501              		.cfi_def_cfa_offset 4
 1502              		.cfi_offset 7, -4
 1503 0002 00AF     		add	r7, sp, #0
 1504              	.LCFI42:
 1505              		.cfi_def_cfa_register 7
 291:../LSM9DS1_Driver.c **** 	adrAndData.adr.addressDevice[0] = 0x6B;
 1506              		.loc 1 291 0
 1507 0004 40F20003 		movw	r3, #:lower16:adrAndData
 1508 0008 C0F20003 		movt	r3, #:upper16:adrAndData
 1509 000c 4FF06B02 		mov	r2, #107
 1510 0010 9A74     		strb	r2, [r3, #18]
 292:../LSM9DS1_Driver.c **** 	adrAndData.adr.addressDevice[1] = 0x1E;
 1511              		.loc 1 292 0
 1512 0012 40F20003 		movw	r3, #:lower16:adrAndData
 1513 0016 C0F20003 		movt	r3, #:upper16:adrAndData
 1514 001a 4FF01E02 		mov	r2, #30
 1515 001e DA74     		strb	r2, [r3, #19]
 293:../LSM9DS1_Driver.c **** 	adrAndData.adr.subAddress[0] =  OUT_X_L_XL; //subaddres for accel
 1516              		.loc 1 293 0
 1517 0020 40F20003 		movw	r3, #:lower16:adrAndData
 1518 0024 C0F20003 		movt	r3, #:upper16:adrAndData
 1519 0028 4FF02802 		mov	r2, #40
 1520 002c 1A75     		strb	r2, [r3, #20]
 294:../LSM9DS1_Driver.c **** 	adrAndData.adr.subAddress[1] =  OUT_X_L_G; //sub address for gyroscope
 1521              		.loc 1 294 0
 1522 002e 40F20003 		movw	r3, #:lower16:adrAndData
 1523 0032 C0F20003 		movt	r3, #:upper16:adrAndData
 1524 0036 4FF01802 		mov	r2, #24
 1525 003a 5A75     		strb	r2, [r3, #21]
 295:../LSM9DS1_Driver.c **** 	adrAndData.adr.subAddress[2] =  OUT_X_L_M;
 1526              		.loc 1 295 0
 1527 003c 40F20003 		movw	r3, #:lower16:adrAndData
 1528 0040 C0F20003 		movt	r3, #:upper16:adrAndData
 1529 0044 4FF02802 		mov	r2, #40
 1530 0048 9A75     		strb	r2, [r3, #22]
 296:../LSM9DS1_Driver.c **** }
 1531              		.loc 1 296 0
 1532 004a BD46     		mov	sp, r7
 1533 004c 80BC     		pop	{r7}
 1534 004e 7047     		bx	lr
 1535              		.cfi_endproc
 1536              	.LFE132:
 1538              		.section	.text.initLSM9DS1,"ax",%progbits
 1539              		.align	2
 1540              		.global	initLSM9DS1
 1541              		.thumb
 1542              		.thumb_func
 1544              	initLSM9DS1:
 1545              	.LFB133:
 297:../LSM9DS1_Driver.c **** 
 298:../LSM9DS1_Driver.c **** void initLSM9DS1(void)
 299:../LSM9DS1_Driver.c **** {
 1546              		.loc 1 299 0
 1547              		.cfi_startproc
 1548              		@ args = 0, pretend = 0, frame = 8
 1549              		@ frame_needed = 1, uses_anonymous_args = 0
 1550 0000 80B5     		push	{r7, lr}
 1551              	.LCFI43:
 1552              		.cfi_def_cfa_offset 8
 1553              		.cfi_offset 7, -8
 1554              		.cfi_offset 14, -4
 1555 0002 82B0     		sub	sp, sp, #8
 1556              	.LCFI44:
 1557              		.cfi_def_cfa_offset 16
 1558 0004 00AF     		add	r7, sp, #0
 1559              	.LCFI45:
 1560              		.cfi_def_cfa_register 7
 300:../LSM9DS1_Driver.c **** 	init(IMU_MODE_I2C, LSM9DS1_AG_ADDR(1), LSM9DS1_M_ADDR(1));
 1561              		.loc 1 300 0
 1562 0006 4FF00100 		mov	r0, #1
 1563 000a 4FF06B01 		mov	r1, #107
 1564 000e 4FF01E02 		mov	r2, #30
 1565 0012 FFF7FEFF 		bl	init
 301:../LSM9DS1_Driver.c **** 
 302:../LSM9DS1_Driver.c **** 	settings.device.commInterface = IMU_MODE_I2C;
 1566              		.loc 1 302 0
 1567 0016 40F20003 		movw	r3, #:lower16:settings
 1568 001a C0F20003 		movt	r3, #:upper16:settings
 1569 001e 4FF00102 		mov	r2, #1
 1570 0022 1A70     		strb	r2, [r3, #0]
 303:../LSM9DS1_Driver.c **** 	settings.device.mAddress = LSM9DS1_M;
 1571              		.loc 1 303 0
 1572 0024 40F20003 		movw	r3, #:lower16:settings
 1573 0028 C0F20003 		movt	r3, #:upper16:settings
 1574 002c 4FF01E02 		mov	r2, #30
 1575 0030 9A70     		strb	r2, [r3, #2]
 304:../LSM9DS1_Driver.c **** 	settings.device.agAddress = LSM9DS1_AG;
 1576              		.loc 1 304 0
 1577 0032 40F20003 		movw	r3, #:lower16:settings
 1578 0036 C0F20003 		movt	r3, #:upper16:settings
 1579 003a 4FF06B02 		mov	r2, #107
 1580 003e 5A70     		strb	r2, [r3, #1]
 305:../LSM9DS1_Driver.c **** 
 306:../LSM9DS1_Driver.c **** 	initAdrAndSubAdr();
 1581              		.loc 1 306 0
 1582 0040 FFF7FEFF 		bl	initAdrAndSubAdr
 307:../LSM9DS1_Driver.c **** 
 308:../LSM9DS1_Driver.c **** 	if(!begin())
 1583              		.loc 1 308 0
 1584 0044 FFF7FEFF 		bl	begin
 1585 0048 0346     		mov	r3, r0
 1586 004a 002B     		cmp	r3, #0
 1587 004c 02D1     		bne	.L44
 1588              	.LBB3:
 309:../LSM9DS1_Driver.c **** 	{
 310:../LSM9DS1_Driver.c **** 		int k = 0;
 1589              		.loc 1 310 0
 1590 004e 4FF00003 		mov	r3, #0
 1591 0052 7B60     		str	r3, [r7, #4]
 1592              	.L44:
 1593              	.LBE3:
 311:../LSM9DS1_Driver.c **** 	}
 312:../LSM9DS1_Driver.c **** }
 1594              		.loc 1 312 0
 1595 0054 07F10807 		add	r7, r7, #8
 1596 0058 BD46     		mov	sp, r7
 1597 005a 80BD     		pop	{r7, pc}
 1598              		.cfi_endproc
 1599              	.LFE133:
 1601              		.section	.text.init,"ax",%progbits
 1602              		.align	2
 1603              		.global	init
 1604              		.thumb
 1605              		.thumb_func
 1607              	init:
 1608              	.LFB134:
 313:../LSM9DS1_Driver.c **** 
 314:../LSM9DS1_Driver.c **** void init(interface_mode interface, uint8_t xgAddr, uint8_t mAddr)
 315:../LSM9DS1_Driver.c **** {
 1609              		.loc 1 315 0
 1610              		.cfi_startproc
 1611              		@ args = 0, pretend = 0, frame = 16
 1612              		@ frame_needed = 1, uses_anonymous_args = 0
 1613              		@ link register save eliminated.
 1614 0000 80B4     		push	{r7}
 1615              	.LCFI46:
 1616              		.cfi_def_cfa_offset 4
 1617              		.cfi_offset 7, -4
 1618 0002 85B0     		sub	sp, sp, #20
 1619              	.LCFI47:
 1620              		.cfi_def_cfa_offset 24
 1621 0004 00AF     		add	r7, sp, #0
 1622              	.LCFI48:
 1623              		.cfi_def_cfa_register 7
 1624 0006 1346     		mov	r3, r2
 1625 0008 0246     		mov	r2, r0
 1626 000a FA71     		strb	r2, [r7, #7]
 1627 000c 0A46     		mov	r2, r1
 1628 000e BA71     		strb	r2, [r7, #6]
 1629 0010 7B71     		strb	r3, [r7, #5]
 316:../LSM9DS1_Driver.c **** 	//measurementsLSMRead = 0;
 317:../LSM9DS1_Driver.c **** 
 318:../LSM9DS1_Driver.c **** 	settings.device.commInterface = interface;
 1630              		.loc 1 318 0
 1631 0012 40F20003 		movw	r3, #:lower16:settings
 1632 0016 C0F20003 		movt	r3, #:upper16:settings
 1633 001a FA79     		ldrb	r2, [r7, #7]
 1634 001c 1A70     		strb	r2, [r3, #0]
 319:../LSM9DS1_Driver.c **** 	settings.device.agAddress = xgAddr;
 1635              		.loc 1 319 0
 1636 001e 40F20003 		movw	r3, #:lower16:settings
 1637 0022 C0F20003 		movt	r3, #:upper16:settings
 1638 0026 BA79     		ldrb	r2, [r7, #6]
 1639 0028 5A70     		strb	r2, [r3, #1]
 320:../LSM9DS1_Driver.c **** 	settings.device.mAddress = mAddr;
 1640              		.loc 1 320 0
 1641 002a 40F20003 		movw	r3, #:lower16:settings
 1642 002e C0F20003 		movt	r3, #:upper16:settings
 1643 0032 7A79     		ldrb	r2, [r7, #5]
 1644 0034 9A70     		strb	r2, [r3, #2]
 321:../LSM9DS1_Driver.c **** 
 322:../LSM9DS1_Driver.c **** 	settings.gyro.enabled = TRUE;
 1645              		.loc 1 322 0
 1646 0036 40F20003 		movw	r3, #:lower16:settings
 1647 003a C0F20003 		movt	r3, #:upper16:settings
 1648 003e 4FF00102 		mov	r2, #1
 1649 0042 1A71     		strb	r2, [r3, #4]
 323:../LSM9DS1_Driver.c **** 	settings.gyro.enableX = TRUE;
 1650              		.loc 1 323 0
 1651 0044 40F20003 		movw	r3, #:lower16:settings
 1652 0048 C0F20003 		movt	r3, #:upper16:settings
 1653 004c 4FF00102 		mov	r2, #1
 1654 0050 5A74     		strb	r2, [r3, #17]
 324:../LSM9DS1_Driver.c **** 	settings.gyro.enableY = TRUE;
 1655              		.loc 1 324 0
 1656 0052 40F20003 		movw	r3, #:lower16:settings
 1657 0056 C0F20003 		movt	r3, #:upper16:settings
 1658 005a 4FF00102 		mov	r2, #1
 1659 005e 9A74     		strb	r2, [r3, #18]
 325:../LSM9DS1_Driver.c **** 	settings.gyro.enableZ = TRUE;
 1660              		.loc 1 325 0
 1661 0060 40F20003 		movw	r3, #:lower16:settings
 1662 0064 C0F20003 		movt	r3, #:upper16:settings
 1663 0068 4FF00102 		mov	r2, #1
 1664 006c DA74     		strb	r2, [r3, #19]
 326:../LSM9DS1_Driver.c **** 	// gyro scale can be 245, 500, or 2000
 327:../LSM9DS1_Driver.c **** 	settings.gyro.scale = 245;
 1665              		.loc 1 327 0
 1666 006e 40F20003 		movw	r3, #:lower16:settings
 1667 0072 C0F20003 		movt	r3, #:upper16:settings
 1668 0076 4FF0F502 		mov	r2, #245
 1669 007a DA80     		strh	r2, [r3, #6]	@ movhi
 328:../LSM9DS1_Driver.c **** 	// gyro sample rate: value between 1-6
 329:../LSM9DS1_Driver.c **** 	// 1 = 14.9    4 = 238
 330:../LSM9DS1_Driver.c **** 	// 2 = 59.5    5 = 476
 331:../LSM9DS1_Driver.c **** 	// 3 = 119     6 = 952
 332:../LSM9DS1_Driver.c **** 	settings.gyro.sampleRate = 3;
 1670              		.loc 1 332 0
 1671 007c 40F20003 		movw	r3, #:lower16:settings
 1672 0080 C0F20003 		movt	r3, #:upper16:settings
 1673 0084 4FF00302 		mov	r2, #3
 1674 0088 1A72     		strb	r2, [r3, #8]
 333:../LSM9DS1_Driver.c **** 	// gyro cutoff frequency: value between 0-3
 334:../LSM9DS1_Driver.c **** 	// Actual value of cutoff frequency depends
 335:../LSM9DS1_Driver.c **** 	// on sample rate.
 336:../LSM9DS1_Driver.c **** 	settings.gyro.bandwidth = 0;
 1675              		.loc 1 336 0
 1676 008a 40F20003 		movw	r3, #:lower16:settings
 1677 008e C0F20003 		movt	r3, #:upper16:settings
 1678 0092 4FF00002 		mov	r2, #0
 1679 0096 5A72     		strb	r2, [r3, #9]
 337:../LSM9DS1_Driver.c **** 	settings.gyro.lowPowerEnable = FALSE;
 1680              		.loc 1 337 0
 1681 0098 40F20003 		movw	r3, #:lower16:settings
 1682 009c C0F20003 		movt	r3, #:upper16:settings
 1683 00a0 4FF00002 		mov	r2, #0
 1684 00a4 9A72     		strb	r2, [r3, #10]
 338:../LSM9DS1_Driver.c **** 
 339:../LSM9DS1_Driver.c **** 	settings.gyro.HPFEnable = FALSE;
 1685              		.loc 1 339 0
 1686 00a6 40F20003 		movw	r3, #:lower16:settings
 1687 00aa C0F20003 		movt	r3, #:upper16:settings
 1688 00ae 4FF00002 		mov	r2, #0
 1689 00b2 DA72     		strb	r2, [r3, #11]
 340:../LSM9DS1_Driver.c **** 	// Gyro HPF cutoff frequency: value between 0-9
 341:../LSM9DS1_Driver.c **** 	// Actual value depends on sample rate. Only applies
 342:../LSM9DS1_Driver.c **** 	// if gyroHPFEnable is TRUE.
 343:../LSM9DS1_Driver.c **** 	settings.gyro.HPFCutoff = 0;
 1690              		.loc 1 343 0
 1691 00b4 40F20003 		movw	r3, #:lower16:settings
 1692 00b8 C0F20003 		movt	r3, #:upper16:settings
 1693 00bc 4FF00002 		mov	r2, #0
 1694 00c0 1A73     		strb	r2, [r3, #12]
 344:../LSM9DS1_Driver.c **** 	settings.gyro.flipX = FALSE;
 1695              		.loc 1 344 0
 1696 00c2 40F20003 		movw	r3, #:lower16:settings
 1697 00c6 C0F20003 		movt	r3, #:upper16:settings
 1698 00ca 4FF00002 		mov	r2, #0
 1699 00ce 5A73     		strb	r2, [r3, #13]
 345:../LSM9DS1_Driver.c **** 	settings.gyro.flipY = FALSE;
 1700              		.loc 1 345 0
 1701 00d0 40F20003 		movw	r3, #:lower16:settings
 1702 00d4 C0F20003 		movt	r3, #:upper16:settings
 1703 00d8 4FF00002 		mov	r2, #0
 1704 00dc 9A73     		strb	r2, [r3, #14]
 346:../LSM9DS1_Driver.c **** 	settings.gyro.flipZ = FALSE;
 1705              		.loc 1 346 0
 1706 00de 40F20003 		movw	r3, #:lower16:settings
 1707 00e2 C0F20003 		movt	r3, #:upper16:settings
 1708 00e6 4FF00002 		mov	r2, #0
 1709 00ea DA73     		strb	r2, [r3, #15]
 347:../LSM9DS1_Driver.c **** 	settings.gyro.orientation = 0;
 1710              		.loc 1 347 0
 1711 00ec 40F20003 		movw	r3, #:lower16:settings
 1712 00f0 C0F20003 		movt	r3, #:upper16:settings
 1713 00f4 4FF00002 		mov	r2, #0
 1714 00f8 1A74     		strb	r2, [r3, #16]
 348:../LSM9DS1_Driver.c **** 	settings.gyro.latchInterrupt = TRUE;
 1715              		.loc 1 348 0
 1716 00fa 40F20003 		movw	r3, #:lower16:settings
 1717 00fe C0F20003 		movt	r3, #:upper16:settings
 1718 0102 4FF00102 		mov	r2, #1
 1719 0106 1A75     		strb	r2, [r3, #20]
 349:../LSM9DS1_Driver.c **** 
 350:../LSM9DS1_Driver.c **** 	settings.accel.enabled = TRUE;
 1720              		.loc 1 350 0
 1721 0108 40F20003 		movw	r3, #:lower16:settings
 1722 010c C0F20003 		movt	r3, #:upper16:settings
 1723 0110 4FF00102 		mov	r2, #1
 1724 0114 9A75     		strb	r2, [r3, #22]
 351:../LSM9DS1_Driver.c **** 	settings.accel.enableX = TRUE;
 1725              		.loc 1 351 0
 1726 0116 40F20003 		movw	r3, #:lower16:settings
 1727 011a C0F20003 		movt	r3, #:upper16:settings
 1728 011e 4FF00102 		mov	r2, #1
 1729 0122 5A76     		strb	r2, [r3, #25]
 352:../LSM9DS1_Driver.c **** 	settings.accel.enableY = TRUE;
 1730              		.loc 1 352 0
 1731 0124 40F20003 		movw	r3, #:lower16:settings
 1732 0128 C0F20003 		movt	r3, #:upper16:settings
 1733 012c 4FF00102 		mov	r2, #1
 1734 0130 9A76     		strb	r2, [r3, #26]
 353:../LSM9DS1_Driver.c **** 	settings.accel.enableZ = TRUE;
 1735              		.loc 1 353 0
 1736 0132 40F20003 		movw	r3, #:lower16:settings
 1737 0136 C0F20003 		movt	r3, #:upper16:settings
 1738 013a 4FF00102 		mov	r2, #1
 1739 013e DA76     		strb	r2, [r3, #27]
 354:../LSM9DS1_Driver.c **** 	// accel scale can be 2, 4, 8, or 16
 355:../LSM9DS1_Driver.c **** 	settings.accel.scale = 2;
 1740              		.loc 1 355 0
 1741 0140 40F20003 		movw	r3, #:lower16:settings
 1742 0144 C0F20003 		movt	r3, #:upper16:settings
 1743 0148 4FF00202 		mov	r2, #2
 1744 014c DA75     		strb	r2, [r3, #23]
 356:../LSM9DS1_Driver.c **** 	// accel sample rate can be 1-6
 357:../LSM9DS1_Driver.c **** 	// 1 = 10 Hz    4 = 238 Hz
 358:../LSM9DS1_Driver.c **** 	// 2 = 50 Hz    5 = 476 Hz
 359:../LSM9DS1_Driver.c **** 	// 3 = 119 Hz   6 = 952 Hz
 360:../LSM9DS1_Driver.c **** 	settings.accel.sampleRate = 6;
 1745              		.loc 1 360 0
 1746 014e 40F20003 		movw	r3, #:lower16:settings
 1747 0152 C0F20003 		movt	r3, #:upper16:settings
 1748 0156 4FF00602 		mov	r2, #6
 1749 015a 1A76     		strb	r2, [r3, #24]
 361:../LSM9DS1_Driver.c **** 	// Accel cutoff freqeuncy can be any value between -1 - 3.
 362:../LSM9DS1_Driver.c **** 	// -1 = bandwidth determined by sample rate
 363:../LSM9DS1_Driver.c **** 	// 0 = 408 Hz   2 = 105 Hz
 364:../LSM9DS1_Driver.c **** 	// 1 = 211 Hz   3 = 50 Hz
 365:../LSM9DS1_Driver.c **** 	settings.accel.bandwidth = -1;
 1750              		.loc 1 365 0
 1751 015c 40F20003 		movw	r3, #:lower16:settings
 1752 0160 C0F20003 		movt	r3, #:upper16:settings
 1753 0164 4FF0FF02 		mov	r2, #255
 1754 0168 1A77     		strb	r2, [r3, #28]
 366:../LSM9DS1_Driver.c **** 	settings.accel.highResEnable = FALSE;
 1755              		.loc 1 366 0
 1756 016a 40F20003 		movw	r3, #:lower16:settings
 1757 016e C0F20003 		movt	r3, #:upper16:settings
 1758 0172 4FF00002 		mov	r2, #0
 1759 0176 5A77     		strb	r2, [r3, #29]
 367:../LSM9DS1_Driver.c **** 	// accelHighResBandwidth can be any value between 0-3
 368:../LSM9DS1_Driver.c **** 	// LP cutoff is set to a factor of sample rate
 369:../LSM9DS1_Driver.c **** 	// 0 = ODR/50    2 = ODR/9
 370:../LSM9DS1_Driver.c **** 	// 1 = ODR/100   3 = ODR/400
 371:../LSM9DS1_Driver.c **** 	settings.accel.highResBandwidth = 0;
 1760              		.loc 1 371 0
 1761 0178 40F20003 		movw	r3, #:lower16:settings
 1762 017c C0F20003 		movt	r3, #:upper16:settings
 1763 0180 4FF00002 		mov	r2, #0
 1764 0184 9A77     		strb	r2, [r3, #30]
 372:../LSM9DS1_Driver.c **** 
 373:../LSM9DS1_Driver.c **** 	settings.mag.enabled = TRUE;
 1765              		.loc 1 373 0
 1766 0186 40F20003 		movw	r3, #:lower16:settings
 1767 018a C0F20003 		movt	r3, #:upper16:settings
 1768 018e 4FF00102 		mov	r2, #1
 1769 0192 DA77     		strb	r2, [r3, #31]
 374:../LSM9DS1_Driver.c **** 	// mag scale can be 4, 8, 12, or 16
 375:../LSM9DS1_Driver.c **** 	settings.mag.scale = 4;
 1770              		.loc 1 375 0
 1771 0194 40F20003 		movw	r3, #:lower16:settings
 1772 0198 C0F20003 		movt	r3, #:upper16:settings
 1773 019c 4FF00402 		mov	r2, #4
 1774 01a0 83F82020 		strb	r2, [r3, #32]
 376:../LSM9DS1_Driver.c **** 	// mag data rate can be 0-7
 377:../LSM9DS1_Driver.c **** 	// 0 = 0.625 Hz  4 = 10 Hz
 378:../LSM9DS1_Driver.c **** 	// 1 = 1.25 Hz   5 = 20 Hz
 379:../LSM9DS1_Driver.c **** 	// 2 = 2.5 Hz    6 = 40 Hz
 380:../LSM9DS1_Driver.c **** 	// 3 = 5 Hz      7 = 80 Hz
 381:../LSM9DS1_Driver.c **** 	settings.mag.sampleRate = 7;
 1775              		.loc 1 381 0
 1776 01a4 40F20003 		movw	r3, #:lower16:settings
 1777 01a8 C0F20003 		movt	r3, #:upper16:settings
 1778 01ac 4FF00702 		mov	r2, #7
 1779 01b0 83F82120 		strb	r2, [r3, #33]
 382:../LSM9DS1_Driver.c **** 	settings.mag.tempCompensationEnable = FALSE;
 1780              		.loc 1 382 0
 1781 01b4 40F20003 		movw	r3, #:lower16:settings
 1782 01b8 C0F20003 		movt	r3, #:upper16:settings
 1783 01bc 4FF00002 		mov	r2, #0
 1784 01c0 83F82220 		strb	r2, [r3, #34]
 383:../LSM9DS1_Driver.c **** 	// magPerformance can be any value between 0-3
 384:../LSM9DS1_Driver.c **** 	// 0 = Low power mode      2 = high performance
 385:../LSM9DS1_Driver.c **** 	// 1 = medium performance  3 = ultra-high performance
 386:../LSM9DS1_Driver.c **** 	settings.mag.XYPerformance = 3;
 1785              		.loc 1 386 0
 1786 01c4 40F20003 		movw	r3, #:lower16:settings
 1787 01c8 C0F20003 		movt	r3, #:upper16:settings
 1788 01cc 4FF00302 		mov	r2, #3
 1789 01d0 83F82320 		strb	r2, [r3, #35]
 387:../LSM9DS1_Driver.c **** 	settings.mag.ZPerformance = 3;
 1790              		.loc 1 387 0
 1791 01d4 40F20003 		movw	r3, #:lower16:settings
 1792 01d8 C0F20003 		movt	r3, #:upper16:settings
 1793 01dc 4FF00302 		mov	r2, #3
 1794 01e0 83F82420 		strb	r2, [r3, #36]
 388:../LSM9DS1_Driver.c **** 	settings.mag.lowPowerEnable = FALSE;
 1795              		.loc 1 388 0
 1796 01e4 40F20003 		movw	r3, #:lower16:settings
 1797 01e8 C0F20003 		movt	r3, #:upper16:settings
 1798 01ec 4FF00002 		mov	r2, #0
 1799 01f0 83F82520 		strb	r2, [r3, #37]
 389:../LSM9DS1_Driver.c **** 	// magOperatingMode can be 0-2
 390:../LSM9DS1_Driver.c **** 	// 0 = continuous conversion
 391:../LSM9DS1_Driver.c **** 	// 1 = single-conversion
 392:../LSM9DS1_Driver.c **** 	// 2 = power down
 393:../LSM9DS1_Driver.c **** 	settings.mag.operatingMode = 0;
 1800              		.loc 1 393 0
 1801 01f4 40F20003 		movw	r3, #:lower16:settings
 1802 01f8 C0F20003 		movt	r3, #:upper16:settings
 1803 01fc 4FF00002 		mov	r2, #0
 1804 0200 83F82620 		strb	r2, [r3, #38]
 394:../LSM9DS1_Driver.c **** 
 395:../LSM9DS1_Driver.c **** 	settings.temp.enabled = TRUE;
 1805              		.loc 1 395 0
 1806 0204 40F20003 		movw	r3, #:lower16:settings
 1807 0208 C0F20003 		movt	r3, #:upper16:settings
 1808 020c 4FF00102 		mov	r2, #1
 1809 0210 83F82720 		strb	r2, [r3, #39]
 1810              	.LBB4:
 396:../LSM9DS1_Driver.c **** 
 397:../LSM9DS1_Driver.c **** 	for (int i=0; i<3; i++)
 1811              		.loc 1 397 0
 1812 0214 4FF00003 		mov	r3, #0
 1813 0218 FB60     		str	r3, [r7, #12]
 1814 021a 3FE0     		b	.L47
 1815              	.L48:
 398:../LSM9DS1_Driver.c **** 	{
 399:../LSM9DS1_Driver.c **** 		gBias[i] = 0;
 1816              		.loc 1 399 0 discriminator 2
 1817 021c 40F20003 		movw	r3, #:lower16:gBias
 1818 0220 C0F20003 		movt	r3, #:upper16:gBias
 1819 0224 FA68     		ldr	r2, [r7, #12]
 1820 0226 4FEA8202 		lsl	r2, r2, #2
 1821 022a 9B18     		adds	r3, r3, r2
 1822 022c 4FF00002 		mov	r2, #0
 1823 0230 1A60     		str	r2, [r3, #0]	@ float
 400:../LSM9DS1_Driver.c **** 		aBias[i] = 0;
 1824              		.loc 1 400 0 discriminator 2
 1825 0232 40F20003 		movw	r3, #:lower16:aBias
 1826 0236 C0F20003 		movt	r3, #:upper16:aBias
 1827 023a FA68     		ldr	r2, [r7, #12]
 1828 023c 4FEA8202 		lsl	r2, r2, #2
 1829 0240 9B18     		adds	r3, r3, r2
 1830 0242 4FF00002 		mov	r2, #0
 1831 0246 1A60     		str	r2, [r3, #0]	@ float
 401:../LSM9DS1_Driver.c **** 		mBias[i] = 0;
 1832              		.loc 1 401 0 discriminator 2
 1833 0248 40F20003 		movw	r3, #:lower16:mBias
 1834 024c C0F20003 		movt	r3, #:upper16:mBias
 1835 0250 FA68     		ldr	r2, [r7, #12]
 1836 0252 4FEA8202 		lsl	r2, r2, #2
 1837 0256 9B18     		adds	r3, r3, r2
 1838 0258 4FF00002 		mov	r2, #0
 1839 025c 1A60     		str	r2, [r3, #0]	@ float
 402:../LSM9DS1_Driver.c **** 		gBiasRaw[i] = 0;
 1840              		.loc 1 402 0 discriminator 2
 1841 025e 40F20003 		movw	r3, #:lower16:gBiasRaw
 1842 0262 C0F20003 		movt	r3, #:upper16:gBiasRaw
 1843 0266 FA68     		ldr	r2, [r7, #12]
 1844 0268 4FF00001 		mov	r1, #0
 1845 026c 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 403:../LSM9DS1_Driver.c **** 		aBiasRaw[i] = 0;
 1846              		.loc 1 403 0 discriminator 2
 1847 0270 40F20003 		movw	r3, #:lower16:aBiasRaw
 1848 0274 C0F20003 		movt	r3, #:upper16:aBiasRaw
 1849 0278 FA68     		ldr	r2, [r7, #12]
 1850 027a 4FF00001 		mov	r1, #0
 1851 027e 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 404:../LSM9DS1_Driver.c **** 		mBiasRaw[i] = 0;
 1852              		.loc 1 404 0 discriminator 2
 1853 0282 40F20003 		movw	r3, #:lower16:mBiasRaw
 1854 0286 C0F20003 		movt	r3, #:upper16:mBiasRaw
 1855 028a FA68     		ldr	r2, [r7, #12]
 1856 028c 4FF00001 		mov	r1, #0
 1857 0290 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 397:../LSM9DS1_Driver.c **** 	for (int i=0; i<3; i++)
 1858              		.loc 1 397 0 discriminator 2
 1859 0294 FB68     		ldr	r3, [r7, #12]
 1860 0296 03F10103 		add	r3, r3, #1
 1861 029a FB60     		str	r3, [r7, #12]
 1862              	.L47:
 397:../LSM9DS1_Driver.c **** 	for (int i=0; i<3; i++)
 1863              		.loc 1 397 0 is_stmt 0 discriminator 1
 1864 029c FB68     		ldr	r3, [r7, #12]
 1865 029e 022B     		cmp	r3, #2
 1866 02a0 BCDD     		ble	.L48
 1867              	.LBE4:
 405:../LSM9DS1_Driver.c **** 	}
 406:../LSM9DS1_Driver.c **** 
 407:../LSM9DS1_Driver.c **** 	_autoCalc = FALSE;
 1868              		.loc 1 407 0 is_stmt 1
 1869 02a2 40F20003 		movw	r3, #:lower16:_autoCalc
 1870 02a6 C0F20003 		movt	r3, #:upper16:_autoCalc
 1871 02aa 4FF00002 		mov	r2, #0
 1872 02ae 1A70     		strb	r2, [r3, #0]
 408:../LSM9DS1_Driver.c **** }
 1873              		.loc 1 408 0
 1874 02b0 07F11407 		add	r7, r7, #20
 1875 02b4 BD46     		mov	sp, r7
 1876 02b6 80BC     		pop	{r7}
 1877 02b8 7047     		bx	lr
 1878              		.cfi_endproc
 1879              	.LFE134:
 1881 02ba 00BF     		.section	.text.begin,"ax",%progbits
 1882              		.align	2
 1883              		.global	begin
 1884              		.thumb
 1885              		.thumb_func
 1887              	begin:
 1888              	.LFB135:
 409:../LSM9DS1_Driver.c **** 
 410:../LSM9DS1_Driver.c **** uint16_t begin(void)
 411:../LSM9DS1_Driver.c **** {
 1889              		.loc 1 411 0
 1890              		.cfi_startproc
 1891              		@ args = 0, pretend = 0, frame = 8
 1892              		@ frame_needed = 1, uses_anonymous_args = 0
 1893 0000 80B5     		push	{r7, lr}
 1894              	.LCFI49:
 1895              		.cfi_def_cfa_offset 8
 1896              		.cfi_offset 7, -8
 1897              		.cfi_offset 14, -4
 1898 0002 82B0     		sub	sp, sp, #8
 1899              	.LCFI50:
 1900              		.cfi_def_cfa_offset 16
 1901 0004 00AF     		add	r7, sp, #0
 1902              	.LCFI51:
 1903              		.cfi_def_cfa_register 7
 412:../LSM9DS1_Driver.c **** 	//! Todo: don't use _xgAddress or _mAddress, duplicating memory
 413:../LSM9DS1_Driver.c **** 	_xgAddress = settings.device.agAddress;
 1904              		.loc 1 413 0
 1905 0006 40F20003 		movw	r3, #:lower16:settings
 1906 000a C0F20003 		movt	r3, #:upper16:settings
 1907 000e 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 1908 0010 40F20003 		movw	r3, #:lower16:_xgAddress
 1909 0014 C0F20003 		movt	r3, #:upper16:_xgAddress
 1910 0018 1A70     		strb	r2, [r3, #0]
 414:../LSM9DS1_Driver.c **** 	_mAddress = settings.device.mAddress;
 1911              		.loc 1 414 0
 1912 001a 40F20003 		movw	r3, #:lower16:settings
 1913 001e C0F20003 		movt	r3, #:upper16:settings
 1914 0022 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 1915 0024 40F20003 		movw	r3, #:lower16:_mAddress
 1916 0028 C0F20003 		movt	r3, #:upper16:_mAddress
 1917 002c 1A70     		strb	r2, [r3, #0]
 415:../LSM9DS1_Driver.c **** 
 416:../LSM9DS1_Driver.c **** 	constrainScales();
 1918              		.loc 1 416 0
 1919 002e FFF7FEFF 		bl	constrainScales
 417:../LSM9DS1_Driver.c **** 
 418:../LSM9DS1_Driver.c **** 	// Once we have the scale values, we can calculate the resolution
 419:../LSM9DS1_Driver.c **** 	// of each sensor. That's what these functions are for. One for each sensor
 420:../LSM9DS1_Driver.c **** 	calcgRes(); // Calculate DPS / ADC tick, stored in gRes variable
 1920              		.loc 1 420 0
 1921 0032 FFF7FEFF 		bl	calcgRes
 421:../LSM9DS1_Driver.c **** 	calcmRes(); // Calculate Gs / ADC tick, stored in mRes variable
 1922              		.loc 1 421 0
 1923 0036 FFF7FEFF 		bl	calcmRes
 422:../LSM9DS1_Driver.c **** 	calcaRes(); // Calculate g / ADC tick, stored in aRes variable
 1924              		.loc 1 422 0
 1925 003a FFF7FEFF 		bl	calcaRes
 423:../LSM9DS1_Driver.c **** 
 424:../LSM9DS1_Driver.c **** 	if (settings.device.commInterface == IMU_MODE_I2C)	// If we're using I2C
 1926              		.loc 1 424 0
 1927 003e 40F20003 		movw	r3, #:lower16:settings
 1928 0042 C0F20003 		movt	r3, #:upper16:settings
 1929 0046 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1930 0048 012B     		cmp	r3, #1
 1931 004a 02D1     		bne	.L50
 425:../LSM9DS1_Driver.c **** 		initI2C();	// Initialize I2C
 1932              		.loc 1 425 0
 1933 004c FFF7FEFF 		bl	initI2C
 1934 0050 08E0     		b	.L51
 1935              	.L50:
 426:../LSM9DS1_Driver.c **** 	else if (settings.device.commInterface == IMU_MODE_SPI) 	// else, if we're using SPI
 1936              		.loc 1 426 0
 1937 0052 40F20003 		movw	r3, #:lower16:settings
 1938 0056 C0F20003 		movt	r3, #:upper16:settings
 1939 005a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1940 005c 002B     		cmp	r3, #0
 1941 005e 01D1     		bne	.L51
 427:../LSM9DS1_Driver.c **** 		initSPI();	// Initialize SPI
 1942              		.loc 1 427 0
 1943 0060 FFF7FEFF 		bl	initSPI
 1944              	.L51:
 428:../LSM9DS1_Driver.c **** 
 429:../LSM9DS1_Driver.c **** 	// To verify communication, we can read from the WHO_AM_I register of
 430:../LSM9DS1_Driver.c **** 	// each device. Store those in a variable so we can return them.
 431:../LSM9DS1_Driver.c **** 	uint8_t mTest = mReadByte(WHO_AM_I_M);		// Read the gyro WHO_AM_I
 1945              		.loc 1 431 0
 1946 0064 4FF00F00 		mov	r0, #15
 1947 0068 FFF7FEFF 		bl	mReadByte
 1948 006c 0346     		mov	r3, r0
 1949 006e FB71     		strb	r3, [r7, #7]
 432:../LSM9DS1_Driver.c **** 	uint8_t xgTest = xgReadByte(WHO_AM_I_XG);	// Read the accel/mag WHO_AM_I
 1950              		.loc 1 432 0
 1951 0070 4FF00F00 		mov	r0, #15
 1952 0074 FFF7FEFF 		bl	xgReadByte
 1953 0078 0346     		mov	r3, r0
 1954 007a BB71     		strb	r3, [r7, #6]
 433:../LSM9DS1_Driver.c **** 
 434:../LSM9DS1_Driver.c **** 	uint16_t whoAmICombined = (xgTest << 8) | mTest;
 1955              		.loc 1 434 0
 1956 007c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1957 007e 4FEA0323 		lsl	r3, r3, #8
 1958 0082 9AB2     		uxth	r2, r3
 1959 0084 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1960 0086 9BB2     		uxth	r3, r3
 1961 0088 1343     		orrs	r3, r3, r2
 1962 008a 9BB2     		uxth	r3, r3
 1963 008c BB80     		strh	r3, [r7, #4]	@ movhi
 435:../LSM9DS1_Driver.c **** 
 436:../LSM9DS1_Driver.c **** 	if (whoAmICombined != ((WHO_AM_I_AG_RSP << 8) | WHO_AM_I_M_RSP))
 1964              		.loc 1 436 0
 1965 008e BA88     		ldrh	r2, [r7, #4]
 1966 0090 46F63D03 		movw	r3, #26685
 1967 0094 9A42     		cmp	r2, r3
 1968 0096 02D0     		beq	.L52
 437:../LSM9DS1_Driver.c **** 	{
 438:../LSM9DS1_Driver.c **** 		return 0;
 1969              		.loc 1 438 0
 1970 0098 4FF00003 		mov	r3, #0
 1971 009c 06E0     		b	.L53
 1972              	.L52:
 439:../LSM9DS1_Driver.c **** 	}
 440:../LSM9DS1_Driver.c **** 
 441:../LSM9DS1_Driver.c **** 	// Gyro initialization stuff:
 442:../LSM9DS1_Driver.c **** 	initGyro();	// This will "turn on" the gyro. Setting up interrupts, etc.
 1973              		.loc 1 442 0
 1974 009e FFF7FEFF 		bl	initGyro
 443:../LSM9DS1_Driver.c **** 
 444:../LSM9DS1_Driver.c **** 	// Accelerometer initialization stuff:
 445:../LSM9DS1_Driver.c **** 	initAccel(); // "Turn on" all axes of the accel. Set up interrupts, etc.
 1975              		.loc 1 445 0
 1976 00a2 FFF7FEFF 		bl	initAccel
 446:../LSM9DS1_Driver.c **** 
 447:../LSM9DS1_Driver.c **** 	// Magnetometer initialization stuff:
 448:../LSM9DS1_Driver.c **** 	initMag(); // "Turn on" all axes of the mag. Set up interrupts, etc.
 1977              		.loc 1 448 0
 1978 00a6 FFF7FEFF 		bl	initMag
 449:../LSM9DS1_Driver.c **** 
 450:../LSM9DS1_Driver.c **** 	// Once everything is initialized, return the WHO_AM_I registers we read:
 451:../LSM9DS1_Driver.c **** 	return whoAmICombined;
 1979              		.loc 1 451 0
 1980 00aa BB88     		ldrh	r3, [r7, #4]
 1981              	.L53:
 452:../LSM9DS1_Driver.c **** 
 453:../LSM9DS1_Driver.c **** }
 1982              		.loc 1 453 0
 1983 00ac 1846     		mov	r0, r3
 1984 00ae 07F10807 		add	r7, r7, #8
 1985 00b2 BD46     		mov	sp, r7
 1986 00b4 80BD     		pop	{r7, pc}
 1987              		.cfi_endproc
 1988              	.LFE135:
 1990 00b6 00BF     		.section	.text.constrainScales,"ax",%progbits
 1991              		.align	2
 1992              		.global	constrainScales
 1993              		.thumb
 1994              		.thumb_func
 1996              	constrainScales:
 1997              	.LFB136:
 454:../LSM9DS1_Driver.c **** 
 455:../LSM9DS1_Driver.c **** void constrainScales()
 456:../LSM9DS1_Driver.c **** {
 1998              		.loc 1 456 0
 1999              		.cfi_startproc
 2000              		@ args = 0, pretend = 0, frame = 0
 2001              		@ frame_needed = 1, uses_anonymous_args = 0
 2002              		@ link register save eliminated.
 2003 0000 80B4     		push	{r7}
 2004              	.LCFI52:
 2005              		.cfi_def_cfa_offset 4
 2006              		.cfi_offset 7, -4
 2007 0002 00AF     		add	r7, sp, #0
 2008              	.LCFI53:
 2009              		.cfi_def_cfa_register 7
 457:../LSM9DS1_Driver.c **** 	if ((settings.gyro.scale != 245) && (settings.gyro.scale != 500) && (settings.gyro.scale != 2000))
 2010              		.loc 1 457 0
 2011 0004 40F20003 		movw	r3, #:lower16:settings
 2012 0008 C0F20003 		movt	r3, #:upper16:settings
 2013 000c DB88     		ldrh	r3, [r3, #6]
 2014 000e F52B     		cmp	r3, #245
 2015 0010 16D0     		beq	.L55
 2016              		.loc 1 457 0 is_stmt 0 discriminator 1
 2017 0012 40F20003 		movw	r3, #:lower16:settings
 2018 0016 C0F20003 		movt	r3, #:upper16:settings
 2019 001a DB88     		ldrh	r3, [r3, #6]
 2020 001c B3F5FA7F 		cmp	r3, #500
 2021 0020 0ED0     		beq	.L55
 2022 0022 40F20003 		movw	r3, #:lower16:settings
 2023 0026 C0F20003 		movt	r3, #:upper16:settings
 2024 002a DB88     		ldrh	r3, [r3, #6]
 2025 002c B3F5FA6F 		cmp	r3, #2000
 2026 0030 06D0     		beq	.L55
 458:../LSM9DS1_Driver.c **** 	{
 459:../LSM9DS1_Driver.c **** 		settings.gyro.scale = 245;
 2027              		.loc 1 459 0 is_stmt 1
 2028 0032 40F20003 		movw	r3, #:lower16:settings
 2029 0036 C0F20003 		movt	r3, #:upper16:settings
 2030 003a 4FF0F502 		mov	r2, #245
 2031 003e DA80     		strh	r2, [r3, #6]	@ movhi
 2032              	.L55:
 460:../LSM9DS1_Driver.c **** 	}
 461:../LSM9DS1_Driver.c **** 
 462:../LSM9DS1_Driver.c **** 	if ((settings.accel.scale != 2) && (settings.accel.scale != 4) && (settings.accel.scale != 8) && (
 2033              		.loc 1 462 0
 2034 0040 40F20003 		movw	r3, #:lower16:settings
 2035 0044 C0F20003 		movt	r3, #:upper16:settings
 2036 0048 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 2037 004a 022B     		cmp	r3, #2
 2038 004c 1BD0     		beq	.L56
 2039              		.loc 1 462 0 is_stmt 0 discriminator 1
 2040 004e 40F20003 		movw	r3, #:lower16:settings
 2041 0052 C0F20003 		movt	r3, #:upper16:settings
 2042 0056 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 2043 0058 042B     		cmp	r3, #4
 2044 005a 14D0     		beq	.L56
 2045 005c 40F20003 		movw	r3, #:lower16:settings
 2046 0060 C0F20003 		movt	r3, #:upper16:settings
 2047 0064 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 2048 0066 082B     		cmp	r3, #8
 2049 0068 0DD0     		beq	.L56
 2050 006a 40F20003 		movw	r3, #:lower16:settings
 2051 006e C0F20003 		movt	r3, #:upper16:settings
 2052 0072 DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 2053 0074 102B     		cmp	r3, #16
 2054 0076 06D0     		beq	.L56
 463:../LSM9DS1_Driver.c **** 	{
 464:../LSM9DS1_Driver.c **** 		settings.accel.scale = 2;
 2055              		.loc 1 464 0 is_stmt 1
 2056 0078 40F20003 		movw	r3, #:lower16:settings
 2057 007c C0F20003 		movt	r3, #:upper16:settings
 2058 0080 4FF00202 		mov	r2, #2
 2059 0084 DA75     		strb	r2, [r3, #23]
 2060              	.L56:
 465:../LSM9DS1_Driver.c **** 	}
 466:../LSM9DS1_Driver.c **** 
 467:../LSM9DS1_Driver.c **** 	if ((settings.mag.scale != 4) && (settings.mag.scale != 8) && (settings.mag.scale != 12) && (setti
 2061              		.loc 1 467 0
 2062 0086 40F20003 		movw	r3, #:lower16:settings
 2063 008a C0F20003 		movt	r3, #:upper16:settings
 2064 008e 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 2065 0092 042B     		cmp	r3, #4
 2066 0094 1FD0     		beq	.L54
 2067              		.loc 1 467 0 is_stmt 0 discriminator 1
 2068 0096 40F20003 		movw	r3, #:lower16:settings
 2069 009a C0F20003 		movt	r3, #:upper16:settings
 2070 009e 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 2071 00a2 082B     		cmp	r3, #8
 2072 00a4 17D0     		beq	.L54
 2073 00a6 40F20003 		movw	r3, #:lower16:settings
 2074 00aa C0F20003 		movt	r3, #:upper16:settings
 2075 00ae 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 2076 00b2 0C2B     		cmp	r3, #12
 2077 00b4 0FD0     		beq	.L54
 2078 00b6 40F20003 		movw	r3, #:lower16:settings
 2079 00ba C0F20003 		movt	r3, #:upper16:settings
 2080 00be 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 2081 00c2 102B     		cmp	r3, #16
 2082 00c4 07D0     		beq	.L54
 468:../LSM9DS1_Driver.c **** 	{
 469:../LSM9DS1_Driver.c **** 		settings.mag.scale = 4;
 2083              		.loc 1 469 0 is_stmt 1
 2084 00c6 40F20003 		movw	r3, #:lower16:settings
 2085 00ca C0F20003 		movt	r3, #:upper16:settings
 2086 00ce 4FF00402 		mov	r2, #4
 2087 00d2 83F82020 		strb	r2, [r3, #32]
 2088              	.L54:
 470:../LSM9DS1_Driver.c **** 	}
 471:../LSM9DS1_Driver.c **** }
 2089              		.loc 1 471 0
 2090 00d6 BD46     		mov	sp, r7
 2091 00d8 80BC     		pop	{r7}
 2092 00da 7047     		bx	lr
 2093              		.cfi_endproc
 2094              	.LFE136:
 2096              		.section	.text.initI2C,"ax",%progbits
 2097              		.align	2
 2098              		.global	initI2C
 2099              		.thumb
 2100              		.thumb_func
 2102              	initI2C:
 2103              	.LFB137:
 472:../LSM9DS1_Driver.c **** 
 473:../LSM9DS1_Driver.c **** 
 474:../LSM9DS1_Driver.c **** void initI2C(void)
 475:../LSM9DS1_Driver.c **** {
 2104              		.loc 1 475 0
 2105              		.cfi_startproc
 2106              		@ args = 0, pretend = 0, frame = 0
 2107              		@ frame_needed = 1, uses_anonymous_args = 0
 2108              		@ link register save eliminated.
 2109 0000 80B4     		push	{r7}
 2110              	.LCFI54:
 2111              		.cfi_def_cfa_offset 4
 2112              		.cfi_offset 7, -4
 2113 0002 00AF     		add	r7, sp, #0
 2114              	.LCFI55:
 2115              		.cfi_def_cfa_register 7
 476:../LSM9DS1_Driver.c **** 	;
 477:../LSM9DS1_Driver.c **** }
 2116              		.loc 1 477 0
 2117 0004 BD46     		mov	sp, r7
 2118 0006 80BC     		pop	{r7}
 2119 0008 7047     		bx	lr
 2120              		.cfi_endproc
 2121              	.LFE137:
 2123 000a 00BF     		.section	.text.initSPI,"ax",%progbits
 2124              		.align	2
 2125              		.global	initSPI
 2126              		.thumb
 2127              		.thumb_func
 2129              	initSPI:
 2130              	.LFB138:
 478:../LSM9DS1_Driver.c **** 
 479:../LSM9DS1_Driver.c **** void initSPI(void)
 480:../LSM9DS1_Driver.c **** {
 2131              		.loc 1 480 0
 2132              		.cfi_startproc
 2133              		@ args = 0, pretend = 0, frame = 0
 2134              		@ frame_needed = 1, uses_anonymous_args = 0
 2135              		@ link register save eliminated.
 2136 0000 80B4     		push	{r7}
 2137              	.LCFI56:
 2138              		.cfi_def_cfa_offset 4
 2139              		.cfi_offset 7, -4
 2140 0002 00AF     		add	r7, sp, #0
 2141              	.LCFI57:
 2142              		.cfi_def_cfa_register 7
 481:../LSM9DS1_Driver.c **** 	;
 482:../LSM9DS1_Driver.c **** }
 2143              		.loc 1 482 0
 2144 0004 BD46     		mov	sp, r7
 2145 0006 80BC     		pop	{r7}
 2146 0008 7047     		bx	lr
 2147              		.cfi_endproc
 2148              	.LFE138:
 2150 000a 00BF     		.section	.text.calcgRes,"ax",%progbits
 2151              		.align	2
 2152              		.global	calcgRes
 2153              		.thumb
 2154              		.thumb_func
 2156              	calcgRes:
 2157              	.LFB139:
 483:../LSM9DS1_Driver.c **** 
 484:../LSM9DS1_Driver.c **** void calcgRes()
 485:../LSM9DS1_Driver.c **** {
 2158              		.loc 1 485 0
 2159              		.cfi_startproc
 2160              		@ args = 0, pretend = 0, frame = 0
 2161              		@ frame_needed = 1, uses_anonymous_args = 0
 2162              		@ link register save eliminated.
 2163 0000 80B4     		push	{r7}
 2164              	.LCFI58:
 2165              		.cfi_def_cfa_offset 4
 2166              		.cfi_offset 7, -4
 2167 0002 00AF     		add	r7, sp, #0
 2168              	.LCFI59:
 2169              		.cfi_def_cfa_register 7
 486:../LSM9DS1_Driver.c **** 	gRes = ((float) settings.gyro.scale) / 32768.0;
 2170              		.loc 1 486 0
 2171 0004 40F20003 		movw	r3, #:lower16:settings
 2172 0008 C0F20003 		movt	r3, #:upper16:settings
 2173 000c DB88     		ldrh	r3, [r3, #6]
 2174 000e 07EE903A 		fmsr	s15, r3	@ int
 2175 0012 B8EE677A 		fuitos	s14, s15
 2176 0016 DFED067A 		flds	s15, .L61
 2177 001a C7EE277A 		fdivs	s15, s14, s15
 2178 001e 40F20003 		movw	r3, #:lower16:gRes
 2179 0022 C0F20003 		movt	r3, #:upper16:gRes
 2180 0026 C3ED007A 		fsts	s15, [r3, #0]
 487:../LSM9DS1_Driver.c **** }
 2181              		.loc 1 487 0
 2182 002a BD46     		mov	sp, r7
 2183 002c 80BC     		pop	{r7}
 2184 002e 7047     		bx	lr
 2185              	.L62:
 2186              		.align	2
 2187              	.L61:
 2188 0030 00000047 		.word	1191182336
 2189              		.cfi_endproc
 2190              	.LFE139:
 2192              		.section	.text.calcaRes,"ax",%progbits
 2193              		.align	2
 2194              		.global	calcaRes
 2195              		.thumb
 2196              		.thumb_func
 2198              	calcaRes:
 2199              	.LFB140:
 488:../LSM9DS1_Driver.c **** 
 489:../LSM9DS1_Driver.c **** void calcaRes()
 490:../LSM9DS1_Driver.c **** {
 2200              		.loc 1 490 0
 2201              		.cfi_startproc
 2202              		@ args = 0, pretend = 0, frame = 0
 2203              		@ frame_needed = 1, uses_anonymous_args = 0
 2204              		@ link register save eliminated.
 2205 0000 80B4     		push	{r7}
 2206              	.LCFI60:
 2207              		.cfi_def_cfa_offset 4
 2208              		.cfi_offset 7, -4
 2209 0002 00AF     		add	r7, sp, #0
 2210              	.LCFI61:
 2211              		.cfi_def_cfa_register 7
 491:../LSM9DS1_Driver.c **** 	aRes = ((float) settings.accel.scale) / 32768.0;
 2212              		.loc 1 491 0
 2213 0004 40F20003 		movw	r3, #:lower16:settings
 2214 0008 C0F20003 		movt	r3, #:upper16:settings
 2215 000c DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 2216 000e 07EE903A 		fmsr	s15, r3	@ int
 2217 0012 B8EE677A 		fuitos	s14, s15
 2218 0016 DFED067A 		flds	s15, .L64
 2219 001a C7EE277A 		fdivs	s15, s14, s15
 2220 001e 40F20003 		movw	r3, #:lower16:aRes
 2221 0022 C0F20003 		movt	r3, #:upper16:aRes
 2222 0026 C3ED007A 		fsts	s15, [r3, #0]
 492:../LSM9DS1_Driver.c **** }
 2223              		.loc 1 492 0
 2224 002a BD46     		mov	sp, r7
 2225 002c 80BC     		pop	{r7}
 2226 002e 7047     		bx	lr
 2227              	.L65:
 2228              		.align	2
 2229              	.L64:
 2230 0030 00000047 		.word	1191182336
 2231              		.cfi_endproc
 2232              	.LFE140:
 2234              		.section	.text.calcmRes,"ax",%progbits
 2235              		.align	2
 2236              		.global	calcmRes
 2237              		.thumb
 2238              		.thumb_func
 2240              	calcmRes:
 2241              	.LFB141:
 493:../LSM9DS1_Driver.c **** 
 494:../LSM9DS1_Driver.c **** 
 495:../LSM9DS1_Driver.c **** void calcmRes()
 496:../LSM9DS1_Driver.c **** {
 2242              		.loc 1 496 0
 2243              		.cfi_startproc
 2244              		@ args = 0, pretend = 0, frame = 0
 2245              		@ frame_needed = 1, uses_anonymous_args = 0
 2246              		@ link register save eliminated.
 2247 0000 80B4     		push	{r7}
 2248              	.LCFI62:
 2249              		.cfi_def_cfa_offset 4
 2250              		.cfi_offset 7, -4
 2251 0002 00AF     		add	r7, sp, #0
 2252              	.LCFI63:
 2253              		.cfi_def_cfa_register 7
 497:../LSM9DS1_Driver.c **** 	//mRes = ((float) settings.mag.scale) / 32768.0;
 498:../LSM9DS1_Driver.c **** 	switch (settings.mag.scale)
 2254              		.loc 1 498 0
 2255 0004 40F20003 		movw	r3, #:lower16:settings
 2256 0008 C0F20003 		movt	r3, #:upper16:settings
 2257 000c 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 2258 0010 A3F10403 		sub	r3, r3, #4
 2259 0014 0C2B     		cmp	r3, #12
 2260 0016 49D8     		bhi	.L66
 2261 0018 01A2     		adr	r2, .L72
 2262 001a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2263 001e 00BF     		.align	2
 2264              	.L72:
 2265 0020 55000000 		.word	.L68+1
 2266 0024 AD000000 		.word	.L66+1
 2267 0028 AD000000 		.word	.L66+1
 2268 002c AD000000 		.word	.L66+1
 2269 0030 6B000000 		.word	.L69+1
 2270 0034 AD000000 		.word	.L66+1
 2271 0038 AD000000 		.word	.L66+1
 2272 003c AD000000 		.word	.L66+1
 2273 0040 81000000 		.word	.L70+1
 2274 0044 AD000000 		.word	.L66+1
 2275 0048 AD000000 		.word	.L66+1
 2276 004c AD000000 		.word	.L66+1
 2277 0050 97000000 		.word	.L71+1
 2278              	.L68:
 499:../LSM9DS1_Driver.c **** 	{
 500:../LSM9DS1_Driver.c **** 		case 4:
 501:../LSM9DS1_Driver.c **** 			mRes = magSensitivity[0];
 2279              		.loc 1 501 0
 2280 0054 40F20003 		movw	r3, #:lower16:magSensitivity
 2281 0058 C0F20003 		movt	r3, #:upper16:magSensitivity
 2282 005c 1A68     		ldr	r2, [r3, #0]	@ float
 2283 005e 40F20003 		movw	r3, #:lower16:mRes
 2284 0062 C0F20003 		movt	r3, #:upper16:mRes
 2285 0066 1A60     		str	r2, [r3, #0]	@ float
 502:../LSM9DS1_Driver.c **** 			break;
 2286              		.loc 1 502 0
 2287 0068 20E0     		b	.L66
 2288              	.L69:
 503:../LSM9DS1_Driver.c **** 		case 8:
 504:../LSM9DS1_Driver.c **** 			mRes = magSensitivity[1];
 2289              		.loc 1 504 0
 2290 006a 40F20003 		movw	r3, #:lower16:magSensitivity
 2291 006e C0F20003 		movt	r3, #:upper16:magSensitivity
 2292 0072 5A68     		ldr	r2, [r3, #4]	@ float
 2293 0074 40F20003 		movw	r3, #:lower16:mRes
 2294 0078 C0F20003 		movt	r3, #:upper16:mRes
 2295 007c 1A60     		str	r2, [r3, #0]	@ float
 505:../LSM9DS1_Driver.c **** 			break;
 2296              		.loc 1 505 0
 2297 007e 15E0     		b	.L66
 2298              	.L70:
 506:../LSM9DS1_Driver.c **** 		case 12:
 507:../LSM9DS1_Driver.c **** 			mRes = magSensitivity[2];
 2299              		.loc 1 507 0
 2300 0080 40F20003 		movw	r3, #:lower16:magSensitivity
 2301 0084 C0F20003 		movt	r3, #:upper16:magSensitivity
 2302 0088 9A68     		ldr	r2, [r3, #8]	@ float
 2303 008a 40F20003 		movw	r3, #:lower16:mRes
 2304 008e C0F20003 		movt	r3, #:upper16:mRes
 2305 0092 1A60     		str	r2, [r3, #0]	@ float
 508:../LSM9DS1_Driver.c **** 			break;
 2306              		.loc 1 508 0
 2307 0094 0AE0     		b	.L66
 2308              	.L71:
 509:../LSM9DS1_Driver.c **** 		case 16:
 510:../LSM9DS1_Driver.c **** 			mRes = magSensitivity[3];
 2309              		.loc 1 510 0
 2310 0096 40F20003 		movw	r3, #:lower16:magSensitivity
 2311 009a C0F20003 		movt	r3, #:upper16:magSensitivity
 2312 009e DA68     		ldr	r2, [r3, #12]	@ float
 2313 00a0 40F20003 		movw	r3, #:lower16:mRes
 2314 00a4 C0F20003 		movt	r3, #:upper16:mRes
 2315 00a8 1A60     		str	r2, [r3, #0]	@ float
 511:../LSM9DS1_Driver.c **** 			break;
 2316              		.loc 1 511 0
 2317 00aa 00BF     		nop
 2318              	.L66:
 512:../LSM9DS1_Driver.c **** 	}
 513:../LSM9DS1_Driver.c **** 
 514:../LSM9DS1_Driver.c **** }
 2319              		.loc 1 514 0
 2320 00ac BD46     		mov	sp, r7
 2321 00ae 80BC     		pop	{r7}
 2322 00b0 7047     		bx	lr
 2323              		.cfi_endproc
 2324              	.LFE141:
 2326 00b2 00BF     		.section	.text.delay,"ax",%progbits
 2327              		.align	2
 2328              		.global	delay
 2329              		.thumb
 2330              		.thumb_func
 2332              	delay:
 2333              	.LFB142:
 515:../LSM9DS1_Driver.c **** 
 516:../LSM9DS1_Driver.c **** void delay(int d)
 517:../LSM9DS1_Driver.c **** {
 2334              		.loc 1 517 0
 2335              		.cfi_startproc
 2336              		@ args = 0, pretend = 0, frame = 16
 2337              		@ frame_needed = 1, uses_anonymous_args = 0
 2338              		@ link register save eliminated.
 2339 0000 80B4     		push	{r7}
 2340              	.LCFI64:
 2341              		.cfi_def_cfa_offset 4
 2342              		.cfi_offset 7, -4
 2343 0002 85B0     		sub	sp, sp, #20
 2344              	.LCFI65:
 2345              		.cfi_def_cfa_offset 24
 2346 0004 00AF     		add	r7, sp, #0
 2347              	.LCFI66:
 2348              		.cfi_def_cfa_register 7
 2349 0006 7860     		str	r0, [r7, #4]
 2350              	.LBB5:
 518:../LSM9DS1_Driver.c **** 	for(int i = 0; i < d; i++) i++;
 2351              		.loc 1 518 0
 2352 0008 4FF00003 		mov	r3, #0
 2353 000c FB60     		str	r3, [r7, #12]
 2354 000e 07E0     		b	.L74
 2355              	.L75:
 2356              		.loc 1 518 0 is_stmt 0 discriminator 2
 2357 0010 FB68     		ldr	r3, [r7, #12]
 2358 0012 03F10103 		add	r3, r3, #1
 2359 0016 FB60     		str	r3, [r7, #12]
 2360 0018 FB68     		ldr	r3, [r7, #12]
 2361 001a 03F10103 		add	r3, r3, #1
 2362 001e FB60     		str	r3, [r7, #12]
 2363              	.L74:
 2364              		.loc 1 518 0 discriminator 1
 2365 0020 FA68     		ldr	r2, [r7, #12]
 2366 0022 7B68     		ldr	r3, [r7, #4]
 2367 0024 9A42     		cmp	r2, r3
 2368 0026 F3DB     		blt	.L75
 2369              	.LBE5:
 519:../LSM9DS1_Driver.c **** }
 2370              		.loc 1 519 0 is_stmt 1
 2371 0028 07F11407 		add	r7, r7, #20
 2372 002c BD46     		mov	sp, r7
 2373 002e 80BC     		pop	{r7}
 2374 0030 7047     		bx	lr
 2375              		.cfi_endproc
 2376              	.LFE142:
 2378 0032 00BF     		.section	.text.I2CreadByte,"ax",%progbits
 2379              		.align	2
 2380              		.global	I2CreadByte
 2381              		.thumb
 2382              		.thumb_func
 2384              	I2CreadByte:
 2385              	.LFB143:
 520:../LSM9DS1_Driver.c **** 
 521:../LSM9DS1_Driver.c **** uint8_t I2CreadByte(uint8_t address, uint8_t subAddress)
 522:../LSM9DS1_Driver.c **** {
 2386              		.loc 1 522 0
 2387              		.cfi_startproc
 2388              		@ args = 0, pretend = 0, frame = 40
 2389              		@ frame_needed = 1, uses_anonymous_args = 0
 2390 0000 80B5     		push	{r7, lr}
 2391              	.LCFI67:
 2392              		.cfi_def_cfa_offset 8
 2393              		.cfi_offset 7, -8
 2394              		.cfi_offset 14, -4
 2395 0002 8AB0     		sub	sp, sp, #40
 2396              	.LCFI68:
 2397              		.cfi_def_cfa_offset 48
 2398 0004 00AF     		add	r7, sp, #0
 2399              	.LCFI69:
 2400              		.cfi_def_cfa_register 7
 2401 0006 0246     		mov	r2, r0
 2402 0008 0B46     		mov	r3, r1
 2403 000a FA71     		strb	r2, [r7, #7]
 2404 000c BB71     		strb	r3, [r7, #6]
 523:../LSM9DS1_Driver.c **** 	uint32_t stageOfReading = 0;
 2405              		.loc 1 523 0
 2406 000e 4FF00003 		mov	r3, #0
 2407 0012 7B62     		str	r3, [r7, #36]
 524:../LSM9DS1_Driver.c **** 
 525:../LSM9DS1_Driver.c **** 	//deviceAddress address = *((deviceAddress*)T);
 526:../LSM9DS1_Driver.c **** 
 527:../LSM9DS1_Driver.c **** 		I2C001_DataType data1;
 528:../LSM9DS1_Driver.c **** 		data1.Data1.TDF_Type = I2C_TDF_MStart;
 2408              		.loc 1 528 0
 2409 0014 4FF00403 		mov	r3, #4
 2410 0018 87F82130 		strb	r3, [r7, #33]
 529:../LSM9DS1_Driver.c **** 		data1.Data1.Data = ((address<<1) | I2C_WRITE);
 2411              		.loc 1 529 0
 2412 001c FB79     		ldrb	r3, [r7, #7]
 2413 001e 4FEA4303 		lsl	r3, r3, #1
 2414 0022 DBB2     		uxtb	r3, r3
 2415 0024 87F82030 		strb	r3, [r7, #32]
 530:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data1));
 2416              		.loc 1 530 0
 2417 0028 00BF     		nop
 2418              	.L77:
 2419              		.loc 1 530 0 is_stmt 0 discriminator 1
 2420 002a 07F12003 		add	r3, r7, #32
 2421 002e 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 2422 0032 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 2423 0036 1946     		mov	r1, r3
 2424 0038 FFF7FEFF 		bl	I2C001_WriteData
 2425 003c 0346     		mov	r3, r0
 2426 003e 002B     		cmp	r3, #0
 2427 0040 F3D0     		beq	.L77
 531:../LSM9DS1_Driver.c **** 
 532:../LSM9DS1_Driver.c **** 		delay(DELAY);
 2428              		.loc 1 532 0 is_stmt 1
 2429 0042 42F6E060 		movw	r0, #12000
 2430 0046 FFF7FEFF 		bl	delay
 533:../LSM9DS1_Driver.c **** 
 534:../LSM9DS1_Driver.c **** 		I2C001_DataType data2;
 535:../LSM9DS1_Driver.c **** 		data2.Data1.TDF_Type = I2C_TDF_MTxData;
 2431              		.loc 1 535 0
 2432 004a 4FF00003 		mov	r3, #0
 2433 004e 7B77     		strb	r3, [r7, #29]
 536:../LSM9DS1_Driver.c **** 		data2.Data1.Data = subAddress;
 2434              		.loc 1 536 0
 2435 0050 BB79     		ldrb	r3, [r7, #6]
 2436 0052 3B77     		strb	r3, [r7, #28]
 537:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data2));
 2437              		.loc 1 537 0
 2438 0054 00BF     		nop
 2439              	.L78:
 2440              		.loc 1 537 0 is_stmt 0 discriminator 1
 2441 0056 07F11C03 		add	r3, r7, #28
 2442 005a 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 2443 005e C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 2444 0062 1946     		mov	r1, r3
 2445 0064 FFF7FEFF 		bl	I2C001_WriteData
 2446 0068 0346     		mov	r3, r0
 2447 006a 002B     		cmp	r3, #0
 2448 006c F3D0     		beq	.L78
 538:../LSM9DS1_Driver.c **** 
 539:../LSM9DS1_Driver.c **** 		delay(DELAY);
 2449              		.loc 1 539 0 is_stmt 1
 2450 006e 42F6E060 		movw	r0, #12000
 2451 0072 FFF7FEFF 		bl	delay
 540:../LSM9DS1_Driver.c **** 
 541:../LSM9DS1_Driver.c **** 
 542:../LSM9DS1_Driver.c **** 		I2C001_DataType data3;
 543:../LSM9DS1_Driver.c **** 		data3.Data1.TDF_Type = I2C_TDF_MRStart;
 2452              		.loc 1 543 0
 2453 0076 4FF00503 		mov	r3, #5
 2454 007a 7B76     		strb	r3, [r7, #25]
 544:../LSM9DS1_Driver.c **** 		data3.Data1.Data = ((address<<1) | I2C_READ);
 2455              		.loc 1 544 0
 2456 007c FB79     		ldrb	r3, [r7, #7]
 2457 007e 4FEA4303 		lsl	r3, r3, #1
 2458 0082 DBB2     		uxtb	r3, r3
 2459 0084 43F00103 		orr	r3, r3, #1
 2460 0088 DBB2     		uxtb	r3, r3
 2461 008a 3B76     		strb	r3, [r7, #24]
 545:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data3));
 2462              		.loc 1 545 0
 2463 008c 00BF     		nop
 2464              	.L79:
 2465              		.loc 1 545 0 is_stmt 0 discriminator 1
 2466 008e 07F11803 		add	r3, r7, #24
 2467 0092 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 2468 0096 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 2469 009a 1946     		mov	r1, r3
 2470 009c FFF7FEFF 		bl	I2C001_WriteData
 2471 00a0 0346     		mov	r3, r0
 2472 00a2 002B     		cmp	r3, #0
 2473 00a4 F3D0     		beq	.L79
 546:../LSM9DS1_Driver.c **** 
 547:../LSM9DS1_Driver.c **** 		delay(DELAY);
 2474              		.loc 1 547 0 is_stmt 1
 2475 00a6 42F6E060 		movw	r0, #12000
 2476 00aa FFF7FEFF 		bl	delay
 548:../LSM9DS1_Driver.c **** 
 549:../LSM9DS1_Driver.c **** 
 550:../LSM9DS1_Driver.c **** 		I2C001_DataType data4;
 551:../LSM9DS1_Driver.c **** 		data4.Data1.TDF_Type = I2C_TDF_MRxAck1;
 2477              		.loc 1 551 0
 2478 00ae 4FF00303 		mov	r3, #3
 2479 00b2 7B75     		strb	r3, [r7, #21]
 552:../LSM9DS1_Driver.c **** 		data4.Data1.Data = ubyteFF;
 2480              		.loc 1 552 0
 2481 00b4 4FF0FF03 		mov	r3, #255
 2482 00b8 3B75     		strb	r3, [r7, #20]
 553:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data4));
 2483              		.loc 1 553 0
 2484 00ba 00BF     		nop
 2485              	.L80:
 2486              		.loc 1 553 0 is_stmt 0 discriminator 1
 2487 00bc 07F11403 		add	r3, r7, #20
 2488 00c0 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 2489 00c4 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 2490 00c8 1946     		mov	r1, r3
 2491 00ca FFF7FEFF 		bl	I2C001_WriteData
 2492 00ce 0346     		mov	r3, r0
 2493 00d0 002B     		cmp	r3, #0
 2494 00d2 F3D0     		beq	.L80
 554:../LSM9DS1_Driver.c **** 
 555:../LSM9DS1_Driver.c **** 		delay(DELAY);
 2495              		.loc 1 555 0 is_stmt 1
 2496 00d4 42F6E060 		movw	r0, #12000
 2497 00d8 FFF7FEFF 		bl	delay
 556:../LSM9DS1_Driver.c **** 
 557:../LSM9DS1_Driver.c **** 		I2C001_DataType data5;
 558:../LSM9DS1_Driver.c **** 		data5.Data1.TDF_Type = I2C_TDF_MStop;
 2498              		.loc 1 558 0
 2499 00dc 4FF00603 		mov	r3, #6
 2500 00e0 7B74     		strb	r3, [r7, #17]
 559:../LSM9DS1_Driver.c **** 		data5.Data1.Data = ubyteFF;
 2501              		.loc 1 559 0
 2502 00e2 4FF0FF03 		mov	r3, #255
 2503 00e6 3B74     		strb	r3, [r7, #16]
 560:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data5));
 2504              		.loc 1 560 0
 2505 00e8 00BF     		nop
 2506              	.L81:
 2507              		.loc 1 560 0 is_stmt 0 discriminator 1
 2508 00ea 07F11003 		add	r3, r7, #16
 2509 00ee 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 2510 00f2 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 2511 00f6 1946     		mov	r1, r3
 2512 00f8 FFF7FEFF 		bl	I2C001_WriteData
 2513 00fc 0346     		mov	r3, r0
 2514 00fe 002B     		cmp	r3, #0
 2515 0100 F3D0     		beq	.L81
 561:../LSM9DS1_Driver.c **** 		stageOfReading++;
 2516              		.loc 1 561 0 is_stmt 1
 2517 0102 7B6A     		ldr	r3, [r7, #36]
 2518 0104 03F10103 		add	r3, r3, #1
 2519 0108 7B62     		str	r3, [r7, #36]
 562:../LSM9DS1_Driver.c **** 
 563:../LSM9DS1_Driver.c **** 		delay(DELAY);
 2520              		.loc 1 563 0
 2521 010a 42F6E060 		movw	r0, #12000
 2522 010e FFF7FEFF 		bl	delay
 564:../LSM9DS1_Driver.c **** 
 565:../LSM9DS1_Driver.c **** 		uint16_t DataReceive1 = 0;
 2523              		.loc 1 565 0
 2524 0112 4FF00003 		mov	r3, #0
 2525 0116 FB81     		strh	r3, [r7, #14]	@ movhi
 566:../LSM9DS1_Driver.c **** 		if(I2C001_ReadData(&I2C001_Handle0,&DataReceive1))
 2526              		.loc 1 566 0
 2527 0118 07F10E03 		add	r3, r7, #14
 2528 011c 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 2529 0120 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 2530 0124 1946     		mov	r1, r3
 2531 0126 FFF7FEFF 		bl	I2C001_ReadData
 2532 012a 0346     		mov	r3, r0
 2533 012c 002B     		cmp	r3, #0
 2534 012e 08D0     		beq	.L82
 567:../LSM9DS1_Driver.c **** 		{
 568:../LSM9DS1_Driver.c **** 			stageOfReading++;
 2535              		.loc 1 568 0
 2536 0130 7B6A     		ldr	r3, [r7, #36]
 2537 0132 03F10103 		add	r3, r3, #1
 2538 0136 7B62     		str	r3, [r7, #36]
 569:../LSM9DS1_Driver.c **** 			delay(DELAY);
 2539              		.loc 1 569 0
 2540 0138 42F6E060 		movw	r0, #12000
 2541 013c FFF7FEFF 		bl	delay
 2542 0140 03E0     		b	.L83
 2543              	.L82:
 570:../LSM9DS1_Driver.c **** 		}
 571:../LSM9DS1_Driver.c **** 		else
 572:../LSM9DS1_Driver.c **** 		{
 573:../LSM9DS1_Driver.c **** 			stageOfReading--;
 2544              		.loc 1 573 0
 2545 0142 7B6A     		ldr	r3, [r7, #36]
 2546 0144 03F1FF33 		add	r3, r3, #-1
 2547 0148 7B62     		str	r3, [r7, #36]
 2548              	.L83:
 574:../LSM9DS1_Driver.c **** 		}
 575:../LSM9DS1_Driver.c **** 
 576:../LSM9DS1_Driver.c **** 		return (uint8_t)DataReceive1;
 2549              		.loc 1 576 0
 2550 014a FB89     		ldrh	r3, [r7, #14]
 2551 014c DBB2     		uxtb	r3, r3
 577:../LSM9DS1_Driver.c **** }
 2552              		.loc 1 577 0
 2553 014e 1846     		mov	r0, r3
 2554 0150 07F12807 		add	r7, r7, #40
 2555 0154 BD46     		mov	sp, r7
 2556 0156 80BD     		pop	{r7, pc}
 2557              		.cfi_endproc
 2558              	.LFE143:
 2560              		.section	.text.mReadByte,"ax",%progbits
 2561              		.align	2
 2562              		.global	mReadByte
 2563              		.thumb
 2564              		.thumb_func
 2566              	mReadByte:
 2567              	.LFB144:
 578:../LSM9DS1_Driver.c **** 
 579:../LSM9DS1_Driver.c **** 
 580:../LSM9DS1_Driver.c **** uint8_t mReadByte(uint8_t subAddress)
 581:../LSM9DS1_Driver.c **** {
 2568              		.loc 1 581 0
 2569              		.cfi_startproc
 2570              		@ args = 0, pretend = 0, frame = 8
 2571              		@ frame_needed = 1, uses_anonymous_args = 0
 2572 0000 80B5     		push	{r7, lr}
 2573              	.LCFI70:
 2574              		.cfi_def_cfa_offset 8
 2575              		.cfi_offset 7, -8
 2576              		.cfi_offset 14, -4
 2577 0002 82B0     		sub	sp, sp, #8
 2578              	.LCFI71:
 2579              		.cfi_def_cfa_offset 16
 2580 0004 00AF     		add	r7, sp, #0
 2581              	.LCFI72:
 2582              		.cfi_def_cfa_register 7
 2583 0006 0346     		mov	r3, r0
 2584 0008 FB71     		strb	r3, [r7, #7]
 582:../LSM9DS1_Driver.c **** 	// Whether we're using I2C or SPI, read a byte using the
 583:../LSM9DS1_Driver.c **** 	// accelerometer-specific I2C address or SPI CS pin.
 584:../LSM9DS1_Driver.c **** 	if (settings.device.commInterface == IMU_MODE_I2C)
 2585              		.loc 1 584 0
 2586 000a 40F20003 		movw	r3, #:lower16:settings
 2587 000e C0F20003 		movt	r3, #:upper16:settings
 2588 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2589 0014 012B     		cmp	r3, #1
 2590 0016 0BD1     		bne	.L86
 585:../LSM9DS1_Driver.c **** 		return I2CreadByte(_mAddress, subAddress);
 2591              		.loc 1 585 0
 2592 0018 40F20003 		movw	r3, #:lower16:_mAddress
 2593 001c C0F20003 		movt	r3, #:upper16:_mAddress
 2594 0020 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 2595 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2596 0024 1046     		mov	r0, r2
 2597 0026 1946     		mov	r1, r3
 2598 0028 FFF7FEFF 		bl	I2CreadByte
 2599 002c 0346     		mov	r3, r0
 2600 002e FFE7     		b	.L85
 2601              	.L86:
 2602              	.L85:
 586:../LSM9DS1_Driver.c **** 	/*else if (settings.device.commInterface == IMU_MODE_SPI)
 587:../LSM9DS1_Driver.c **** 		return SPIreadByte(_mAddress, subAddress);*/
 588:../LSM9DS1_Driver.c **** }
 2603              		.loc 1 588 0
 2604 0030 1846     		mov	r0, r3
 2605 0032 07F10807 		add	r7, r7, #8
 2606 0036 BD46     		mov	sp, r7
 2607 0038 80BD     		pop	{r7, pc}
 2608              		.cfi_endproc
 2609              	.LFE144:
 2611 003a 00BF     		.section	.text.xgReadByte,"ax",%progbits
 2612              		.align	2
 2613              		.global	xgReadByte
 2614              		.thumb
 2615              		.thumb_func
 2617              	xgReadByte:
 2618              	.LFB145:
 589:../LSM9DS1_Driver.c **** 
 590:../LSM9DS1_Driver.c **** uint8_t xgReadByte(uint8_t subAddress)
 591:../LSM9DS1_Driver.c **** {
 2619              		.loc 1 591 0
 2620              		.cfi_startproc
 2621              		@ args = 0, pretend = 0, frame = 8
 2622              		@ frame_needed = 1, uses_anonymous_args = 0
 2623 0000 80B5     		push	{r7, lr}
 2624              	.LCFI73:
 2625              		.cfi_def_cfa_offset 8
 2626              		.cfi_offset 7, -8
 2627              		.cfi_offset 14, -4
 2628 0002 82B0     		sub	sp, sp, #8
 2629              	.LCFI74:
 2630              		.cfi_def_cfa_offset 16
 2631 0004 00AF     		add	r7, sp, #0
 2632              	.LCFI75:
 2633              		.cfi_def_cfa_register 7
 2634 0006 0346     		mov	r3, r0
 2635 0008 FB71     		strb	r3, [r7, #7]
 592:../LSM9DS1_Driver.c **** 	// Whether we're using I2C or SPI, read a byte using the
 593:../LSM9DS1_Driver.c **** 	// gyro-specific I2C address or SPI CS pin.
 594:../LSM9DS1_Driver.c **** 	if (settings.device.commInterface == IMU_MODE_I2C)
 2636              		.loc 1 594 0
 2637 000a 40F20003 		movw	r3, #:lower16:settings
 2638 000e C0F20003 		movt	r3, #:upper16:settings
 2639 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2640 0014 012B     		cmp	r3, #1
 2641 0016 0BD1     		bne	.L89
 595:../LSM9DS1_Driver.c **** 		return I2CreadByte(_xgAddress, subAddress);
 2642              		.loc 1 595 0
 2643 0018 40F20003 		movw	r3, #:lower16:_xgAddress
 2644 001c C0F20003 		movt	r3, #:upper16:_xgAddress
 2645 0020 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 2646 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2647 0024 1046     		mov	r0, r2
 2648 0026 1946     		mov	r1, r3
 2649 0028 FFF7FEFF 		bl	I2CreadByte
 2650 002c 0346     		mov	r3, r0
 2651 002e FFE7     		b	.L88
 2652              	.L89:
 2653              	.L88:
 596:../LSM9DS1_Driver.c **** 	/*else if (settings.device.commInterface == IMU_MODE_SPI)
 597:../LSM9DS1_Driver.c **** 		return SPIreadByte(_xgAddress, subAddress);*/
 598:../LSM9DS1_Driver.c **** }
 2654              		.loc 1 598 0
 2655 0030 1846     		mov	r0, r3
 2656 0032 07F10807 		add	r7, r7, #8
 2657 0036 BD46     		mov	sp, r7
 2658 0038 80BD     		pop	{r7, pc}
 2659              		.cfi_endproc
 2660              	.LFE145:
 2662 003a 00BF     		.section	.text.initGyro,"ax",%progbits
 2663              		.align	2
 2664              		.global	initGyro
 2665              		.thumb
 2666              		.thumb_func
 2668              	initGyro:
 2669              	.LFB146:
 599:../LSM9DS1_Driver.c **** 
 600:../LSM9DS1_Driver.c **** void initGyro(void)
 601:../LSM9DS1_Driver.c **** {
 2670              		.loc 1 601 0
 2671              		.cfi_startproc
 2672              		@ args = 0, pretend = 0, frame = 8
 2673              		@ frame_needed = 1, uses_anonymous_args = 0
 2674 0000 80B5     		push	{r7, lr}
 2675              	.LCFI76:
 2676              		.cfi_def_cfa_offset 8
 2677              		.cfi_offset 7, -8
 2678              		.cfi_offset 14, -4
 2679 0002 82B0     		sub	sp, sp, #8
 2680              	.LCFI77:
 2681              		.cfi_def_cfa_offset 16
 2682 0004 00AF     		add	r7, sp, #0
 2683              	.LCFI78:
 2684              		.cfi_def_cfa_register 7
 602:../LSM9DS1_Driver.c **** 	uint8_t tempRegValue = 0;
 2685              		.loc 1 602 0
 2686 0006 4FF00003 		mov	r3, #0
 2687 000a FB71     		strb	r3, [r7, #7]
 603:../LSM9DS1_Driver.c **** 
 604:../LSM9DS1_Driver.c **** 	// CTRL_REG1_G (Default value: 0x00)
 605:../LSM9DS1_Driver.c **** 	// [ODR_G2][ODR_G1][ODR_G0][FS_G1][FS_G0][0][BW_G1][BW_G0]
 606:../LSM9DS1_Driver.c **** 	// ODR_G[2:0] - Output data rate selection
 607:../LSM9DS1_Driver.c **** 	// FS_G[1:0] - Gyroscope full-scale selection
 608:../LSM9DS1_Driver.c **** 	// BW_G[1:0] - Gyroscope bandwidth selection
 609:../LSM9DS1_Driver.c **** 
 610:../LSM9DS1_Driver.c **** 	// To disable gyro, set sample rate bits to 0. We'll only set sample
 611:../LSM9DS1_Driver.c **** 	// rate if the gyro is enabled.
 612:../LSM9DS1_Driver.c **** 	if (settings.gyro.enabled)
 2688              		.loc 1 612 0
 2689 000c 40F20003 		movw	r3, #:lower16:settings
 2690 0010 C0F20003 		movt	r3, #:upper16:settings
 2691 0014 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 2692 0016 002B     		cmp	r3, #0
 2693 0018 07D0     		beq	.L92
 613:../LSM9DS1_Driver.c **** 	{
 614:../LSM9DS1_Driver.c **** 		tempRegValue = (settings.gyro.sampleRate & 0x07) << 5;
 2694              		.loc 1 614 0
 2695 001a 40F20003 		movw	r3, #:lower16:settings
 2696 001e C0F20003 		movt	r3, #:upper16:settings
 2697 0022 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 2698 0024 4FEA4313 		lsl	r3, r3, #5
 2699 0028 FB71     		strb	r3, [r7, #7]
 2700              	.L92:
 615:../LSM9DS1_Driver.c **** 	}
 616:../LSM9DS1_Driver.c **** 
 617:../LSM9DS1_Driver.c **** 	switch (settings.gyro.scale)
 2701              		.loc 1 617 0
 2702 002a 40F20003 		movw	r3, #:lower16:settings
 2703 002e C0F20003 		movt	r3, #:upper16:settings
 2704 0032 DB88     		ldrh	r3, [r3, #6]
 2705 0034 B3F5FA7F 		cmp	r3, #500
 2706 0038 03D0     		beq	.L94
 2707 003a B3F5FA6F 		cmp	r3, #2000
 2708 003e 05D0     		beq	.L95
 2709 0040 09E0     		b	.L93
 2710              	.L94:
 618:../LSM9DS1_Driver.c **** 	{
 619:../LSM9DS1_Driver.c **** 		case 500:
 620:../LSM9DS1_Driver.c **** 			tempRegValue |= (0x1 << 3);
 2711              		.loc 1 620 0
 2712 0042 FB79     		ldrb	r3, [r7, #7]
 2713 0044 43F00803 		orr	r3, r3, #8
 2714 0048 FB71     		strb	r3, [r7, #7]
 621:../LSM9DS1_Driver.c **** 			break;
 2715              		.loc 1 621 0
 2716 004a 04E0     		b	.L93
 2717              	.L95:
 622:../LSM9DS1_Driver.c **** 		case 2000:
 623:../LSM9DS1_Driver.c **** 			tempRegValue |= (0x3 << 3);
 2718              		.loc 1 623 0
 2719 004c FB79     		ldrb	r3, [r7, #7]
 2720 004e 43F01803 		orr	r3, r3, #24
 2721 0052 FB71     		strb	r3, [r7, #7]
 624:../LSM9DS1_Driver.c **** 			break;
 2722              		.loc 1 624 0
 2723 0054 00BF     		nop
 2724              	.L93:
 625:../LSM9DS1_Driver.c **** 		// Otherwise we'll set it to 245 dps (0x0 << 4)
 626:../LSM9DS1_Driver.c **** 	}
 627:../LSM9DS1_Driver.c **** 	tempRegValue |= (settings.gyro.bandwidth & 0x3);
 2725              		.loc 1 627 0
 2726 0056 40F20003 		movw	r3, #:lower16:settings
 2727 005a C0F20003 		movt	r3, #:upper16:settings
 2728 005e 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 2729 0060 DBB2     		uxtb	r3, r3
 2730 0062 03F00303 		and	r3, r3, #3
 2731 0066 DAB2     		uxtb	r2, r3
 2732 0068 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2733 006a 1343     		orrs	r3, r3, r2
 2734 006c DBB2     		uxtb	r3, r3
 2735 006e FB71     		strb	r3, [r7, #7]
 628:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG1_G, tempRegValue);
 2736              		.loc 1 628 0
 2737 0070 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2738 0072 4FF01000 		mov	r0, #16
 2739 0076 1946     		mov	r1, r3
 2740 0078 FFF7FEFF 		bl	xgWriteByte
 629:../LSM9DS1_Driver.c **** 
 630:../LSM9DS1_Driver.c **** 	// CTRL_REG2_G (Default value: 0x00)
 631:../LSM9DS1_Driver.c **** 	// [0][0][0][0][INT_SEL1][INT_SEL0][OUT_SEL1][OUT_SEL0]
 632:../LSM9DS1_Driver.c **** 	// INT_SEL[1:0] - INT selection configuration
 633:../LSM9DS1_Driver.c **** 	// OUT_SEL[1:0] - Out selection configuration
 634:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG2_G, 0x00);
 2741              		.loc 1 634 0
 2742 007c 4FF01100 		mov	r0, #17
 2743 0080 4FF00001 		mov	r1, #0
 2744 0084 FFF7FEFF 		bl	xgWriteByte
 635:../LSM9DS1_Driver.c **** 
 636:../LSM9DS1_Driver.c **** 	// CTRL_REG3_G (Default value: 0x00)
 637:../LSM9DS1_Driver.c **** 	// [LP_mode][HP_EN][0][0][HPCF3_G][HPCF2_G][HPCF1_G][HPCF0_G]
 638:../LSM9DS1_Driver.c **** 	// LP_mode - Low-power mode enable (0: disabled, 1: enabled)
 639:../LSM9DS1_Driver.c **** 	// HP_EN - HPF enable (0:disabled, 1: enabled)
 640:../LSM9DS1_Driver.c **** 	// HPCF_G[3:0] - HPF cutoff frequency
 641:../LSM9DS1_Driver.c **** 	tempRegValue = settings.gyro.lowPowerEnable ? (1<<7) : 0;
 2745              		.loc 1 641 0
 2746 0088 40F20003 		movw	r3, #:lower16:settings
 2747 008c C0F20003 		movt	r3, #:upper16:settings
 2748 0090 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 2749 0092 002B     		cmp	r3, #0
 2750 0094 02D0     		beq	.L96
 2751              		.loc 1 641 0 is_stmt 0 discriminator 1
 2752 0096 4FF08003 		mov	r3, #128
 2753 009a 01E0     		b	.L97
 2754              	.L96:
 2755              		.loc 1 641 0 discriminator 2
 2756 009c 4FF00003 		mov	r3, #0
 2757              	.L97:
 2758              		.loc 1 641 0 discriminator 3
 2759 00a0 FB71     		strb	r3, [r7, #7]
 642:../LSM9DS1_Driver.c **** 	if (settings.gyro.HPFEnable)
 2760              		.loc 1 642 0 is_stmt 1 discriminator 3
 2761 00a2 40F20003 		movw	r3, #:lower16:settings
 2762 00a6 C0F20003 		movt	r3, #:upper16:settings
 2763 00aa DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 2764 00ac 002B     		cmp	r3, #0
 2765 00ae 0FD0     		beq	.L98
 643:../LSM9DS1_Driver.c **** 	{
 644:../LSM9DS1_Driver.c **** 		tempRegValue |= ((1<<6) | (settings.gyro.HPFCutoff & 0x0F));
 2766              		.loc 1 644 0
 2767 00b0 40F20003 		movw	r3, #:lower16:settings
 2768 00b4 C0F20003 		movt	r3, #:upper16:settings
 2769 00b8 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 2770 00ba DBB2     		uxtb	r3, r3
 2771 00bc 03F00F03 		and	r3, r3, #15
 2772 00c0 DBB2     		uxtb	r3, r3
 2773 00c2 43F04003 		orr	r3, r3, #64
 2774 00c6 DAB2     		uxtb	r2, r3
 2775 00c8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2776 00ca 1343     		orrs	r3, r3, r2
 2777 00cc DBB2     		uxtb	r3, r3
 2778 00ce FB71     		strb	r3, [r7, #7]
 2779              	.L98:
 645:../LSM9DS1_Driver.c **** 	}
 646:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG3_G, tempRegValue);
 2780              		.loc 1 646 0
 2781 00d0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2782 00d2 4FF01200 		mov	r0, #18
 2783 00d6 1946     		mov	r1, r3
 2784 00d8 FFF7FEFF 		bl	xgWriteByte
 647:../LSM9DS1_Driver.c **** 
 648:../LSM9DS1_Driver.c **** 	// CTRL_REG4 (Default value: 0x38)
 649:../LSM9DS1_Driver.c **** 	// [0][0][Zen_G][Yen_G][Xen_G][0][LIR_XL1][4D_XL1]
 650:../LSM9DS1_Driver.c **** 	// Zen_G - Z-axis output enable (0:disable, 1:enable)
 651:../LSM9DS1_Driver.c **** 	// Yen_G - Y-axis output enable (0:disable, 1:enable)
 652:../LSM9DS1_Driver.c **** 	// Xen_G - X-axis output enable (0:disable, 1:enable)
 653:../LSM9DS1_Driver.c **** 	// LIR_XL1 - Latched interrupt (0:not latched, 1:latched)
 654:../LSM9DS1_Driver.c **** 	// 4D_XL1 - 4D option on interrupt (0:6D used, 1:4D used)
 655:../LSM9DS1_Driver.c **** 	tempRegValue = 0;
 2785              		.loc 1 655 0
 2786 00dc 4FF00003 		mov	r3, #0
 2787 00e0 FB71     		strb	r3, [r7, #7]
 656:../LSM9DS1_Driver.c **** 	if (settings.gyro.enableZ) tempRegValue |= (1<<5);
 2788              		.loc 1 656 0
 2789 00e2 40F20003 		movw	r3, #:lower16:settings
 2790 00e6 C0F20003 		movt	r3, #:upper16:settings
 2791 00ea DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
 2792 00ec 002B     		cmp	r3, #0
 2793 00ee 03D0     		beq	.L99
 2794              		.loc 1 656 0 is_stmt 0 discriminator 1
 2795 00f0 FB79     		ldrb	r3, [r7, #7]
 2796 00f2 43F02003 		orr	r3, r3, #32
 2797 00f6 FB71     		strb	r3, [r7, #7]
 2798              	.L99:
 657:../LSM9DS1_Driver.c **** 	if (settings.gyro.enableY) tempRegValue |= (1<<4);
 2799              		.loc 1 657 0 is_stmt 1
 2800 00f8 40F20003 		movw	r3, #:lower16:settings
 2801 00fc C0F20003 		movt	r3, #:upper16:settings
 2802 0100 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
 2803 0102 002B     		cmp	r3, #0
 2804 0104 03D0     		beq	.L100
 2805              		.loc 1 657 0 is_stmt 0 discriminator 1
 2806 0106 FB79     		ldrb	r3, [r7, #7]
 2807 0108 43F01003 		orr	r3, r3, #16
 2808 010c FB71     		strb	r3, [r7, #7]
 2809              	.L100:
 658:../LSM9DS1_Driver.c **** 	if (settings.gyro.enableX) tempRegValue |= (1<<3);
 2810              		.loc 1 658 0 is_stmt 1
 2811 010e 40F20003 		movw	r3, #:lower16:settings
 2812 0112 C0F20003 		movt	r3, #:upper16:settings
 2813 0116 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
 2814 0118 002B     		cmp	r3, #0
 2815 011a 03D0     		beq	.L101
 2816              		.loc 1 658 0 is_stmt 0 discriminator 1
 2817 011c FB79     		ldrb	r3, [r7, #7]
 2818 011e 43F00803 		orr	r3, r3, #8
 2819 0122 FB71     		strb	r3, [r7, #7]
 2820              	.L101:
 659:../LSM9DS1_Driver.c **** 	if (settings.gyro.latchInterrupt) tempRegValue |= (1<<1);
 2821              		.loc 1 659 0 is_stmt 1
 2822 0124 40F20003 		movw	r3, #:lower16:settings
 2823 0128 C0F20003 		movt	r3, #:upper16:settings
 2824 012c 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 2825 012e 002B     		cmp	r3, #0
 2826 0130 03D0     		beq	.L102
 2827              		.loc 1 659 0 is_stmt 0 discriminator 1
 2828 0132 FB79     		ldrb	r3, [r7, #7]
 2829 0134 43F00203 		orr	r3, r3, #2
 2830 0138 FB71     		strb	r3, [r7, #7]
 2831              	.L102:
 660:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG4, tempRegValue);
 2832              		.loc 1 660 0 is_stmt 1
 2833 013a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2834 013c 4FF01E00 		mov	r0, #30
 2835 0140 1946     		mov	r1, r3
 2836 0142 FFF7FEFF 		bl	xgWriteByte
 661:../LSM9DS1_Driver.c **** 
 662:../LSM9DS1_Driver.c **** 	// ORIENT_CFG_G (Default value: 0x00)
 663:../LSM9DS1_Driver.c **** 	// [0][0][SignX_G][SignY_G][SignZ_G][Orient_2][Orient_1][Orient_0]
 664:../LSM9DS1_Driver.c **** 	// SignX_G - Pitch axis (X) angular rate sign (0: positive, 1: negative)
 665:../LSM9DS1_Driver.c **** 	// Orient [2:0] - Directional user orientation selection
 666:../LSM9DS1_Driver.c **** 	tempRegValue = 0;
 2837              		.loc 1 666 0
 2838 0146 4FF00003 		mov	r3, #0
 2839 014a FB71     		strb	r3, [r7, #7]
 667:../LSM9DS1_Driver.c **** 	if (settings.gyro.flipX) tempRegValue |= (1<<5);
 2840              		.loc 1 667 0
 2841 014c 40F20003 		movw	r3, #:lower16:settings
 2842 0150 C0F20003 		movt	r3, #:upper16:settings
 2843 0154 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 2844 0156 002B     		cmp	r3, #0
 2845 0158 03D0     		beq	.L103
 2846              		.loc 1 667 0 is_stmt 0 discriminator 1
 2847 015a FB79     		ldrb	r3, [r7, #7]
 2848 015c 43F02003 		orr	r3, r3, #32
 2849 0160 FB71     		strb	r3, [r7, #7]
 2850              	.L103:
 668:../LSM9DS1_Driver.c **** 	if (settings.gyro.flipY) tempRegValue |= (1<<4);
 2851              		.loc 1 668 0 is_stmt 1
 2852 0162 40F20003 		movw	r3, #:lower16:settings
 2853 0166 C0F20003 		movt	r3, #:upper16:settings
 2854 016a 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 2855 016c 002B     		cmp	r3, #0
 2856 016e 03D0     		beq	.L104
 2857              		.loc 1 668 0 is_stmt 0 discriminator 1
 2858 0170 FB79     		ldrb	r3, [r7, #7]
 2859 0172 43F01003 		orr	r3, r3, #16
 2860 0176 FB71     		strb	r3, [r7, #7]
 2861              	.L104:
 669:../LSM9DS1_Driver.c **** 	if (settings.gyro.flipZ) tempRegValue |= (1<<3);
 2862              		.loc 1 669 0 is_stmt 1
 2863 0178 40F20003 		movw	r3, #:lower16:settings
 2864 017c C0F20003 		movt	r3, #:upper16:settings
 2865 0180 DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
 2866 0182 002B     		cmp	r3, #0
 2867 0184 03D0     		beq	.L105
 2868              		.loc 1 669 0 is_stmt 0 discriminator 1
 2869 0186 FB79     		ldrb	r3, [r7, #7]
 2870 0188 43F00803 		orr	r3, r3, #8
 2871 018c FB71     		strb	r3, [r7, #7]
 2872              	.L105:
 670:../LSM9DS1_Driver.c **** 	xgWriteByte(ORIENT_CFG_G, tempRegValue);
 2873              		.loc 1 670 0 is_stmt 1
 2874 018e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2875 0190 4FF01300 		mov	r0, #19
 2876 0194 1946     		mov	r1, r3
 2877 0196 FFF7FEFF 		bl	xgWriteByte
 671:../LSM9DS1_Driver.c **** }
 2878              		.loc 1 671 0
 2879 019a 07F10807 		add	r7, r7, #8
 2880 019e BD46     		mov	sp, r7
 2881 01a0 80BD     		pop	{r7, pc}
 2882              		.cfi_endproc
 2883              	.LFE146:
 2885 01a2 00BF     		.section	.text.xgWriteByte,"ax",%progbits
 2886              		.align	2
 2887              		.global	xgWriteByte
 2888              		.thumb
 2889              		.thumb_func
 2891              	xgWriteByte:
 2892              	.LFB147:
 672:../LSM9DS1_Driver.c **** 
 673:../LSM9DS1_Driver.c **** 
 674:../LSM9DS1_Driver.c **** void xgWriteByte(uint8_t subAddress, uint8_t data)
 675:../LSM9DS1_Driver.c **** {
 2893              		.loc 1 675 0
 2894              		.cfi_startproc
 2895              		@ args = 0, pretend = 0, frame = 8
 2896              		@ frame_needed = 1, uses_anonymous_args = 0
 2897 0000 80B5     		push	{r7, lr}
 2898              	.LCFI79:
 2899              		.cfi_def_cfa_offset 8
 2900              		.cfi_offset 7, -8
 2901              		.cfi_offset 14, -4
 2902 0002 82B0     		sub	sp, sp, #8
 2903              	.LCFI80:
 2904              		.cfi_def_cfa_offset 16
 2905 0004 00AF     		add	r7, sp, #0
 2906              	.LCFI81:
 2907              		.cfi_def_cfa_register 7
 2908 0006 0246     		mov	r2, r0
 2909 0008 0B46     		mov	r3, r1
 2910 000a FA71     		strb	r2, [r7, #7]
 2911 000c BB71     		strb	r3, [r7, #6]
 676:../LSM9DS1_Driver.c **** 	// Whether we're using I2C or SPI, write a byte using the
 677:../LSM9DS1_Driver.c **** 	// gyro-specific I2C address or SPI CS pin.
 678:../LSM9DS1_Driver.c **** 	if (settings.device.commInterface == IMU_MODE_I2C)
 2912              		.loc 1 678 0
 2913 000e 40F20003 		movw	r3, #:lower16:settings
 2914 0012 C0F20003 		movt	r3, #:upper16:settings
 2915 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2916 0018 012B     		cmp	r3, #1
 2917 001a 0BD1     		bne	.L106
 679:../LSM9DS1_Driver.c **** 	{
 680:../LSM9DS1_Driver.c **** 		I2CwriteByte(_xgAddress, subAddress, data);
 2918              		.loc 1 680 0
 2919 001c 40F20003 		movw	r3, #:lower16:_xgAddress
 2920 0020 C0F20003 		movt	r3, #:upper16:_xgAddress
 2921 0024 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 2922 0026 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2923 0028 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2924 002a 0846     		mov	r0, r1
 2925 002c 1146     		mov	r1, r2
 2926 002e 1A46     		mov	r2, r3
 2927 0030 FFF7FEFF 		bl	I2CwriteByte
 2928              	.L106:
 681:../LSM9DS1_Driver.c **** 	}
 682:../LSM9DS1_Driver.c **** }
 2929              		.loc 1 682 0
 2930 0034 07F10807 		add	r7, r7, #8
 2931 0038 BD46     		mov	sp, r7
 2932 003a 80BD     		pop	{r7, pc}
 2933              		.cfi_endproc
 2934              	.LFE147:
 2936              		.section	.text.I2CwriteByte,"ax",%progbits
 2937              		.align	2
 2938              		.global	I2CwriteByte
 2939              		.thumb
 2940              		.thumb_func
 2942              	I2CwriteByte:
 2943              	.LFB148:
 683:../LSM9DS1_Driver.c **** 
 684:../LSM9DS1_Driver.c **** void I2CwriteByte(uint8_t address, uint8_t subAddress, uint8_t data)
 685:../LSM9DS1_Driver.c **** {
 2944              		.loc 1 685 0
 2945              		.cfi_startproc
 2946              		@ args = 0, pretend = 0, frame = 24
 2947              		@ frame_needed = 1, uses_anonymous_args = 0
 2948 0000 80B5     		push	{r7, lr}
 2949              	.LCFI82:
 2950              		.cfi_def_cfa_offset 8
 2951              		.cfi_offset 7, -8
 2952              		.cfi_offset 14, -4
 2953 0002 86B0     		sub	sp, sp, #24
 2954              	.LCFI83:
 2955              		.cfi_def_cfa_offset 32
 2956 0004 00AF     		add	r7, sp, #0
 2957              	.LCFI84:
 2958              		.cfi_def_cfa_register 7
 2959 0006 1346     		mov	r3, r2
 2960 0008 0246     		mov	r2, r0
 2961 000a FA71     		strb	r2, [r7, #7]
 2962 000c 0A46     		mov	r2, r1
 2963 000e BA71     		strb	r2, [r7, #6]
 2964 0010 7B71     		strb	r3, [r7, #5]
 686:../LSM9DS1_Driver.c **** 
 687:../LSM9DS1_Driver.c **** 		I2C001_DataType data1;
 688:../LSM9DS1_Driver.c **** 		data1.Data1.TDF_Type = I2C_TDF_MStart;
 2965              		.loc 1 688 0
 2966 0012 4FF00403 		mov	r3, #4
 2967 0016 7B75     		strb	r3, [r7, #21]
 689:../LSM9DS1_Driver.c **** 		data1.Data1.Data = ((address<<1) | I2C_WRITE);
 2968              		.loc 1 689 0
 2969 0018 FB79     		ldrb	r3, [r7, #7]
 2970 001a 4FEA4303 		lsl	r3, r3, #1
 2971 001e DBB2     		uxtb	r3, r3
 2972 0020 3B75     		strb	r3, [r7, #20]
 690:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data1));
 2973              		.loc 1 690 0
 2974 0022 00BF     		nop
 2975              	.L109:
 2976              		.loc 1 690 0 is_stmt 0 discriminator 1
 2977 0024 07F11403 		add	r3, r7, #20
 2978 0028 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 2979 002c C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 2980 0030 1946     		mov	r1, r3
 2981 0032 FFF7FEFF 		bl	I2C001_WriteData
 2982 0036 0346     		mov	r3, r0
 2983 0038 002B     		cmp	r3, #0
 2984 003a F3D0     		beq	.L109
 691:../LSM9DS1_Driver.c **** 
 692:../LSM9DS1_Driver.c **** 		delay(DELAY);
 2985              		.loc 1 692 0 is_stmt 1
 2986 003c 42F6E060 		movw	r0, #12000
 2987 0040 FFF7FEFF 		bl	delay
 693:../LSM9DS1_Driver.c **** 
 694:../LSM9DS1_Driver.c **** 		I2C001_DataType data2;
 695:../LSM9DS1_Driver.c **** 		data2.Data1.TDF_Type = I2C_TDF_MTxData;
 2988              		.loc 1 695 0
 2989 0044 4FF00003 		mov	r3, #0
 2990 0048 7B74     		strb	r3, [r7, #17]
 696:../LSM9DS1_Driver.c **** 		data2.Data1.Data = subAddress;
 2991              		.loc 1 696 0
 2992 004a BB79     		ldrb	r3, [r7, #6]
 2993 004c 3B74     		strb	r3, [r7, #16]
 697:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data2));
 2994              		.loc 1 697 0
 2995 004e 00BF     		nop
 2996              	.L110:
 2997              		.loc 1 697 0 is_stmt 0 discriminator 1
 2998 0050 07F11003 		add	r3, r7, #16
 2999 0054 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 3000 0058 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 3001 005c 1946     		mov	r1, r3
 3002 005e FFF7FEFF 		bl	I2C001_WriteData
 3003 0062 0346     		mov	r3, r0
 3004 0064 002B     		cmp	r3, #0
 3005 0066 F3D0     		beq	.L110
 698:../LSM9DS1_Driver.c **** 
 699:../LSM9DS1_Driver.c **** 		delay(DELAY);
 3006              		.loc 1 699 0 is_stmt 1
 3007 0068 42F6E060 		movw	r0, #12000
 3008 006c FFF7FEFF 		bl	delay
 700:../LSM9DS1_Driver.c **** 
 701:../LSM9DS1_Driver.c **** 		I2C001_DataType data3;
 702:../LSM9DS1_Driver.c **** 		data3.Data1.TDF_Type = I2C_TDF_MTxData;
 3009              		.loc 1 702 0
 3010 0070 4FF00003 		mov	r3, #0
 3011 0074 7B73     		strb	r3, [r7, #13]
 703:../LSM9DS1_Driver.c **** 		data3.Data1.Data = data;
 3012              		.loc 1 703 0
 3013 0076 7B79     		ldrb	r3, [r7, #5]
 3014 0078 3B73     		strb	r3, [r7, #12]
 704:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data3));
 3015              		.loc 1 704 0
 3016 007a 00BF     		nop
 3017              	.L111:
 3018              		.loc 1 704 0 is_stmt 0 discriminator 1
 3019 007c 07F10C03 		add	r3, r7, #12
 3020 0080 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 3021 0084 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 3022 0088 1946     		mov	r1, r3
 3023 008a FFF7FEFF 		bl	I2C001_WriteData
 3024 008e 0346     		mov	r3, r0
 3025 0090 002B     		cmp	r3, #0
 3026 0092 F3D0     		beq	.L111
 705:../LSM9DS1_Driver.c **** 
 706:../LSM9DS1_Driver.c **** 		delay(DELAY);
 3027              		.loc 1 706 0 is_stmt 1
 3028 0094 42F6E060 		movw	r0, #12000
 3029 0098 FFF7FEFF 		bl	delay
 707:../LSM9DS1_Driver.c **** 
 708:../LSM9DS1_Driver.c **** 		I2C001_DataType data4;
 709:../LSM9DS1_Driver.c **** 		data4.Data1.TDF_Type = I2C_TDF_MStop;
 3030              		.loc 1 709 0
 3031 009c 4FF00603 		mov	r3, #6
 3032 00a0 7B72     		strb	r3, [r7, #9]
 710:../LSM9DS1_Driver.c **** 		data4.Data1.Data = ubyteFF;
 3033              		.loc 1 710 0
 3034 00a2 4FF0FF03 		mov	r3, #255
 3035 00a6 3B72     		strb	r3, [r7, #8]
 711:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data4));
 3036              		.loc 1 711 0
 3037 00a8 00BF     		nop
 3038              	.L112:
 3039              		.loc 1 711 0 is_stmt 0 discriminator 1
 3040 00aa 07F10803 		add	r3, r7, #8
 3041 00ae 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 3042 00b2 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 3043 00b6 1946     		mov	r1, r3
 3044 00b8 FFF7FEFF 		bl	I2C001_WriteData
 3045 00bc 0346     		mov	r3, r0
 3046 00be 002B     		cmp	r3, #0
 3047 00c0 F3D0     		beq	.L112
 712:../LSM9DS1_Driver.c **** 
 713:../LSM9DS1_Driver.c **** 		delay(DELAY);
 3048              		.loc 1 713 0 is_stmt 1
 3049 00c2 42F6E060 		movw	r0, #12000
 3050 00c6 FFF7FEFF 		bl	delay
 714:../LSM9DS1_Driver.c **** }
 3051              		.loc 1 714 0
 3052 00ca 07F11807 		add	r7, r7, #24
 3053 00ce BD46     		mov	sp, r7
 3054 00d0 80BD     		pop	{r7, pc}
 3055              		.cfi_endproc
 3056              	.LFE148:
 3058 00d2 00BF     		.section	.text.initAccel,"ax",%progbits
 3059              		.align	2
 3060              		.global	initAccel
 3061              		.thumb
 3062              		.thumb_func
 3064              	initAccel:
 3065              	.LFB149:
 715:../LSM9DS1_Driver.c **** 
 716:../LSM9DS1_Driver.c **** void initAccel(void)
 717:../LSM9DS1_Driver.c **** {
 3066              		.loc 1 717 0
 3067              		.cfi_startproc
 3068              		@ args = 0, pretend = 0, frame = 8
 3069              		@ frame_needed = 1, uses_anonymous_args = 0
 3070 0000 80B5     		push	{r7, lr}
 3071              	.LCFI85:
 3072              		.cfi_def_cfa_offset 8
 3073              		.cfi_offset 7, -8
 3074              		.cfi_offset 14, -4
 3075 0002 82B0     		sub	sp, sp, #8
 3076              	.LCFI86:
 3077              		.cfi_def_cfa_offset 16
 3078 0004 00AF     		add	r7, sp, #0
 3079              	.LCFI87:
 3080              		.cfi_def_cfa_register 7
 718:../LSM9DS1_Driver.c **** 	uint8_t tempRegValue = 0;
 3081              		.loc 1 718 0
 3082 0006 4FF00003 		mov	r3, #0
 3083 000a FB71     		strb	r3, [r7, #7]
 719:../LSM9DS1_Driver.c **** 
 720:../LSM9DS1_Driver.c **** 	//	CTRL_REG5_XL (0x1F) (Default value: 0x38)
 721:../LSM9DS1_Driver.c **** 	//	[DEC_1][DEC_0][Zen_XL][Yen_XL][Zen_XL][0][0][0]
 722:../LSM9DS1_Driver.c **** 	//	DEC[0:1] - Decimation of accel data on OUT REG and FIFO.
 723:../LSM9DS1_Driver.c **** 	//		00: None, 01: 2 samples, 10: 4 samples 11: 8 samples
 724:../LSM9DS1_Driver.c **** 	//	Zen_XL - Z-axis output enabled
 725:../LSM9DS1_Driver.c **** 	//	Yen_XL - Y-axis output enabled
 726:../LSM9DS1_Driver.c **** 	//	Xen_XL - X-axis output enabled
 727:../LSM9DS1_Driver.c **** 	if (settings.accel.enableZ) tempRegValue |= (1<<5);
 3084              		.loc 1 727 0
 3085 000c 40F20003 		movw	r3, #:lower16:settings
 3086 0010 C0F20003 		movt	r3, #:upper16:settings
 3087 0014 DB7E     		ldrb	r3, [r3, #27]	@ zero_extendqisi2
 3088 0016 002B     		cmp	r3, #0
 3089 0018 03D0     		beq	.L114
 3090              		.loc 1 727 0 is_stmt 0 discriminator 1
 3091 001a FB79     		ldrb	r3, [r7, #7]
 3092 001c 43F02003 		orr	r3, r3, #32
 3093 0020 FB71     		strb	r3, [r7, #7]
 3094              	.L114:
 728:../LSM9DS1_Driver.c **** 	if (settings.accel.enableY) tempRegValue |= (1<<4);
 3095              		.loc 1 728 0 is_stmt 1
 3096 0022 40F20003 		movw	r3, #:lower16:settings
 3097 0026 C0F20003 		movt	r3, #:upper16:settings
 3098 002a 9B7E     		ldrb	r3, [r3, #26]	@ zero_extendqisi2
 3099 002c 002B     		cmp	r3, #0
 3100 002e 03D0     		beq	.L115
 3101              		.loc 1 728 0 is_stmt 0 discriminator 1
 3102 0030 FB79     		ldrb	r3, [r7, #7]
 3103 0032 43F01003 		orr	r3, r3, #16
 3104 0036 FB71     		strb	r3, [r7, #7]
 3105              	.L115:
 729:../LSM9DS1_Driver.c **** 	if (settings.accel.enableX) tempRegValue |= (1<<3);
 3106              		.loc 1 729 0 is_stmt 1
 3107 0038 40F20003 		movw	r3, #:lower16:settings
 3108 003c C0F20003 		movt	r3, #:upper16:settings
 3109 0040 5B7E     		ldrb	r3, [r3, #25]	@ zero_extendqisi2
 3110 0042 002B     		cmp	r3, #0
 3111 0044 03D0     		beq	.L116
 3112              		.loc 1 729 0 is_stmt 0 discriminator 1
 3113 0046 FB79     		ldrb	r3, [r7, #7]
 3114 0048 43F00803 		orr	r3, r3, #8
 3115 004c FB71     		strb	r3, [r7, #7]
 3116              	.L116:
 730:../LSM9DS1_Driver.c **** 
 731:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG5_XL, tempRegValue);
 3117              		.loc 1 731 0 is_stmt 1
 3118 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3119 0050 4FF01F00 		mov	r0, #31
 3120 0054 1946     		mov	r1, r3
 3121 0056 FFF7FEFF 		bl	xgWriteByte
 732:../LSM9DS1_Driver.c **** 
 733:../LSM9DS1_Driver.c **** 	// CTRL_REG6_XL (0x20) (Default value: 0x00)
 734:../LSM9DS1_Driver.c **** 	// [ODR_XL2][ODR_XL1][ODR_XL0][FS1_XL][FS0_XL][BW_SCAL_ODR][BW_XL1][BW_XL0]
 735:../LSM9DS1_Driver.c **** 	// ODR_XL[2:0] - Output data rate & power mode selection
 736:../LSM9DS1_Driver.c **** 	// FS_XL[1:0] - Full-scale selection
 737:../LSM9DS1_Driver.c **** 	// BW_SCAL_ODR - Bandwidth selection
 738:../LSM9DS1_Driver.c **** 	// BW_XL[1:0] - Anti-aliasing filter bandwidth selection
 739:../LSM9DS1_Driver.c **** 	tempRegValue = 0;
 3122              		.loc 1 739 0
 3123 005a 4FF00003 		mov	r3, #0
 3124 005e FB71     		strb	r3, [r7, #7]
 740:../LSM9DS1_Driver.c **** 	// To disable the accel, set the sampleRate bits to 0.
 741:../LSM9DS1_Driver.c **** 	if (settings.accel.enabled)
 3125              		.loc 1 741 0
 3126 0060 40F20003 		movw	r3, #:lower16:settings
 3127 0064 C0F20003 		movt	r3, #:upper16:settings
 3128 0068 9B7D     		ldrb	r3, [r3, #22]	@ zero_extendqisi2
 3129 006a 002B     		cmp	r3, #0
 3130 006c 0BD0     		beq	.L117
 742:../LSM9DS1_Driver.c **** 	{
 743:../LSM9DS1_Driver.c **** 		tempRegValue |= ((settings.accel.sampleRate & 0x07) << 5);
 3131              		.loc 1 743 0
 3132 006e 40F20003 		movw	r3, #:lower16:settings
 3133 0072 C0F20003 		movt	r3, #:upper16:settings
 3134 0076 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 3135 0078 4FEA4313 		lsl	r3, r3, #5
 3136 007c DAB2     		uxtb	r2, r3
 3137 007e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3138 0080 1343     		orrs	r3, r3, r2
 3139 0082 DBB2     		uxtb	r3, r3
 3140 0084 FB71     		strb	r3, [r7, #7]
 3141              	.L117:
 744:../LSM9DS1_Driver.c **** 	}
 745:../LSM9DS1_Driver.c **** 	switch (settings.accel.scale)
 3142              		.loc 1 745 0
 3143 0086 40F20003 		movw	r3, #:lower16:settings
 3144 008a C0F20003 		movt	r3, #:upper16:settings
 3145 008e DB7D     		ldrb	r3, [r3, #23]	@ zero_extendqisi2
 3146 0090 082B     		cmp	r3, #8
 3147 0092 08D0     		beq	.L120
 3148 0094 102B     		cmp	r3, #16
 3149 0096 0BD0     		beq	.L121
 3150 0098 042B     		cmp	r3, #4
 3151 009a 0ED1     		bne	.L118
 3152              	.L119:
 746:../LSM9DS1_Driver.c **** 	{
 747:../LSM9DS1_Driver.c **** 		case 4:
 748:../LSM9DS1_Driver.c **** 			tempRegValue |= (0x2 << 3);
 3153              		.loc 1 748 0
 3154 009c FB79     		ldrb	r3, [r7, #7]
 3155 009e 43F01003 		orr	r3, r3, #16
 3156 00a2 FB71     		strb	r3, [r7, #7]
 749:../LSM9DS1_Driver.c **** 			break;
 3157              		.loc 1 749 0
 3158 00a4 09E0     		b	.L118
 3159              	.L120:
 750:../LSM9DS1_Driver.c **** 		case 8:
 751:../LSM9DS1_Driver.c **** 			tempRegValue |= (0x3 << 3);
 3160              		.loc 1 751 0
 3161 00a6 FB79     		ldrb	r3, [r7, #7]
 3162 00a8 43F01803 		orr	r3, r3, #24
 3163 00ac FB71     		strb	r3, [r7, #7]
 752:../LSM9DS1_Driver.c **** 			break;
 3164              		.loc 1 752 0
 3165 00ae 04E0     		b	.L118
 3166              	.L121:
 753:../LSM9DS1_Driver.c **** 		case 16:
 754:../LSM9DS1_Driver.c **** 			tempRegValue |= (0x1 << 3);
 3167              		.loc 1 754 0
 3168 00b0 FB79     		ldrb	r3, [r7, #7]
 3169 00b2 43F00803 		orr	r3, r3, #8
 3170 00b6 FB71     		strb	r3, [r7, #7]
 755:../LSM9DS1_Driver.c **** 			break;
 3171              		.loc 1 755 0
 3172 00b8 00BF     		nop
 3173              	.L118:
 756:../LSM9DS1_Driver.c **** 		// Otherwise it'll be set to 2g (0x0 << 3)
 757:../LSM9DS1_Driver.c **** 	}
 758:../LSM9DS1_Driver.c **** 	if (settings.accel.bandwidth >= 0)
 3174              		.loc 1 758 0
 3175 00ba 40F20003 		movw	r3, #:lower16:settings
 3176 00be C0F20003 		movt	r3, #:upper16:settings
 3177 00c2 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 3178 00c4 5BB2     		sxtb	r3, r3
 3179 00c6 002B     		cmp	r3, #0
 3180 00c8 0FDB     		blt	.L122
 759:../LSM9DS1_Driver.c **** 	{
 760:../LSM9DS1_Driver.c **** 		tempRegValue |= (1<<2); // Set BW_SCAL_ODR
 3181              		.loc 1 760 0
 3182 00ca FB79     		ldrb	r3, [r7, #7]
 3183 00cc 43F00403 		orr	r3, r3, #4
 3184 00d0 FB71     		strb	r3, [r7, #7]
 761:../LSM9DS1_Driver.c **** 		tempRegValue |= (settings.accel.bandwidth & 0x03);
 3185              		.loc 1 761 0
 3186 00d2 40F20003 		movw	r3, #:lower16:settings
 3187 00d6 C0F20003 		movt	r3, #:upper16:settings
 3188 00da 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 3189 00dc 03F00303 		and	r3, r3, #3
 3190 00e0 DAB2     		uxtb	r2, r3
 3191 00e2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3192 00e4 1343     		orrs	r3, r3, r2
 3193 00e6 DBB2     		uxtb	r3, r3
 3194 00e8 FB71     		strb	r3, [r7, #7]
 3195              	.L122:
 762:../LSM9DS1_Driver.c **** 	}
 763:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG6_XL, tempRegValue);
 3196              		.loc 1 763 0
 3197 00ea FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3198 00ec 4FF02000 		mov	r0, #32
 3199 00f0 1946     		mov	r1, r3
 3200 00f2 FFF7FEFF 		bl	xgWriteByte
 764:../LSM9DS1_Driver.c **** 
 765:../LSM9DS1_Driver.c **** 	// CTRL_REG7_XL (0x21) (Default value: 0x00)
 766:../LSM9DS1_Driver.c **** 	// [HR][DCF1][DCF0][0][0][FDS][0][HPIS1]
 767:../LSM9DS1_Driver.c **** 	// HR - High resolution mode (0: disable, 1: enable)
 768:../LSM9DS1_Driver.c **** 	// DCF[1:0] - Digital filter cutoff frequency
 769:../LSM9DS1_Driver.c **** 	// FDS - Filtered data selection
 770:../LSM9DS1_Driver.c **** 	// HPIS1 - HPF enabled for interrupt function
 771:../LSM9DS1_Driver.c **** 	tempRegValue = 0;
 3201              		.loc 1 771 0
 3202 00f6 4FF00003 		mov	r3, #0
 3203 00fa FB71     		strb	r3, [r7, #7]
 772:../LSM9DS1_Driver.c **** 	if (settings.accel.highResEnable)
 3204              		.loc 1 772 0
 3205 00fc 40F20003 		movw	r3, #:lower16:settings
 3206 0100 C0F20003 		movt	r3, #:upper16:settings
 3207 0104 5B7F     		ldrb	r3, [r3, #29]	@ zero_extendqisi2
 3208 0106 002B     		cmp	r3, #0
 3209 0108 11D0     		beq	.L123
 773:../LSM9DS1_Driver.c **** 	{
 774:../LSM9DS1_Driver.c **** 		tempRegValue |= (1<<7); // Set HR bit
 3210              		.loc 1 774 0
 3211 010a FB79     		ldrb	r3, [r7, #7]
 3212 010c 63F07F03 		orn	r3, r3, #127
 3213 0110 FB71     		strb	r3, [r7, #7]
 775:../LSM9DS1_Driver.c **** 		tempRegValue |= (settings.accel.highResBandwidth & 0x3) << 5;
 3214              		.loc 1 775 0
 3215 0112 40F20003 		movw	r3, #:lower16:settings
 3216 0116 C0F20003 		movt	r3, #:upper16:settings
 3217 011a 9B7F     		ldrb	r3, [r3, #30]	@ zero_extendqisi2
 3218 011c 03F00303 		and	r3, r3, #3
 3219 0120 4FEA4313 		lsl	r3, r3, #5
 3220 0124 DAB2     		uxtb	r2, r3
 3221 0126 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3222 0128 1343     		orrs	r3, r3, r2
 3223 012a DBB2     		uxtb	r3, r3
 3224 012c FB71     		strb	r3, [r7, #7]
 3225              	.L123:
 776:../LSM9DS1_Driver.c **** 	}
 777:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG7_XL, tempRegValue);
 3226              		.loc 1 777 0
 3227 012e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3228 0130 4FF02100 		mov	r0, #33
 3229 0134 1946     		mov	r1, r3
 3230 0136 FFF7FEFF 		bl	xgWriteByte
 778:../LSM9DS1_Driver.c **** }
 3231              		.loc 1 778 0
 3232 013a 07F10807 		add	r7, r7, #8
 3233 013e BD46     		mov	sp, r7
 3234 0140 80BD     		pop	{r7, pc}
 3235              		.cfi_endproc
 3236              	.LFE149:
 3238 0142 00BF     		.section	.text.initMag,"ax",%progbits
 3239              		.align	2
 3240              		.global	initMag
 3241              		.thumb
 3242              		.thumb_func
 3244              	initMag:
 3245              	.LFB150:
 779:../LSM9DS1_Driver.c **** 
 780:../LSM9DS1_Driver.c **** void initMag(void)
 781:../LSM9DS1_Driver.c **** {
 3246              		.loc 1 781 0
 3247              		.cfi_startproc
 3248              		@ args = 0, pretend = 0, frame = 8
 3249              		@ frame_needed = 1, uses_anonymous_args = 0
 3250 0000 80B5     		push	{r7, lr}
 3251              	.LCFI88:
 3252              		.cfi_def_cfa_offset 8
 3253              		.cfi_offset 7, -8
 3254              		.cfi_offset 14, -4
 3255 0002 82B0     		sub	sp, sp, #8
 3256              	.LCFI89:
 3257              		.cfi_def_cfa_offset 16
 3258 0004 00AF     		add	r7, sp, #0
 3259              	.LCFI90:
 3260              		.cfi_def_cfa_register 7
 782:../LSM9DS1_Driver.c **** 	uint8_t tempRegValue = 0;
 3261              		.loc 1 782 0
 3262 0006 4FF00003 		mov	r3, #0
 3263 000a FB71     		strb	r3, [r7, #7]
 783:../LSM9DS1_Driver.c **** 
 784:../LSM9DS1_Driver.c **** 	// CTRL_REG1_M (Default value: 0x10)
 785:../LSM9DS1_Driver.c **** 	// [TEMP_COMP][OM1][OM0][DO2][DO1][DO0][0][ST]
 786:../LSM9DS1_Driver.c **** 	// TEMP_COMP - Temperature compensation
 787:../LSM9DS1_Driver.c **** 	// OM[1:0] - X & Y axes op mode selection
 788:../LSM9DS1_Driver.c **** 	//	00:low-power, 01:medium performance
 789:../LSM9DS1_Driver.c **** 	//	10: high performance, 11:ultra-high performance
 790:../LSM9DS1_Driver.c **** 	// DO[2:0] - Output data rate selection
 791:../LSM9DS1_Driver.c **** 	// ST - Self-test enable
 792:../LSM9DS1_Driver.c **** 	if (settings.mag.tempCompensationEnable) tempRegValue |= (1<<7);
 3264              		.loc 1 792 0
 3265 000c 40F20003 		movw	r3, #:lower16:settings
 3266 0010 C0F20003 		movt	r3, #:upper16:settings
 3267 0014 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 3268 0018 002B     		cmp	r3, #0
 3269 001a 03D0     		beq	.L125
 3270              		.loc 1 792 0 is_stmt 0 discriminator 1
 3271 001c FB79     		ldrb	r3, [r7, #7]
 3272 001e 63F07F03 		orn	r3, r3, #127
 3273 0022 FB71     		strb	r3, [r7, #7]
 3274              	.L125:
 793:../LSM9DS1_Driver.c **** 	tempRegValue |= (settings.mag.XYPerformance & 0x3) << 5;
 3275              		.loc 1 793 0 is_stmt 1
 3276 0024 40F20003 		movw	r3, #:lower16:settings
 3277 0028 C0F20003 		movt	r3, #:upper16:settings
 3278 002c 93F82330 		ldrb	r3, [r3, #35]	@ zero_extendqisi2
 3279 0030 03F00303 		and	r3, r3, #3
 3280 0034 4FEA4313 		lsl	r3, r3, #5
 3281 0038 DAB2     		uxtb	r2, r3
 3282 003a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3283 003c 1343     		orrs	r3, r3, r2
 3284 003e DBB2     		uxtb	r3, r3
 3285 0040 FB71     		strb	r3, [r7, #7]
 794:../LSM9DS1_Driver.c **** 	tempRegValue |= (settings.mag.sampleRate & 0x7) << 2;
 3286              		.loc 1 794 0
 3287 0042 40F20003 		movw	r3, #:lower16:settings
 3288 0046 C0F20003 		movt	r3, #:upper16:settings
 3289 004a 93F82130 		ldrb	r3, [r3, #33]	@ zero_extendqisi2
 3290 004e 03F00703 		and	r3, r3, #7
 3291 0052 4FEA8303 		lsl	r3, r3, #2
 3292 0056 DAB2     		uxtb	r2, r3
 3293 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3294 005a 1343     		orrs	r3, r3, r2
 3295 005c DBB2     		uxtb	r3, r3
 3296 005e FB71     		strb	r3, [r7, #7]
 795:../LSM9DS1_Driver.c **** 	mWriteByte(CTRL_REG1_M, tempRegValue);
 3297              		.loc 1 795 0
 3298 0060 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3299 0062 4FF02000 		mov	r0, #32
 3300 0066 1946     		mov	r1, r3
 3301 0068 FFF7FEFF 		bl	mWriteByte
 796:../LSM9DS1_Driver.c **** 
 797:../LSM9DS1_Driver.c **** 	// CTRL_REG2_M (Default value 0x00)
 798:../LSM9DS1_Driver.c **** 	// [0][FS1][FS0][0][REBOOT][SOFT_RST][0][0]
 799:../LSM9DS1_Driver.c **** 	// FS[1:0] - Full-scale configuration
 800:../LSM9DS1_Driver.c **** 	// REBOOT - Reboot memory content (0:normal, 1:reboot)
 801:../LSM9DS1_Driver.c **** 	// SOFT_RST - Reset config and user registers (0:default, 1:reset)
 802:../LSM9DS1_Driver.c **** 	tempRegValue = 0;
 3302              		.loc 1 802 0
 3303 006c 4FF00003 		mov	r3, #0
 3304 0070 FB71     		strb	r3, [r7, #7]
 803:../LSM9DS1_Driver.c **** 	switch (settings.mag.scale)
 3305              		.loc 1 803 0
 3306 0072 40F20003 		movw	r3, #:lower16:settings
 3307 0076 C0F20003 		movt	r3, #:upper16:settings
 3308 007a 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 3309 007e 0C2B     		cmp	r3, #12
 3310 0080 08D0     		beq	.L128
 3311 0082 102B     		cmp	r3, #16
 3312 0084 0BD0     		beq	.L129
 3313 0086 082B     		cmp	r3, #8
 3314 0088 0ED1     		bne	.L126
 3315              	.L127:
 804:../LSM9DS1_Driver.c **** 	{
 805:../LSM9DS1_Driver.c **** 	case 8:
 806:../LSM9DS1_Driver.c **** 		tempRegValue |= (0x1 << 5);
 3316              		.loc 1 806 0
 3317 008a FB79     		ldrb	r3, [r7, #7]
 3318 008c 43F02003 		orr	r3, r3, #32
 3319 0090 FB71     		strb	r3, [r7, #7]
 807:../LSM9DS1_Driver.c **** 		break;
 3320              		.loc 1 807 0
 3321 0092 09E0     		b	.L126
 3322              	.L128:
 808:../LSM9DS1_Driver.c **** 	case 12:
 809:../LSM9DS1_Driver.c **** 		tempRegValue |= (0x2 << 5);
 3323              		.loc 1 809 0
 3324 0094 FB79     		ldrb	r3, [r7, #7]
 3325 0096 43F04003 		orr	r3, r3, #64
 3326 009a FB71     		strb	r3, [r7, #7]
 810:../LSM9DS1_Driver.c **** 		break;
 3327              		.loc 1 810 0
 3328 009c 04E0     		b	.L126
 3329              	.L129:
 811:../LSM9DS1_Driver.c **** 	case 16:
 812:../LSM9DS1_Driver.c **** 		tempRegValue |= (0x3 << 5);
 3330              		.loc 1 812 0
 3331 009e FB79     		ldrb	r3, [r7, #7]
 3332 00a0 43F06003 		orr	r3, r3, #96
 3333 00a4 FB71     		strb	r3, [r7, #7]
 813:../LSM9DS1_Driver.c **** 		break;
 3334              		.loc 1 813 0
 3335 00a6 00BF     		nop
 3336              	.L126:
 814:../LSM9DS1_Driver.c **** 	// Otherwise we'll default to 4 gauss (00)
 815:../LSM9DS1_Driver.c **** 	}
 816:../LSM9DS1_Driver.c **** 	mWriteByte(CTRL_REG2_M, tempRegValue); // +/-4Gauss
 3337              		.loc 1 816 0
 3338 00a8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3339 00aa 4FF02100 		mov	r0, #33
 3340 00ae 1946     		mov	r1, r3
 3341 00b0 FFF7FEFF 		bl	mWriteByte
 817:../LSM9DS1_Driver.c **** 
 818:../LSM9DS1_Driver.c **** 	// CTRL_REG3_M (Default value: 0x03)
 819:../LSM9DS1_Driver.c **** 	// [I2C_DISABLE][0][LP][0][0][SIM][MD1][MD0]
 820:../LSM9DS1_Driver.c **** 	// I2C_DISABLE - Disable I2C interace (0:enable, 1:disable)
 821:../LSM9DS1_Driver.c **** 	// LP - Low-power mode cofiguration (1:enable)
 822:../LSM9DS1_Driver.c **** 	// SIM - SPI mode selection (0:write-only, 1:read/write enable)
 823:../LSM9DS1_Driver.c **** 	// MD[1:0] - Operating mode
 824:../LSM9DS1_Driver.c **** 	//	00:continuous conversion, 01:single-conversion,
 825:../LSM9DS1_Driver.c **** 	//  10,11: Power-down
 826:../LSM9DS1_Driver.c **** 	tempRegValue = 0;
 3342              		.loc 1 826 0
 3343 00b4 4FF00003 		mov	r3, #0
 3344 00b8 FB71     		strb	r3, [r7, #7]
 827:../LSM9DS1_Driver.c **** 	if (settings.mag.lowPowerEnable) tempRegValue |= (1<<5);
 3345              		.loc 1 827 0
 3346 00ba 40F20003 		movw	r3, #:lower16:settings
 3347 00be C0F20003 		movt	r3, #:upper16:settings
 3348 00c2 93F82530 		ldrb	r3, [r3, #37]	@ zero_extendqisi2
 3349 00c6 002B     		cmp	r3, #0
 3350 00c8 03D0     		beq	.L130
 3351              		.loc 1 827 0 is_stmt 0 discriminator 1
 3352 00ca FB79     		ldrb	r3, [r7, #7]
 3353 00cc 43F02003 		orr	r3, r3, #32
 3354 00d0 FB71     		strb	r3, [r7, #7]
 3355              	.L130:
 828:../LSM9DS1_Driver.c **** 	tempRegValue |= (settings.mag.operatingMode & 0x3);
 3356              		.loc 1 828 0 is_stmt 1
 3357 00d2 40F20003 		movw	r3, #:lower16:settings
 3358 00d6 C0F20003 		movt	r3, #:upper16:settings
 3359 00da 93F82630 		ldrb	r3, [r3, #38]	@ zero_extendqisi2
 3360 00de DBB2     		uxtb	r3, r3
 3361 00e0 03F00303 		and	r3, r3, #3
 3362 00e4 DAB2     		uxtb	r2, r3
 3363 00e6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3364 00e8 1343     		orrs	r3, r3, r2
 3365 00ea DBB2     		uxtb	r3, r3
 3366 00ec FB71     		strb	r3, [r7, #7]
 829:../LSM9DS1_Driver.c **** 	mWriteByte(CTRL_REG3_M, tempRegValue); // Continuous conversion mode
 3367              		.loc 1 829 0
 3368 00ee FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3369 00f0 4FF02200 		mov	r0, #34
 3370 00f4 1946     		mov	r1, r3
 3371 00f6 FFF7FEFF 		bl	mWriteByte
 830:../LSM9DS1_Driver.c **** 
 831:../LSM9DS1_Driver.c **** 	// CTRL_REG4_M (Default value: 0x00)
 832:../LSM9DS1_Driver.c **** 	// [0][0][0][0][OMZ1][OMZ0][BLE][0]
 833:../LSM9DS1_Driver.c **** 	// OMZ[1:0] - Z-axis operative mode selection
 834:../LSM9DS1_Driver.c **** 	//	00:low-power mode, 01:medium performance
 835:../LSM9DS1_Driver.c **** 	//	10:high performance, 10:ultra-high performance
 836:../LSM9DS1_Driver.c **** 	// BLE - Big/little endian data
 837:../LSM9DS1_Driver.c **** 	tempRegValue = 0;
 3372              		.loc 1 837 0
 3373 00fa 4FF00003 		mov	r3, #0
 3374 00fe FB71     		strb	r3, [r7, #7]
 838:../LSM9DS1_Driver.c **** 	tempRegValue = (settings.mag.ZPerformance & 0x3) << 2;
 3375              		.loc 1 838 0
 3376 0100 40F20003 		movw	r3, #:lower16:settings
 3377 0104 C0F20003 		movt	r3, #:upper16:settings
 3378 0108 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 3379 010c 03F00303 		and	r3, r3, #3
 3380 0110 DBB2     		uxtb	r3, r3
 3381 0112 4FEA8303 		lsl	r3, r3, #2
 3382 0116 FB71     		strb	r3, [r7, #7]
 839:../LSM9DS1_Driver.c **** 	mWriteByte(CTRL_REG4_M, tempRegValue);
 3383              		.loc 1 839 0
 3384 0118 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3385 011a 4FF02300 		mov	r0, #35
 3386 011e 1946     		mov	r1, r3
 3387 0120 FFF7FEFF 		bl	mWriteByte
 840:../LSM9DS1_Driver.c **** 
 841:../LSM9DS1_Driver.c **** 	// CTRL_REG5_M (Default value: 0x00)
 842:../LSM9DS1_Driver.c **** 	// [0][BDU][0][0][0][0][0][0]
 843:../LSM9DS1_Driver.c **** 	// BDU - Block data update for magnetic data
 844:../LSM9DS1_Driver.c **** 	//	0:continuous, 1:not updated until MSB/LSB are read
 845:../LSM9DS1_Driver.c **** 	tempRegValue = 0;
 3388              		.loc 1 845 0
 3389 0124 4FF00003 		mov	r3, #0
 3390 0128 FB71     		strb	r3, [r7, #7]
 846:../LSM9DS1_Driver.c **** 	mWriteByte(CTRL_REG5_M, tempRegValue);
 3391              		.loc 1 846 0
 3392 012a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3393 012c 4FF02400 		mov	r0, #36
 3394 0130 1946     		mov	r1, r3
 3395 0132 FFF7FEFF 		bl	mWriteByte
 847:../LSM9DS1_Driver.c **** }
 3396              		.loc 1 847 0
 3397 0136 07F10807 		add	r7, r7, #8
 3398 013a BD46     		mov	sp, r7
 3399 013c 80BD     		pop	{r7, pc}
 3400              		.cfi_endproc
 3401              	.LFE150:
 3403 013e 00BF     		.section	.text.mWriteByte,"ax",%progbits
 3404              		.align	2
 3405              		.global	mWriteByte
 3406              		.thumb
 3407              		.thumb_func
 3409              	mWriteByte:
 3410              	.LFB151:
 848:../LSM9DS1_Driver.c **** 
 849:../LSM9DS1_Driver.c **** void mWriteByte(uint8_t subAddress, uint8_t data)
 850:../LSM9DS1_Driver.c **** {
 3411              		.loc 1 850 0
 3412              		.cfi_startproc
 3413              		@ args = 0, pretend = 0, frame = 8
 3414              		@ frame_needed = 1, uses_anonymous_args = 0
 3415 0000 80B5     		push	{r7, lr}
 3416              	.LCFI91:
 3417              		.cfi_def_cfa_offset 8
 3418              		.cfi_offset 7, -8
 3419              		.cfi_offset 14, -4
 3420 0002 82B0     		sub	sp, sp, #8
 3421              	.LCFI92:
 3422              		.cfi_def_cfa_offset 16
 3423 0004 00AF     		add	r7, sp, #0
 3424              	.LCFI93:
 3425              		.cfi_def_cfa_register 7
 3426 0006 0246     		mov	r2, r0
 3427 0008 0B46     		mov	r3, r1
 3428 000a FA71     		strb	r2, [r7, #7]
 3429 000c BB71     		strb	r3, [r7, #6]
 851:../LSM9DS1_Driver.c **** 	// Whether we're using I2C or SPI, write a byte using the
 852:../LSM9DS1_Driver.c **** 	// accelerometer-specific I2C address or SPI CS pin.
 853:../LSM9DS1_Driver.c **** 	if (settings.device.commInterface == IMU_MODE_I2C)
 3430              		.loc 1 853 0
 3431 000e 40F20003 		movw	r3, #:lower16:settings
 3432 0012 C0F20003 		movt	r3, #:upper16:settings
 3433 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3434 0018 012B     		cmp	r3, #1
 3435 001a 0CD1     		bne	.L131
 854:../LSM9DS1_Driver.c **** 	{
 855:../LSM9DS1_Driver.c **** 		return I2CwriteByte(_mAddress, subAddress, data);
 3436              		.loc 1 855 0
 3437 001c 40F20003 		movw	r3, #:lower16:_mAddress
 3438 0020 C0F20003 		movt	r3, #:upper16:_mAddress
 3439 0024 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 3440 0026 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3441 0028 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3442 002a 0846     		mov	r0, r1
 3443 002c 1146     		mov	r1, r2
 3444 002e 1A46     		mov	r2, r3
 3445 0030 FFF7FEFF 		bl	I2CwriteByte
 3446 0034 00BF     		nop
 3447              	.L131:
 856:../LSM9DS1_Driver.c **** 	}
 857:../LSM9DS1_Driver.c **** }
 3448              		.loc 1 857 0
 3449 0036 07F10807 		add	r7, r7, #8
 3450 003a BD46     		mov	sp, r7
 3451 003c 80BD     		pop	{r7, pc}
 3452              		.cfi_endproc
 3453              	.LFE151:
 3455 003e 00BF     		.section	.text.enableFIFO,"ax",%progbits
 3456              		.align	2
 3457              		.global	enableFIFO
 3458              		.thumb
 3459              		.thumb_func
 3461              	enableFIFO:
 3462              	.LFB152:
 858:../LSM9DS1_Driver.c **** 
 859:../LSM9DS1_Driver.c **** void enableFIFO(bool enable)
 860:../LSM9DS1_Driver.c **** {
 3463              		.loc 1 860 0
 3464              		.cfi_startproc
 3465              		@ args = 0, pretend = 0, frame = 16
 3466              		@ frame_needed = 1, uses_anonymous_args = 0
 3467 0000 80B5     		push	{r7, lr}
 3468              	.LCFI94:
 3469              		.cfi_def_cfa_offset 8
 3470              		.cfi_offset 7, -8
 3471              		.cfi_offset 14, -4
 3472 0002 84B0     		sub	sp, sp, #16
 3473              	.LCFI95:
 3474              		.cfi_def_cfa_offset 24
 3475 0004 00AF     		add	r7, sp, #0
 3476              	.LCFI96:
 3477              		.cfi_def_cfa_register 7
 3478 0006 0346     		mov	r3, r0
 3479 0008 FB71     		strb	r3, [r7, #7]
 861:../LSM9DS1_Driver.c **** 	uint8_t temp = xgReadByte(CTRL_REG9);
 3480              		.loc 1 861 0
 3481 000a 4FF02300 		mov	r0, #35
 3482 000e FFF7FEFF 		bl	xgReadByte
 3483 0012 0346     		mov	r3, r0
 3484 0014 FB73     		strb	r3, [r7, #15]
 862:../LSM9DS1_Driver.c **** 	if(enable)
 3485              		.loc 1 862 0
 3486 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3487 0018 002B     		cmp	r3, #0
 3488 001a 04D0     		beq	.L134
 863:../LSM9DS1_Driver.c **** 	{
 864:../LSM9DS1_Driver.c **** 		temp |= (1<<1);
 3489              		.loc 1 864 0
 3490 001c FB7B     		ldrb	r3, [r7, #15]
 3491 001e 43F00203 		orr	r3, r3, #2
 3492 0022 FB73     		strb	r3, [r7, #15]
 3493 0024 03E0     		b	.L135
 3494              	.L134:
 865:../LSM9DS1_Driver.c **** 	}
 866:../LSM9DS1_Driver.c **** 	else
 867:../LSM9DS1_Driver.c **** 	{
 868:../LSM9DS1_Driver.c **** 		temp &= ~(1<<1);
 3495              		.loc 1 868 0
 3496 0026 FB7B     		ldrb	r3, [r7, #15]
 3497 0028 23F00203 		bic	r3, r3, #2
 3498 002c FB73     		strb	r3, [r7, #15]
 3499              	.L135:
 869:../LSM9DS1_Driver.c **** 	}
 870:../LSM9DS1_Driver.c **** 
 871:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG9, temp);
 3500              		.loc 1 871 0
 3501 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3502 0030 4FF02300 		mov	r0, #35
 3503 0034 1946     		mov	r1, r3
 3504 0036 FFF7FEFF 		bl	xgWriteByte
 872:../LSM9DS1_Driver.c **** }
 3505              		.loc 1 872 0
 3506 003a 07F11007 		add	r7, r7, #16
 3507 003e BD46     		mov	sp, r7
 3508 0040 80BD     		pop	{r7, pc}
 3509              		.cfi_endproc
 3510              	.LFE152:
 3512 0042 00BF     		.section	.text.setFIFO,"ax",%progbits
 3513              		.align	2
 3514              		.global	setFIFO
 3515              		.thumb
 3516              		.thumb_func
 3518              	setFIFO:
 3519              	.LFB153:
 873:../LSM9DS1_Driver.c **** 
 874:../LSM9DS1_Driver.c **** void setFIFO(fifoMode_type fifoMode, uint8_t fifoThs)
 875:../LSM9DS1_Driver.c **** {
 3520              		.loc 1 875 0
 3521              		.cfi_startproc
 3522              		@ args = 0, pretend = 0, frame = 16
 3523              		@ frame_needed = 1, uses_anonymous_args = 0
 3524 0000 80B5     		push	{r7, lr}
 3525              	.LCFI97:
 3526              		.cfi_def_cfa_offset 8
 3527              		.cfi_offset 7, -8
 3528              		.cfi_offset 14, -4
 3529 0002 84B0     		sub	sp, sp, #16
 3530              	.LCFI98:
 3531              		.cfi_def_cfa_offset 24
 3532 0004 00AF     		add	r7, sp, #0
 3533              	.LCFI99:
 3534              		.cfi_def_cfa_register 7
 3535 0006 0246     		mov	r2, r0
 3536 0008 0B46     		mov	r3, r1
 3537 000a FA71     		strb	r2, [r7, #7]
 3538 000c BB71     		strb	r3, [r7, #6]
 876:../LSM9DS1_Driver.c **** 	// Limit threshold - 0x1F (31) is the maximum. If more than that was asked
 877:../LSM9DS1_Driver.c **** 	// limit it to the maximum.
 878:../LSM9DS1_Driver.c **** 	uint8_t threshold = fifoThs <= 0x1F ? fifoThs : 0x1F;
 3539              		.loc 1 878 0
 3540 000e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3541 0010 1F2B     		cmp	r3, #31
 3542 0012 28BF     		it	cs
 3543 0014 1F23     		movcs	r3, #31
 3544 0016 FB73     		strb	r3, [r7, #15]
 879:../LSM9DS1_Driver.c **** 	xgWriteByte(FIFO_CTRL, ((fifoMode & 0x7) << 5) | (threshold & 0x1F));
 3545              		.loc 1 879 0
 3546 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3547 001a 4FEA4313 		lsl	r3, r3, #5
 3548 001e DAB2     		uxtb	r2, r3
 3549 0020 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3550 0022 03F01F03 		and	r3, r3, #31
 3551 0026 DBB2     		uxtb	r3, r3
 3552 0028 1343     		orrs	r3, r3, r2
 3553 002a DBB2     		uxtb	r3, r3
 3554 002c DBB2     		uxtb	r3, r3
 3555 002e 4FF02E00 		mov	r0, #46
 3556 0032 1946     		mov	r1, r3
 3557 0034 FFF7FEFF 		bl	xgWriteByte
 880:../LSM9DS1_Driver.c **** }
 3558              		.loc 1 880 0
 3559 0038 07F11007 		add	r7, r7, #16
 3560 003c BD46     		mov	sp, r7
 3561 003e 80BD     		pop	{r7, pc}
 3562              		.cfi_endproc
 3563              	.LFE153:
 3565              		.global	__aeabi_f2d
 3566              		.global	__aeabi_ddiv
 3567              		.global	__aeabi_d2iz
 3568              		.section	.text.calibrate,"ax",%progbits
 3569              		.align	2
 3570              		.global	calibrate
 3571              		.thumb
 3572              		.thumb_func
 3574              	calibrate:
 3575              	.LFB154:
 881:../LSM9DS1_Driver.c **** 
 882:../LSM9DS1_Driver.c **** void calibrate(bool autoCalc)
 883:../LSM9DS1_Driver.c **** {
 3576              		.loc 1 883 0
 3577              		.cfi_startproc
 3578              		@ args = 0, pretend = 0, frame = 48
 3579              		@ frame_needed = 1, uses_anonymous_args = 0
 3580 0000 B0B5     		push	{r4, r5, r7, lr}
 3581              	.LCFI100:
 3582              		.cfi_def_cfa_offset 16
 3583              		.cfi_offset 4, -16
 3584              		.cfi_offset 5, -12
 3585              		.cfi_offset 7, -8
 3586              		.cfi_offset 14, -4
 3587 0002 8CB0     		sub	sp, sp, #48
 3588              	.LCFI101:
 3589              		.cfi_def_cfa_offset 64
 3590 0004 00AF     		add	r7, sp, #0
 3591              	.LCFI102:
 3592              		.cfi_def_cfa_register 7
 3593 0006 0346     		mov	r3, r0
 3594 0008 FB71     		strb	r3, [r7, #7]
 884:../LSM9DS1_Driver.c **** 	uint8_t data[6] = {0, 0, 0, 0, 0, 0};
 3595              		.loc 1 884 0
 3596 000a 4FF00003 		mov	r3, #0
 3597 000e 87F82430 		strb	r3, [r7, #36]
 3598 0012 4FF00003 		mov	r3, #0
 3599 0016 87F82530 		strb	r3, [r7, #37]
 3600 001a 4FF00003 		mov	r3, #0
 3601 001e 87F82630 		strb	r3, [r7, #38]
 3602 0022 4FF00003 		mov	r3, #0
 3603 0026 87F82730 		strb	r3, [r7, #39]
 3604 002a 4FF00003 		mov	r3, #0
 3605 002e 87F82830 		strb	r3, [r7, #40]
 3606 0032 4FF00003 		mov	r3, #0
 3607 0036 87F82930 		strb	r3, [r7, #41]
 885:../LSM9DS1_Driver.c **** 	uint8_t samples = 0;
 3608              		.loc 1 885 0
 3609 003a 4FF00003 		mov	r3, #0
 3610 003e 87F82B30 		strb	r3, [r7, #43]
 886:../LSM9DS1_Driver.c **** 	int ii;
 887:../LSM9DS1_Driver.c **** 	int32_t aBiasRawTemp[3] = {0, 0, 0};
 3611              		.loc 1 887 0
 3612 0042 4FF00003 		mov	r3, #0
 3613 0046 BB61     		str	r3, [r7, #24]
 3614 0048 4FF00003 		mov	r3, #0
 3615 004c FB61     		str	r3, [r7, #28]
 3616 004e 4FF00003 		mov	r3, #0
 3617 0052 3B62     		str	r3, [r7, #32]
 888:../LSM9DS1_Driver.c **** 	int32_t gBiasRawTemp[3] = {0, 0, 0};
 3618              		.loc 1 888 0
 3619 0054 4FF00003 		mov	r3, #0
 3620 0058 FB60     		str	r3, [r7, #12]
 3621 005a 4FF00003 		mov	r3, #0
 3622 005e 3B61     		str	r3, [r7, #16]
 3623 0060 4FF00003 		mov	r3, #0
 3624 0064 7B61     		str	r3, [r7, #20]
 889:../LSM9DS1_Driver.c **** 
 890:../LSM9DS1_Driver.c **** 	// Turn on FIFO and set threshold to 32 samples
 891:../LSM9DS1_Driver.c **** 	enableFIFO(TRUE);
 3625              		.loc 1 891 0
 3626 0066 4FF00100 		mov	r0, #1
 3627 006a FFF7FEFF 		bl	enableFIFO
 892:../LSM9DS1_Driver.c **** 	setFIFO(FIFO_THS, 0x1F);
 3628              		.loc 1 892 0
 3629 006e 4FF00100 		mov	r0, #1
 3630 0072 4FF01F01 		mov	r1, #31
 3631 0076 FFF7FEFF 		bl	setFIFO
 893:../LSM9DS1_Driver.c **** 	/*while (samples < 29)
 894:../LSM9DS1_Driver.c **** 	{*/
 895:../LSM9DS1_Driver.c **** 		samples = (xgReadByte(FIFO_SRC) & 0x3F); // Read number of stored samples
 3632              		.loc 1 895 0
 3633 007a 4FF02F00 		mov	r0, #47
 3634 007e FFF7FEFF 		bl	xgReadByte
 3635 0082 0346     		mov	r3, r0
 3636 0084 03F03F03 		and	r3, r3, #63
 3637 0088 87F82B30 		strb	r3, [r7, #43]
 896:../LSM9DS1_Driver.c **** 		//samples = 10;
 897:../LSM9DS1_Driver.c **** 	//}
 898:../LSM9DS1_Driver.c **** 	for(ii = 0; ii < samples ; ii++)
 3638              		.loc 1 898 0
 3639 008c 4FF00003 		mov	r3, #0
 3640 0090 FB62     		str	r3, [r7, #44]
 3641 0092 59E0     		b	.L138
 3642              	.L139:
 899:../LSM9DS1_Driver.c **** 	{	// Read the gyro data stored in the FIFO
 900:../LSM9DS1_Driver.c **** 		readGyro1();
 3643              		.loc 1 900 0 discriminator 2
 3644 0094 FFF7FEFF 		bl	readGyro1
 901:../LSM9DS1_Driver.c **** 		gBiasRawTemp[0] += gx;
 3645              		.loc 1 901 0 discriminator 2
 3646 0098 FA68     		ldr	r2, [r7, #12]
 3647 009a 40F20003 		movw	r3, #:lower16:gx
 3648 009e C0F20003 		movt	r3, #:upper16:gx
 3649 00a2 1B88     		ldrh	r3, [r3, #0]
 3650 00a4 1BB2     		sxth	r3, r3
 3651 00a6 D318     		adds	r3, r2, r3
 3652 00a8 FB60     		str	r3, [r7, #12]
 902:../LSM9DS1_Driver.c **** 		gBiasRawTemp[1] += gy;
 3653              		.loc 1 902 0 discriminator 2
 3654 00aa 3A69     		ldr	r2, [r7, #16]
 3655 00ac 40F20003 		movw	r3, #:lower16:gy
 3656 00b0 C0F20003 		movt	r3, #:upper16:gy
 3657 00b4 1B88     		ldrh	r3, [r3, #0]
 3658 00b6 1BB2     		sxth	r3, r3
 3659 00b8 D318     		adds	r3, r2, r3
 3660 00ba 3B61     		str	r3, [r7, #16]
 903:../LSM9DS1_Driver.c **** 		gBiasRawTemp[2] += gz;
 3661              		.loc 1 903 0 discriminator 2
 3662 00bc 7A69     		ldr	r2, [r7, #20]
 3663 00be 40F20003 		movw	r3, #:lower16:gz
 3664 00c2 C0F20003 		movt	r3, #:upper16:gz
 3665 00c6 1B88     		ldrh	r3, [r3, #0]
 3666 00c8 1BB2     		sxth	r3, r3
 3667 00ca D318     		adds	r3, r2, r3
 3668 00cc 7B61     		str	r3, [r7, #20]
 904:../LSM9DS1_Driver.c **** 
 905:../LSM9DS1_Driver.c **** 		readAccel1();
 3669              		.loc 1 905 0 discriminator 2
 3670 00ce FFF7FEFF 		bl	readAccel1
 906:../LSM9DS1_Driver.c **** 		aBiasRawTemp[0] += ax;
 3671              		.loc 1 906 0 discriminator 2
 3672 00d2 BA69     		ldr	r2, [r7, #24]
 3673 00d4 40F20003 		movw	r3, #:lower16:ax
 3674 00d8 C0F20003 		movt	r3, #:upper16:ax
 3675 00dc 1B88     		ldrh	r3, [r3, #0]
 3676 00de 1BB2     		sxth	r3, r3
 3677 00e0 D318     		adds	r3, r2, r3
 3678 00e2 BB61     		str	r3, [r7, #24]
 907:../LSM9DS1_Driver.c **** 		aBiasRawTemp[1] += ay;
 3679              		.loc 1 907 0 discriminator 2
 3680 00e4 FA69     		ldr	r2, [r7, #28]
 3681 00e6 40F20003 		movw	r3, #:lower16:ay
 3682 00ea C0F20003 		movt	r3, #:upper16:ay
 3683 00ee 1B88     		ldrh	r3, [r3, #0]
 3684 00f0 1BB2     		sxth	r3, r3
 3685 00f2 D318     		adds	r3, r2, r3
 3686 00f4 FB61     		str	r3, [r7, #28]
 908:../LSM9DS1_Driver.c **** 		aBiasRawTemp[2] += az - (int16_t)(1./aRes); // Assumes sensor facing up!
 3687              		.loc 1 908 0 discriminator 2
 3688 00f6 3C6A     		ldr	r4, [r7, #32]
 3689 00f8 40F20003 		movw	r3, #:lower16:az
 3690 00fc C0F20003 		movt	r3, #:upper16:az
 3691 0100 1B88     		ldrh	r3, [r3, #0]
 3692 0102 1DB2     		sxth	r5, r3
 3693 0104 40F20003 		movw	r3, #:lower16:aRes
 3694 0108 C0F20003 		movt	r3, #:upper16:aRes
 3695 010c 1B68     		ldr	r3, [r3, #0]	@ float
 3696 010e 1846     		mov	r0, r3	@ float
 3697 0110 FFF7FEFF 		bl	__aeabi_f2d
 3698 0114 0246     		mov	r2, r0
 3699 0116 0B46     		mov	r3, r1
 3700 0118 4FF00000 		mov	r0, #0
 3701 011c 4FF00001 		mov	r1, #0
 3702 0120 C3F6F071 		movt	r1, 16368
 3703 0124 FFF7FEFF 		bl	__aeabi_ddiv
 3704 0128 0246     		mov	r2, r0
 3705 012a 0B46     		mov	r3, r1
 3706 012c 1046     		mov	r0, r2
 3707 012e 1946     		mov	r1, r3
 3708 0130 FFF7FEFF 		bl	__aeabi_d2iz
 3709 0134 0346     		mov	r3, r0
 3710 0136 9BB2     		uxth	r3, r3
 3711 0138 1BB2     		sxth	r3, r3
 3712 013a EB1A     		subs	r3, r5, r3
 3713 013c E318     		adds	r3, r4, r3
 3714 013e 3B62     		str	r3, [r7, #32]
 898:../LSM9DS1_Driver.c **** 	for(ii = 0; ii < samples ; ii++)
 3715              		.loc 1 898 0 discriminator 2
 3716 0140 FB6A     		ldr	r3, [r7, #44]
 3717 0142 03F10103 		add	r3, r3, #1
 3718 0146 FB62     		str	r3, [r7, #44]
 3719              	.L138:
 898:../LSM9DS1_Driver.c **** 	for(ii = 0; ii < samples ; ii++)
 3720              		.loc 1 898 0 is_stmt 0 discriminator 1
 3721 0148 97F82B20 		ldrb	r2, [r7, #43]	@ zero_extendqisi2
 3722 014c FB6A     		ldr	r3, [r7, #44]
 3723 014e 9A42     		cmp	r2, r3
 3724 0150 A0DC     		bgt	.L139
 909:../LSM9DS1_Driver.c **** 	}
 910:../LSM9DS1_Driver.c **** 	for (ii = 0; ii < samples/*3*/; ii++)
 3725              		.loc 1 910 0 is_stmt 1
 3726 0152 4FF00003 		mov	r3, #0
 3727 0156 FB62     		str	r3, [r7, #44]
 3728 0158 55E0     		b	.L140
 3729              	.L141:
 911:../LSM9DS1_Driver.c **** 	{
 912:../LSM9DS1_Driver.c **** 		gBiasRaw[ii] = gBiasRawTemp[ii] / samples;
 3730              		.loc 1 912 0 discriminator 2
 3731 015a FB6A     		ldr	r3, [r7, #44]
 3732 015c 4FEA8303 		lsl	r3, r3, #2
 3733 0160 07F13002 		add	r2, r7, #48
 3734 0164 D318     		adds	r3, r2, r3
 3735 0166 53F8242C 		ldr	r2, [r3, #-36]
 3736 016a 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 3737 016e 92FBF3F3 		sdiv	r3, r2, r3
 3738 0172 99B2     		uxth	r1, r3
 3739 0174 40F20003 		movw	r3, #:lower16:gBiasRaw
 3740 0178 C0F20003 		movt	r3, #:upper16:gBiasRaw
 3741 017c FA6A     		ldr	r2, [r7, #44]
 3742 017e 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 913:../LSM9DS1_Driver.c **** 		gBias[ii] = calcGyro(gBiasRaw[ii]);
 3743              		.loc 1 913 0 discriminator 2
 3744 0182 40F20003 		movw	r3, #:lower16:gBiasRaw
 3745 0186 C0F20003 		movt	r3, #:upper16:gBiasRaw
 3746 018a FA6A     		ldr	r2, [r7, #44]
 3747 018c 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 3748 0190 1BB2     		sxth	r3, r3
 3749 0192 1846     		mov	r0, r3
 3750 0194 FFF7FEFF 		bl	calcGyro
 3751 0198 0246     		mov	r2, r0	@ float
 3752 019a 40F20003 		movw	r3, #:lower16:gBias
 3753 019e C0F20003 		movt	r3, #:upper16:gBias
 3754 01a2 F96A     		ldr	r1, [r7, #44]
 3755 01a4 4FEA8101 		lsl	r1, r1, #2
 3756 01a8 5B18     		adds	r3, r3, r1
 3757 01aa 1A60     		str	r2, [r3, #0]	@ float
 914:../LSM9DS1_Driver.c **** 		aBiasRaw[ii] = aBiasRawTemp[ii] / samples;
 3758              		.loc 1 914 0 discriminator 2
 3759 01ac FB6A     		ldr	r3, [r7, #44]
 3760 01ae 4FEA8303 		lsl	r3, r3, #2
 3761 01b2 07F13002 		add	r2, r7, #48
 3762 01b6 D318     		adds	r3, r2, r3
 3763 01b8 53F8182C 		ldr	r2, [r3, #-24]
 3764 01bc 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 3765 01c0 92FBF3F3 		sdiv	r3, r2, r3
 3766 01c4 99B2     		uxth	r1, r3
 3767 01c6 40F20003 		movw	r3, #:lower16:aBiasRaw
 3768 01ca C0F20003 		movt	r3, #:upper16:aBiasRaw
 3769 01ce FA6A     		ldr	r2, [r7, #44]
 3770 01d0 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 915:../LSM9DS1_Driver.c **** 		aBias[ii] = calcAccel(aBiasRaw[ii]);
 3771              		.loc 1 915 0 discriminator 2
 3772 01d4 40F20003 		movw	r3, #:lower16:aBiasRaw
 3773 01d8 C0F20003 		movt	r3, #:upper16:aBiasRaw
 3774 01dc FA6A     		ldr	r2, [r7, #44]
 3775 01de 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 3776 01e2 1BB2     		sxth	r3, r3
 3777 01e4 1846     		mov	r0, r3
 3778 01e6 FFF7FEFF 		bl	calcAccel
 3779 01ea 0246     		mov	r2, r0	@ float
 3780 01ec 40F20003 		movw	r3, #:lower16:aBias
 3781 01f0 C0F20003 		movt	r3, #:upper16:aBias
 3782 01f4 F96A     		ldr	r1, [r7, #44]
 3783 01f6 4FEA8101 		lsl	r1, r1, #2
 3784 01fa 5B18     		adds	r3, r3, r1
 3785 01fc 1A60     		str	r2, [r3, #0]	@ float
 910:../LSM9DS1_Driver.c **** 	for (ii = 0; ii < samples/*3*/; ii++)
 3786              		.loc 1 910 0 discriminator 2
 3787 01fe FB6A     		ldr	r3, [r7, #44]
 3788 0200 03F10103 		add	r3, r3, #1
 3789 0204 FB62     		str	r3, [r7, #44]
 3790              	.L140:
 910:../LSM9DS1_Driver.c **** 	for (ii = 0; ii < samples/*3*/; ii++)
 3791              		.loc 1 910 0 is_stmt 0 discriminator 1
 3792 0206 97F82B20 		ldrb	r2, [r7, #43]	@ zero_extendqisi2
 3793 020a FB6A     		ldr	r3, [r7, #44]
 3794 020c 9A42     		cmp	r2, r3
 3795 020e A4DC     		bgt	.L141
 916:../LSM9DS1_Driver.c **** 	}
 917:../LSM9DS1_Driver.c **** 
 918:../LSM9DS1_Driver.c **** 	enableFIFO(FALSE);
 3796              		.loc 1 918 0 is_stmt 1
 3797 0210 4FF00000 		mov	r0, #0
 3798 0214 FFF7FEFF 		bl	enableFIFO
 919:../LSM9DS1_Driver.c **** 	setFIFO(FIFO_OFF, 0x00);
 3799              		.loc 1 919 0
 3800 0218 4FF00000 		mov	r0, #0
 3801 021c 4FF00001 		mov	r1, #0
 3802 0220 FFF7FEFF 		bl	setFIFO
 920:../LSM9DS1_Driver.c **** 
 921:../LSM9DS1_Driver.c **** 	if (autoCalc) _autoCalc = TRUE;
 3803              		.loc 1 921 0
 3804 0224 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3805 0226 002B     		cmp	r3, #0
 3806 0228 06D0     		beq	.L137
 3807              		.loc 1 921 0 is_stmt 0 discriminator 1
 3808 022a 40F20003 		movw	r3, #:lower16:_autoCalc
 3809 022e C0F20003 		movt	r3, #:upper16:_autoCalc
 3810 0232 4FF00102 		mov	r2, #1
 3811 0236 1A70     		strb	r2, [r3, #0]
 3812              	.L137:
 922:../LSM9DS1_Driver.c **** }
 3813              		.loc 1 922 0 is_stmt 1
 3814 0238 07F13007 		add	r7, r7, #48
 3815 023c BD46     		mov	sp, r7
 3816 023e B0BD     		pop	{r4, r5, r7, pc}
 3817              		.cfi_endproc
 3818              	.LFE154:
 3820              		.section	.text.xgReadBytes,"ax",%progbits
 3821              		.align	2
 3822              		.global	xgReadBytes
 3823              		.thumb
 3824              		.thumb_func
 3826              	xgReadBytes:
 3827              	.LFB155:
 923:../LSM9DS1_Driver.c **** 
 924:../LSM9DS1_Driver.c **** 
 925:../LSM9DS1_Driver.c **** void xgReadBytes(uint8_t subAddress, uint8_t * dest, uint8_t count)
 926:../LSM9DS1_Driver.c **** {
 3828              		.loc 1 926 0
 3829              		.cfi_startproc
 3830              		@ args = 0, pretend = 0, frame = 8
 3831              		@ frame_needed = 1, uses_anonymous_args = 0
 3832 0000 80B5     		push	{r7, lr}
 3833              	.LCFI103:
 3834              		.cfi_def_cfa_offset 8
 3835              		.cfi_offset 7, -8
 3836              		.cfi_offset 14, -4
 3837 0002 82B0     		sub	sp, sp, #8
 3838              	.LCFI104:
 3839              		.cfi_def_cfa_offset 16
 3840 0004 00AF     		add	r7, sp, #0
 3841              	.LCFI105:
 3842              		.cfi_def_cfa_register 7
 3843 0006 3960     		str	r1, [r7, #0]
 3844 0008 1346     		mov	r3, r2
 3845 000a 0246     		mov	r2, r0
 3846 000c FA71     		strb	r2, [r7, #7]
 3847 000e BB71     		strb	r3, [r7, #6]
 927:../LSM9DS1_Driver.c **** 	// Whether we're using I2C or SPI, read multiple bytes using the
 928:../LSM9DS1_Driver.c **** 	// gyro-specific I2C address or SPI CS pin.
 929:../LSM9DS1_Driver.c **** 	if (settings.device.commInterface == IMU_MODE_I2C)
 3848              		.loc 1 929 0
 3849 0010 40F20003 		movw	r3, #:lower16:settings
 3850 0014 C0F20003 		movt	r3, #:upper16:settings
 3851 0018 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3852 001a 012B     		cmp	r3, #1
 3853 001c 0CD1     		bne	.L144
 930:../LSM9DS1_Driver.c **** 		I2CreadBytes(_xgAddress, subAddress, dest, count);
 3854              		.loc 1 930 0
 3855 001e 40F20003 		movw	r3, #:lower16:_xgAddress
 3856 0022 C0F20003 		movt	r3, #:upper16:_xgAddress
 3857 0026 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 3858 0028 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3859 002a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3860 002c 0846     		mov	r0, r1
 3861 002e 1146     		mov	r1, r2
 3862 0030 3A68     		ldr	r2, [r7, #0]
 3863 0032 FFF7FEFF 		bl	I2CreadBytes
 3864 0036 12E0     		b	.L143
 3865              	.L144:
 931:../LSM9DS1_Driver.c **** 		//I2CreadBytes1(_xgAddress, subAddress, dest, count);
 932:../LSM9DS1_Driver.c **** 	else if (settings.device.commInterface == IMU_MODE_SPI)
 3866              		.loc 1 932 0
 3867 0038 40F20003 		movw	r3, #:lower16:settings
 3868 003c C0F20003 		movt	r3, #:upper16:settings
 3869 0040 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3870 0042 002B     		cmp	r3, #0
 3871 0044 0BD1     		bne	.L143
 933:../LSM9DS1_Driver.c **** 		SPIreadBytes(_xgAddress, subAddress, dest, count);
 3872              		.loc 1 933 0
 3873 0046 40F20003 		movw	r3, #:lower16:_xgAddress
 3874 004a C0F20003 		movt	r3, #:upper16:_xgAddress
 3875 004e 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 3876 0050 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3877 0052 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3878 0054 0846     		mov	r0, r1
 3879 0056 1146     		mov	r1, r2
 3880 0058 3A68     		ldr	r2, [r7, #0]
 3881 005a FFF7FEFF 		bl	SPIreadBytes
 3882              	.L143:
 934:../LSM9DS1_Driver.c **** }
 3883              		.loc 1 934 0
 3884 005e 07F10807 		add	r7, r7, #8
 3885 0062 BD46     		mov	sp, r7
 3886 0064 80BD     		pop	{r7, pc}
 3887              		.cfi_endproc
 3888              	.LFE155:
 3890              		.section	.text.SPIreadBytes,"ax",%progbits
 3891              		.align	2
 3892              		.global	SPIreadBytes
 3893              		.thumb
 3894              		.thumb_func
 3896              	SPIreadBytes:
 3897              	.LFB156:
 935:../LSM9DS1_Driver.c **** 
 936:../LSM9DS1_Driver.c **** void SPIreadBytes(uint8_t csPin, uint8_t subAddress, uint8_t * dest, uint8_t count)
 937:../LSM9DS1_Driver.c **** {
 3898              		.loc 1 937 0
 3899              		.cfi_startproc
 3900              		@ args = 0, pretend = 0, frame = 8
 3901              		@ frame_needed = 1, uses_anonymous_args = 0
 3902              		@ link register save eliminated.
 3903 0000 80B4     		push	{r7}
 3904              	.LCFI106:
 3905              		.cfi_def_cfa_offset 4
 3906              		.cfi_offset 7, -4
 3907 0002 83B0     		sub	sp, sp, #12
 3908              	.LCFI107:
 3909              		.cfi_def_cfa_offset 16
 3910 0004 00AF     		add	r7, sp, #0
 3911              	.LCFI108:
 3912              		.cfi_def_cfa_register 7
 3913 0006 3A60     		str	r2, [r7, #0]
 3914 0008 0246     		mov	r2, r0
 3915 000a FA71     		strb	r2, [r7, #7]
 3916 000c 0A46     		mov	r2, r1
 3917 000e BA71     		strb	r2, [r7, #6]
 3918 0010 7B71     		strb	r3, [r7, #5]
 938:../LSM9DS1_Driver.c **** 	;
 939:../LSM9DS1_Driver.c **** }
 3919              		.loc 1 939 0
 3920 0012 07F10C07 		add	r7, r7, #12
 3921 0016 BD46     		mov	sp, r7
 3922 0018 80BC     		pop	{r7}
 3923 001a 7047     		bx	lr
 3924              		.cfi_endproc
 3925              	.LFE156:
 3927              		.section	.text.readGyro1,"ax",%progbits
 3928              		.align	2
 3929              		.global	readGyro1
 3930              		.thumb
 3931              		.thumb_func
 3933              	readGyro1:
 3934              	.LFB157:
 940:../LSM9DS1_Driver.c **** 
 941:../LSM9DS1_Driver.c **** void readGyro1(void)
 942:../LSM9DS1_Driver.c **** {
 3935              		.loc 1 942 0
 3936              		.cfi_startproc
 3937              		@ args = 0, pretend = 0, frame = 8
 3938              		@ frame_needed = 1, uses_anonymous_args = 0
 3939 0000 90B5     		push	{r4, r7, lr}
 3940              	.LCFI109:
 3941              		.cfi_def_cfa_offset 12
 3942              		.cfi_offset 4, -12
 3943              		.cfi_offset 7, -8
 3944              		.cfi_offset 14, -4
 3945 0002 83B0     		sub	sp, sp, #12
 3946              	.LCFI110:
 3947              		.cfi_def_cfa_offset 24
 3948 0004 00AF     		add	r7, sp, #0
 3949              	.LCFI111:
 3950              		.cfi_def_cfa_register 7
 943:../LSM9DS1_Driver.c **** 	uint8_t i = 0; //licznik dla czytania
 3951              		.loc 1 943 0
 3952 0006 4FF00003 		mov	r3, #0
 3953 000a FB71     		strb	r3, [r7, #7]
 944:../LSM9DS1_Driver.c **** 	uint8_t temp[6]; // We'll read six bytes from the gyro into temp
 945:../LSM9DS1_Driver.c **** 	uint8_t subAddr = OUT_X_L_G;
 3954              		.loc 1 945 0
 3955 000c 4FF01803 		mov	r3, #24
 3956 0010 BB71     		strb	r3, [r7, #6]
 946:../LSM9DS1_Driver.c **** 
 947:../LSM9DS1_Driver.c **** 
 948:../LSM9DS1_Driver.c **** 	while(i < 6)
 3957              		.loc 1 948 0
 3958 0012 24E0     		b	.L148
 3959              	.L149:
 949:../LSM9DS1_Driver.c **** 	{
 950:../LSM9DS1_Driver.c **** 		subAddr = OUT_X_L_G;
 3960              		.loc 1 950 0
 3961 0014 4FF01803 		mov	r3, #24
 3962 0018 BB71     		strb	r3, [r7, #6]
 951:../LSM9DS1_Driver.c **** 		subAddr = subAddr + i;
 3963              		.loc 1 951 0
 3964 001a BA79     		ldrb	r2, [r7, #6]
 3965 001c FB79     		ldrb	r3, [r7, #7]
 3966 001e D318     		adds	r3, r2, r3
 3967 0020 BB71     		strb	r3, [r7, #6]
 952:../LSM9DS1_Driver.c **** 		temp[i] = I2CreadBytes(_xgAddress, subAddr, NULL, 0);
 3968              		.loc 1 952 0
 3969 0022 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 3970 0024 40F20003 		movw	r3, #:lower16:_xgAddress
 3971 0028 C0F20003 		movt	r3, #:upper16:_xgAddress
 3972 002c 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 3973 002e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3974 0030 1046     		mov	r0, r2
 3975 0032 1946     		mov	r1, r3
 3976 0034 4FF00002 		mov	r2, #0
 3977 0038 4FF00003 		mov	r3, #0
 3978 003c FFF7FEFF 		bl	I2CreadBytes
 3979 0040 0346     		mov	r3, r0
 3980 0042 1A46     		mov	r2, r3
 3981 0044 07F10801 		add	r1, r7, #8
 3982 0048 0B19     		adds	r3, r1, r4
 3983 004a 03F8082C 		strb	r2, [r3, #-8]
 953:../LSM9DS1_Driver.c **** 		delay(DELAY);
 3984              		.loc 1 953 0
 3985 004e 42F6E060 		movw	r0, #12000
 3986 0052 FFF7FEFF 		bl	delay
 954:../LSM9DS1_Driver.c **** 		i++;
 3987              		.loc 1 954 0
 3988 0056 FB79     		ldrb	r3, [r7, #7]
 3989 0058 03F10103 		add	r3, r3, #1
 3990 005c FB71     		strb	r3, [r7, #7]
 3991              	.L148:
 948:../LSM9DS1_Driver.c **** 	while(i < 6)
 3992              		.loc 1 948 0 discriminator 1
 3993 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3994 0060 052B     		cmp	r3, #5
 3995 0062 D7D9     		bls	.L149
 955:../LSM9DS1_Driver.c **** 	}
 956:../LSM9DS1_Driver.c **** 
 957:../LSM9DS1_Driver.c **** 	gx = ((int8_t)temp[1] << 8) | (int8_t)temp[0]; // Store x-axis values into gx
 3996              		.loc 1 957 0
 3997 0064 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 3998 0066 DBB2     		uxtb	r3, r3
 3999 0068 5BB2     		sxtb	r3, r3
 4000 006a 4FEA0323 		lsl	r3, r3, #8
 4001 006e 9AB2     		uxth	r2, r3
 4002 0070 3B78     		ldrb	r3, [r7, #0]	@ zero_extendqisi2
 4003 0072 DBB2     		uxtb	r3, r3
 4004 0074 5BB2     		sxtb	r3, r3
 4005 0076 9BB2     		uxth	r3, r3
 4006 0078 1343     		orrs	r3, r3, r2
 4007 007a 9AB2     		uxth	r2, r3
 4008 007c 40F20003 		movw	r3, #:lower16:gx
 4009 0080 C0F20003 		movt	r3, #:upper16:gx
 4010 0084 1A80     		strh	r2, [r3, #0]	@ movhi
 958:../LSM9DS1_Driver.c **** 
 959:../LSM9DS1_Driver.c **** 	gy = (temp[3] << 8) | temp[2]; // Store y-axis values into gy
 4011              		.loc 1 959 0
 4012 0086 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4013 0088 4FEA0323 		lsl	r3, r3, #8
 4014 008c 9AB2     		uxth	r2, r3
 4015 008e BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 4016 0090 1343     		orrs	r3, r3, r2
 4017 0092 9AB2     		uxth	r2, r3
 4018 0094 40F20003 		movw	r3, #:lower16:gy
 4019 0098 C0F20003 		movt	r3, #:upper16:gy
 4020 009c 1A80     		strh	r2, [r3, #0]	@ movhi
 960:../LSM9DS1_Driver.c **** 
 961:../LSM9DS1_Driver.c **** 	gz = (temp[5] << 8) | temp[4]; // Store z-axis values into gz
 4021              		.loc 1 961 0
 4022 009e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4023 00a0 4FEA0323 		lsl	r3, r3, #8
 4024 00a4 9AB2     		uxth	r2, r3
 4025 00a6 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 4026 00a8 1343     		orrs	r3, r3, r2
 4027 00aa 9AB2     		uxth	r2, r3
 4028 00ac 40F20003 		movw	r3, #:lower16:gz
 4029 00b0 C0F20003 		movt	r3, #:upper16:gz
 4030 00b4 1A80     		strh	r2, [r3, #0]	@ movhi
 962:../LSM9DS1_Driver.c **** 
 963:../LSM9DS1_Driver.c **** 
 964:../LSM9DS1_Driver.c **** 
 965:../LSM9DS1_Driver.c **** 	if (_autoCalc) //kalibracja
 4031              		.loc 1 965 0
 4032 00b6 40F20003 		movw	r3, #:lower16:_autoCalc
 4033 00ba C0F20003 		movt	r3, #:upper16:_autoCalc
 4034 00be 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 4035 00c0 002B     		cmp	r3, #0
 4036 00c2 3BD0     		beq	.L147
 966:../LSM9DS1_Driver.c **** 	{
 967:../LSM9DS1_Driver.c **** 		gx -= gBiasRaw[X_AXIS];
 4037              		.loc 1 967 0
 4038 00c4 40F20003 		movw	r3, #:lower16:gx
 4039 00c8 C0F20003 		movt	r3, #:upper16:gx
 4040 00cc 1B88     		ldrh	r3, [r3, #0]
 4041 00ce 9AB2     		uxth	r2, r3
 4042 00d0 40F20003 		movw	r3, #:lower16:gBiasRaw
 4043 00d4 C0F20003 		movt	r3, #:upper16:gBiasRaw
 4044 00d8 1B88     		ldrh	r3, [r3, #0]
 4045 00da 9BB2     		uxth	r3, r3
 4046 00dc D31A     		subs	r3, r2, r3
 4047 00de 9BB2     		uxth	r3, r3
 4048 00e0 9AB2     		uxth	r2, r3
 4049 00e2 40F20003 		movw	r3, #:lower16:gx
 4050 00e6 C0F20003 		movt	r3, #:upper16:gx
 4051 00ea 1A80     		strh	r2, [r3, #0]	@ movhi
 968:../LSM9DS1_Driver.c **** 		gy -= gBiasRaw[Y_AXIS];
 4052              		.loc 1 968 0
 4053 00ec 40F20003 		movw	r3, #:lower16:gy
 4054 00f0 C0F20003 		movt	r3, #:upper16:gy
 4055 00f4 1B88     		ldrh	r3, [r3, #0]
 4056 00f6 9AB2     		uxth	r2, r3
 4057 00f8 40F20003 		movw	r3, #:lower16:gBiasRaw
 4058 00fc C0F20003 		movt	r3, #:upper16:gBiasRaw
 4059 0100 5B88     		ldrh	r3, [r3, #2]
 4060 0102 9BB2     		uxth	r3, r3
 4061 0104 D31A     		subs	r3, r2, r3
 4062 0106 9BB2     		uxth	r3, r3
 4063 0108 9AB2     		uxth	r2, r3
 4064 010a 40F20003 		movw	r3, #:lower16:gy
 4065 010e C0F20003 		movt	r3, #:upper16:gy
 4066 0112 1A80     		strh	r2, [r3, #0]	@ movhi
 969:../LSM9DS1_Driver.c **** 		gz -= gBiasRaw[Z_AXIS];
 4067              		.loc 1 969 0
 4068 0114 40F20003 		movw	r3, #:lower16:gz
 4069 0118 C0F20003 		movt	r3, #:upper16:gz
 4070 011c 1B88     		ldrh	r3, [r3, #0]
 4071 011e 9AB2     		uxth	r2, r3
 4072 0120 40F20003 		movw	r3, #:lower16:gBiasRaw
 4073 0124 C0F20003 		movt	r3, #:upper16:gBiasRaw
 4074 0128 9B88     		ldrh	r3, [r3, #4]
 4075 012a 9BB2     		uxth	r3, r3
 4076 012c D31A     		subs	r3, r2, r3
 4077 012e 9BB2     		uxth	r3, r3
 4078 0130 9AB2     		uxth	r2, r3
 4079 0132 40F20003 		movw	r3, #:lower16:gz
 4080 0136 C0F20003 		movt	r3, #:upper16:gz
 4081 013a 1A80     		strh	r2, [r3, #0]	@ movhi
 4082              	.L147:
 970:../LSM9DS1_Driver.c **** 	}
 971:../LSM9DS1_Driver.c **** 	/*gx = calcGyro(gx);
 972:../LSM9DS1_Driver.c **** 	gy = calcGyro(gy);
 973:../LSM9DS1_Driver.c **** 	gz = calcGyro(gz);*/
 974:../LSM9DS1_Driver.c **** }
 4083              		.loc 1 974 0
 4084 013c 07F10C07 		add	r7, r7, #12
 4085 0140 BD46     		mov	sp, r7
 4086 0142 90BD     		pop	{r4, r7, pc}
 4087              		.cfi_endproc
 4088              	.LFE157:
 4090              		.section	.text.readAccel1,"ax",%progbits
 4091              		.align	2
 4092              		.global	readAccel1
 4093              		.thumb
 4094              		.thumb_func
 4096              	readAccel1:
 4097              	.LFB158:
 975:../LSM9DS1_Driver.c **** 
 976:../LSM9DS1_Driver.c **** void readAccel1(void)
 977:../LSM9DS1_Driver.c **** {
 4098              		.loc 1 977 0
 4099              		.cfi_startproc
 4100              		@ args = 0, pretend = 0, frame = 8
 4101              		@ frame_needed = 1, uses_anonymous_args = 0
 4102 0000 90B5     		push	{r4, r7, lr}
 4103              	.LCFI112:
 4104              		.cfi_def_cfa_offset 12
 4105              		.cfi_offset 4, -12
 4106              		.cfi_offset 7, -8
 4107              		.cfi_offset 14, -4
 4108 0002 83B0     		sub	sp, sp, #12
 4109              	.LCFI113:
 4110              		.cfi_def_cfa_offset 24
 4111 0004 00AF     		add	r7, sp, #0
 4112              	.LCFI114:
 4113              		.cfi_def_cfa_register 7
 978:../LSM9DS1_Driver.c **** 	uint8_t i = 0; //licznik dla czytania
 4114              		.loc 1 978 0
 4115 0006 4FF00003 		mov	r3, #0
 4116 000a FB71     		strb	r3, [r7, #7]
 979:../LSM9DS1_Driver.c **** 	uint8_t temp[6]; // We'll read six bytes from the gyro into temp
 980:../LSM9DS1_Driver.c **** 	uint8_t subAddr = OUT_X_L_XL;
 4117              		.loc 1 980 0
 4118 000c 4FF02803 		mov	r3, #40
 4119 0010 BB71     		strb	r3, [r7, #6]
 981:../LSM9DS1_Driver.c **** 
 982:../LSM9DS1_Driver.c **** 	while(i < 6)
 4120              		.loc 1 982 0
 4121 0012 20E0     		b	.L152
 4122              	.L153:
 983:../LSM9DS1_Driver.c **** 	{
 984:../LSM9DS1_Driver.c **** 		subAddr = OUT_X_L_XL;
 4123              		.loc 1 984 0
 4124 0014 4FF02803 		mov	r3, #40
 4125 0018 BB71     		strb	r3, [r7, #6]
 985:../LSM9DS1_Driver.c **** 		subAddr = subAddr + i;
 4126              		.loc 1 985 0
 4127 001a BA79     		ldrb	r2, [r7, #6]
 4128 001c FB79     		ldrb	r3, [r7, #7]
 4129 001e D318     		adds	r3, r2, r3
 4130 0020 BB71     		strb	r3, [r7, #6]
 986:../LSM9DS1_Driver.c **** 		temp[i] = I2CreadBytes(_xgAddress, subAddr, NULL, 0);
 4131              		.loc 1 986 0
 4132 0022 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 4133 0024 40F20003 		movw	r3, #:lower16:_xgAddress
 4134 0028 C0F20003 		movt	r3, #:upper16:_xgAddress
 4135 002c 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 4136 002e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4137 0030 1046     		mov	r0, r2
 4138 0032 1946     		mov	r1, r3
 4139 0034 4FF00002 		mov	r2, #0
 4140 0038 4FF00003 		mov	r3, #0
 4141 003c FFF7FEFF 		bl	I2CreadBytes
 4142 0040 0346     		mov	r3, r0
 4143 0042 1A46     		mov	r2, r3
 4144 0044 07F10801 		add	r1, r7, #8
 4145 0048 0B19     		adds	r3, r1, r4
 4146 004a 03F8082C 		strb	r2, [r3, #-8]
 987:../LSM9DS1_Driver.c **** 		i++;
 4147              		.loc 1 987 0
 4148 004e FB79     		ldrb	r3, [r7, #7]
 4149 0050 03F10103 		add	r3, r3, #1
 4150 0054 FB71     		strb	r3, [r7, #7]
 4151              	.L152:
 982:../LSM9DS1_Driver.c **** 	while(i < 6)
 4152              		.loc 1 982 0 discriminator 1
 4153 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4154 0058 052B     		cmp	r3, #5
 4155 005a DBD9     		bls	.L153
 988:../LSM9DS1_Driver.c **** 	}
 989:../LSM9DS1_Driver.c **** 
 990:../LSM9DS1_Driver.c **** 	ax = (temp[1] << 8) | temp[0]; // Store x-axis values into ax
 4156              		.loc 1 990 0
 4157 005c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 4158 005e 4FEA0323 		lsl	r3, r3, #8
 4159 0062 9AB2     		uxth	r2, r3
 4160 0064 3B78     		ldrb	r3, [r7, #0]	@ zero_extendqisi2
 4161 0066 1343     		orrs	r3, r3, r2
 4162 0068 9AB2     		uxth	r2, r3
 4163 006a 40F20003 		movw	r3, #:lower16:ax
 4164 006e C0F20003 		movt	r3, #:upper16:ax
 4165 0072 1A80     		strh	r2, [r3, #0]	@ movhi
 991:../LSM9DS1_Driver.c **** 	ay = (temp[3] << 8) | temp[2]; // Store y-axis values into ay
 4166              		.loc 1 991 0
 4167 0074 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4168 0076 4FEA0323 		lsl	r3, r3, #8
 4169 007a 9AB2     		uxth	r2, r3
 4170 007c BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 4171 007e 1343     		orrs	r3, r3, r2
 4172 0080 9AB2     		uxth	r2, r3
 4173 0082 40F20003 		movw	r3, #:lower16:ay
 4174 0086 C0F20003 		movt	r3, #:upper16:ay
 4175 008a 1A80     		strh	r2, [r3, #0]	@ movhi
 992:../LSM9DS1_Driver.c **** 	az = (temp[5] << 8) | temp[4]; // Store z-axis values into az
 4176              		.loc 1 992 0
 4177 008c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4178 008e 4FEA0323 		lsl	r3, r3, #8
 4179 0092 9AB2     		uxth	r2, r3
 4180 0094 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 4181 0096 1343     		orrs	r3, r3, r2
 4182 0098 9AB2     		uxth	r2, r3
 4183 009a 40F20003 		movw	r3, #:lower16:az
 4184 009e C0F20003 		movt	r3, #:upper16:az
 4185 00a2 1A80     		strh	r2, [r3, #0]	@ movhi
 993:../LSM9DS1_Driver.c **** 
 994:../LSM9DS1_Driver.c **** 	if (_autoCalc) //kalibracja
 4186              		.loc 1 994 0
 4187 00a4 40F20003 		movw	r3, #:lower16:_autoCalc
 4188 00a8 C0F20003 		movt	r3, #:upper16:_autoCalc
 4189 00ac 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 4190 00ae 002B     		cmp	r3, #0
 4191 00b0 3BD0     		beq	.L151
 995:../LSM9DS1_Driver.c **** 	{
 996:../LSM9DS1_Driver.c **** 		ax -= aBiasRaw[X_AXIS];
 4192              		.loc 1 996 0
 4193 00b2 40F20003 		movw	r3, #:lower16:ax
 4194 00b6 C0F20003 		movt	r3, #:upper16:ax
 4195 00ba 1B88     		ldrh	r3, [r3, #0]
 4196 00bc 9AB2     		uxth	r2, r3
 4197 00be 40F20003 		movw	r3, #:lower16:aBiasRaw
 4198 00c2 C0F20003 		movt	r3, #:upper16:aBiasRaw
 4199 00c6 1B88     		ldrh	r3, [r3, #0]
 4200 00c8 9BB2     		uxth	r3, r3
 4201 00ca D31A     		subs	r3, r2, r3
 4202 00cc 9BB2     		uxth	r3, r3
 4203 00ce 9AB2     		uxth	r2, r3
 4204 00d0 40F20003 		movw	r3, #:lower16:ax
 4205 00d4 C0F20003 		movt	r3, #:upper16:ax
 4206 00d8 1A80     		strh	r2, [r3, #0]	@ movhi
 997:../LSM9DS1_Driver.c **** 		ay -= aBiasRaw[Y_AXIS];
 4207              		.loc 1 997 0
 4208 00da 40F20003 		movw	r3, #:lower16:ay
 4209 00de C0F20003 		movt	r3, #:upper16:ay
 4210 00e2 1B88     		ldrh	r3, [r3, #0]
 4211 00e4 9AB2     		uxth	r2, r3
 4212 00e6 40F20003 		movw	r3, #:lower16:aBiasRaw
 4213 00ea C0F20003 		movt	r3, #:upper16:aBiasRaw
 4214 00ee 5B88     		ldrh	r3, [r3, #2]
 4215 00f0 9BB2     		uxth	r3, r3
 4216 00f2 D31A     		subs	r3, r2, r3
 4217 00f4 9BB2     		uxth	r3, r3
 4218 00f6 9AB2     		uxth	r2, r3
 4219 00f8 40F20003 		movw	r3, #:lower16:ay
 4220 00fc C0F20003 		movt	r3, #:upper16:ay
 4221 0100 1A80     		strh	r2, [r3, #0]	@ movhi
 998:../LSM9DS1_Driver.c **** 		az -= aBiasRaw[Z_AXIS];
 4222              		.loc 1 998 0
 4223 0102 40F20003 		movw	r3, #:lower16:az
 4224 0106 C0F20003 		movt	r3, #:upper16:az
 4225 010a 1B88     		ldrh	r3, [r3, #0]
 4226 010c 9AB2     		uxth	r2, r3
 4227 010e 40F20003 		movw	r3, #:lower16:aBiasRaw
 4228 0112 C0F20003 		movt	r3, #:upper16:aBiasRaw
 4229 0116 9B88     		ldrh	r3, [r3, #4]
 4230 0118 9BB2     		uxth	r3, r3
 4231 011a D31A     		subs	r3, r2, r3
 4232 011c 9BB2     		uxth	r3, r3
 4233 011e 9AB2     		uxth	r2, r3
 4234 0120 40F20003 		movw	r3, #:lower16:az
 4235 0124 C0F20003 		movt	r3, #:upper16:az
 4236 0128 1A80     		strh	r2, [r3, #0]	@ movhi
 4237              	.L151:
 999:../LSM9DS1_Driver.c **** 	}
1000:../LSM9DS1_Driver.c **** 
1001:../LSM9DS1_Driver.c **** 	/*ax = calcAccel(ax);
1002:../LSM9DS1_Driver.c **** 	ay = calcAccel(ay);
1003:../LSM9DS1_Driver.c **** 	az = calcAccel(az);*/
1004:../LSM9DS1_Driver.c **** }
 4238              		.loc 1 1004 0
 4239 012a 07F10C07 		add	r7, r7, #12
 4240 012e BD46     		mov	sp, r7
 4241 0130 90BD     		pop	{r4, r7, pc}
 4242              		.cfi_endproc
 4243              	.LFE158:
 4245 0132 00BF     		.section	.text.readAccelToSensor,"ax",%progbits
 4246              		.align	2
 4247              		.global	readAccelToSensor
 4248              		.thumb
 4249              		.thumb_func
 4251              	readAccelToSensor:
 4252              	.LFB159:
1005:../LSM9DS1_Driver.c **** 
1006:../LSM9DS1_Driver.c **** void readAccelToSensor(accel *pomiar)
1007:../LSM9DS1_Driver.c **** {
 4253              		.loc 1 1007 0
 4254              		.cfi_startproc
 4255              		@ args = 0, pretend = 0, frame = 16
 4256              		@ frame_needed = 1, uses_anonymous_args = 0
 4257 0000 90B5     		push	{r4, r7, lr}
 4258              	.LCFI115:
 4259              		.cfi_def_cfa_offset 12
 4260              		.cfi_offset 4, -12
 4261              		.cfi_offset 7, -8
 4262              		.cfi_offset 14, -4
 4263 0002 85B0     		sub	sp, sp, #20
 4264              	.LCFI116:
 4265              		.cfi_def_cfa_offset 32
 4266 0004 00AF     		add	r7, sp, #0
 4267              	.LCFI117:
 4268              		.cfi_def_cfa_register 7
 4269 0006 7860     		str	r0, [r7, #4]
1008:../LSM9DS1_Driver.c **** 	uint8_t i = 0; //licznik dla czytania
 4270              		.loc 1 1008 0
 4271 0008 4FF00003 		mov	r3, #0
 4272 000c FB73     		strb	r3, [r7, #15]
1009:../LSM9DS1_Driver.c **** 	uint8_t temp[6]; // We'll read six bytes from the gyro into temp
1010:../LSM9DS1_Driver.c **** 	uint8_t subAddr = OUT_X_L_XL;
 4273              		.loc 1 1010 0
 4274 000e 4FF02803 		mov	r3, #40
 4275 0012 BB73     		strb	r3, [r7, #14]
1011:../LSM9DS1_Driver.c **** 
1012:../LSM9DS1_Driver.c **** 	while(i < 6)
 4276              		.loc 1 1012 0
 4277 0014 20E0     		b	.L156
 4278              	.L157:
1013:../LSM9DS1_Driver.c **** 	{
1014:../LSM9DS1_Driver.c **** 		subAddr = OUT_X_L_XL;
 4279              		.loc 1 1014 0
 4280 0016 4FF02803 		mov	r3, #40
 4281 001a BB73     		strb	r3, [r7, #14]
1015:../LSM9DS1_Driver.c **** 		subAddr = subAddr + i;
 4282              		.loc 1 1015 0
 4283 001c BA7B     		ldrb	r2, [r7, #14]
 4284 001e FB7B     		ldrb	r3, [r7, #15]
 4285 0020 D318     		adds	r3, r2, r3
 4286 0022 BB73     		strb	r3, [r7, #14]
1016:../LSM9DS1_Driver.c **** 		temp[i] = I2CreadBytes(_xgAddress, subAddr, NULL, 0);
 4287              		.loc 1 1016 0
 4288 0024 FC7B     		ldrb	r4, [r7, #15]	@ zero_extendqisi2
 4289 0026 40F20003 		movw	r3, #:lower16:_xgAddress
 4290 002a C0F20003 		movt	r3, #:upper16:_xgAddress
 4291 002e 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 4292 0030 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 4293 0032 1046     		mov	r0, r2
 4294 0034 1946     		mov	r1, r3
 4295 0036 4FF00002 		mov	r2, #0
 4296 003a 4FF00003 		mov	r3, #0
 4297 003e FFF7FEFF 		bl	I2CreadBytes
 4298 0042 0346     		mov	r3, r0
 4299 0044 1A46     		mov	r2, r3
 4300 0046 07F11001 		add	r1, r7, #16
 4301 004a 0B19     		adds	r3, r1, r4
 4302 004c 03F8082C 		strb	r2, [r3, #-8]
1017:../LSM9DS1_Driver.c **** 		i++;
 4303              		.loc 1 1017 0
 4304 0050 FB7B     		ldrb	r3, [r7, #15]
 4305 0052 03F10103 		add	r3, r3, #1
 4306 0056 FB73     		strb	r3, [r7, #15]
 4307              	.L156:
1012:../LSM9DS1_Driver.c **** 	while(i < 6)
 4308              		.loc 1 1012 0 discriminator 1
 4309 0058 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4310 005a 052B     		cmp	r3, #5
 4311 005c DBD9     		bls	.L157
1018:../LSM9DS1_Driver.c **** 	}
1019:../LSM9DS1_Driver.c **** 
1020:../LSM9DS1_Driver.c **** 	ax = (temp[1] << 8) | temp[0]; // Store x-axis values into ax
 4312              		.loc 1 1020 0
 4313 005e 7B7A     		ldrb	r3, [r7, #9]	@ zero_extendqisi2
 4314 0060 4FEA0323 		lsl	r3, r3, #8
 4315 0064 9AB2     		uxth	r2, r3
 4316 0066 3B7A     		ldrb	r3, [r7, #8]	@ zero_extendqisi2
 4317 0068 1343     		orrs	r3, r3, r2
 4318 006a 9AB2     		uxth	r2, r3
 4319 006c 40F20003 		movw	r3, #:lower16:ax
 4320 0070 C0F20003 		movt	r3, #:upper16:ax
 4321 0074 1A80     		strh	r2, [r3, #0]	@ movhi
1021:../LSM9DS1_Driver.c **** 	ay = (temp[3] << 8) | temp[2]; // Store y-axis values into ay
 4322              		.loc 1 1021 0
 4323 0076 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 4324 0078 4FEA0323 		lsl	r3, r3, #8
 4325 007c 9AB2     		uxth	r2, r3
 4326 007e BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 4327 0080 1343     		orrs	r3, r3, r2
 4328 0082 9AB2     		uxth	r2, r3
 4329 0084 40F20003 		movw	r3, #:lower16:ay
 4330 0088 C0F20003 		movt	r3, #:upper16:ay
 4331 008c 1A80     		strh	r2, [r3, #0]	@ movhi
1022:../LSM9DS1_Driver.c **** 	az = (temp[5] << 8) | temp[4]; // Store z-axis values into az
 4332              		.loc 1 1022 0
 4333 008e 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 4334 0090 4FEA0323 		lsl	r3, r3, #8
 4335 0094 9AB2     		uxth	r2, r3
 4336 0096 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 4337 0098 1343     		orrs	r3, r3, r2
 4338 009a 9AB2     		uxth	r2, r3
 4339 009c 40F20003 		movw	r3, #:lower16:az
 4340 00a0 C0F20003 		movt	r3, #:upper16:az
 4341 00a4 1A80     		strh	r2, [r3, #0]	@ movhi
1023:../LSM9DS1_Driver.c **** 
1024:../LSM9DS1_Driver.c **** 	if (_autoCalc) //kalibracja
 4342              		.loc 1 1024 0
 4343 00a6 40F20003 		movw	r3, #:lower16:_autoCalc
 4344 00aa C0F20003 		movt	r3, #:upper16:_autoCalc
 4345 00ae 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 4346 00b0 002B     		cmp	r3, #0
 4347 00b2 3BD0     		beq	.L158
1025:../LSM9DS1_Driver.c **** 	{
1026:../LSM9DS1_Driver.c **** 		ax -= aBiasRaw[X_AXIS];
 4348              		.loc 1 1026 0
 4349 00b4 40F20003 		movw	r3, #:lower16:ax
 4350 00b8 C0F20003 		movt	r3, #:upper16:ax
 4351 00bc 1B88     		ldrh	r3, [r3, #0]
 4352 00be 9AB2     		uxth	r2, r3
 4353 00c0 40F20003 		movw	r3, #:lower16:aBiasRaw
 4354 00c4 C0F20003 		movt	r3, #:upper16:aBiasRaw
 4355 00c8 1B88     		ldrh	r3, [r3, #0]
 4356 00ca 9BB2     		uxth	r3, r3
 4357 00cc D31A     		subs	r3, r2, r3
 4358 00ce 9BB2     		uxth	r3, r3
 4359 00d0 9AB2     		uxth	r2, r3
 4360 00d2 40F20003 		movw	r3, #:lower16:ax
 4361 00d6 C0F20003 		movt	r3, #:upper16:ax
 4362 00da 1A80     		strh	r2, [r3, #0]	@ movhi
1027:../LSM9DS1_Driver.c **** 		ay -= aBiasRaw[Y_AXIS];
 4363              		.loc 1 1027 0
 4364 00dc 40F20003 		movw	r3, #:lower16:ay
 4365 00e0 C0F20003 		movt	r3, #:upper16:ay
 4366 00e4 1B88     		ldrh	r3, [r3, #0]
 4367 00e6 9AB2     		uxth	r2, r3
 4368 00e8 40F20003 		movw	r3, #:lower16:aBiasRaw
 4369 00ec C0F20003 		movt	r3, #:upper16:aBiasRaw
 4370 00f0 5B88     		ldrh	r3, [r3, #2]
 4371 00f2 9BB2     		uxth	r3, r3
 4372 00f4 D31A     		subs	r3, r2, r3
 4373 00f6 9BB2     		uxth	r3, r3
 4374 00f8 9AB2     		uxth	r2, r3
 4375 00fa 40F20003 		movw	r3, #:lower16:ay
 4376 00fe C0F20003 		movt	r3, #:upper16:ay
 4377 0102 1A80     		strh	r2, [r3, #0]	@ movhi
1028:../LSM9DS1_Driver.c **** 		az -= aBiasRaw[Z_AXIS];
 4378              		.loc 1 1028 0
 4379 0104 40F20003 		movw	r3, #:lower16:az
 4380 0108 C0F20003 		movt	r3, #:upper16:az
 4381 010c 1B88     		ldrh	r3, [r3, #0]
 4382 010e 9AB2     		uxth	r2, r3
 4383 0110 40F20003 		movw	r3, #:lower16:aBiasRaw
 4384 0114 C0F20003 		movt	r3, #:upper16:aBiasRaw
 4385 0118 9B88     		ldrh	r3, [r3, #4]
 4386 011a 9BB2     		uxth	r3, r3
 4387 011c D31A     		subs	r3, r2, r3
 4388 011e 9BB2     		uxth	r3, r3
 4389 0120 9AB2     		uxth	r2, r3
 4390 0122 40F20003 		movw	r3, #:lower16:az
 4391 0126 C0F20003 		movt	r3, #:upper16:az
 4392 012a 1A80     		strh	r2, [r3, #0]	@ movhi
 4393              	.L158:
1029:../LSM9DS1_Driver.c **** 	}
1030:../LSM9DS1_Driver.c **** 
1031:../LSM9DS1_Driver.c **** 	ax = calcAccel(ax);
 4394              		.loc 1 1031 0
 4395 012c 40F20003 		movw	r3, #:lower16:ax
 4396 0130 C0F20003 		movt	r3, #:upper16:ax
 4397 0134 1B88     		ldrh	r3, [r3, #0]
 4398 0136 1BB2     		sxth	r3, r3
 4399 0138 1846     		mov	r0, r3
 4400 013a FFF7FEFF 		bl	calcAccel
 4401 013e 07EE900A 		fmsr	s15, r0
 4402 0142 FDEEE77A 		ftosizs	s15, s15
 4403 0146 17EE903A 		fmrs	r3, s15	@ int
 4404 014a 9AB2     		uxth	r2, r3
 4405 014c 40F20003 		movw	r3, #:lower16:ax
 4406 0150 C0F20003 		movt	r3, #:upper16:ax
 4407 0154 1A80     		strh	r2, [r3, #0]	@ movhi
1032:../LSM9DS1_Driver.c **** 	ay = calcAccel(ay);
 4408              		.loc 1 1032 0
 4409 0156 40F20003 		movw	r3, #:lower16:ay
 4410 015a C0F20003 		movt	r3, #:upper16:ay
 4411 015e 1B88     		ldrh	r3, [r3, #0]
 4412 0160 1BB2     		sxth	r3, r3
 4413 0162 1846     		mov	r0, r3
 4414 0164 FFF7FEFF 		bl	calcAccel
 4415 0168 07EE900A 		fmsr	s15, r0
 4416 016c FDEEE77A 		ftosizs	s15, s15
 4417 0170 17EE903A 		fmrs	r3, s15	@ int
 4418 0174 9AB2     		uxth	r2, r3
 4419 0176 40F20003 		movw	r3, #:lower16:ay
 4420 017a C0F20003 		movt	r3, #:upper16:ay
 4421 017e 1A80     		strh	r2, [r3, #0]	@ movhi
1033:../LSM9DS1_Driver.c **** 	az = calcAccel(az);
 4422              		.loc 1 1033 0
 4423 0180 40F20003 		movw	r3, #:lower16:az
 4424 0184 C0F20003 		movt	r3, #:upper16:az
 4425 0188 1B88     		ldrh	r3, [r3, #0]
 4426 018a 1BB2     		sxth	r3, r3
 4427 018c 1846     		mov	r0, r3
 4428 018e FFF7FEFF 		bl	calcAccel
 4429 0192 07EE900A 		fmsr	s15, r0
 4430 0196 FDEEE77A 		ftosizs	s15, s15
 4431 019a 17EE903A 		fmrs	r3, s15	@ int
 4432 019e 9AB2     		uxth	r2, r3
 4433 01a0 40F20003 		movw	r3, #:lower16:az
 4434 01a4 C0F20003 		movt	r3, #:upper16:az
 4435 01a8 1A80     		strh	r2, [r3, #0]	@ movhi
1034:../LSM9DS1_Driver.c **** 
1035:../LSM9DS1_Driver.c **** 	pomiar->ax = ax;
 4436              		.loc 1 1035 0
 4437 01aa 40F20003 		movw	r3, #:lower16:ax
 4438 01ae C0F20003 		movt	r3, #:upper16:ax
 4439 01b2 1A88     		ldrh	r2, [r3, #0]
 4440 01b4 7B68     		ldr	r3, [r7, #4]
 4441 01b6 1A80     		strh	r2, [r3, #0]	@ movhi
1036:../LSM9DS1_Driver.c **** 	pomiar->ay = ay;
 4442              		.loc 1 1036 0
 4443 01b8 40F20003 		movw	r3, #:lower16:ay
 4444 01bc C0F20003 		movt	r3, #:upper16:ay
 4445 01c0 1A88     		ldrh	r2, [r3, #0]
 4446 01c2 7B68     		ldr	r3, [r7, #4]
 4447 01c4 5A80     		strh	r2, [r3, #2]	@ movhi
1037:../LSM9DS1_Driver.c **** 	pomiar->az = az;
 4448              		.loc 1 1037 0
 4449 01c6 40F20003 		movw	r3, #:lower16:az
 4450 01ca C0F20003 		movt	r3, #:upper16:az
 4451 01ce 1A88     		ldrh	r2, [r3, #0]
 4452 01d0 7B68     		ldr	r3, [r7, #4]
 4453 01d2 9A80     		strh	r2, [r3, #4]	@ movhi
1038:../LSM9DS1_Driver.c **** }
 4454              		.loc 1 1038 0
 4455 01d4 07F11407 		add	r7, r7, #20
 4456 01d8 BD46     		mov	sp, r7
 4457 01da 90BD     		pop	{r4, r7, pc}
 4458              		.cfi_endproc
 4459              	.LFE159:
 4461              		.section	.text.I2CreadBytes,"ax",%progbits
 4462              		.align	2
 4463              		.global	I2CreadBytes
 4464              		.thumb
 4465              		.thumb_func
 4467              	I2CreadBytes:
 4468              	.LFB160:
1039:../LSM9DS1_Driver.c **** 
1040:../LSM9DS1_Driver.c **** uint8_t I2CreadBytes(uint8_t address, uint8_t subAddress, uint8_t * dest, uint8_t count)
1041:../LSM9DS1_Driver.c **** {
 4469              		.loc 1 1041 0
 4470              		.cfi_startproc
 4471              		@ args = 0, pretend = 0, frame = 40
 4472              		@ frame_needed = 1, uses_anonymous_args = 0
 4473 0000 80B5     		push	{r7, lr}
 4474              	.LCFI118:
 4475              		.cfi_def_cfa_offset 8
 4476              		.cfi_offset 7, -8
 4477              		.cfi_offset 14, -4
 4478 0002 8AB0     		sub	sp, sp, #40
 4479              	.LCFI119:
 4480              		.cfi_def_cfa_offset 48
 4481 0004 00AF     		add	r7, sp, #0
 4482              	.LCFI120:
 4483              		.cfi_def_cfa_register 7
 4484 0006 3A60     		str	r2, [r7, #0]
 4485 0008 0246     		mov	r2, r0
 4486 000a FA71     		strb	r2, [r7, #7]
 4487 000c 0A46     		mov	r2, r1
 4488 000e BA71     		strb	r2, [r7, #6]
 4489 0010 7B71     		strb	r3, [r7, #5]
1042:../LSM9DS1_Driver.c **** 		USIC_CH_TypeDef* I2CRegs = I2C001_Handle0.I2CRegs;
 4490              		.loc 1 1042 0
 4491 0012 40F20003 		movw	r3, #:lower16:I2C001_Handle0
 4492 0016 C0F20003 		movt	r3, #:upper16:I2C001_Handle0
 4493 001a 5B68     		ldr	r3, [r3, #4]
 4494 001c 7B62     		str	r3, [r7, #36]
1043:../LSM9DS1_Driver.c **** 
1044:../LSM9DS1_Driver.c **** 		I2C001_DataType data1;
1045:../LSM9DS1_Driver.c **** 		data1.Data1.TDF_Type = I2C_TDF_MStart;
 4495              		.loc 1 1045 0
 4496 001e 4FF00403 		mov	r3, #4
 4497 0022 7B77     		strb	r3, [r7, #29]
1046:../LSM9DS1_Driver.c **** 		data1.Data1.Data = ((address<<1) | I2C_WRITE);
 4498              		.loc 1 1046 0
 4499 0024 FB79     		ldrb	r3, [r7, #7]
 4500 0026 4FEA4303 		lsl	r3, r3, #1
 4501 002a DBB2     		uxtb	r3, r3
 4502 002c 3B77     		strb	r3, [r7, #28]
1047:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data1))
 4503              		.loc 1 1047 0
 4504 002e 07E0     		b	.L160
 4505              	.L161:
1048:../LSM9DS1_Driver.c **** 		{
1049:../LSM9DS1_Driver.c **** 			USIC_FlushTxFIFO(I2CRegs);
 4506              		.loc 1 1049 0
 4507 0030 7B6A     		ldr	r3, [r7, #36]
 4508 0032 D3F81831 		ldr	r3, [r3, #280]
 4509 0036 43F40042 		orr	r2, r3, #32768
 4510 003a 7B6A     		ldr	r3, [r7, #36]
 4511 003c C3F81821 		str	r2, [r3, #280]
 4512              	.L160:
1047:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data1))
 4513              		.loc 1 1047 0 discriminator 1
 4514 0040 07F11C03 		add	r3, r7, #28
 4515 0044 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 4516 0048 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 4517 004c 1946     		mov	r1, r3
 4518 004e FFF7FEFF 		bl	I2C001_WriteData
 4519 0052 0346     		mov	r3, r0
 4520 0054 002B     		cmp	r3, #0
 4521 0056 EBD0     		beq	.L161
1050:../LSM9DS1_Driver.c **** 		}
1051:../LSM9DS1_Driver.c **** 		delay(DELAY);
 4522              		.loc 1 1051 0
 4523 0058 42F6E060 		movw	r0, #12000
 4524 005c FFF7FEFF 		bl	delay
1052:../LSM9DS1_Driver.c **** 
1053:../LSM9DS1_Driver.c **** 		I2C001_DataType data2;
1054:../LSM9DS1_Driver.c **** 		data2.Data1.TDF_Type = I2C_TDF_MTxData;
 4525              		.loc 1 1054 0
 4526 0060 4FF00003 		mov	r3, #0
 4527 0064 7B76     		strb	r3, [r7, #25]
1055:../LSM9DS1_Driver.c **** 		data2.Data1.Data = (subAddress);
 4528              		.loc 1 1055 0
 4529 0066 BB79     		ldrb	r3, [r7, #6]
 4530 0068 3B76     		strb	r3, [r7, #24]
1056:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data2))
 4531              		.loc 1 1056 0
 4532 006a 07E0     		b	.L162
 4533              	.L163:
1057:../LSM9DS1_Driver.c **** 		{
1058:../LSM9DS1_Driver.c **** 			USIC_FlushTxFIFO(I2CRegs);
 4534              		.loc 1 1058 0
 4535 006c 7B6A     		ldr	r3, [r7, #36]
 4536 006e D3F81831 		ldr	r3, [r3, #280]
 4537 0072 43F40042 		orr	r2, r3, #32768
 4538 0076 7B6A     		ldr	r3, [r7, #36]
 4539 0078 C3F81821 		str	r2, [r3, #280]
 4540              	.L162:
1056:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data2))
 4541              		.loc 1 1056 0 discriminator 1
 4542 007c 07F11803 		add	r3, r7, #24
 4543 0080 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 4544 0084 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 4545 0088 1946     		mov	r1, r3
 4546 008a FFF7FEFF 		bl	I2C001_WriteData
 4547 008e 0346     		mov	r3, r0
 4548 0090 002B     		cmp	r3, #0
 4549 0092 EBD0     		beq	.L163
1059:../LSM9DS1_Driver.c **** 		}
1060:../LSM9DS1_Driver.c **** 		delay(DELAY);
 4550              		.loc 1 1060 0
 4551 0094 42F6E060 		movw	r0, #12000
 4552 0098 FFF7FEFF 		bl	delay
1061:../LSM9DS1_Driver.c **** 
1062:../LSM9DS1_Driver.c **** 		I2C001_DataType data3;
1063:../LSM9DS1_Driver.c **** 		data3.Data1.TDF_Type = I2C_TDF_MRStart;
 4553              		.loc 1 1063 0
 4554 009c 4FF00503 		mov	r3, #5
 4555 00a0 7B75     		strb	r3, [r7, #21]
1064:../LSM9DS1_Driver.c **** 		data3.Data1.Data = ((address<<1) | I2C_READ);
 4556              		.loc 1 1064 0
 4557 00a2 FB79     		ldrb	r3, [r7, #7]
 4558 00a4 4FEA4303 		lsl	r3, r3, #1
 4559 00a8 DBB2     		uxtb	r3, r3
 4560 00aa 43F00103 		orr	r3, r3, #1
 4561 00ae DBB2     		uxtb	r3, r3
 4562 00b0 3B75     		strb	r3, [r7, #20]
1065:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data3))
 4563              		.loc 1 1065 0
 4564 00b2 07E0     		b	.L164
 4565              	.L165:
1066:../LSM9DS1_Driver.c **** 		{
1067:../LSM9DS1_Driver.c **** 			USIC_FlushTxFIFO(I2CRegs);
 4566              		.loc 1 1067 0
 4567 00b4 7B6A     		ldr	r3, [r7, #36]
 4568 00b6 D3F81831 		ldr	r3, [r3, #280]
 4569 00ba 43F40042 		orr	r2, r3, #32768
 4570 00be 7B6A     		ldr	r3, [r7, #36]
 4571 00c0 C3F81821 		str	r2, [r3, #280]
 4572              	.L164:
1065:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data3))
 4573              		.loc 1 1065 0 discriminator 1
 4574 00c4 07F11403 		add	r3, r7, #20
 4575 00c8 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 4576 00cc C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 4577 00d0 1946     		mov	r1, r3
 4578 00d2 FFF7FEFF 		bl	I2C001_WriteData
 4579 00d6 0346     		mov	r3, r0
 4580 00d8 002B     		cmp	r3, #0
 4581 00da EBD0     		beq	.L165
1068:../LSM9DS1_Driver.c **** 		}
1069:../LSM9DS1_Driver.c **** 		delay(DELAY);
 4582              		.loc 1 1069 0
 4583 00dc 42F6E060 		movw	r0, #12000
 4584 00e0 FFF7FEFF 		bl	delay
1070:../LSM9DS1_Driver.c **** 
1071:../LSM9DS1_Driver.c **** 		I2C001_DataType data4;
1072:../LSM9DS1_Driver.c **** 		data4.Data1.TDF_Type = I2C_TDF_MRxAck1;
 4585              		.loc 1 1072 0
 4586 00e4 4FF00303 		mov	r3, #3
 4587 00e8 7B74     		strb	r3, [r7, #17]
1073:../LSM9DS1_Driver.c **** 		data4.Data1.Data = ubyteFF;
 4588              		.loc 1 1073 0
 4589 00ea 4FF0FF03 		mov	r3, #255
 4590 00ee 3B74     		strb	r3, [r7, #16]
1074:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data4))
 4591              		.loc 1 1074 0
 4592 00f0 07E0     		b	.L166
 4593              	.L167:
1075:../LSM9DS1_Driver.c **** 		{
1076:../LSM9DS1_Driver.c **** 			USIC_FlushTxFIFO(I2CRegs);
 4594              		.loc 1 1076 0
 4595 00f2 7B6A     		ldr	r3, [r7, #36]
 4596 00f4 D3F81831 		ldr	r3, [r3, #280]
 4597 00f8 43F40042 		orr	r2, r3, #32768
 4598 00fc 7B6A     		ldr	r3, [r7, #36]
 4599 00fe C3F81821 		str	r2, [r3, #280]
 4600              	.L166:
1074:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data4))
 4601              		.loc 1 1074 0 discriminator 1
 4602 0102 07F11003 		add	r3, r7, #16
 4603 0106 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 4604 010a C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 4605 010e 1946     		mov	r1, r3
 4606 0110 FFF7FEFF 		bl	I2C001_WriteData
 4607 0114 0346     		mov	r3, r0
 4608 0116 002B     		cmp	r3, #0
 4609 0118 EBD0     		beq	.L167
1077:../LSM9DS1_Driver.c **** 		}
1078:../LSM9DS1_Driver.c **** 		delay(DELAY);
 4610              		.loc 1 1078 0
 4611 011a 42F6E060 		movw	r0, #12000
 4612 011e FFF7FEFF 		bl	delay
1079:../LSM9DS1_Driver.c **** 
1080:../LSM9DS1_Driver.c **** 		I2C001_DataType data5;
1081:../LSM9DS1_Driver.c **** 		data5.Data1.TDF_Type = I2C_TDF_MStop;
 4613              		.loc 1 1081 0
 4614 0122 4FF00603 		mov	r3, #6
 4615 0126 7B73     		strb	r3, [r7, #13]
1082:../LSM9DS1_Driver.c **** 		data5.Data1.Data = ubyteFF;
 4616              		.loc 1 1082 0
 4617 0128 4FF0FF03 		mov	r3, #255
 4618 012c 3B73     		strb	r3, [r7, #12]
1083:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data5))
 4619              		.loc 1 1083 0
 4620 012e 07E0     		b	.L168
 4621              	.L169:
1084:../LSM9DS1_Driver.c **** 		{
1085:../LSM9DS1_Driver.c **** 			USIC_FlushTxFIFO(I2CRegs);
 4622              		.loc 1 1085 0
 4623 0130 7B6A     		ldr	r3, [r7, #36]
 4624 0132 D3F81831 		ldr	r3, [r3, #280]
 4625 0136 43F40042 		orr	r2, r3, #32768
 4626 013a 7B6A     		ldr	r3, [r7, #36]
 4627 013c C3F81821 		str	r2, [r3, #280]
 4628              	.L168:
1083:../LSM9DS1_Driver.c **** 		while(!I2C001_WriteData(&I2C001_Handle0,&data5))
 4629              		.loc 1 1083 0 discriminator 1
 4630 0140 07F10C03 		add	r3, r7, #12
 4631 0144 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 4632 0148 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 4633 014c 1946     		mov	r1, r3
 4634 014e FFF7FEFF 		bl	I2C001_WriteData
 4635 0152 0346     		mov	r3, r0
 4636 0154 002B     		cmp	r3, #0
 4637 0156 EBD0     		beq	.L169
1086:../LSM9DS1_Driver.c **** 		}
1087:../LSM9DS1_Driver.c **** 		delay(DELAY);
 4638              		.loc 1 1087 0
 4639 0158 42F6E060 		movw	r0, #12000
 4640 015c FFF7FEFF 		bl	delay
1088:../LSM9DS1_Driver.c **** 
1089:../LSM9DS1_Driver.c **** 		int k = 0;
 4641              		.loc 1 1089 0
 4642 0160 4FF00003 		mov	r3, #0
 4643 0164 3B62     		str	r3, [r7, #32]
1090:../LSM9DS1_Driver.c **** 
1091:../LSM9DS1_Driver.c **** 		uint16_t buffer = 0;
 4644              		.loc 1 1091 0
 4645 0166 4FF00003 		mov	r3, #0
 4646 016a 7B81     		strh	r3, [r7, #10]	@ movhi
1092:../LSM9DS1_Driver.c **** 		if(I2C001_ReadData(&I2C001_Handle0,&buffer))
 4647              		.loc 1 1092 0
 4648 016c 07F10A03 		add	r3, r7, #10
 4649 0170 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 4650 0174 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 4651 0178 1946     		mov	r1, r3
 4652 017a FFF7FEFF 		bl	I2C001_ReadData
 4653 017e 0346     		mov	r3, r0
 4654 0180 002B     		cmp	r3, #0
 4655 0182 08D0     		beq	.L170
1093:../LSM9DS1_Driver.c **** 		{
1094:../LSM9DS1_Driver.c **** 			delay(DELAY);
 4656              		.loc 1 1094 0
 4657 0184 42F6E060 		movw	r0, #12000
 4658 0188 FFF7FEFF 		bl	delay
1095:../LSM9DS1_Driver.c **** 			k++;
 4659              		.loc 1 1095 0
 4660 018c 3B6A     		ldr	r3, [r7, #32]
 4661 018e 03F10103 		add	r3, r3, #1
 4662 0192 3B62     		str	r3, [r7, #32]
 4663 0194 03E0     		b	.L171
 4664              	.L170:
1096:../LSM9DS1_Driver.c **** 		}
1097:../LSM9DS1_Driver.c **** 		else
1098:../LSM9DS1_Driver.c **** 		{
1099:../LSM9DS1_Driver.c **** 			k--;
 4665              		.loc 1 1099 0
 4666 0196 3B6A     		ldr	r3, [r7, #32]
 4667 0198 03F1FF33 		add	r3, r3, #-1
 4668 019c 3B62     		str	r3, [r7, #32]
 4669              	.L171:
1100:../LSM9DS1_Driver.c **** 		}
1101:../LSM9DS1_Driver.c **** 		delay(DELAY);
 4670              		.loc 1 1101 0
 4671 019e 42F6E060 		movw	r0, #12000
 4672 01a2 FFF7FEFF 		bl	delay
1102:../LSM9DS1_Driver.c **** 		return (uint8_t)buffer;
 4673              		.loc 1 1102 0
 4674 01a6 7B89     		ldrh	r3, [r7, #10]
 4675 01a8 DBB2     		uxtb	r3, r3
1103:../LSM9DS1_Driver.c **** }
 4676              		.loc 1 1103 0
 4677 01aa 1846     		mov	r0, r3
 4678 01ac 07F12807 		add	r7, r7, #40
 4679 01b0 BD46     		mov	sp, r7
 4680 01b2 80BD     		pop	{r7, pc}
 4681              		.cfi_endproc
 4682              	.LFE160:
 4684              		.section	.text.magAvailable,"ax",%progbits
 4685              		.align	2
 4686              		.global	magAvailable
 4687              		.thumb
 4688              		.thumb_func
 4690              	magAvailable:
 4691              	.LFB161:
1104:../LSM9DS1_Driver.c **** 
1105:../LSM9DS1_Driver.c **** uint8_t magAvailable(lsm9ds1_axis axis)
1106:../LSM9DS1_Driver.c **** {
 4692              		.loc 1 1106 0
 4693              		.cfi_startproc
 4694              		@ args = 0, pretend = 0, frame = 16
 4695              		@ frame_needed = 1, uses_anonymous_args = 0
 4696 0000 80B5     		push	{r7, lr}
 4697              	.LCFI121:
 4698              		.cfi_def_cfa_offset 8
 4699              		.cfi_offset 7, -8
 4700              		.cfi_offset 14, -4
 4701 0002 84B0     		sub	sp, sp, #16
 4702              	.LCFI122:
 4703              		.cfi_def_cfa_offset 24
 4704 0004 00AF     		add	r7, sp, #0
 4705              	.LCFI123:
 4706              		.cfi_def_cfa_register 7
 4707 0006 0346     		mov	r3, r0
 4708 0008 FB71     		strb	r3, [r7, #7]
1107:../LSM9DS1_Driver.c **** 	uint8_t status;
1108:../LSM9DS1_Driver.c **** 	status = mReadByte(STATUS_REG_M);
 4709              		.loc 1 1108 0
 4710 000a 4FF02700 		mov	r0, #39
 4711 000e FFF7FEFF 		bl	mReadByte
 4712 0012 0346     		mov	r3, r0
 4713 0014 FB73     		strb	r3, [r7, #15]
1109:../LSM9DS1_Driver.c **** 
1110:../LSM9DS1_Driver.c **** 	return ((status & (1<<axis)) >> axis);
 4714              		.loc 1 1110 0
 4715 0016 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4716 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4717 001a 4FF00101 		mov	r1, #1
 4718 001e 01FA03F3 		lsl	r3, r1, r3
 4719 0022 1A40     		ands	r2, r2, r3
 4720 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4721 0026 42FA03F3 		asr	r3, r2, r3
 4722 002a DBB2     		uxtb	r3, r3
1111:../LSM9DS1_Driver.c **** }
 4723              		.loc 1 1111 0
 4724 002c 1846     		mov	r0, r3
 4725 002e 07F11007 		add	r7, r7, #16
 4726 0032 BD46     		mov	sp, r7
 4727 0034 80BD     		pop	{r7, pc}
 4728              		.cfi_endproc
 4729              	.LFE161:
 4731 0036 00BF     		.section	.text.readMag1,"ax",%progbits
 4732              		.align	2
 4733              		.global	readMag1
 4734              		.thumb
 4735              		.thumb_func
 4737              	readMag1:
 4738              	.LFB162:
1112:../LSM9DS1_Driver.c **** 
1113:../LSM9DS1_Driver.c **** void readMag1(void)
1114:../LSM9DS1_Driver.c **** {
 4739              		.loc 1 1114 0
 4740              		.cfi_startproc
 4741              		@ args = 0, pretend = 0, frame = 8
 4742              		@ frame_needed = 1, uses_anonymous_args = 0
 4743 0000 90B5     		push	{r4, r7, lr}
 4744              	.LCFI124:
 4745              		.cfi_def_cfa_offset 12
 4746              		.cfi_offset 4, -12
 4747              		.cfi_offset 7, -8
 4748              		.cfi_offset 14, -4
 4749 0002 83B0     		sub	sp, sp, #12
 4750              	.LCFI125:
 4751              		.cfi_def_cfa_offset 24
 4752 0004 00AF     		add	r7, sp, #0
 4753              	.LCFI126:
 4754              		.cfi_def_cfa_register 7
1115:../LSM9DS1_Driver.c **** 	//for(int kl = 0; kl < 10; kl++){
1116:../LSM9DS1_Driver.c **** 	uint8_t temp[6]; // We'll read six bytes from the mag into temp
1117:../LSM9DS1_Driver.c **** 	uint8_t subAddress = OUT_X_L_M;
 4755              		.loc 1 1117 0
 4756 0006 4FF02803 		mov	r3, #40
 4757 000a BB71     		strb	r3, [r7, #6]
1118:../LSM9DS1_Driver.c **** 	uint8_t i = 0;
 4758              		.loc 1 1118 0
 4759 000c 4FF00003 		mov	r3, #0
 4760 0010 FB71     		strb	r3, [r7, #7]
1119:../LSM9DS1_Driver.c **** 
1120:../LSM9DS1_Driver.c **** 	while(i < 6)
 4761              		.loc 1 1120 0
 4762 0012 19E0     		b	.L176
 4763              	.L177:
1121:../LSM9DS1_Driver.c **** 	{
1122:../LSM9DS1_Driver.c **** 		temp[i] = I2CreadBytes(_mAddress, subAddress, NULL, 0);
 4764              		.loc 1 1122 0
 4765 0014 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 4766 0016 40F20003 		movw	r3, #:lower16:_mAddress
 4767 001a C0F20003 		movt	r3, #:upper16:_mAddress
 4768 001e 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 4769 0020 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4770 0022 1046     		mov	r0, r2
 4771 0024 1946     		mov	r1, r3
 4772 0026 4FF00002 		mov	r2, #0
 4773 002a 4FF00003 		mov	r3, #0
 4774 002e FFF7FEFF 		bl	I2CreadBytes
 4775 0032 0346     		mov	r3, r0
 4776 0034 1A46     		mov	r2, r3
 4777 0036 07F10801 		add	r1, r7, #8
 4778 003a 0B19     		adds	r3, r1, r4
 4779 003c 03F8082C 		strb	r2, [r3, #-8]
1123:../LSM9DS1_Driver.c **** 		i++;
 4780              		.loc 1 1123 0
 4781 0040 FB79     		ldrb	r3, [r7, #7]
 4782 0042 03F10103 		add	r3, r3, #1
 4783 0046 FB71     		strb	r3, [r7, #7]
 4784              	.L176:
1120:../LSM9DS1_Driver.c **** 	while(i < 6)
 4785              		.loc 1 1120 0 discriminator 1
 4786 0048 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4787 004a 052B     		cmp	r3, #5
 4788 004c E2D9     		bls	.L177
1124:../LSM9DS1_Driver.c **** 	}
1125:../LSM9DS1_Driver.c **** 
1126:../LSM9DS1_Driver.c **** 	mx = (temp[1] << 8) | temp[0]; // Store x-axis values into mx
 4789              		.loc 1 1126 0
 4790 004e 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 4791 0050 4FEA0323 		lsl	r3, r3, #8
 4792 0054 9AB2     		uxth	r2, r3
 4793 0056 3B78     		ldrb	r3, [r7, #0]	@ zero_extendqisi2
 4794 0058 1343     		orrs	r3, r3, r2
 4795 005a 9AB2     		uxth	r2, r3
 4796 005c 40F20003 		movw	r3, #:lower16:mx
 4797 0060 C0F20003 		movt	r3, #:upper16:mx
 4798 0064 1A80     		strh	r2, [r3, #0]	@ movhi
1127:../LSM9DS1_Driver.c **** 	my = (temp[3] << 8) | temp[2]; // Store y-axis values into my
 4799              		.loc 1 1127 0
 4800 0066 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4801 0068 4FEA0323 		lsl	r3, r3, #8
 4802 006c 9AB2     		uxth	r2, r3
 4803 006e BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 4804 0070 1343     		orrs	r3, r3, r2
 4805 0072 9AB2     		uxth	r2, r3
 4806 0074 40F20003 		movw	r3, #:lower16:my
 4807 0078 C0F20003 		movt	r3, #:upper16:my
 4808 007c 1A80     		strh	r2, [r3, #0]	@ movhi
1128:../LSM9DS1_Driver.c **** 	mz = (temp[5] << 8) | temp[4]; // Store z-axis values into mz
 4809              		.loc 1 1128 0
 4810 007e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4811 0080 4FEA0323 		lsl	r3, r3, #8
 4812 0084 9AB2     		uxth	r2, r3
 4813 0086 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 4814 0088 1343     		orrs	r3, r3, r2
 4815 008a 9AB2     		uxth	r2, r3
 4816 008c 40F20003 		movw	r3, #:lower16:mz
 4817 0090 C0F20003 		movt	r3, #:upper16:mz
 4818 0094 1A80     		strh	r2, [r3, #0]	@ movhi
1129:../LSM9DS1_Driver.c **** 
1130:../LSM9DS1_Driver.c **** 	/*mx = calcMag(mx);
1131:../LSM9DS1_Driver.c **** 	my = calcMag(my);
1132:../LSM9DS1_Driver.c **** 	mz = calcMag(mz);*?
1133:../LSM9DS1_Driver.c **** 	/*}*/
1134:../LSM9DS1_Driver.c **** 
1135:../LSM9DS1_Driver.c **** 
1136:../LSM9DS1_Driver.c **** }
 4819              		.loc 1 1136 0
 4820 0096 07F10C07 		add	r7, r7, #12
 4821 009a BD46     		mov	sp, r7
 4822 009c 90BD     		pop	{r4, r7, pc}
 4823              		.cfi_endproc
 4824              	.LFE162:
 4826 009e 00BF     		.section	.text.calibrateMag,"ax",%progbits
 4827              		.align	2
 4828              		.global	calibrateMag
 4829              		.thumb
 4830              		.thumb_func
 4832              	calibrateMag:
 4833              	.LFB163:
1137:../LSM9DS1_Driver.c **** 
1138:../LSM9DS1_Driver.c **** 
1139:../LSM9DS1_Driver.c **** void calibrateMag(bool loadIn)
1140:../LSM9DS1_Driver.c **** {
 4834              		.loc 1 1140 0
 4835              		.cfi_startproc
 4836              		@ args = 0, pretend = 0, frame = 40
 4837              		@ frame_needed = 1, uses_anonymous_args = 0
 4838 0000 80B5     		push	{r7, lr}
 4839              	.LCFI127:
 4840              		.cfi_def_cfa_offset 8
 4841              		.cfi_offset 7, -8
 4842              		.cfi_offset 14, -4
 4843 0002 8AB0     		sub	sp, sp, #40
 4844              	.LCFI128:
 4845              		.cfi_def_cfa_offset 48
 4846 0004 00AF     		add	r7, sp, #0
 4847              	.LCFI129:
 4848              		.cfi_def_cfa_register 7
 4849 0006 0346     		mov	r3, r0
 4850 0008 FB71     		strb	r3, [r7, #7]
1141:../LSM9DS1_Driver.c **** 	int i, j;
1142:../LSM9DS1_Driver.c **** 	int16_t magMin[3] = {0, 0, 0};
 4851              		.loc 1 1142 0
 4852 000a 4FF00003 		mov	r3, #0
 4853 000e 3B83     		strh	r3, [r7, #24]	@ movhi
 4854 0010 4FF00003 		mov	r3, #0
 4855 0014 7B83     		strh	r3, [r7, #26]	@ movhi
 4856 0016 4FF00003 		mov	r3, #0
 4857 001a BB83     		strh	r3, [r7, #28]	@ movhi
1143:../LSM9DS1_Driver.c **** 	int16_t magMax[3] = {0, 0, 0}; // The road warrior
 4858              		.loc 1 1143 0
 4859 001c 4FF00003 		mov	r3, #0
 4860 0020 3B82     		strh	r3, [r7, #16]	@ movhi
 4861 0022 4FF00003 		mov	r3, #0
 4862 0026 7B82     		strh	r3, [r7, #18]	@ movhi
 4863 0028 4FF00003 		mov	r3, #0
 4864 002c BB82     		strh	r3, [r7, #20]	@ movhi
1144:../LSM9DS1_Driver.c **** 
1145:../LSM9DS1_Driver.c **** 	for (i=0; i<128; i++)
 4865              		.loc 1 1145 0
 4866 002e 4FF00003 		mov	r3, #0
 4867 0032 7B62     		str	r3, [r7, #36]
 4868 0034 7CE0     		b	.L179
 4869              	.L189:
 4870              	.LBB6:
1146:../LSM9DS1_Driver.c **** 	{
1147:../LSM9DS1_Driver.c **** 		//tu nie wiem
1148:../LSM9DS1_Driver.c **** 		while (!magAvailable(i))
 4871              		.loc 1 1148 0
 4872 0036 00BF     		nop
 4873              	.L180:
 4874              		.loc 1 1148 0 is_stmt 0 discriminator 1
 4875 0038 7B6A     		ldr	r3, [r7, #36]
 4876 003a DBB2     		uxtb	r3, r3
 4877 003c 1846     		mov	r0, r3
 4878 003e FFF7FEFF 		bl	magAvailable
 4879 0042 0346     		mov	r3, r0
 4880 0044 002B     		cmp	r3, #0
 4881 0046 F7D0     		beq	.L180
1149:../LSM9DS1_Driver.c **** 			;
1150:../LSM9DS1_Driver.c **** 		readMag1();
 4882              		.loc 1 1150 0 is_stmt 1
 4883 0048 FFF7FEFF 		bl	readMag1
1151:../LSM9DS1_Driver.c **** 		int16_t magTemp[3] = {0, 0, 0};
 4884              		.loc 1 1151 0
 4885 004c 4FF00003 		mov	r3, #0
 4886 0050 3B81     		strh	r3, [r7, #8]	@ movhi
 4887 0052 4FF00003 		mov	r3, #0
 4888 0056 7B81     		strh	r3, [r7, #10]	@ movhi
 4889 0058 4FF00003 		mov	r3, #0
 4890 005c BB81     		strh	r3, [r7, #12]	@ movhi
1152:../LSM9DS1_Driver.c **** 		magTemp[0] = mx;
 4891              		.loc 1 1152 0
 4892 005e 40F20003 		movw	r3, #:lower16:mx
 4893 0062 C0F20003 		movt	r3, #:upper16:mx
 4894 0066 1B88     		ldrh	r3, [r3, #0]
 4895 0068 3B81     		strh	r3, [r7, #8]	@ movhi
1153:../LSM9DS1_Driver.c **** 		magTemp[1] = my;
 4896              		.loc 1 1153 0
 4897 006a 40F20003 		movw	r3, #:lower16:my
 4898 006e C0F20003 		movt	r3, #:upper16:my
 4899 0072 1B88     		ldrh	r3, [r3, #0]
 4900 0074 7B81     		strh	r3, [r7, #10]	@ movhi
1154:../LSM9DS1_Driver.c **** 		magTemp[2] = mz;
 4901              		.loc 1 1154 0
 4902 0076 40F20003 		movw	r3, #:lower16:mz
 4903 007a C0F20003 		movt	r3, #:upper16:mz
 4904 007e 1B88     		ldrh	r3, [r3, #0]
 4905 0080 BB81     		strh	r3, [r7, #12]	@ movhi
1155:../LSM9DS1_Driver.c **** 		for (j = 0; j < 3; j++)
 4906              		.loc 1 1155 0
 4907 0082 4FF00003 		mov	r3, #0
 4908 0086 3B62     		str	r3, [r7, #32]
 4909 0088 4BE0     		b	.L181
 4910              	.L184:
1156:../LSM9DS1_Driver.c **** 		{
1157:../LSM9DS1_Driver.c **** 			if (magTemp[j] > magMax[j]) magMax[j] = magTemp[j];
 4911              		.loc 1 1157 0
 4912 008a 3B6A     		ldr	r3, [r7, #32]
 4913 008c 4FEA4303 		lsl	r3, r3, #1
 4914 0090 07F12801 		add	r1, r7, #40
 4915 0094 CB18     		adds	r3, r1, r3
 4916 0096 33F8202C 		ldrh	r2, [r3, #-32]
 4917 009a 3B6A     		ldr	r3, [r7, #32]
 4918 009c 4FEA4303 		lsl	r3, r3, #1
 4919 00a0 07F12801 		add	r1, r7, #40
 4920 00a4 CB18     		adds	r3, r1, r3
 4921 00a6 33F8183C 		ldrh	r3, [r3, #-24]
 4922 00aa 12B2     		sxth	r2, r2
 4923 00ac 1BB2     		sxth	r3, r3
 4924 00ae 9A42     		cmp	r2, r3
 4925 00b0 0FDD     		ble	.L182
 4926              		.loc 1 1157 0 is_stmt 0 discriminator 1
 4927 00b2 3B6A     		ldr	r3, [r7, #32]
 4928 00b4 4FEA4303 		lsl	r3, r3, #1
 4929 00b8 07F12802 		add	r2, r7, #40
 4930 00bc D318     		adds	r3, r2, r3
 4931 00be 33F8202C 		ldrh	r2, [r3, #-32]
 4932 00c2 3B6A     		ldr	r3, [r7, #32]
 4933 00c4 4FEA4303 		lsl	r3, r3, #1
 4934 00c8 07F12801 		add	r1, r7, #40
 4935 00cc CB18     		adds	r3, r1, r3
 4936 00ce 23F8182C 		strh	r2, [r3, #-24]	@ movhi
 4937              	.L182:
1158:../LSM9DS1_Driver.c **** 			if (magTemp[j] < magMin[j]) magMin[j] = magTemp[j];
 4938              		.loc 1 1158 0 is_stmt 1
 4939 00d2 3B6A     		ldr	r3, [r7, #32]
 4940 00d4 4FEA4303 		lsl	r3, r3, #1
 4941 00d8 07F12802 		add	r2, r7, #40
 4942 00dc D318     		adds	r3, r2, r3
 4943 00de 33F8202C 		ldrh	r2, [r3, #-32]
 4944 00e2 3B6A     		ldr	r3, [r7, #32]
 4945 00e4 4FEA4303 		lsl	r3, r3, #1
 4946 00e8 07F12801 		add	r1, r7, #40
 4947 00ec CB18     		adds	r3, r1, r3
 4948 00ee 33F8103C 		ldrh	r3, [r3, #-16]
 4949 00f2 12B2     		sxth	r2, r2
 4950 00f4 1BB2     		sxth	r3, r3
 4951 00f6 9A42     		cmp	r2, r3
 4952 00f8 0FDA     		bge	.L183
 4953              		.loc 1 1158 0 is_stmt 0 discriminator 1
 4954 00fa 3B6A     		ldr	r3, [r7, #32]
 4955 00fc 4FEA4303 		lsl	r3, r3, #1
 4956 0100 07F12802 		add	r2, r7, #40
 4957 0104 D318     		adds	r3, r2, r3
 4958 0106 33F8202C 		ldrh	r2, [r3, #-32]
 4959 010a 3B6A     		ldr	r3, [r7, #32]
 4960 010c 4FEA4303 		lsl	r3, r3, #1
 4961 0110 07F12801 		add	r1, r7, #40
 4962 0114 CB18     		adds	r3, r1, r3
 4963 0116 23F8102C 		strh	r2, [r3, #-16]	@ movhi
 4964              	.L183:
1155:../LSM9DS1_Driver.c **** 		for (j = 0; j < 3; j++)
 4965              		.loc 1 1155 0 is_stmt 1
 4966 011a 3B6A     		ldr	r3, [r7, #32]
 4967 011c 03F10103 		add	r3, r3, #1
 4968 0120 3B62     		str	r3, [r7, #32]
 4969              	.L181:
1155:../LSM9DS1_Driver.c **** 		for (j = 0; j < 3; j++)
 4970              		.loc 1 1155 0 is_stmt 0 discriminator 1
 4971 0122 3B6A     		ldr	r3, [r7, #32]
 4972 0124 022B     		cmp	r3, #2
 4973 0126 B0DD     		ble	.L184
 4974              	.LBE6:
1145:../LSM9DS1_Driver.c **** 	for (i=0; i<128; i++)
 4975              		.loc 1 1145 0 is_stmt 1
 4976 0128 7B6A     		ldr	r3, [r7, #36]
 4977 012a 03F10103 		add	r3, r3, #1
 4978 012e 7B62     		str	r3, [r7, #36]
 4979              	.L179:
1145:../LSM9DS1_Driver.c **** 	for (i=0; i<128; i++)
 4980              		.loc 1 1145 0 is_stmt 0 discriminator 1
 4981 0130 7B6A     		ldr	r3, [r7, #36]
 4982 0132 7F2B     		cmp	r3, #127
 4983 0134 7FF77FAF 		ble	.L189
1159:../LSM9DS1_Driver.c **** 		}
1160:../LSM9DS1_Driver.c **** 	}
1161:../LSM9DS1_Driver.c **** 	for (j = 0; j < 3; j++)
 4984              		.loc 1 1161 0 is_stmt 1
 4985 0138 4FF00003 		mov	r3, #0
 4986 013c 3B62     		str	r3, [r7, #32]
 4987 013e 49E0     		b	.L186
 4988              	.L188:
1162:../LSM9DS1_Driver.c **** 	{
1163:../LSM9DS1_Driver.c **** 		mBiasRaw[j] = (magMax[j] + magMin[j]) / 2;
 4989              		.loc 1 1163 0
 4990 0140 3B6A     		ldr	r3, [r7, #32]
 4991 0142 4FEA4303 		lsl	r3, r3, #1
 4992 0146 07F12802 		add	r2, r7, #40
 4993 014a D318     		adds	r3, r2, r3
 4994 014c 33F8183C 		ldrh	r3, [r3, #-24]
 4995 0150 1AB2     		sxth	r2, r3
 4996 0152 3B6A     		ldr	r3, [r7, #32]
 4997 0154 4FEA4303 		lsl	r3, r3, #1
 4998 0158 07F12801 		add	r1, r7, #40
 4999 015c CB18     		adds	r3, r1, r3
 5000 015e 33F8103C 		ldrh	r3, [r3, #-16]
 5001 0162 1BB2     		sxth	r3, r3
 5002 0164 D318     		adds	r3, r2, r3
 5003 0166 4FEAD372 		lsr	r2, r3, #31
 5004 016a D318     		adds	r3, r2, r3
 5005 016c 4FEA6303 		asr	r3, r3, #1
 5006 0170 99B2     		uxth	r1, r3
 5007 0172 40F20003 		movw	r3, #:lower16:mBiasRaw
 5008 0176 C0F20003 		movt	r3, #:upper16:mBiasRaw
 5009 017a 3A6A     		ldr	r2, [r7, #32]
 5010 017c 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
1164:../LSM9DS1_Driver.c **** 		mBias[j] = calcMag(mBiasRaw[j]);
 5011              		.loc 1 1164 0
 5012 0180 40F20003 		movw	r3, #:lower16:mBiasRaw
 5013 0184 C0F20003 		movt	r3, #:upper16:mBiasRaw
 5014 0188 3A6A     		ldr	r2, [r7, #32]
 5015 018a 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 5016 018e 1BB2     		sxth	r3, r3
 5017 0190 1846     		mov	r0, r3
 5018 0192 FFF7FEFF 		bl	calcMag
 5019 0196 0246     		mov	r2, r0	@ float
 5020 0198 40F20003 		movw	r3, #:lower16:mBias
 5021 019c C0F20003 		movt	r3, #:upper16:mBias
 5022 01a0 396A     		ldr	r1, [r7, #32]
 5023 01a2 4FEA8101 		lsl	r1, r1, #2
 5024 01a6 5B18     		adds	r3, r3, r1
 5025 01a8 1A60     		str	r2, [r3, #0]	@ float
1165:../LSM9DS1_Driver.c **** 		if (loadIn)
 5026              		.loc 1 1165 0
 5027 01aa FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5028 01ac 002B     		cmp	r3, #0
 5029 01ae 0DD0     		beq	.L187
1166:../LSM9DS1_Driver.c **** 			magOffset(j, mBiasRaw[j]);
 5030              		.loc 1 1166 0
 5031 01b0 3B6A     		ldr	r3, [r7, #32]
 5032 01b2 DAB2     		uxtb	r2, r3
 5033 01b4 40F20003 		movw	r3, #:lower16:mBiasRaw
 5034 01b8 C0F20003 		movt	r3, #:upper16:mBiasRaw
 5035 01bc 396A     		ldr	r1, [r7, #32]
 5036 01be 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 5037 01c2 1BB2     		sxth	r3, r3
 5038 01c4 1046     		mov	r0, r2
 5039 01c6 1946     		mov	r1, r3
 5040 01c8 FFF7FEFF 		bl	magOffset
 5041              	.L187:
1161:../LSM9DS1_Driver.c **** 	for (j = 0; j < 3; j++)
 5042              		.loc 1 1161 0
 5043 01cc 3B6A     		ldr	r3, [r7, #32]
 5044 01ce 03F10103 		add	r3, r3, #1
 5045 01d2 3B62     		str	r3, [r7, #32]
 5046              	.L186:
1161:../LSM9DS1_Driver.c **** 	for (j = 0; j < 3; j++)
 5047              		.loc 1 1161 0 is_stmt 0 discriminator 1
 5048 01d4 3B6A     		ldr	r3, [r7, #32]
 5049 01d6 022B     		cmp	r3, #2
 5050 01d8 B2DD     		ble	.L188
1167:../LSM9DS1_Driver.c **** 	}
1168:../LSM9DS1_Driver.c **** }
 5051              		.loc 1 1168 0 is_stmt 1
 5052 01da 07F12807 		add	r7, r7, #40
 5053 01de BD46     		mov	sp, r7
 5054 01e0 80BD     		pop	{r7, pc}
 5055              		.cfi_endproc
 5056              	.LFE163:
 5058 01e2 00BF     		.section	.text.calcMag,"ax",%progbits
 5059              		.align	2
 5060              		.global	calcMag
 5061              		.thumb
 5062              		.thumb_func
 5064              	calcMag:
 5065              	.LFB164:
1169:../LSM9DS1_Driver.c **** 
1170:../LSM9DS1_Driver.c **** float calcMag(int16_t mag)
1171:../LSM9DS1_Driver.c **** {
 5066              		.loc 1 1171 0
 5067              		.cfi_startproc
 5068              		@ args = 0, pretend = 0, frame = 8
 5069              		@ frame_needed = 1, uses_anonymous_args = 0
 5070              		@ link register save eliminated.
 5071 0000 80B4     		push	{r7}
 5072              	.LCFI130:
 5073              		.cfi_def_cfa_offset 4
 5074              		.cfi_offset 7, -4
 5075 0002 83B0     		sub	sp, sp, #12
 5076              	.LCFI131:
 5077              		.cfi_def_cfa_offset 16
 5078 0004 00AF     		add	r7, sp, #0
 5079              	.LCFI132:
 5080              		.cfi_def_cfa_register 7
 5081 0006 0346     		mov	r3, r0
 5082 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1172:../LSM9DS1_Driver.c **** 	// Return the mag raw reading times our pre-calculated Gs / (ADC tick):
1173:../LSM9DS1_Driver.c **** 	return /*ceil(*/mRes * mag/*)*/;
 5083              		.loc 1 1173 0
 5084 000a B7F90630 		ldrsh	r3, [r7, #6]
 5085 000e 07EE903A 		fmsr	s15, r3	@ int
 5086 0012 B8EEE77A 		fsitos	s14, s15
 5087 0016 40F20003 		movw	r3, #:lower16:mRes
 5088 001a C0F20003 		movt	r3, #:upper16:mRes
 5089 001e D3ED007A 		flds	s15, [r3, #0]
 5090 0022 67EE277A 		fmuls	s15, s14, s15
 5091 0026 17EE903A 		fmrs	r3, s15
1174:../LSM9DS1_Driver.c **** 	//return mag;
1175:../LSM9DS1_Driver.c **** }
 5092              		.loc 1 1175 0
 5093 002a 1846     		mov	r0, r3	@ float
 5094 002c 07F10C07 		add	r7, r7, #12
 5095 0030 BD46     		mov	sp, r7
 5096 0032 80BC     		pop	{r7}
 5097 0034 7047     		bx	lr
 5098              		.cfi_endproc
 5099              	.LFE164:
 5101 0036 00BF     		.section	.text.magOffset,"ax",%progbits
 5102              		.align	2
 5103              		.global	magOffset
 5104              		.thumb
 5105              		.thumb_func
 5107              	magOffset:
 5108              	.LFB165:
1176:../LSM9DS1_Driver.c **** 
1177:../LSM9DS1_Driver.c **** void magOffset(uint8_t axis, int16_t offset)
1178:../LSM9DS1_Driver.c **** {
 5109              		.loc 1 1178 0
 5110              		.cfi_startproc
 5111              		@ args = 0, pretend = 0, frame = 16
 5112              		@ frame_needed = 1, uses_anonymous_args = 0
 5113 0000 80B5     		push	{r7, lr}
 5114              	.LCFI133:
 5115              		.cfi_def_cfa_offset 8
 5116              		.cfi_offset 7, -8
 5117              		.cfi_offset 14, -4
 5118 0002 84B0     		sub	sp, sp, #16
 5119              	.LCFI134:
 5120              		.cfi_def_cfa_offset 24
 5121 0004 00AF     		add	r7, sp, #0
 5122              	.LCFI135:
 5123              		.cfi_def_cfa_register 7
 5124 0006 0246     		mov	r2, r0
 5125 0008 0B46     		mov	r3, r1
 5126 000a FA71     		strb	r2, [r7, #7]
 5127 000c BB80     		strh	r3, [r7, #4]	@ movhi
1179:../LSM9DS1_Driver.c **** 	if (axis > 2)
 5128              		.loc 1 1179 0
 5129 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5130 0010 022B     		cmp	r3, #2
 5131 0012 21D8     		bhi	.L195
 5132              	.L193:
1180:../LSM9DS1_Driver.c **** 		return;
1181:../LSM9DS1_Driver.c **** 	uint8_t msb, lsb;
1182:../LSM9DS1_Driver.c **** 	msb = (offset & 0xFF00) >> 8;
 5133              		.loc 1 1182 0
 5134 0014 B7F90430 		ldrsh	r3, [r7, #4]
 5135 0018 03F47F43 		and	r3, r3, #65280
 5136 001c 4FEA2323 		asr	r3, r3, #8
 5137 0020 FB73     		strb	r3, [r7, #15]
1183:../LSM9DS1_Driver.c **** 	lsb = offset & 0x00FF;
 5138              		.loc 1 1183 0
 5139 0022 BB88     		ldrh	r3, [r7, #4]	@ movhi
 5140 0024 BB73     		strb	r3, [r7, #14]
1184:../LSM9DS1_Driver.c **** 	mWriteByte(OFFSET_X_REG_L_M + (2 * axis), lsb);
 5141              		.loc 1 1184 0
 5142 0026 FB79     		ldrb	r3, [r7, #7]
 5143 0028 4FEA4303 		lsl	r3, r3, #1
 5144 002c DBB2     		uxtb	r3, r3
 5145 002e 03F10503 		add	r3, r3, #5
 5146 0032 DAB2     		uxtb	r2, r3
 5147 0034 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 5148 0036 1046     		mov	r0, r2
 5149 0038 1946     		mov	r1, r3
 5150 003a FFF7FEFF 		bl	mWriteByte
1185:../LSM9DS1_Driver.c **** 	mWriteByte(OFFSET_X_REG_H_M + (2 * axis), msb);
 5151              		.loc 1 1185 0
 5152 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5153 0040 03F10303 		add	r3, r3, #3
 5154 0044 DBB2     		uxtb	r3, r3
 5155 0046 4FEA4303 		lsl	r3, r3, #1
 5156 004a DAB2     		uxtb	r2, r3
 5157 004c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5158 004e 1046     		mov	r0, r2
 5159 0050 1946     		mov	r1, r3
 5160 0052 FFF7FEFF 		bl	mWriteByte
 5161 0056 00E0     		b	.L192
 5162              	.L195:
1180:../LSM9DS1_Driver.c **** 		return;
 5163              		.loc 1 1180 0
 5164 0058 00BF     		nop
 5165              	.L192:
1186:../LSM9DS1_Driver.c **** }
 5166              		.loc 1 1186 0
 5167 005a 07F11007 		add	r7, r7, #16
 5168 005e BD46     		mov	sp, r7
 5169 0060 80BD     		pop	{r7, pc}
 5170              		.cfi_endproc
 5171              	.LFE165:
 5173 0062 00BF     		.section	.text.accelAvailable,"ax",%progbits
 5174              		.align	2
 5175              		.global	accelAvailable
 5176              		.thumb
 5177              		.thumb_func
 5179              	accelAvailable:
 5180              	.LFB166:
1187:../LSM9DS1_Driver.c **** 
1188:../LSM9DS1_Driver.c **** uint8_t accelAvailable(void)
1189:../LSM9DS1_Driver.c **** {
 5181              		.loc 1 1189 0
 5182              		.cfi_startproc
 5183              		@ args = 0, pretend = 0, frame = 8
 5184              		@ frame_needed = 1, uses_anonymous_args = 0
 5185 0000 80B5     		push	{r7, lr}
 5186              	.LCFI136:
 5187              		.cfi_def_cfa_offset 8
 5188              		.cfi_offset 7, -8
 5189              		.cfi_offset 14, -4
 5190 0002 82B0     		sub	sp, sp, #8
 5191              	.LCFI137:
 5192              		.cfi_def_cfa_offset 16
 5193 0004 00AF     		add	r7, sp, #0
 5194              	.LCFI138:
 5195              		.cfi_def_cfa_register 7
1190:../LSM9DS1_Driver.c **** 	uint8_t status = xgReadByte(STATUS_REG_1);
 5196              		.loc 1 1190 0
 5197 0006 4FF02700 		mov	r0, #39
 5198 000a FFF7FEFF 		bl	xgReadByte
 5199 000e 0346     		mov	r3, r0
 5200 0010 FB71     		strb	r3, [r7, #7]
1191:../LSM9DS1_Driver.c **** 
1192:../LSM9DS1_Driver.c **** 	return (status & (1<<0));
 5201              		.loc 1 1192 0
 5202 0012 FB79     		ldrb	r3, [r7, #7]
 5203 0014 03F00103 		and	r3, r3, #1
 5204 0018 DBB2     		uxtb	r3, r3
1193:../LSM9DS1_Driver.c **** }
 5205              		.loc 1 1193 0
 5206 001a 1846     		mov	r0, r3
 5207 001c 07F10807 		add	r7, r7, #8
 5208 0020 BD46     		mov	sp, r7
 5209 0022 80BD     		pop	{r7, pc}
 5210              		.cfi_endproc
 5211              	.LFE166:
 5213              		.section	.text.gyroAvailable,"ax",%progbits
 5214              		.align	2
 5215              		.global	gyroAvailable
 5216              		.thumb
 5217              		.thumb_func
 5219              	gyroAvailable:
 5220              	.LFB167:
1194:../LSM9DS1_Driver.c **** 
1195:../LSM9DS1_Driver.c **** uint8_t gyroAvailable(void)
1196:../LSM9DS1_Driver.c **** {
 5221              		.loc 1 1196 0
 5222              		.cfi_startproc
 5223              		@ args = 0, pretend = 0, frame = 8
 5224              		@ frame_needed = 1, uses_anonymous_args = 0
 5225 0000 80B5     		push	{r7, lr}
 5226              	.LCFI139:
 5227              		.cfi_def_cfa_offset 8
 5228              		.cfi_offset 7, -8
 5229              		.cfi_offset 14, -4
 5230 0002 82B0     		sub	sp, sp, #8
 5231              	.LCFI140:
 5232              		.cfi_def_cfa_offset 16
 5233 0004 00AF     		add	r7, sp, #0
 5234              	.LCFI141:
 5235              		.cfi_def_cfa_register 7
1197:../LSM9DS1_Driver.c **** 	uint8_t status = xgReadByte(STATUS_REG_1);
 5236              		.loc 1 1197 0
 5237 0006 4FF02700 		mov	r0, #39
 5238 000a FFF7FEFF 		bl	xgReadByte
 5239 000e 0346     		mov	r3, r0
 5240 0010 FB71     		strb	r3, [r7, #7]
1198:../LSM9DS1_Driver.c **** 
1199:../LSM9DS1_Driver.c **** 	return ((status & (1<<1)) >> 1);
 5241              		.loc 1 1199 0
 5242 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5243 0014 03F00203 		and	r3, r3, #2
 5244 0018 4FEA6303 		asr	r3, r3, #1
 5245 001c DBB2     		uxtb	r3, r3
1200:../LSM9DS1_Driver.c **** }
 5246              		.loc 1 1200 0
 5247 001e 1846     		mov	r0, r3
 5248 0020 07F10807 		add	r7, r7, #8
 5249 0024 BD46     		mov	sp, r7
 5250 0026 80BD     		pop	{r7, pc}
 5251              		.cfi_endproc
 5252              	.LFE167:
 5254              		.section	.text.tempAvailable,"ax",%progbits
 5255              		.align	2
 5256              		.global	tempAvailable
 5257              		.thumb
 5258              		.thumb_func
 5260              	tempAvailable:
 5261              	.LFB168:
1201:../LSM9DS1_Driver.c **** 
1202:../LSM9DS1_Driver.c **** uint8_t tempAvailable(void)
1203:../LSM9DS1_Driver.c **** {
 5262              		.loc 1 1203 0
 5263              		.cfi_startproc
 5264              		@ args = 0, pretend = 0, frame = 8
 5265              		@ frame_needed = 1, uses_anonymous_args = 0
 5266 0000 80B5     		push	{r7, lr}
 5267              	.LCFI142:
 5268              		.cfi_def_cfa_offset 8
 5269              		.cfi_offset 7, -8
 5270              		.cfi_offset 14, -4
 5271 0002 82B0     		sub	sp, sp, #8
 5272              	.LCFI143:
 5273              		.cfi_def_cfa_offset 16
 5274 0004 00AF     		add	r7, sp, #0
 5275              	.LCFI144:
 5276              		.cfi_def_cfa_register 7
1204:../LSM9DS1_Driver.c **** 	uint8_t status = xgReadByte(STATUS_REG_1);
 5277              		.loc 1 1204 0
 5278 0006 4FF02700 		mov	r0, #39
 5279 000a FFF7FEFF 		bl	xgReadByte
 5280 000e 0346     		mov	r3, r0
 5281 0010 FB71     		strb	r3, [r7, #7]
1205:../LSM9DS1_Driver.c **** 
1206:../LSM9DS1_Driver.c **** 	return ((status & (1<<2)) >> 2);
 5282              		.loc 1 1206 0
 5283 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5284 0014 03F00403 		and	r3, r3, #4
 5285 0018 4FEAA303 		asr	r3, r3, #2
 5286 001c DBB2     		uxtb	r3, r3
1207:../LSM9DS1_Driver.c **** }
 5287              		.loc 1 1207 0
 5288 001e 1846     		mov	r0, r3
 5289 0020 07F10807 		add	r7, r7, #8
 5290 0024 BD46     		mov	sp, r7
 5291 0026 80BD     		pop	{r7, pc}
 5292              		.cfi_endproc
 5293              	.LFE168:
 5295              		.section	.text.readAccel,"ax",%progbits
 5296              		.align	2
 5297              		.global	readAccel
 5298              		.thumb
 5299              		.thumb_func
 5301              	readAccel:
 5302              	.LFB169:
1208:../LSM9DS1_Driver.c **** 
1209:../LSM9DS1_Driver.c **** int16_t readAccel(lsm9ds1_axis axis)
1210:../LSM9DS1_Driver.c **** {
 5303              		.loc 1 1210 0
 5304              		.cfi_startproc
 5305              		@ args = 0, pretend = 0, frame = 24
 5306              		@ frame_needed = 1, uses_anonymous_args = 0
 5307 0000 80B5     		push	{r7, lr}
 5308              	.LCFI145:
 5309              		.cfi_def_cfa_offset 8
 5310              		.cfi_offset 7, -8
 5311              		.cfi_offset 14, -4
 5312 0002 86B0     		sub	sp, sp, #24
 5313              	.LCFI146:
 5314              		.cfi_def_cfa_offset 32
 5315 0004 00AF     		add	r7, sp, #0
 5316              	.LCFI147:
 5317              		.cfi_def_cfa_register 7
 5318 0006 0346     		mov	r3, r0
 5319 0008 FB71     		strb	r3, [r7, #7]
1211:../LSM9DS1_Driver.c **** 	uint8_t temp[2];
1212:../LSM9DS1_Driver.c **** 	int16_t value;
1213:../LSM9DS1_Driver.c **** 	uint8_t subAddress = OUT_X_L_XL + (2 * axis);
 5320              		.loc 1 1213 0
 5321 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5322 000c 03F11403 		add	r3, r3, #20
 5323 0010 DBB2     		uxtb	r3, r3
 5324 0012 4FEA4303 		lsl	r3, r3, #1
 5325 0016 7B75     		strb	r3, [r7, #21]
1214:../LSM9DS1_Driver.c **** 	int i = 0;
 5326              		.loc 1 1214 0
 5327 0018 4FF00003 		mov	r3, #0
 5328 001c 3B61     		str	r3, [r7, #16]
1215:../LSM9DS1_Driver.c **** 	//xgReadBytes(OUT_X_L_XL + (2 * axis), temp, 2);
1216:../LSM9DS1_Driver.c **** 	while(i < 2)
 5329              		.loc 1 1216 0
 5330 001e 1DE0     		b	.L203
 5331              	.L204:
1217:../LSM9DS1_Driver.c **** 	{
1218:../LSM9DS1_Driver.c **** 		subAddress = subAddress + i;
 5332              		.loc 1 1218 0
 5333 0020 3B69     		ldr	r3, [r7, #16]
 5334 0022 DAB2     		uxtb	r2, r3
 5335 0024 7B7D     		ldrb	r3, [r7, #21]
 5336 0026 D318     		adds	r3, r2, r3
 5337 0028 7B75     		strb	r3, [r7, #21]
1219:../LSM9DS1_Driver.c **** 
1220:../LSM9DS1_Driver.c **** 		temp[i] = I2CreadBytes(_xgAddress, subAddress, NULL, 0);
 5338              		.loc 1 1220 0
 5339 002a 40F20003 		movw	r3, #:lower16:_xgAddress
 5340 002e C0F20003 		movt	r3, #:upper16:_xgAddress
 5341 0032 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 5342 0034 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 5343 0036 1046     		mov	r0, r2
 5344 0038 1946     		mov	r1, r3
 5345 003a 4FF00002 		mov	r2, #0
 5346 003e 4FF00003 		mov	r3, #0
 5347 0042 FFF7FEFF 		bl	I2CreadBytes
 5348 0046 0346     		mov	r3, r0
 5349 0048 1A46     		mov	r2, r3
 5350 004a 07F10C01 		add	r1, r7, #12
 5351 004e 3B69     		ldr	r3, [r7, #16]
 5352 0050 CB18     		adds	r3, r1, r3
 5353 0052 1A70     		strb	r2, [r3, #0]
1221:../LSM9DS1_Driver.c **** 
1222:../LSM9DS1_Driver.c **** 		i++;
 5354              		.loc 1 1222 0
 5355 0054 3B69     		ldr	r3, [r7, #16]
 5356 0056 03F10103 		add	r3, r3, #1
 5357 005a 3B61     		str	r3, [r7, #16]
 5358              	.L203:
1216:../LSM9DS1_Driver.c **** 	while(i < 2)
 5359              		.loc 1 1216 0 discriminator 1
 5360 005c 3B69     		ldr	r3, [r7, #16]
 5361 005e 012B     		cmp	r3, #1
 5362 0060 DEDD     		ble	.L204
1223:../LSM9DS1_Driver.c **** 	}
1224:../LSM9DS1_Driver.c **** 
1225:../LSM9DS1_Driver.c **** 	value = (temp[1] << 8) | temp[0];
 5363              		.loc 1 1225 0
 5364 0062 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 5365 0064 4FEA0323 		lsl	r3, r3, #8
 5366 0068 9AB2     		uxth	r2, r3
 5367 006a 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 5368 006c 1343     		orrs	r3, r3, r2
 5369 006e FB82     		strh	r3, [r7, #22]	@ movhi
1226:../LSM9DS1_Driver.c **** 
1227:../LSM9DS1_Driver.c **** 	if (_autoCalc)
 5370              		.loc 1 1227 0
 5371 0070 40F20003 		movw	r3, #:lower16:_autoCalc
 5372 0074 C0F20003 		movt	r3, #:upper16:_autoCalc
 5373 0078 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 5374 007a 002B     		cmp	r3, #0
 5375 007c 0BD0     		beq	.L205
1228:../LSM9DS1_Driver.c **** 		value -= aBiasRaw[axis];
 5376              		.loc 1 1228 0
 5377 007e FA8A     		ldrh	r2, [r7, #22]
 5378 0080 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 5379 0082 40F20003 		movw	r3, #:lower16:aBiasRaw
 5380 0086 C0F20003 		movt	r3, #:upper16:aBiasRaw
 5381 008a 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 5382 008e 9BB2     		uxth	r3, r3
 5383 0090 D31A     		subs	r3, r2, r3
 5384 0092 9BB2     		uxth	r3, r3
 5385 0094 FB82     		strh	r3, [r7, #22]	@ movhi
 5386              	.L205:
1229:../LSM9DS1_Driver.c **** 
1230:../LSM9DS1_Driver.c **** 	return value;
 5387              		.loc 1 1230 0
 5388 0096 FB8A     		ldrh	r3, [r7, #22]
 5389 0098 1BB2     		sxth	r3, r3
1231:../LSM9DS1_Driver.c **** }
 5390              		.loc 1 1231 0
 5391 009a 1846     		mov	r0, r3
 5392 009c 07F11807 		add	r7, r7, #24
 5393 00a0 BD46     		mov	sp, r7
 5394 00a2 80BD     		pop	{r7, pc}
 5395              		.cfi_endproc
 5396              	.LFE169:
 5398              		.section	.text.readMag,"ax",%progbits
 5399              		.align	2
 5400              		.global	readMag
 5401              		.thumb
 5402              		.thumb_func
 5404              	readMag:
 5405              	.LFB170:
1232:../LSM9DS1_Driver.c **** 
1233:../LSM9DS1_Driver.c **** int16_t readMag(lsm9ds1_axis axis)
1234:../LSM9DS1_Driver.c **** {
 5406              		.loc 1 1234 0
 5407              		.cfi_startproc
 5408              		@ args = 0, pretend = 0, frame = 24
 5409              		@ frame_needed = 1, uses_anonymous_args = 0
 5410 0000 80B5     		push	{r7, lr}
 5411              	.LCFI148:
 5412              		.cfi_def_cfa_offset 8
 5413              		.cfi_offset 7, -8
 5414              		.cfi_offset 14, -4
 5415 0002 86B0     		sub	sp, sp, #24
 5416              	.LCFI149:
 5417              		.cfi_def_cfa_offset 32
 5418 0004 00AF     		add	r7, sp, #0
 5419              	.LCFI150:
 5420              		.cfi_def_cfa_register 7
 5421 0006 0346     		mov	r3, r0
 5422 0008 FB71     		strb	r3, [r7, #7]
1235:../LSM9DS1_Driver.c **** 	uint8_t temp[2];
1236:../LSM9DS1_Driver.c **** 
1237:../LSM9DS1_Driver.c **** 	int i = 0;
 5423              		.loc 1 1237 0
 5424 000a 4FF00003 		mov	r3, #0
 5425 000e 7B61     		str	r3, [r7, #20]
1238:../LSM9DS1_Driver.c **** 	uint8_t subAddress = OUT_X_L_M + (2 * axis);
 5426              		.loc 1 1238 0
 5427 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5428 0012 03F11403 		add	r3, r3, #20
 5429 0016 DBB2     		uxtb	r3, r3
 5430 0018 4FEA4303 		lsl	r3, r3, #1
 5431 001c FB74     		strb	r3, [r7, #19]
1239:../LSM9DS1_Driver.c **** 
1240:../LSM9DS1_Driver.c **** 	while(i < 2)
 5432              		.loc 1 1240 0
 5433 001e 1DE0     		b	.L208
 5434              	.L209:
1241:../LSM9DS1_Driver.c **** 	{
1242:../LSM9DS1_Driver.c **** 		subAddress = subAddress + i;
 5435              		.loc 1 1242 0
 5436 0020 7B69     		ldr	r3, [r7, #20]
 5437 0022 DAB2     		uxtb	r2, r3
 5438 0024 FB7C     		ldrb	r3, [r7, #19]
 5439 0026 D318     		adds	r3, r2, r3
 5440 0028 FB74     		strb	r3, [r7, #19]
1243:../LSM9DS1_Driver.c **** 
1244:../LSM9DS1_Driver.c **** 		temp[i] = I2CreadBytes(_mAddress, subAddress, NULL, 0);
 5441              		.loc 1 1244 0
 5442 002a 40F20003 		movw	r3, #:lower16:_mAddress
 5443 002e C0F20003 		movt	r3, #:upper16:_mAddress
 5444 0032 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 5445 0034 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 5446 0036 1046     		mov	r0, r2
 5447 0038 1946     		mov	r1, r3
 5448 003a 4FF00002 		mov	r2, #0
 5449 003e 4FF00003 		mov	r3, #0
 5450 0042 FFF7FEFF 		bl	I2CreadBytes
 5451 0046 0346     		mov	r3, r0
 5452 0048 1A46     		mov	r2, r3
 5453 004a 07F10C01 		add	r1, r7, #12
 5454 004e 7B69     		ldr	r3, [r7, #20]
 5455 0050 CB18     		adds	r3, r1, r3
 5456 0052 1A70     		strb	r2, [r3, #0]
1245:../LSM9DS1_Driver.c **** 
1246:../LSM9DS1_Driver.c **** 		i++;
 5457              		.loc 1 1246 0
 5458 0054 7B69     		ldr	r3, [r7, #20]
 5459 0056 03F10103 		add	r3, r3, #1
 5460 005a 7B61     		str	r3, [r7, #20]
 5461              	.L208:
1240:../LSM9DS1_Driver.c **** 	while(i < 2)
 5462              		.loc 1 1240 0 discriminator 1
 5463 005c 7B69     		ldr	r3, [r7, #20]
 5464 005e 012B     		cmp	r3, #1
 5465 0060 DEDD     		ble	.L209
1247:../LSM9DS1_Driver.c **** 	}
1248:../LSM9DS1_Driver.c **** 
1249:../LSM9DS1_Driver.c **** 	int16_t value = (temp[1] << 8) | temp[0];
 5466              		.loc 1 1249 0
 5467 0062 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 5468 0064 4FEA0323 		lsl	r3, r3, #8
 5469 0068 9AB2     		uxth	r2, r3
 5470 006a 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 5471 006c 1343     		orrs	r3, r3, r2
 5472 006e 3B82     		strh	r3, [r7, #16]	@ movhi
1250:../LSM9DS1_Driver.c **** 	return value;
 5473              		.loc 1 1250 0
 5474 0070 3B8A     		ldrh	r3, [r7, #16]
 5475 0072 1BB2     		sxth	r3, r3
1251:../LSM9DS1_Driver.c **** }
 5476              		.loc 1 1251 0
 5477 0074 1846     		mov	r0, r3
 5478 0076 07F11807 		add	r7, r7, #24
 5479 007a BD46     		mov	sp, r7
 5480 007c 80BD     		pop	{r7, pc}
 5481              		.cfi_endproc
 5482              	.LFE170:
 5484 007e 00BF     		.section	.text.readTemp,"ax",%progbits
 5485              		.align	2
 5486              		.global	readTemp
 5487              		.thumb
 5488              		.thumb_func
 5490              	readTemp:
 5491              	.LFB171:
1252:../LSM9DS1_Driver.c **** 
1253:../LSM9DS1_Driver.c **** int16_t readTemp(void)
1254:../LSM9DS1_Driver.c **** {
 5492              		.loc 1 1254 0
 5493              		.cfi_startproc
 5494              		@ args = 0, pretend = 0, frame = 8
 5495              		@ frame_needed = 1, uses_anonymous_args = 0
 5496 0000 80B5     		push	{r7, lr}
 5497              	.LCFI151:
 5498              		.cfi_def_cfa_offset 8
 5499              		.cfi_offset 7, -8
 5500              		.cfi_offset 14, -4
 5501 0002 82B0     		sub	sp, sp, #8
 5502              	.LCFI152:
 5503              		.cfi_def_cfa_offset 16
 5504 0004 00AF     		add	r7, sp, #0
 5505              	.LCFI153:
 5506              		.cfi_def_cfa_register 7
1255:../LSM9DS1_Driver.c **** 	uint8_t temp[2]; // We'll read two bytes from the temperature sensor into temp
1256:../LSM9DS1_Driver.c **** 
1257:../LSM9DS1_Driver.c **** 	int i  = 0;
 5507              		.loc 1 1257 0
 5508 0006 4FF00003 		mov	r3, #0
 5509 000a 7B60     		str	r3, [r7, #4]
1258:../LSM9DS1_Driver.c **** 	uint8_t subAddress = OUT_TEMP_L;
 5510              		.loc 1 1258 0
 5511 000c 4FF01503 		mov	r3, #21
 5512 0010 FB70     		strb	r3, [r7, #3]
1259:../LSM9DS1_Driver.c **** 
1260:../LSM9DS1_Driver.c **** 	while(i < 2)
 5513              		.loc 1 1260 0
 5514 0012 1CE0     		b	.L212
 5515              	.L213:
1261:../LSM9DS1_Driver.c **** 	{
1262:../LSM9DS1_Driver.c **** 		subAddress = subAddress + i;
 5516              		.loc 1 1262 0
 5517 0014 7B68     		ldr	r3, [r7, #4]
 5518 0016 DAB2     		uxtb	r2, r3
 5519 0018 FB78     		ldrb	r3, [r7, #3]
 5520 001a D318     		adds	r3, r2, r3
 5521 001c FB70     		strb	r3, [r7, #3]
1263:../LSM9DS1_Driver.c **** 
1264:../LSM9DS1_Driver.c **** 		temp[i] = I2CreadBytes(_xgAddress, subAddress, NULL, 0);
 5522              		.loc 1 1264 0
 5523 001e 40F20003 		movw	r3, #:lower16:_xgAddress
 5524 0022 C0F20003 		movt	r3, #:upper16:_xgAddress
 5525 0026 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 5526 0028 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 5527 002a 1046     		mov	r0, r2
 5528 002c 1946     		mov	r1, r3
 5529 002e 4FF00002 		mov	r2, #0
 5530 0032 4FF00003 		mov	r3, #0
 5531 0036 FFF7FEFF 		bl	I2CreadBytes
 5532 003a 0346     		mov	r3, r0
 5533 003c 1A46     		mov	r2, r3
 5534 003e 3946     		mov	r1, r7
 5535 0040 7B68     		ldr	r3, [r7, #4]
 5536 0042 CB18     		adds	r3, r1, r3
 5537 0044 1A70     		strb	r2, [r3, #0]
1265:../LSM9DS1_Driver.c **** 
1266:../LSM9DS1_Driver.c **** 		i++;
 5538              		.loc 1 1266 0
 5539 0046 7B68     		ldr	r3, [r7, #4]
 5540 0048 03F10103 		add	r3, r3, #1
 5541 004c 7B60     		str	r3, [r7, #4]
 5542              	.L212:
1260:../LSM9DS1_Driver.c **** 	while(i < 2)
 5543              		.loc 1 1260 0 discriminator 1
 5544 004e 7B68     		ldr	r3, [r7, #4]
 5545 0050 012B     		cmp	r3, #1
 5546 0052 DFDD     		ble	.L213
1267:../LSM9DS1_Driver.c **** 	}
1268:../LSM9DS1_Driver.c **** 
1269:../LSM9DS1_Driver.c **** 	//xgReadBytes(OUT_TEMP_L, temp, 2); // Read 2 bytes, beginning at OUT_TEMP_L
1270:../LSM9DS1_Driver.c **** 	temperature = (temp[1] << 8) | temp[0];
 5547              		.loc 1 1270 0
 5548 0054 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 5549 0056 4FEA0323 		lsl	r3, r3, #8
 5550 005a 9AB2     		uxth	r2, r3
 5551 005c 3B78     		ldrb	r3, [r7, #0]	@ zero_extendqisi2
 5552 005e 1343     		orrs	r3, r3, r2
 5553 0060 9AB2     		uxth	r2, r3
 5554 0062 40F20003 		movw	r3, #:lower16:temperature
 5555 0066 C0F20003 		movt	r3, #:upper16:temperature
 5556 006a 1A80     		strh	r2, [r3, #0]	@ movhi
1271:../LSM9DS1_Driver.c **** 
1272:../LSM9DS1_Driver.c **** 	return temperature;
 5557              		.loc 1 1272 0
 5558 006c 40F20003 		movw	r3, #:lower16:temperature
 5559 0070 C0F20003 		movt	r3, #:upper16:temperature
 5560 0074 1B88     		ldrh	r3, [r3, #0]
 5561 0076 1BB2     		sxth	r3, r3
1273:../LSM9DS1_Driver.c **** }
 5562              		.loc 1 1273 0
 5563 0078 1846     		mov	r0, r3
 5564 007a 07F10807 		add	r7, r7, #8
 5565 007e BD46     		mov	sp, r7
 5566 0080 80BD     		pop	{r7, pc}
 5567              		.cfi_endproc
 5568              	.LFE171:
 5570 0082 00BF     		.section	.text.readGyro,"ax",%progbits
 5571              		.align	2
 5572              		.global	readGyro
 5573              		.thumb
 5574              		.thumb_func
 5576              	readGyro:
 5577              	.LFB172:
1274:../LSM9DS1_Driver.c **** 
1275:../LSM9DS1_Driver.c **** int16_t readGyro(lsm9ds1_axis axis)
1276:../LSM9DS1_Driver.c **** {
 5578              		.loc 1 1276 0
 5579              		.cfi_startproc
 5580              		@ args = 0, pretend = 0, frame = 24
 5581              		@ frame_needed = 1, uses_anonymous_args = 0
 5582 0000 80B5     		push	{r7, lr}
 5583              	.LCFI154:
 5584              		.cfi_def_cfa_offset 8
 5585              		.cfi_offset 7, -8
 5586              		.cfi_offset 14, -4
 5587 0002 86B0     		sub	sp, sp, #24
 5588              	.LCFI155:
 5589              		.cfi_def_cfa_offset 32
 5590 0004 00AF     		add	r7, sp, #0
 5591              	.LCFI156:
 5592              		.cfi_def_cfa_register 7
 5593 0006 0346     		mov	r3, r0
 5594 0008 FB71     		strb	r3, [r7, #7]
1277:../LSM9DS1_Driver.c **** 	uint8_t temp[2];
1278:../LSM9DS1_Driver.c **** 	int16_t value;
1279:../LSM9DS1_Driver.c **** 
1280:../LSM9DS1_Driver.c **** 	int i  = 0;
 5595              		.loc 1 1280 0
 5596 000a 4FF00003 		mov	r3, #0
 5597 000e 3B61     		str	r3, [r7, #16]
1281:../LSM9DS1_Driver.c **** 	uint8_t subAddress = OUT_X_L_G + (2 * axis);
 5598              		.loc 1 1281 0
 5599 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5600 0012 03F10C03 		add	r3, r3, #12
 5601 0016 DBB2     		uxtb	r3, r3
 5602 0018 4FEA4303 		lsl	r3, r3, #1
 5603 001c FB73     		strb	r3, [r7, #15]
1282:../LSM9DS1_Driver.c **** 
1283:../LSM9DS1_Driver.c **** 	while(i < 2)
 5604              		.loc 1 1283 0
 5605 001e 1DE0     		b	.L216
 5606              	.L217:
1284:../LSM9DS1_Driver.c **** 	{
1285:../LSM9DS1_Driver.c **** 		subAddress = subAddress + i;
 5607              		.loc 1 1285 0
 5608 0020 3B69     		ldr	r3, [r7, #16]
 5609 0022 DAB2     		uxtb	r2, r3
 5610 0024 FB7B     		ldrb	r3, [r7, #15]
 5611 0026 D318     		adds	r3, r2, r3
 5612 0028 FB73     		strb	r3, [r7, #15]
1286:../LSM9DS1_Driver.c **** 
1287:../LSM9DS1_Driver.c **** 		temp[i] = I2CreadBytes(_xgAddress, subAddress, NULL, 0);
 5613              		.loc 1 1287 0
 5614 002a 40F20003 		movw	r3, #:lower16:_xgAddress
 5615 002e C0F20003 		movt	r3, #:upper16:_xgAddress
 5616 0032 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 5617 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5618 0036 1046     		mov	r0, r2
 5619 0038 1946     		mov	r1, r3
 5620 003a 4FF00002 		mov	r2, #0
 5621 003e 4FF00003 		mov	r3, #0
 5622 0042 FFF7FEFF 		bl	I2CreadBytes
 5623 0046 0346     		mov	r3, r0
 5624 0048 1A46     		mov	r2, r3
 5625 004a 07F10C01 		add	r1, r7, #12
 5626 004e 3B69     		ldr	r3, [r7, #16]
 5627 0050 CB18     		adds	r3, r1, r3
 5628 0052 1A70     		strb	r2, [r3, #0]
1288:../LSM9DS1_Driver.c **** 		i++;
 5629              		.loc 1 1288 0
 5630 0054 3B69     		ldr	r3, [r7, #16]
 5631 0056 03F10103 		add	r3, r3, #1
 5632 005a 3B61     		str	r3, [r7, #16]
 5633              	.L216:
1283:../LSM9DS1_Driver.c **** 	while(i < 2)
 5634              		.loc 1 1283 0 discriminator 1
 5635 005c 3B69     		ldr	r3, [r7, #16]
 5636 005e 012B     		cmp	r3, #1
 5637 0060 DEDD     		ble	.L217
1289:../LSM9DS1_Driver.c **** 	}
1290:../LSM9DS1_Driver.c **** 
1291:../LSM9DS1_Driver.c **** 	value = (temp[1] << 8) | temp[0];
 5638              		.loc 1 1291 0
 5639 0062 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 5640 0064 4FEA0323 		lsl	r3, r3, #8
 5641 0068 9AB2     		uxth	r2, r3
 5642 006a 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 5643 006c 1343     		orrs	r3, r3, r2
 5644 006e FB82     		strh	r3, [r7, #22]	@ movhi
1292:../LSM9DS1_Driver.c **** 
1293:../LSM9DS1_Driver.c **** 	if (_autoCalc)
 5645              		.loc 1 1293 0
 5646 0070 40F20003 		movw	r3, #:lower16:_autoCalc
 5647 0074 C0F20003 		movt	r3, #:upper16:_autoCalc
 5648 0078 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 5649 007a 002B     		cmp	r3, #0
 5650 007c 0BD0     		beq	.L218
1294:../LSM9DS1_Driver.c **** 		value -= gBiasRaw[axis];
 5651              		.loc 1 1294 0
 5652 007e FA8A     		ldrh	r2, [r7, #22]
 5653 0080 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 5654 0082 40F20003 		movw	r3, #:lower16:gBiasRaw
 5655 0086 C0F20003 		movt	r3, #:upper16:gBiasRaw
 5656 008a 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 5657 008e 9BB2     		uxth	r3, r3
 5658 0090 D31A     		subs	r3, r2, r3
 5659 0092 9BB2     		uxth	r3, r3
 5660 0094 FB82     		strh	r3, [r7, #22]	@ movhi
 5661              	.L218:
1295:../LSM9DS1_Driver.c **** 
1296:../LSM9DS1_Driver.c **** 	return value;
 5662              		.loc 1 1296 0
 5663 0096 FB8A     		ldrh	r3, [r7, #22]
 5664 0098 1BB2     		sxth	r3, r3
1297:../LSM9DS1_Driver.c **** }
 5665              		.loc 1 1297 0
 5666 009a 1846     		mov	r0, r3
 5667 009c 07F11807 		add	r7, r7, #24
 5668 00a0 BD46     		mov	sp, r7
 5669 00a2 80BD     		pop	{r7, pc}
 5670              		.cfi_endproc
 5671              	.LFE172:
 5673              		.section	.text.calcGyro,"ax",%progbits
 5674              		.align	2
 5675              		.global	calcGyro
 5676              		.thumb
 5677              		.thumb_func
 5679              	calcGyro:
 5680              	.LFB173:
1298:../LSM9DS1_Driver.c **** 
1299:../LSM9DS1_Driver.c **** float calcGyro(int16_t gyro)
1300:../LSM9DS1_Driver.c **** {
 5681              		.loc 1 1300 0
 5682              		.cfi_startproc
 5683              		@ args = 0, pretend = 0, frame = 8
 5684              		@ frame_needed = 1, uses_anonymous_args = 0
 5685              		@ link register save eliminated.
 5686 0000 80B4     		push	{r7}
 5687              	.LCFI157:
 5688              		.cfi_def_cfa_offset 4
 5689              		.cfi_offset 7, -4
 5690 0002 83B0     		sub	sp, sp, #12
 5691              	.LCFI158:
 5692              		.cfi_def_cfa_offset 16
 5693 0004 00AF     		add	r7, sp, #0
 5694              	.LCFI159:
 5695              		.cfi_def_cfa_register 7
 5696 0006 0346     		mov	r3, r0
 5697 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1301:../LSM9DS1_Driver.c **** 	// Return the gyro raw reading times our pre-calculated DPS / (ADC tick):
1302:../LSM9DS1_Driver.c **** 	return /*round(*/gRes * gyro/*)*/;
 5698              		.loc 1 1302 0
 5699 000a B7F90630 		ldrsh	r3, [r7, #6]
 5700 000e 07EE903A 		fmsr	s15, r3	@ int
 5701 0012 B8EEE77A 		fsitos	s14, s15
 5702 0016 40F20003 		movw	r3, #:lower16:gRes
 5703 001a C0F20003 		movt	r3, #:upper16:gRes
 5704 001e D3ED007A 		flds	s15, [r3, #0]
 5705 0022 67EE277A 		fmuls	s15, s14, s15
 5706 0026 17EE903A 		fmrs	r3, s15
1303:../LSM9DS1_Driver.c **** 	//return gyro;
1304:../LSM9DS1_Driver.c **** }
 5707              		.loc 1 1304 0
 5708 002a 1846     		mov	r0, r3	@ float
 5709 002c 07F10C07 		add	r7, r7, #12
 5710 0030 BD46     		mov	sp, r7
 5711 0032 80BC     		pop	{r7}
 5712 0034 7047     		bx	lr
 5713              		.cfi_endproc
 5714              	.LFE173:
 5716 0036 00BF     		.section	.text.calcAccel,"ax",%progbits
 5717              		.align	2
 5718              		.global	calcAccel
 5719              		.thumb
 5720              		.thumb_func
 5722              	calcAccel:
 5723              	.LFB174:
1305:../LSM9DS1_Driver.c **** 
1306:../LSM9DS1_Driver.c **** float calcAccel(int16_t accel)
1307:../LSM9DS1_Driver.c **** {
 5724              		.loc 1 1307 0
 5725              		.cfi_startproc
 5726              		@ args = 0, pretend = 0, frame = 8
 5727              		@ frame_needed = 1, uses_anonymous_args = 0
 5728              		@ link register save eliminated.
 5729 0000 80B4     		push	{r7}
 5730              	.LCFI160:
 5731              		.cfi_def_cfa_offset 4
 5732              		.cfi_offset 7, -4
 5733 0002 83B0     		sub	sp, sp, #12
 5734              	.LCFI161:
 5735              		.cfi_def_cfa_offset 16
 5736 0004 00AF     		add	r7, sp, #0
 5737              	.LCFI162:
 5738              		.cfi_def_cfa_register 7
 5739 0006 0346     		mov	r3, r0
 5740 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1308:../LSM9DS1_Driver.c **** 	// Return the accel raw reading times our pre-calculated g's / (ADC tick):
1309:../LSM9DS1_Driver.c **** 	return /*round(*/aRes * accel/*)*/;
 5741              		.loc 1 1309 0
 5742 000a B7F90630 		ldrsh	r3, [r7, #6]
 5743 000e 07EE903A 		fmsr	s15, r3	@ int
 5744 0012 B8EEE77A 		fsitos	s14, s15
 5745 0016 40F20003 		movw	r3, #:lower16:aRes
 5746 001a C0F20003 		movt	r3, #:upper16:aRes
 5747 001e D3ED007A 		flds	s15, [r3, #0]
 5748 0022 67EE277A 		fmuls	s15, s14, s15
 5749 0026 17EE903A 		fmrs	r3, s15
1310:../LSM9DS1_Driver.c **** 	//return accel;
1311:../LSM9DS1_Driver.c **** }
 5750              		.loc 1 1311 0
 5751 002a 1846     		mov	r0, r3	@ float
 5752 002c 07F10C07 		add	r7, r7, #12
 5753 0030 BD46     		mov	sp, r7
 5754 0032 80BC     		pop	{r7}
 5755 0034 7047     		bx	lr
 5756              		.cfi_endproc
 5757              	.LFE174:
 5759 0036 00BF     		.section	.text.setGyroScale,"ax",%progbits
 5760              		.align	2
 5761              		.global	setGyroScale
 5762              		.thumb
 5763              		.thumb_func
 5765              	setGyroScale:
 5766              	.LFB175:
1312:../LSM9DS1_Driver.c **** 
1313:../LSM9DS1_Driver.c **** 
1314:../LSM9DS1_Driver.c **** void setGyroScale(uint16_t gScl)
1315:../LSM9DS1_Driver.c **** {
 5767              		.loc 1 1315 0
 5768              		.cfi_startproc
 5769              		@ args = 0, pretend = 0, frame = 16
 5770              		@ frame_needed = 1, uses_anonymous_args = 0
 5771 0000 80B5     		push	{r7, lr}
 5772              	.LCFI163:
 5773              		.cfi_def_cfa_offset 8
 5774              		.cfi_offset 7, -8
 5775              		.cfi_offset 14, -4
 5776 0002 84B0     		sub	sp, sp, #16
 5777              	.LCFI164:
 5778              		.cfi_def_cfa_offset 24
 5779 0004 00AF     		add	r7, sp, #0
 5780              	.LCFI165:
 5781              		.cfi_def_cfa_register 7
 5782 0006 0346     		mov	r3, r0
 5783 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1316:../LSM9DS1_Driver.c **** 	// Read current value of CTRL_REG1_G:
1317:../LSM9DS1_Driver.c **** 	uint8_t ctrl1RegValue = xgReadByte(CTRL_REG1_G);
 5784              		.loc 1 1317 0
 5785 000a 4FF01000 		mov	r0, #16
 5786 000e FFF7FEFF 		bl	xgReadByte
 5787 0012 0346     		mov	r3, r0
 5788 0014 FB73     		strb	r3, [r7, #15]
1318:../LSM9DS1_Driver.c **** 	// Mask out scale bits (3 & 4):
1319:../LSM9DS1_Driver.c **** 	ctrl1RegValue &= 0xE7;
 5789              		.loc 1 1319 0
 5790 0016 FB7B     		ldrb	r3, [r7, #15]
 5791 0018 23F01803 		bic	r3, r3, #24
 5792 001c FB73     		strb	r3, [r7, #15]
1320:../LSM9DS1_Driver.c **** 	switch (gScl)
 5793              		.loc 1 1320 0
 5794 001e FB88     		ldrh	r3, [r7, #6]
 5795 0020 B3F5FA7F 		cmp	r3, #500
 5796 0024 03D0     		beq	.L226
 5797 0026 B3F5FA6F 		cmp	r3, #2000
 5798 002a 0CD0     		beq	.L227
 5799 002c 17E0     		b	.L229
 5800              	.L226:
1321:../LSM9DS1_Driver.c **** 	{
1322:../LSM9DS1_Driver.c **** 		case 500:
1323:../LSM9DS1_Driver.c **** 			ctrl1RegValue |= (0x1 << 3);
 5801              		.loc 1 1323 0
 5802 002e FB7B     		ldrb	r3, [r7, #15]
 5803 0030 43F00803 		orr	r3, r3, #8
 5804 0034 FB73     		strb	r3, [r7, #15]
1324:../LSM9DS1_Driver.c **** 			settings.gyro.scale = 500;
 5805              		.loc 1 1324 0
 5806 0036 40F20003 		movw	r3, #:lower16:settings
 5807 003a C0F20003 		movt	r3, #:upper16:settings
 5808 003e 4FF4FA72 		mov	r2, #500
 5809 0042 DA80     		strh	r2, [r3, #6]	@ movhi
1325:../LSM9DS1_Driver.c **** 			break;
 5810              		.loc 1 1325 0
 5811 0044 13E0     		b	.L228
 5812              	.L227:
1326:../LSM9DS1_Driver.c **** 		case 2000:
1327:../LSM9DS1_Driver.c **** 			ctrl1RegValue |= (0x3 << 3);
 5813              		.loc 1 1327 0
 5814 0046 FB7B     		ldrb	r3, [r7, #15]
 5815 0048 43F01803 		orr	r3, r3, #24
 5816 004c FB73     		strb	r3, [r7, #15]
1328:../LSM9DS1_Driver.c **** 			settings.gyro.scale = 2000;
 5817              		.loc 1 1328 0
 5818 004e 40F20003 		movw	r3, #:lower16:settings
 5819 0052 C0F20003 		movt	r3, #:upper16:settings
 5820 0056 4FF4FA62 		mov	r2, #2000
 5821 005a DA80     		strh	r2, [r3, #6]	@ movhi
1329:../LSM9DS1_Driver.c **** 			break;
 5822              		.loc 1 1329 0
 5823 005c 07E0     		b	.L228
 5824              	.L229:
1330:../LSM9DS1_Driver.c **** 		default: // Otherwise we'll set it to 245 dps (0x0 << 4)
1331:../LSM9DS1_Driver.c **** 			settings.gyro.scale = 245;
 5825              		.loc 1 1331 0
 5826 005e 40F20003 		movw	r3, #:lower16:settings
 5827 0062 C0F20003 		movt	r3, #:upper16:settings
 5828 0066 4FF0F502 		mov	r2, #245
 5829 006a DA80     		strh	r2, [r3, #6]	@ movhi
1332:../LSM9DS1_Driver.c **** 			break;
 5830              		.loc 1 1332 0
 5831 006c 00BF     		nop
 5832              	.L228:
1333:../LSM9DS1_Driver.c **** 	}
1334:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG1_G, ctrl1RegValue);
 5833              		.loc 1 1334 0
 5834 006e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5835 0070 4FF01000 		mov	r0, #16
 5836 0074 1946     		mov	r1, r3
 5837 0076 FFF7FEFF 		bl	xgWriteByte
1335:../LSM9DS1_Driver.c **** 
1336:../LSM9DS1_Driver.c **** 	calcgRes();
 5838              		.loc 1 1336 0
 5839 007a FFF7FEFF 		bl	calcgRes
1337:../LSM9DS1_Driver.c **** }
 5840              		.loc 1 1337 0
 5841 007e 07F11007 		add	r7, r7, #16
 5842 0082 BD46     		mov	sp, r7
 5843 0084 80BD     		pop	{r7, pc}
 5844              		.cfi_endproc
 5845              	.LFE175:
 5847 0086 00BF     		.section	.text.setAccelScale,"ax",%progbits
 5848              		.align	2
 5849              		.global	setAccelScale
 5850              		.thumb
 5851              		.thumb_func
 5853              	setAccelScale:
 5854              	.LFB176:
1338:../LSM9DS1_Driver.c **** 
1339:../LSM9DS1_Driver.c **** void setAccelScale(uint8_t aScl)
1340:../LSM9DS1_Driver.c **** {
 5855              		.loc 1 1340 0
 5856              		.cfi_startproc
 5857              		@ args = 0, pretend = 0, frame = 16
 5858              		@ frame_needed = 1, uses_anonymous_args = 0
 5859 0000 80B5     		push	{r7, lr}
 5860              	.LCFI166:
 5861              		.cfi_def_cfa_offset 8
 5862              		.cfi_offset 7, -8
 5863              		.cfi_offset 14, -4
 5864 0002 84B0     		sub	sp, sp, #16
 5865              	.LCFI167:
 5866              		.cfi_def_cfa_offset 24
 5867 0004 00AF     		add	r7, sp, #0
 5868              	.LCFI168:
 5869              		.cfi_def_cfa_register 7
 5870 0006 0346     		mov	r3, r0
 5871 0008 FB71     		strb	r3, [r7, #7]
1341:../LSM9DS1_Driver.c **** 	// We need to preserve the other bytes in CTRL_REG6_XL. So, first read it:
1342:../LSM9DS1_Driver.c **** 	uint8_t tempRegValue = xgReadByte(CTRL_REG6_XL);
 5872              		.loc 1 1342 0
 5873 000a 4FF02000 		mov	r0, #32
 5874 000e FFF7FEFF 		bl	xgReadByte
 5875 0012 0346     		mov	r3, r0
 5876 0014 FB73     		strb	r3, [r7, #15]
1343:../LSM9DS1_Driver.c **** 	// Mask out accel scale bits:
1344:../LSM9DS1_Driver.c **** 	tempRegValue &= 0xE7;
 5877              		.loc 1 1344 0
 5878 0016 FB7B     		ldrb	r3, [r7, #15]
 5879 0018 23F01803 		bic	r3, r3, #24
 5880 001c FB73     		strb	r3, [r7, #15]
1345:../LSM9DS1_Driver.c **** 
1346:../LSM9DS1_Driver.c **** 	switch (aScl)
 5881              		.loc 1 1346 0
 5882 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5883 0020 082B     		cmp	r3, #8
 5884 0022 0FD0     		beq	.L233
 5885 0024 102B     		cmp	r3, #16
 5886 0026 19D0     		beq	.L234
 5887 0028 042B     		cmp	r3, #4
 5888 002a 23D1     		bne	.L236
 5889              	.L232:
1347:../LSM9DS1_Driver.c **** 	{
1348:../LSM9DS1_Driver.c **** 		case 4:
1349:../LSM9DS1_Driver.c **** 			tempRegValue |= (0x2 << 3);
 5890              		.loc 1 1349 0
 5891 002c FB7B     		ldrb	r3, [r7, #15]
 5892 002e 43F01003 		orr	r3, r3, #16
 5893 0032 FB73     		strb	r3, [r7, #15]
1350:../LSM9DS1_Driver.c **** 			settings.accel.scale = 4;
 5894              		.loc 1 1350 0
 5895 0034 40F20003 		movw	r3, #:lower16:settings
 5896 0038 C0F20003 		movt	r3, #:upper16:settings
 5897 003c 4FF00402 		mov	r2, #4
 5898 0040 DA75     		strb	r2, [r3, #23]
1351:../LSM9DS1_Driver.c **** 			break;
 5899              		.loc 1 1351 0
 5900 0042 1FE0     		b	.L235
 5901              	.L233:
1352:../LSM9DS1_Driver.c **** 		case 8:
1353:../LSM9DS1_Driver.c **** 			tempRegValue |= (0x3 << 3);
 5902              		.loc 1 1353 0
 5903 0044 FB7B     		ldrb	r3, [r7, #15]
 5904 0046 43F01803 		orr	r3, r3, #24
 5905 004a FB73     		strb	r3, [r7, #15]
1354:../LSM9DS1_Driver.c **** 			settings.accel.scale = 8;
 5906              		.loc 1 1354 0
 5907 004c 40F20003 		movw	r3, #:lower16:settings
 5908 0050 C0F20003 		movt	r3, #:upper16:settings
 5909 0054 4FF00802 		mov	r2, #8
 5910 0058 DA75     		strb	r2, [r3, #23]
1355:../LSM9DS1_Driver.c **** 			break;
 5911              		.loc 1 1355 0
 5912 005a 13E0     		b	.L235
 5913              	.L234:
1356:../LSM9DS1_Driver.c **** 		case 16:
1357:../LSM9DS1_Driver.c **** 			tempRegValue |= (0x1 << 3);
 5914              		.loc 1 1357 0
 5915 005c FB7B     		ldrb	r3, [r7, #15]
 5916 005e 43F00803 		orr	r3, r3, #8
 5917 0062 FB73     		strb	r3, [r7, #15]
1358:../LSM9DS1_Driver.c **** 			settings.accel.scale = 16;
 5918              		.loc 1 1358 0
 5919 0064 40F20003 		movw	r3, #:lower16:settings
 5920 0068 C0F20003 		movt	r3, #:upper16:settings
 5921 006c 4FF01002 		mov	r2, #16
 5922 0070 DA75     		strb	r2, [r3, #23]
1359:../LSM9DS1_Driver.c **** 			break;
 5923              		.loc 1 1359 0
 5924 0072 07E0     		b	.L235
 5925              	.L236:
1360:../LSM9DS1_Driver.c **** 		default: // Otherwise it'll be set to 2g (0x0 << 3)
1361:../LSM9DS1_Driver.c **** 			settings.accel.scale = 2;
 5926              		.loc 1 1361 0
 5927 0074 40F20003 		movw	r3, #:lower16:settings
 5928 0078 C0F20003 		movt	r3, #:upper16:settings
 5929 007c 4FF00202 		mov	r2, #2
 5930 0080 DA75     		strb	r2, [r3, #23]
1362:../LSM9DS1_Driver.c **** 			break;
 5931              		.loc 1 1362 0
 5932 0082 00BF     		nop
 5933              	.L235:
1363:../LSM9DS1_Driver.c **** 	}
1364:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG6_XL, tempRegValue);
 5934              		.loc 1 1364 0
 5935 0084 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 5936 0086 4FF02000 		mov	r0, #32
 5937 008a 1946     		mov	r1, r3
 5938 008c FFF7FEFF 		bl	xgWriteByte
1365:../LSM9DS1_Driver.c **** 
1366:../LSM9DS1_Driver.c **** 	// Then calculate a new aRes, which relies on aScale being set correctly:
1367:../LSM9DS1_Driver.c **** 	calcaRes();
 5939              		.loc 1 1367 0
 5940 0090 FFF7FEFF 		bl	calcaRes
1368:../LSM9DS1_Driver.c **** }
 5941              		.loc 1 1368 0
 5942 0094 07F11007 		add	r7, r7, #16
 5943 0098 BD46     		mov	sp, r7
 5944 009a 80BD     		pop	{r7, pc}
 5945              		.cfi_endproc
 5946              	.LFE176:
 5948              		.section	.text.setMagScale,"ax",%progbits
 5949              		.align	2
 5950              		.global	setMagScale
 5951              		.thumb
 5952              		.thumb_func
 5954              	setMagScale:
 5955              	.LFB177:
1369:../LSM9DS1_Driver.c **** 
1370:../LSM9DS1_Driver.c **** void setMagScale(uint8_t mScl)
1371:../LSM9DS1_Driver.c **** {
 5956              		.loc 1 1371 0
 5957              		.cfi_startproc
 5958              		@ args = 0, pretend = 0, frame = 16
 5959              		@ frame_needed = 1, uses_anonymous_args = 0
 5960 0000 80B5     		push	{r7, lr}
 5961              	.LCFI169:
 5962              		.cfi_def_cfa_offset 8
 5963              		.cfi_offset 7, -8
 5964              		.cfi_offset 14, -4
 5965 0002 84B0     		sub	sp, sp, #16
 5966              	.LCFI170:
 5967              		.cfi_def_cfa_offset 24
 5968 0004 00AF     		add	r7, sp, #0
 5969              	.LCFI171:
 5970              		.cfi_def_cfa_register 7
 5971 0006 0346     		mov	r3, r0
 5972 0008 FB71     		strb	r3, [r7, #7]
1372:../LSM9DS1_Driver.c **** 	// We need to preserve the other bytes in CTRL_REG6_XM. So, first read it:
1373:../LSM9DS1_Driver.c **** 	uint8_t temp = mReadByte(CTRL_REG2_M);
 5973              		.loc 1 1373 0
 5974 000a 4FF02100 		mov	r0, #33
 5975 000e FFF7FEFF 		bl	mReadByte
 5976 0012 0346     		mov	r3, r0
 5977 0014 FB73     		strb	r3, [r7, #15]
1374:../LSM9DS1_Driver.c **** 	// Then mask out the mag scale bits:
1375:../LSM9DS1_Driver.c **** 	temp &= 0xFF^(0x3 << 5);
 5978              		.loc 1 1375 0
 5979 0016 FB7B     		ldrb	r3, [r7, #15]
 5980 0018 23F06003 		bic	r3, r3, #96
 5981 001c FB73     		strb	r3, [r7, #15]
1376:../LSM9DS1_Driver.c **** 
1377:../LSM9DS1_Driver.c **** 	switch (mScl)
 5982              		.loc 1 1377 0
 5983 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5984 0020 0C2B     		cmp	r3, #12
 5985 0022 10D0     		beq	.L240
 5986 0024 102B     		cmp	r3, #16
 5987 0026 1BD0     		beq	.L241
 5988 0028 082B     		cmp	r3, #8
 5989 002a 26D1     		bne	.L243
 5990              	.L239:
1378:../LSM9DS1_Driver.c **** 	{
1379:../LSM9DS1_Driver.c **** 		case 8:
1380:../LSM9DS1_Driver.c **** 			temp |= (0x1 << 5);
 5991              		.loc 1 1380 0
 5992 002c FB7B     		ldrb	r3, [r7, #15]
 5993 002e 43F02003 		orr	r3, r3, #32
 5994 0032 FB73     		strb	r3, [r7, #15]
1381:../LSM9DS1_Driver.c **** 			settings.mag.scale = 8;
 5995              		.loc 1 1381 0
 5996 0034 40F20003 		movw	r3, #:lower16:settings
 5997 0038 C0F20003 		movt	r3, #:upper16:settings
 5998 003c 4FF00802 		mov	r2, #8
 5999 0040 83F82020 		strb	r2, [r3, #32]
1382:../LSM9DS1_Driver.c **** 			break;
 6000              		.loc 1 1382 0
 6001 0044 22E0     		b	.L242
 6002              	.L240:
1383:../LSM9DS1_Driver.c **** 		case 12:
1384:../LSM9DS1_Driver.c **** 			temp |= (0x2 << 5);
 6003              		.loc 1 1384 0
 6004 0046 FB7B     		ldrb	r3, [r7, #15]
 6005 0048 43F04003 		orr	r3, r3, #64
 6006 004c FB73     		strb	r3, [r7, #15]
1385:../LSM9DS1_Driver.c **** 			settings.mag.scale = 12;
 6007              		.loc 1 1385 0
 6008 004e 40F20003 		movw	r3, #:lower16:settings
 6009 0052 C0F20003 		movt	r3, #:upper16:settings
 6010 0056 4FF00C02 		mov	r2, #12
 6011 005a 83F82020 		strb	r2, [r3, #32]
1386:../LSM9DS1_Driver.c **** 			break;
 6012              		.loc 1 1386 0
 6013 005e 15E0     		b	.L242
 6014              	.L241:
1387:../LSM9DS1_Driver.c **** 		case 16:
1388:../LSM9DS1_Driver.c **** 			temp |= (0x3 << 5);
 6015              		.loc 1 1388 0
 6016 0060 FB7B     		ldrb	r3, [r7, #15]
 6017 0062 43F06003 		orr	r3, r3, #96
 6018 0066 FB73     		strb	r3, [r7, #15]
1389:../LSM9DS1_Driver.c **** 			settings.mag.scale = 16;
 6019              		.loc 1 1389 0
 6020 0068 40F20003 		movw	r3, #:lower16:settings
 6021 006c C0F20003 		movt	r3, #:upper16:settings
 6022 0070 4FF01002 		mov	r2, #16
 6023 0074 83F82020 		strb	r2, [r3, #32]
1390:../LSM9DS1_Driver.c **** 			break;
 6024              		.loc 1 1390 0
 6025 0078 08E0     		b	.L242
 6026              	.L243:
1391:../LSM9DS1_Driver.c **** 		default: // Otherwise we'll default to 4 gauss (00)
1392:../LSM9DS1_Driver.c **** 			settings.mag.scale = 4;
 6027              		.loc 1 1392 0
 6028 007a 40F20003 		movw	r3, #:lower16:settings
 6029 007e C0F20003 		movt	r3, #:upper16:settings
 6030 0082 4FF00402 		mov	r2, #4
 6031 0086 83F82020 		strb	r2, [r3, #32]
1393:../LSM9DS1_Driver.c **** 			break;
 6032              		.loc 1 1393 0
 6033 008a 00BF     		nop
 6034              	.L242:
1394:../LSM9DS1_Driver.c **** 	}
1395:../LSM9DS1_Driver.c **** 
1396:../LSM9DS1_Driver.c **** 	// And write the new register value back into CTRL_REG6_XM:
1397:../LSM9DS1_Driver.c **** 	mWriteByte(CTRL_REG2_M, temp);
 6035              		.loc 1 1397 0
 6036 008c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6037 008e 4FF02100 		mov	r0, #33
 6038 0092 1946     		mov	r1, r3
 6039 0094 FFF7FEFF 		bl	mWriteByte
1398:../LSM9DS1_Driver.c **** 
1399:../LSM9DS1_Driver.c **** 	// We've updated the sensor, but we also need to update our class variables
1400:../LSM9DS1_Driver.c **** 	// First update mScale:
1401:../LSM9DS1_Driver.c **** 	//mScale = mScl;
1402:../LSM9DS1_Driver.c **** 	// Then calculate a new mRes, which relies on mScale being set correctly:
1403:../LSM9DS1_Driver.c **** 	calcmRes();
 6040              		.loc 1 1403 0
 6041 0098 FFF7FEFF 		bl	calcmRes
1404:../LSM9DS1_Driver.c **** }
 6042              		.loc 1 1404 0
 6043 009c 07F11007 		add	r7, r7, #16
 6044 00a0 BD46     		mov	sp, r7
 6045 00a2 80BD     		pop	{r7, pc}
 6046              		.cfi_endproc
 6047              	.LFE177:
 6049              		.section	.text.setGyroODR,"ax",%progbits
 6050              		.align	2
 6051              		.global	setGyroODR
 6052              		.thumb
 6053              		.thumb_func
 6055              	setGyroODR:
 6056              	.LFB178:
1405:../LSM9DS1_Driver.c **** 
1406:../LSM9DS1_Driver.c **** void setGyroODR(uint8_t gRate)
1407:../LSM9DS1_Driver.c **** {
 6057              		.loc 1 1407 0
 6058              		.cfi_startproc
 6059              		@ args = 0, pretend = 0, frame = 16
 6060              		@ frame_needed = 1, uses_anonymous_args = 0
 6061 0000 80B5     		push	{r7, lr}
 6062              	.LCFI172:
 6063              		.cfi_def_cfa_offset 8
 6064              		.cfi_offset 7, -8
 6065              		.cfi_offset 14, -4
 6066 0002 84B0     		sub	sp, sp, #16
 6067              	.LCFI173:
 6068              		.cfi_def_cfa_offset 24
 6069 0004 00AF     		add	r7, sp, #0
 6070              	.LCFI174:
 6071              		.cfi_def_cfa_register 7
 6072 0006 0346     		mov	r3, r0
 6073 0008 FB71     		strb	r3, [r7, #7]
1408:../LSM9DS1_Driver.c **** 	// Only do this if gRate is not 0 (which would disable the gyro)
1409:../LSM9DS1_Driver.c **** 	if ((gRate & 0x07) != 0)
 6074              		.loc 1 1409 0
 6075 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6076 000c 03F00703 		and	r3, r3, #7
 6077 0010 002B     		cmp	r3, #0
 6078 0012 20D0     		beq	.L244
 6079              	.LBB7:
1410:../LSM9DS1_Driver.c **** 	{
1411:../LSM9DS1_Driver.c **** 		// We need to preserve the other bytes in CTRL_REG1_G. So, first read it:
1412:../LSM9DS1_Driver.c **** 		uint8_t temp = xgReadByte(CTRL_REG1_G);
 6080              		.loc 1 1412 0
 6081 0014 4FF01000 		mov	r0, #16
 6082 0018 FFF7FEFF 		bl	xgReadByte
 6083 001c 0346     		mov	r3, r0
 6084 001e FB73     		strb	r3, [r7, #15]
1413:../LSM9DS1_Driver.c **** 		// Then mask out the gyro ODR bits:
1414:../LSM9DS1_Driver.c **** 		temp &= 0xFF^(0x7 << 5);
 6085              		.loc 1 1414 0
 6086 0020 FB7B     		ldrb	r3, [r7, #15]
 6087 0022 03F01F03 		and	r3, r3, #31
 6088 0026 FB73     		strb	r3, [r7, #15]
1415:../LSM9DS1_Driver.c **** 		temp |= (gRate & 0x07) << 5;
 6089              		.loc 1 1415 0
 6090 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6091 002a 4FEA4313 		lsl	r3, r3, #5
 6092 002e DAB2     		uxtb	r2, r3
 6093 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6094 0032 1343     		orrs	r3, r3, r2
 6095 0034 DBB2     		uxtb	r3, r3
 6096 0036 FB73     		strb	r3, [r7, #15]
1416:../LSM9DS1_Driver.c **** 		// Update our settings struct
1417:../LSM9DS1_Driver.c **** 		settings.gyro.sampleRate = gRate & 0x07;
 6097              		.loc 1 1417 0
 6098 0038 FB79     		ldrb	r3, [r7, #7]
 6099 003a 03F00703 		and	r3, r3, #7
 6100 003e DAB2     		uxtb	r2, r3
 6101 0040 40F20003 		movw	r3, #:lower16:settings
 6102 0044 C0F20003 		movt	r3, #:upper16:settings
 6103 0048 1A72     		strb	r2, [r3, #8]
1418:../LSM9DS1_Driver.c **** 		// And write the new register value back into CTRL_REG1_G:
1419:../LSM9DS1_Driver.c **** 		xgWriteByte(CTRL_REG1_G, temp);
 6104              		.loc 1 1419 0
 6105 004a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6106 004c 4FF01000 		mov	r0, #16
 6107 0050 1946     		mov	r1, r3
 6108 0052 FFF7FEFF 		bl	xgWriteByte
 6109              	.L244:
 6110              	.LBE7:
1420:../LSM9DS1_Driver.c **** 	}
1421:../LSM9DS1_Driver.c **** }
 6111              		.loc 1 1421 0
 6112 0056 07F11007 		add	r7, r7, #16
 6113 005a BD46     		mov	sp, r7
 6114 005c 80BD     		pop	{r7, pc}
 6115              		.cfi_endproc
 6116              	.LFE178:
 6118 005e 00BF     		.section	.text.setAccelODR,"ax",%progbits
 6119              		.align	2
 6120              		.global	setAccelODR
 6121              		.thumb
 6122              		.thumb_func
 6124              	setAccelODR:
 6125              	.LFB179:
1422:../LSM9DS1_Driver.c **** 
1423:../LSM9DS1_Driver.c **** void setAccelODR(uint8_t aRate)
1424:../LSM9DS1_Driver.c **** {
 6126              		.loc 1 1424 0
 6127              		.cfi_startproc
 6128              		@ args = 0, pretend = 0, frame = 16
 6129              		@ frame_needed = 1, uses_anonymous_args = 0
 6130 0000 80B5     		push	{r7, lr}
 6131              	.LCFI175:
 6132              		.cfi_def_cfa_offset 8
 6133              		.cfi_offset 7, -8
 6134              		.cfi_offset 14, -4
 6135 0002 84B0     		sub	sp, sp, #16
 6136              	.LCFI176:
 6137              		.cfi_def_cfa_offset 24
 6138 0004 00AF     		add	r7, sp, #0
 6139              	.LCFI177:
 6140              		.cfi_def_cfa_register 7
 6141 0006 0346     		mov	r3, r0
 6142 0008 FB71     		strb	r3, [r7, #7]
1425:../LSM9DS1_Driver.c **** 	// Only do this if aRate is not 0 (which would disable the accel)
1426:../LSM9DS1_Driver.c **** 	if ((aRate & 0x07) != 0)
 6143              		.loc 1 1426 0
 6144 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6145 000c 03F00703 		and	r3, r3, #7
 6146 0010 002B     		cmp	r3, #0
 6147 0012 20D0     		beq	.L246
 6148              	.LBB8:
1427:../LSM9DS1_Driver.c **** 	{
1428:../LSM9DS1_Driver.c **** 		// We need to preserve the other bytes in CTRL_REG1_XM. So, first read it:
1429:../LSM9DS1_Driver.c **** 		uint8_t temp = xgReadByte(CTRL_REG6_XL);
 6149              		.loc 1 1429 0
 6150 0014 4FF02000 		mov	r0, #32
 6151 0018 FFF7FEFF 		bl	xgReadByte
 6152 001c 0346     		mov	r3, r0
 6153 001e FB73     		strb	r3, [r7, #15]
1430:../LSM9DS1_Driver.c **** 		// Then mask out the accel ODR bits:
1431:../LSM9DS1_Driver.c **** 		temp &= 0x1F;
 6154              		.loc 1 1431 0
 6155 0020 FB7B     		ldrb	r3, [r7, #15]
 6156 0022 03F01F03 		and	r3, r3, #31
 6157 0026 FB73     		strb	r3, [r7, #15]
1432:../LSM9DS1_Driver.c **** 		// Then shift in our new ODR bits:
1433:../LSM9DS1_Driver.c **** 		temp |= ((aRate & 0x07) << 5);
 6158              		.loc 1 1433 0
 6159 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6160 002a 4FEA4313 		lsl	r3, r3, #5
 6161 002e DAB2     		uxtb	r2, r3
 6162 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6163 0032 1343     		orrs	r3, r3, r2
 6164 0034 DBB2     		uxtb	r3, r3
 6165 0036 FB73     		strb	r3, [r7, #15]
1434:../LSM9DS1_Driver.c **** 		settings.accel.sampleRate = aRate & 0x07;
 6166              		.loc 1 1434 0
 6167 0038 FB79     		ldrb	r3, [r7, #7]
 6168 003a 03F00703 		and	r3, r3, #7
 6169 003e DAB2     		uxtb	r2, r3
 6170 0040 40F20003 		movw	r3, #:lower16:settings
 6171 0044 C0F20003 		movt	r3, #:upper16:settings
 6172 0048 1A76     		strb	r2, [r3, #24]
1435:../LSM9DS1_Driver.c **** 		// And write the new register value back into CTRL_REG1_XM:
1436:../LSM9DS1_Driver.c **** 		xgWriteByte(CTRL_REG6_XL, temp);
 6173              		.loc 1 1436 0
 6174 004a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6175 004c 4FF02000 		mov	r0, #32
 6176 0050 1946     		mov	r1, r3
 6177 0052 FFF7FEFF 		bl	xgWriteByte
 6178              	.L246:
 6179              	.LBE8:
1437:../LSM9DS1_Driver.c **** 	}
1438:../LSM9DS1_Driver.c **** }
 6180              		.loc 1 1438 0
 6181 0056 07F11007 		add	r7, r7, #16
 6182 005a BD46     		mov	sp, r7
 6183 005c 80BD     		pop	{r7, pc}
 6184              		.cfi_endproc
 6185              	.LFE179:
 6187 005e 00BF     		.section	.text.setMagODR,"ax",%progbits
 6188              		.align	2
 6189              		.global	setMagODR
 6190              		.thumb
 6191              		.thumb_func
 6193              	setMagODR:
 6194              	.LFB180:
1439:../LSM9DS1_Driver.c **** 
1440:../LSM9DS1_Driver.c **** void setMagODR(uint8_t mRate)
1441:../LSM9DS1_Driver.c **** {
 6195              		.loc 1 1441 0
 6196              		.cfi_startproc
 6197              		@ args = 0, pretend = 0, frame = 16
 6198              		@ frame_needed = 1, uses_anonymous_args = 0
 6199 0000 80B5     		push	{r7, lr}
 6200              	.LCFI178:
 6201              		.cfi_def_cfa_offset 8
 6202              		.cfi_offset 7, -8
 6203              		.cfi_offset 14, -4
 6204 0002 84B0     		sub	sp, sp, #16
 6205              	.LCFI179:
 6206              		.cfi_def_cfa_offset 24
 6207 0004 00AF     		add	r7, sp, #0
 6208              	.LCFI180:
 6209              		.cfi_def_cfa_register 7
 6210 0006 0346     		mov	r3, r0
 6211 0008 FB71     		strb	r3, [r7, #7]
1442:../LSM9DS1_Driver.c **** 	// We need to preserve the other bytes in CTRL_REG5_XM. So, first read it:
1443:../LSM9DS1_Driver.c **** 	uint8_t temp = mReadByte(CTRL_REG1_M);
 6212              		.loc 1 1443 0
 6213 000a 4FF02000 		mov	r0, #32
 6214 000e FFF7FEFF 		bl	mReadByte
 6215 0012 0346     		mov	r3, r0
 6216 0014 FB73     		strb	r3, [r7, #15]
1444:../LSM9DS1_Driver.c **** 	// Then mask out the mag ODR bits:
1445:../LSM9DS1_Driver.c **** 	temp &= 0xFF^(0x7 << 2);
 6217              		.loc 1 1445 0
 6218 0016 FB7B     		ldrb	r3, [r7, #15]
 6219 0018 23F01C03 		bic	r3, r3, #28
 6220 001c FB73     		strb	r3, [r7, #15]
1446:../LSM9DS1_Driver.c **** 	// Then shift in our new ODR bits:
1447:../LSM9DS1_Driver.c **** 	temp |= ((mRate & 0x07) << 2);
 6221              		.loc 1 1447 0
 6222 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6223 0020 03F00703 		and	r3, r3, #7
 6224 0024 4FEA8303 		lsl	r3, r3, #2
 6225 0028 DAB2     		uxtb	r2, r3
 6226 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6227 002c 1343     		orrs	r3, r3, r2
 6228 002e DBB2     		uxtb	r3, r3
 6229 0030 FB73     		strb	r3, [r7, #15]
1448:../LSM9DS1_Driver.c **** 	settings.mag.sampleRate = mRate & 0x07;
 6230              		.loc 1 1448 0
 6231 0032 FB79     		ldrb	r3, [r7, #7]
 6232 0034 03F00703 		and	r3, r3, #7
 6233 0038 DAB2     		uxtb	r2, r3
 6234 003a 40F20003 		movw	r3, #:lower16:settings
 6235 003e C0F20003 		movt	r3, #:upper16:settings
 6236 0042 83F82120 		strb	r2, [r3, #33]
1449:../LSM9DS1_Driver.c **** 	// And write the new register value back into CTRL_REG5_XM:
1450:../LSM9DS1_Driver.c **** 	mWriteByte(CTRL_REG1_M, temp);
 6237              		.loc 1 1450 0
 6238 0046 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6239 0048 4FF02000 		mov	r0, #32
 6240 004c 1946     		mov	r1, r3
 6241 004e FFF7FEFF 		bl	mWriteByte
1451:../LSM9DS1_Driver.c **** }
 6242              		.loc 1 1451 0
 6243 0052 07F11007 		add	r7, r7, #16
 6244 0056 BD46     		mov	sp, r7
 6245 0058 80BD     		pop	{r7, pc}
 6246              		.cfi_endproc
 6247              	.LFE180:
 6249 005a 00BF     		.section	.text.configInt,"ax",%progbits
 6250              		.align	2
 6251              		.global	configInt
 6252              		.thumb
 6253              		.thumb_func
 6255              	configInt:
 6256              	.LFB181:
1452:../LSM9DS1_Driver.c **** 
1453:../LSM9DS1_Driver.c **** void configInt(interrupt_select interupt, uint8_t generator, h_lactive activeLow, pp_od pushPull)
1454:../LSM9DS1_Driver.c **** {
 6257              		.loc 1 1454 0
 6258              		.cfi_startproc
 6259              		@ args = 0, pretend = 0, frame = 16
 6260              		@ frame_needed = 1, uses_anonymous_args = 0
 6261 0000 80B5     		push	{r7, lr}
 6262              	.LCFI181:
 6263              		.cfi_def_cfa_offset 8
 6264              		.cfi_offset 7, -8
 6265              		.cfi_offset 14, -4
 6266 0002 84B0     		sub	sp, sp, #16
 6267              	.LCFI182:
 6268              		.cfi_def_cfa_offset 24
 6269 0004 00AF     		add	r7, sp, #0
 6270              	.LCFI183:
 6271              		.cfi_def_cfa_register 7
 6272 0006 F871     		strb	r0, [r7, #7]
 6273 0008 B971     		strb	r1, [r7, #6]
 6274 000a 7A71     		strb	r2, [r7, #5]
 6275 000c 3B71     		strb	r3, [r7, #4]
1455:../LSM9DS1_Driver.c **** 	// Write to INT1_CTRL or INT2_CTRL. [interupt] should already be one of
1456:../LSM9DS1_Driver.c **** 	// those two values.
1457:../LSM9DS1_Driver.c **** 	// [generator] should be an OR'd list of values from the interrupt_generators enum
1458:../LSM9DS1_Driver.c **** 	xgWriteByte(interupt, generator);
 6276              		.loc 1 1458 0
 6277 000e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6278 0010 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 6279 0012 1046     		mov	r0, r2
 6280 0014 1946     		mov	r1, r3
 6281 0016 FFF7FEFF 		bl	xgWriteByte
1459:../LSM9DS1_Driver.c **** 
1460:../LSM9DS1_Driver.c **** 	// Configure CTRL_REG8
1461:../LSM9DS1_Driver.c **** 	uint8_t temp;
1462:../LSM9DS1_Driver.c **** 	temp = xgReadByte(CTRL_REG8);
 6282              		.loc 1 1462 0
 6283 001a 4FF02200 		mov	r0, #34
 6284 001e FFF7FEFF 		bl	xgReadByte
 6285 0022 0346     		mov	r3, r0
 6286 0024 FB73     		strb	r3, [r7, #15]
1463:../LSM9DS1_Driver.c **** 
1464:../LSM9DS1_Driver.c **** 	if (activeLow) temp |= (1<<5);
 6287              		.loc 1 1464 0
 6288 0026 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 6289 0028 002B     		cmp	r3, #0
 6290 002a 04D0     		beq	.L250
 6291              		.loc 1 1464 0 is_stmt 0 discriminator 1
 6292 002c FB7B     		ldrb	r3, [r7, #15]
 6293 002e 43F02003 		orr	r3, r3, #32
 6294 0032 FB73     		strb	r3, [r7, #15]
 6295 0034 03E0     		b	.L251
 6296              	.L250:
1465:../LSM9DS1_Driver.c **** 	else temp &= ~(1<<5);
 6297              		.loc 1 1465 0 is_stmt 1
 6298 0036 FB7B     		ldrb	r3, [r7, #15]
 6299 0038 23F02003 		bic	r3, r3, #32
 6300 003c FB73     		strb	r3, [r7, #15]
 6301              	.L251:
1466:../LSM9DS1_Driver.c **** 
1467:../LSM9DS1_Driver.c **** 	if (pushPull) temp &= ~(1<<4);
 6302              		.loc 1 1467 0
 6303 003e 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 6304 0040 002B     		cmp	r3, #0
 6305 0042 04D0     		beq	.L252
 6306              		.loc 1 1467 0 is_stmt 0 discriminator 1
 6307 0044 FB7B     		ldrb	r3, [r7, #15]
 6308 0046 23F01003 		bic	r3, r3, #16
 6309 004a FB73     		strb	r3, [r7, #15]
 6310 004c 03E0     		b	.L253
 6311              	.L252:
1468:../LSM9DS1_Driver.c **** 	else temp |= (1<<4);
 6312              		.loc 1 1468 0 is_stmt 1
 6313 004e FB7B     		ldrb	r3, [r7, #15]
 6314 0050 43F01003 		orr	r3, r3, #16
 6315 0054 FB73     		strb	r3, [r7, #15]
 6316              	.L253:
1469:../LSM9DS1_Driver.c **** 
1470:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG8, temp);
 6317              		.loc 1 1470 0
 6318 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6319 0058 4FF02200 		mov	r0, #34
 6320 005c 1946     		mov	r1, r3
 6321 005e FFF7FEFF 		bl	xgWriteByte
1471:../LSM9DS1_Driver.c **** }
 6322              		.loc 1 1471 0
 6323 0062 07F11007 		add	r7, r7, #16
 6324 0066 BD46     		mov	sp, r7
 6325 0068 80BD     		pop	{r7, pc}
 6326              		.cfi_endproc
 6327              	.LFE181:
 6329 006a 00BF     		.section	.text.configInactivity,"ax",%progbits
 6330              		.align	2
 6331              		.global	configInactivity
 6332              		.thumb
 6333              		.thumb_func
 6335              	configInactivity:
 6336              	.LFB182:
1472:../LSM9DS1_Driver.c **** 
1473:../LSM9DS1_Driver.c **** 
1474:../LSM9DS1_Driver.c **** void configInactivity(uint8_t duration, uint8_t threshold, bool sleepOn)
1475:../LSM9DS1_Driver.c **** {
 6337              		.loc 1 1475 0
 6338              		.cfi_startproc
 6339              		@ args = 0, pretend = 0, frame = 16
 6340              		@ frame_needed = 1, uses_anonymous_args = 0
 6341 0000 80B5     		push	{r7, lr}
 6342              	.LCFI184:
 6343              		.cfi_def_cfa_offset 8
 6344              		.cfi_offset 7, -8
 6345              		.cfi_offset 14, -4
 6346 0002 84B0     		sub	sp, sp, #16
 6347              	.LCFI185:
 6348              		.cfi_def_cfa_offset 24
 6349 0004 00AF     		add	r7, sp, #0
 6350              	.LCFI186:
 6351              		.cfi_def_cfa_register 7
 6352 0006 1346     		mov	r3, r2
 6353 0008 0246     		mov	r2, r0
 6354 000a FA71     		strb	r2, [r7, #7]
 6355 000c 0A46     		mov	r2, r1
 6356 000e BA71     		strb	r2, [r7, #6]
 6357 0010 7B71     		strb	r3, [r7, #5]
1476:../LSM9DS1_Driver.c **** 	uint8_t temp = 0;
 6358              		.loc 1 1476 0
 6359 0012 4FF00003 		mov	r3, #0
 6360 0016 FB73     		strb	r3, [r7, #15]
1477:../LSM9DS1_Driver.c **** 
1478:../LSM9DS1_Driver.c **** 	temp = threshold & 0x7F;
 6361              		.loc 1 1478 0
 6362 0018 BB79     		ldrb	r3, [r7, #6]
 6363 001a 03F07F03 		and	r3, r3, #127
 6364 001e FB73     		strb	r3, [r7, #15]
1479:../LSM9DS1_Driver.c **** 	if (sleepOn) temp |= (1<<7);
 6365              		.loc 1 1479 0
 6366 0020 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 6367 0022 002B     		cmp	r3, #0
 6368 0024 03D0     		beq	.L255
 6369              		.loc 1 1479 0 is_stmt 0 discriminator 1
 6370 0026 FB7B     		ldrb	r3, [r7, #15]
 6371 0028 63F07F03 		orn	r3, r3, #127
 6372 002c FB73     		strb	r3, [r7, #15]
 6373              	.L255:
1480:../LSM9DS1_Driver.c **** 	xgWriteByte(ACT_THS, temp);
 6374              		.loc 1 1480 0 is_stmt 1
 6375 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6376 0030 4FF00400 		mov	r0, #4
 6377 0034 1946     		mov	r1, r3
 6378 0036 FFF7FEFF 		bl	xgWriteByte
1481:../LSM9DS1_Driver.c **** 
1482:../LSM9DS1_Driver.c **** 	xgWriteByte(ACT_DUR, duration);
 6379              		.loc 1 1482 0
 6380 003a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6381 003c 4FF00500 		mov	r0, #5
 6382 0040 1946     		mov	r1, r3
 6383 0042 FFF7FEFF 		bl	xgWriteByte
1483:../LSM9DS1_Driver.c **** }
 6384              		.loc 1 1483 0
 6385 0046 07F11007 		add	r7, r7, #16
 6386 004a BD46     		mov	sp, r7
 6387 004c 80BD     		pop	{r7, pc}
 6388              		.cfi_endproc
 6389              	.LFE182:
 6391 004e 00BF     		.section	.text.getInactivity,"ax",%progbits
 6392              		.align	2
 6393              		.global	getInactivity
 6394              		.thumb
 6395              		.thumb_func
 6397              	getInactivity:
 6398              	.LFB183:
1484:../LSM9DS1_Driver.c **** 
1485:../LSM9DS1_Driver.c **** 
1486:../LSM9DS1_Driver.c **** uint8_t getInactivity(void)
1487:../LSM9DS1_Driver.c **** {
 6399              		.loc 1 1487 0
 6400              		.cfi_startproc
 6401              		@ args = 0, pretend = 0, frame = 8
 6402              		@ frame_needed = 1, uses_anonymous_args = 0
 6403 0000 80B5     		push	{r7, lr}
 6404              	.LCFI187:
 6405              		.cfi_def_cfa_offset 8
 6406              		.cfi_offset 7, -8
 6407              		.cfi_offset 14, -4
 6408 0002 82B0     		sub	sp, sp, #8
 6409              	.LCFI188:
 6410              		.cfi_def_cfa_offset 16
 6411 0004 00AF     		add	r7, sp, #0
 6412              	.LCFI189:
 6413              		.cfi_def_cfa_register 7
1488:../LSM9DS1_Driver.c **** 	uint8_t temp = xgReadByte(STATUS_REG_0);
 6414              		.loc 1 1488 0
 6415 0006 4FF01700 		mov	r0, #23
 6416 000a FFF7FEFF 		bl	xgReadByte
 6417 000e 0346     		mov	r3, r0
 6418 0010 FB71     		strb	r3, [r7, #7]
1489:../LSM9DS1_Driver.c **** 	temp &= (0x10);
 6419              		.loc 1 1489 0
 6420 0012 FB79     		ldrb	r3, [r7, #7]
 6421 0014 03F01003 		and	r3, r3, #16
 6422 0018 FB71     		strb	r3, [r7, #7]
1490:../LSM9DS1_Driver.c **** 	return temp;
 6423              		.loc 1 1490 0
 6424 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1491:../LSM9DS1_Driver.c **** }
 6425              		.loc 1 1491 0
 6426 001c 1846     		mov	r0, r3
 6427 001e 07F10807 		add	r7, r7, #8
 6428 0022 BD46     		mov	sp, r7
 6429 0024 80BD     		pop	{r7, pc}
 6430              		.cfi_endproc
 6431              	.LFE183:
 6433 0026 00BF     		.section	.text.configAccelInt,"ax",%progbits
 6434              		.align	2
 6435              		.global	configAccelInt
 6436              		.thumb
 6437              		.thumb_func
 6439              	configAccelInt:
 6440              	.LFB184:
1492:../LSM9DS1_Driver.c **** 
1493:../LSM9DS1_Driver.c **** void configAccelInt(uint8_t generator, bool andInterrupts)
1494:../LSM9DS1_Driver.c **** {
 6441              		.loc 1 1494 0
 6442              		.cfi_startproc
 6443              		@ args = 0, pretend = 0, frame = 16
 6444              		@ frame_needed = 1, uses_anonymous_args = 0
 6445 0000 80B5     		push	{r7, lr}
 6446              	.LCFI190:
 6447              		.cfi_def_cfa_offset 8
 6448              		.cfi_offset 7, -8
 6449              		.cfi_offset 14, -4
 6450 0002 84B0     		sub	sp, sp, #16
 6451              	.LCFI191:
 6452              		.cfi_def_cfa_offset 24
 6453 0004 00AF     		add	r7, sp, #0
 6454              	.LCFI192:
 6455              		.cfi_def_cfa_register 7
 6456 0006 0246     		mov	r2, r0
 6457 0008 0B46     		mov	r3, r1
 6458 000a FA71     		strb	r2, [r7, #7]
 6459 000c BB71     		strb	r3, [r7, #6]
1495:../LSM9DS1_Driver.c **** 	// Use variables from accel_interrupt_generator, OR'd together to create
1496:../LSM9DS1_Driver.c **** 	// the [generator]value.
1497:../LSM9DS1_Driver.c **** 	uint8_t temp = generator;
 6460              		.loc 1 1497 0
 6461 000e FB79     		ldrb	r3, [r7, #7]
 6462 0010 FB73     		strb	r3, [r7, #15]
1498:../LSM9DS1_Driver.c **** 	if (andInterrupts) temp |= 0x80;
 6463              		.loc 1 1498 0
 6464 0012 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 6465 0014 002B     		cmp	r3, #0
 6466 0016 03D0     		beq	.L259
 6467              		.loc 1 1498 0 is_stmt 0 discriminator 1
 6468 0018 FB7B     		ldrb	r3, [r7, #15]
 6469 001a 63F07F03 		orn	r3, r3, #127
 6470 001e FB73     		strb	r3, [r7, #15]
 6471              	.L259:
1499:../LSM9DS1_Driver.c **** 	xgWriteByte(INT_GEN_CFG_XL, temp);
 6472              		.loc 1 1499 0 is_stmt 1
 6473 0020 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6474 0022 4FF00600 		mov	r0, #6
 6475 0026 1946     		mov	r1, r3
 6476 0028 FFF7FEFF 		bl	xgWriteByte
1500:../LSM9DS1_Driver.c **** }
 6477              		.loc 1 1500 0
 6478 002c 07F11007 		add	r7, r7, #16
 6479 0030 BD46     		mov	sp, r7
 6480 0032 80BD     		pop	{r7, pc}
 6481              		.cfi_endproc
 6482              	.LFE184:
 6484              		.section	.text.configAccelThs,"ax",%progbits
 6485              		.align	2
 6486              		.global	configAccelThs
 6487              		.thumb
 6488              		.thumb_func
 6490              	configAccelThs:
 6491              	.LFB185:
1501:../LSM9DS1_Driver.c **** 
1502:../LSM9DS1_Driver.c **** void configAccelThs(uint8_t threshold, lsm9ds1_axis axis, uint8_t duration, bool wait)
1503:../LSM9DS1_Driver.c **** {
 6492              		.loc 1 1503 0
 6493              		.cfi_startproc
 6494              		@ args = 0, pretend = 0, frame = 16
 6495              		@ frame_needed = 1, uses_anonymous_args = 0
 6496 0000 80B5     		push	{r7, lr}
 6497              	.LCFI193:
 6498              		.cfi_def_cfa_offset 8
 6499              		.cfi_offset 7, -8
 6500              		.cfi_offset 14, -4
 6501 0002 84B0     		sub	sp, sp, #16
 6502              	.LCFI194:
 6503              		.cfi_def_cfa_offset 24
 6504 0004 00AF     		add	r7, sp, #0
 6505              	.LCFI195:
 6506              		.cfi_def_cfa_register 7
 6507 0006 F871     		strb	r0, [r7, #7]
 6508 0008 B971     		strb	r1, [r7, #6]
 6509 000a 7A71     		strb	r2, [r7, #5]
 6510 000c 3B71     		strb	r3, [r7, #4]
1504:../LSM9DS1_Driver.c **** 	// Write threshold value to INT_GEN_THS_?_XL.
1505:../LSM9DS1_Driver.c **** 	// axis will be 0, 1, or 2 (x, y, z respectively)
1506:../LSM9DS1_Driver.c **** 	xgWriteByte(INT_GEN_THS_X_XL + axis, threshold);
 6511              		.loc 1 1506 0
 6512 000e BB79     		ldrb	r3, [r7, #6]
 6513 0010 03F10703 		add	r3, r3, #7
 6514 0014 DAB2     		uxtb	r2, r3
 6515 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6516 0018 1046     		mov	r0, r2
 6517 001a 1946     		mov	r1, r3
 6518 001c FFF7FEFF 		bl	xgWriteByte
1507:../LSM9DS1_Driver.c **** 
1508:../LSM9DS1_Driver.c **** 	// Write duration and wait to INT_GEN_DUR_XL
1509:../LSM9DS1_Driver.c **** 	uint8_t temp;
1510:../LSM9DS1_Driver.c **** 	temp = (duration & 0x7F);
 6519              		.loc 1 1510 0
 6520 0020 7B79     		ldrb	r3, [r7, #5]
 6521 0022 03F07F03 		and	r3, r3, #127
 6522 0026 FB73     		strb	r3, [r7, #15]
1511:../LSM9DS1_Driver.c **** 	if (wait) temp |= 0x80;
 6523              		.loc 1 1511 0
 6524 0028 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 6525 002a 002B     		cmp	r3, #0
 6526 002c 03D0     		beq	.L261
 6527              		.loc 1 1511 0 is_stmt 0 discriminator 1
 6528 002e FB7B     		ldrb	r3, [r7, #15]
 6529 0030 63F07F03 		orn	r3, r3, #127
 6530 0034 FB73     		strb	r3, [r7, #15]
 6531              	.L261:
1512:../LSM9DS1_Driver.c **** 	xgWriteByte(INT_GEN_DUR_XL, temp);
 6532              		.loc 1 1512 0 is_stmt 1
 6533 0036 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6534 0038 4FF00A00 		mov	r0, #10
 6535 003c 1946     		mov	r1, r3
 6536 003e FFF7FEFF 		bl	xgWriteByte
1513:../LSM9DS1_Driver.c **** }
 6537              		.loc 1 1513 0
 6538 0042 07F11007 		add	r7, r7, #16
 6539 0046 BD46     		mov	sp, r7
 6540 0048 80BD     		pop	{r7, pc}
 6541              		.cfi_endproc
 6542              	.LFE185:
 6544 004a 00BF     		.section	.text.getAccelIntSrc,"ax",%progbits
 6545              		.align	2
 6546              		.global	getAccelIntSrc
 6547              		.thumb
 6548              		.thumb_func
 6550              	getAccelIntSrc:
 6551              	.LFB186:
1514:../LSM9DS1_Driver.c **** 
1515:../LSM9DS1_Driver.c **** uint8_t getAccelIntSrc(void)
1516:../LSM9DS1_Driver.c **** {
 6552              		.loc 1 1516 0
 6553              		.cfi_startproc
 6554              		@ args = 0, pretend = 0, frame = 8
 6555              		@ frame_needed = 1, uses_anonymous_args = 0
 6556 0000 80B5     		push	{r7, lr}
 6557              	.LCFI196:
 6558              		.cfi_def_cfa_offset 8
 6559              		.cfi_offset 7, -8
 6560              		.cfi_offset 14, -4
 6561 0002 82B0     		sub	sp, sp, #8
 6562              	.LCFI197:
 6563              		.cfi_def_cfa_offset 16
 6564 0004 00AF     		add	r7, sp, #0
 6565              	.LCFI198:
 6566              		.cfi_def_cfa_register 7
1517:../LSM9DS1_Driver.c **** 	uint8_t intSrc = xgReadByte(INT_GEN_SRC_XL);
 6567              		.loc 1 1517 0
 6568 0006 4FF02600 		mov	r0, #38
 6569 000a FFF7FEFF 		bl	xgReadByte
 6570 000e 0346     		mov	r3, r0
 6571 0010 FB71     		strb	r3, [r7, #7]
1518:../LSM9DS1_Driver.c **** 
1519:../LSM9DS1_Driver.c **** 	// Check if the IA_XL (interrupt active) bit is set
1520:../LSM9DS1_Driver.c **** 	if (intSrc & (1<<6))
 6572              		.loc 1 1520 0
 6573 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6574 0014 03F04003 		and	r3, r3, #64
 6575 0018 002B     		cmp	r3, #0
 6576 001a 04D0     		beq	.L263
1521:../LSM9DS1_Driver.c **** 	{
1522:../LSM9DS1_Driver.c **** 		return (intSrc & 0x3F);
 6577              		.loc 1 1522 0
 6578 001c FB79     		ldrb	r3, [r7, #7]
 6579 001e 03F03F03 		and	r3, r3, #63
 6580 0022 DBB2     		uxtb	r3, r3
 6581 0024 01E0     		b	.L264
 6582              	.L263:
1523:../LSM9DS1_Driver.c **** 	}
1524:../LSM9DS1_Driver.c **** 
1525:../LSM9DS1_Driver.c **** 	return 0;
 6583              		.loc 1 1525 0
 6584 0026 4FF00003 		mov	r3, #0
 6585              	.L264:
1526:../LSM9DS1_Driver.c **** }
 6586              		.loc 1 1526 0
 6587 002a 1846     		mov	r0, r3
 6588 002c 07F10807 		add	r7, r7, #8
 6589 0030 BD46     		mov	sp, r7
 6590 0032 80BD     		pop	{r7, pc}
 6591              		.cfi_endproc
 6592              	.LFE186:
 6594              		.section	.text.configGyroInt,"ax",%progbits
 6595              		.align	2
 6596              		.global	configGyroInt
 6597              		.thumb
 6598              		.thumb_func
 6600              	configGyroInt:
 6601              	.LFB187:
1527:../LSM9DS1_Driver.c **** 
1528:../LSM9DS1_Driver.c **** void configGyroInt(uint8_t generator, bool aoi, bool latch)
1529:../LSM9DS1_Driver.c **** {
 6602              		.loc 1 1529 0
 6603              		.cfi_startproc
 6604              		@ args = 0, pretend = 0, frame = 16
 6605              		@ frame_needed = 1, uses_anonymous_args = 0
 6606 0000 80B5     		push	{r7, lr}
 6607              	.LCFI199:
 6608              		.cfi_def_cfa_offset 8
 6609              		.cfi_offset 7, -8
 6610              		.cfi_offset 14, -4
 6611 0002 84B0     		sub	sp, sp, #16
 6612              	.LCFI200:
 6613              		.cfi_def_cfa_offset 24
 6614 0004 00AF     		add	r7, sp, #0
 6615              	.LCFI201:
 6616              		.cfi_def_cfa_register 7
 6617 0006 1346     		mov	r3, r2
 6618 0008 0246     		mov	r2, r0
 6619 000a FA71     		strb	r2, [r7, #7]
 6620 000c 0A46     		mov	r2, r1
 6621 000e BA71     		strb	r2, [r7, #6]
 6622 0010 7B71     		strb	r3, [r7, #5]
1530:../LSM9DS1_Driver.c **** 	// Use variables from accel_interrupt_generator, OR'd together to create
1531:../LSM9DS1_Driver.c **** 	// the [generator]value.
1532:../LSM9DS1_Driver.c **** 	uint8_t temp = generator;
 6623              		.loc 1 1532 0
 6624 0012 FB79     		ldrb	r3, [r7, #7]
 6625 0014 FB73     		strb	r3, [r7, #15]
1533:../LSM9DS1_Driver.c **** 	if (aoi) temp |= 0x80;
 6626              		.loc 1 1533 0
 6627 0016 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 6628 0018 002B     		cmp	r3, #0
 6629 001a 03D0     		beq	.L266
 6630              		.loc 1 1533 0 is_stmt 0 discriminator 1
 6631 001c FB7B     		ldrb	r3, [r7, #15]
 6632 001e 63F07F03 		orn	r3, r3, #127
 6633 0022 FB73     		strb	r3, [r7, #15]
 6634              	.L266:
1534:../LSM9DS1_Driver.c **** 	if (latch) temp |= 0x40;
 6635              		.loc 1 1534 0 is_stmt 1
 6636 0024 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 6637 0026 002B     		cmp	r3, #0
 6638 0028 03D0     		beq	.L267
 6639              		.loc 1 1534 0 is_stmt 0 discriminator 1
 6640 002a FB7B     		ldrb	r3, [r7, #15]
 6641 002c 43F04003 		orr	r3, r3, #64
 6642 0030 FB73     		strb	r3, [r7, #15]
 6643              	.L267:
1535:../LSM9DS1_Driver.c **** 	xgWriteByte(INT_GEN_CFG_G, temp);
 6644              		.loc 1 1535 0 is_stmt 1
 6645 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6646 0034 4FF03000 		mov	r0, #48
 6647 0038 1946     		mov	r1, r3
 6648 003a FFF7FEFF 		bl	xgWriteByte
1536:../LSM9DS1_Driver.c **** }
 6649              		.loc 1 1536 0
 6650 003e 07F11007 		add	r7, r7, #16
 6651 0042 BD46     		mov	sp, r7
 6652 0044 80BD     		pop	{r7, pc}
 6653              		.cfi_endproc
 6654              	.LFE187:
 6656 0046 00BF     		.section	.text.configGyroThs,"ax",%progbits
 6657              		.align	2
 6658              		.global	configGyroThs
 6659              		.thumb
 6660              		.thumb_func
 6662              	configGyroThs:
 6663              	.LFB188:
1537:../LSM9DS1_Driver.c **** 
1538:../LSM9DS1_Driver.c **** 
1539:../LSM9DS1_Driver.c **** void configGyroThs(int16_t threshold, lsm9ds1_axis axis, uint8_t duration, bool wait)
1540:../LSM9DS1_Driver.c **** {
 6664              		.loc 1 1540 0
 6665              		.cfi_startproc
 6666              		@ args = 0, pretend = 0, frame = 16
 6667              		@ frame_needed = 1, uses_anonymous_args = 0
 6668 0000 80B5     		push	{r7, lr}
 6669              	.LCFI202:
 6670              		.cfi_def_cfa_offset 8
 6671              		.cfi_offset 7, -8
 6672              		.cfi_offset 14, -4
 6673 0002 84B0     		sub	sp, sp, #16
 6674              	.LCFI203:
 6675              		.cfi_def_cfa_offset 24
 6676 0004 00AF     		add	r7, sp, #0
 6677              	.LCFI204:
 6678              		.cfi_def_cfa_register 7
 6679 0006 F880     		strh	r0, [r7, #6]	@ movhi
 6680 0008 7971     		strb	r1, [r7, #5]
 6681 000a 3A71     		strb	r2, [r7, #4]
 6682 000c FB70     		strb	r3, [r7, #3]
1541:../LSM9DS1_Driver.c **** 	uint8_t buffer[2];
1542:../LSM9DS1_Driver.c **** 	buffer[0] = (threshold & 0x7F00) >> 8;
 6683              		.loc 1 1542 0
 6684 000e FB88     		ldrh	r3, [r7, #6]
 6685 0010 03F4FE43 		and	r3, r3, #32512
 6686 0014 4FEA2323 		asr	r3, r3, #8
 6687 0018 DBB2     		uxtb	r3, r3
 6688 001a 3B73     		strb	r3, [r7, #12]
1543:../LSM9DS1_Driver.c **** 	buffer[1] = (threshold & 0x00FF);
 6689              		.loc 1 1543 0
 6690 001c FB88     		ldrh	r3, [r7, #6]	@ movhi
 6691 001e DBB2     		uxtb	r3, r3
 6692 0020 7B73     		strb	r3, [r7, #13]
1544:../LSM9DS1_Driver.c **** 	// Write threshold value to INT_GEN_THS_?H_G and  INT_GEN_THS_?L_G.
1545:../LSM9DS1_Driver.c **** 	// axis will be 0, 1, or 2 (x, y, z respectively)
1546:../LSM9DS1_Driver.c **** 	xgWriteByte(INT_GEN_THS_XH_G + (axis * 2), buffer[0]);
 6693              		.loc 1 1546 0
 6694 0022 7B79     		ldrb	r3, [r7, #5]
 6695 0024 4FEA4303 		lsl	r3, r3, #1
 6696 0028 DBB2     		uxtb	r3, r3
 6697 002a 03F13103 		add	r3, r3, #49
 6698 002e DAB2     		uxtb	r2, r3
 6699 0030 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 6700 0032 1046     		mov	r0, r2
 6701 0034 1946     		mov	r1, r3
 6702 0036 FFF7FEFF 		bl	xgWriteByte
1547:../LSM9DS1_Driver.c **** 	xgWriteByte(INT_GEN_THS_XH_G + 1 + (axis * 2), buffer[1]);
 6703              		.loc 1 1547 0
 6704 003a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 6705 003c 03F11903 		add	r3, r3, #25
 6706 0040 DBB2     		uxtb	r3, r3
 6707 0042 4FEA4303 		lsl	r3, r3, #1
 6708 0046 DAB2     		uxtb	r2, r3
 6709 0048 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 6710 004a 1046     		mov	r0, r2
 6711 004c 1946     		mov	r1, r3
 6712 004e FFF7FEFF 		bl	xgWriteByte
1548:../LSM9DS1_Driver.c **** 
1549:../LSM9DS1_Driver.c **** 	// Write duration and wait to INT_GEN_DUR_XL
1550:../LSM9DS1_Driver.c **** 	uint8_t temp;
1551:../LSM9DS1_Driver.c **** 	temp = (duration & 0x7F);
 6713              		.loc 1 1551 0
 6714 0052 3B79     		ldrb	r3, [r7, #4]
 6715 0054 03F07F03 		and	r3, r3, #127
 6716 0058 FB73     		strb	r3, [r7, #15]
1552:../LSM9DS1_Driver.c **** 	if (wait) temp |= 0x80;
 6717              		.loc 1 1552 0
 6718 005a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 6719 005c 002B     		cmp	r3, #0
 6720 005e 03D0     		beq	.L269
 6721              		.loc 1 1552 0 is_stmt 0 discriminator 1
 6722 0060 FB7B     		ldrb	r3, [r7, #15]
 6723 0062 63F07F03 		orn	r3, r3, #127
 6724 0066 FB73     		strb	r3, [r7, #15]
 6725              	.L269:
1553:../LSM9DS1_Driver.c **** 	xgWriteByte(INT_GEN_DUR_G, temp);
 6726              		.loc 1 1553 0 is_stmt 1
 6727 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6728 006a 4FF03700 		mov	r0, #55
 6729 006e 1946     		mov	r1, r3
 6730 0070 FFF7FEFF 		bl	xgWriteByte
1554:../LSM9DS1_Driver.c **** }
 6731              		.loc 1 1554 0
 6732 0074 07F11007 		add	r7, r7, #16
 6733 0078 BD46     		mov	sp, r7
 6734 007a 80BD     		pop	{r7, pc}
 6735              		.cfi_endproc
 6736              	.LFE188:
 6738              		.section	.text.getGyroIntSrc,"ax",%progbits
 6739              		.align	2
 6740              		.global	getGyroIntSrc
 6741              		.thumb
 6742              		.thumb_func
 6744              	getGyroIntSrc:
 6745              	.LFB189:
1555:../LSM9DS1_Driver.c **** 
1556:../LSM9DS1_Driver.c **** 
1557:../LSM9DS1_Driver.c **** uint8_t getGyroIntSrc()
1558:../LSM9DS1_Driver.c **** {
 6746              		.loc 1 1558 0
 6747              		.cfi_startproc
 6748              		@ args = 0, pretend = 0, frame = 8
 6749              		@ frame_needed = 1, uses_anonymous_args = 0
 6750 0000 80B5     		push	{r7, lr}
 6751              	.LCFI205:
 6752              		.cfi_def_cfa_offset 8
 6753              		.cfi_offset 7, -8
 6754              		.cfi_offset 14, -4
 6755 0002 82B0     		sub	sp, sp, #8
 6756              	.LCFI206:
 6757              		.cfi_def_cfa_offset 16
 6758 0004 00AF     		add	r7, sp, #0
 6759              	.LCFI207:
 6760              		.cfi_def_cfa_register 7
1559:../LSM9DS1_Driver.c **** 	uint8_t intSrc = xgReadByte(INT_GEN_SRC_G);
 6761              		.loc 1 1559 0
 6762 0006 4FF01400 		mov	r0, #20
 6763 000a FFF7FEFF 		bl	xgReadByte
 6764 000e 0346     		mov	r3, r0
 6765 0010 FB71     		strb	r3, [r7, #7]
1560:../LSM9DS1_Driver.c **** 
1561:../LSM9DS1_Driver.c **** 	// Check if the IA_G (interrupt active) bit is set
1562:../LSM9DS1_Driver.c **** 	if (intSrc & (1<<6))
 6766              		.loc 1 1562 0
 6767 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6768 0014 03F04003 		and	r3, r3, #64
 6769 0018 002B     		cmp	r3, #0
 6770 001a 04D0     		beq	.L271
1563:../LSM9DS1_Driver.c **** 	{
1564:../LSM9DS1_Driver.c **** 		return (intSrc & 0x3F);
 6771              		.loc 1 1564 0
 6772 001c FB79     		ldrb	r3, [r7, #7]
 6773 001e 03F03F03 		and	r3, r3, #63
 6774 0022 DBB2     		uxtb	r3, r3
 6775 0024 01E0     		b	.L272
 6776              	.L271:
1565:../LSM9DS1_Driver.c **** 	}
1566:../LSM9DS1_Driver.c **** 
1567:../LSM9DS1_Driver.c **** 	return 0;
 6777              		.loc 1 1567 0
 6778 0026 4FF00003 		mov	r3, #0
 6779              	.L272:
1568:../LSM9DS1_Driver.c **** }
 6780              		.loc 1 1568 0
 6781 002a 1846     		mov	r0, r3
 6782 002c 07F10807 		add	r7, r7, #8
 6783 0030 BD46     		mov	sp, r7
 6784 0032 80BD     		pop	{r7, pc}
 6785              		.cfi_endproc
 6786              	.LFE189:
 6788              		.section	.text.configMagInt,"ax",%progbits
 6789              		.align	2
 6790              		.global	configMagInt
 6791              		.thumb
 6792              		.thumb_func
 6794              	configMagInt:
 6795              	.LFB190:
1569:../LSM9DS1_Driver.c **** 
1570:../LSM9DS1_Driver.c **** 
1571:../LSM9DS1_Driver.c **** void configMagInt(uint8_t generator, h_lactive activeLow, bool latch)
1572:../LSM9DS1_Driver.c **** {
 6796              		.loc 1 1572 0
 6797              		.cfi_startproc
 6798              		@ args = 0, pretend = 0, frame = 16
 6799              		@ frame_needed = 1, uses_anonymous_args = 0
 6800 0000 80B5     		push	{r7, lr}
 6801              	.LCFI208:
 6802              		.cfi_def_cfa_offset 8
 6803              		.cfi_offset 7, -8
 6804              		.cfi_offset 14, -4
 6805 0002 84B0     		sub	sp, sp, #16
 6806              	.LCFI209:
 6807              		.cfi_def_cfa_offset 24
 6808 0004 00AF     		add	r7, sp, #0
 6809              	.LCFI210:
 6810              		.cfi_def_cfa_register 7
 6811 0006 1346     		mov	r3, r2
 6812 0008 0246     		mov	r2, r0
 6813 000a FA71     		strb	r2, [r7, #7]
 6814 000c 0A46     		mov	r2, r1
 6815 000e BA71     		strb	r2, [r7, #6]
 6816 0010 7B71     		strb	r3, [r7, #5]
1573:../LSM9DS1_Driver.c **** 	// Mask out non-generator bits (0-4)
1574:../LSM9DS1_Driver.c **** 	uint8_t config = (generator & 0xE0);
 6817              		.loc 1 1574 0
 6818 0012 FB79     		ldrb	r3, [r7, #7]
 6819 0014 23F01F03 		bic	r3, r3, #31
 6820 0018 FB73     		strb	r3, [r7, #15]
1575:../LSM9DS1_Driver.c **** 	// IEA bit is 0 for active-low, 1 for active-high.
1576:../LSM9DS1_Driver.c **** 	if (activeLow == INT_ACTIVE_HIGH) config |= (1<<2);
 6821              		.loc 1 1576 0
 6822 001a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 6823 001c 002B     		cmp	r3, #0
 6824 001e 03D1     		bne	.L274
 6825              		.loc 1 1576 0 is_stmt 0 discriminator 1
 6826 0020 FB7B     		ldrb	r3, [r7, #15]
 6827 0022 43F00403 		orr	r3, r3, #4
 6828 0026 FB73     		strb	r3, [r7, #15]
 6829              	.L274:
1577:../LSM9DS1_Driver.c **** 	// IEL bit is 0 for latched, 1 for not-latched
1578:../LSM9DS1_Driver.c **** 	if (!latch) config |= (1<<1);
 6830              		.loc 1 1578 0 is_stmt 1
 6831 0028 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 6832 002a 002B     		cmp	r3, #0
 6833 002c 03D1     		bne	.L275
 6834              		.loc 1 1578 0 is_stmt 0 discriminator 1
 6835 002e FB7B     		ldrb	r3, [r7, #15]
 6836 0030 43F00203 		orr	r3, r3, #2
 6837 0034 FB73     		strb	r3, [r7, #15]
 6838              	.L275:
1579:../LSM9DS1_Driver.c **** 	// As long as we have at least 1 generator, enable the interrupt
1580:../LSM9DS1_Driver.c **** 	if (generator != 0) config |= (1<<0);
 6839              		.loc 1 1580 0 is_stmt 1
 6840 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6841 0038 002B     		cmp	r3, #0
 6842 003a 03D0     		beq	.L276
 6843              		.loc 1 1580 0 is_stmt 0 discriminator 1
 6844 003c FB7B     		ldrb	r3, [r7, #15]
 6845 003e 43F00103 		orr	r3, r3, #1
 6846 0042 FB73     		strb	r3, [r7, #15]
 6847              	.L276:
1581:../LSM9DS1_Driver.c **** 
1582:../LSM9DS1_Driver.c **** 	mWriteByte(INT_CFG_M, config);
 6848              		.loc 1 1582 0 is_stmt 1
 6849 0044 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 6850 0046 4FF03000 		mov	r0, #48
 6851 004a 1946     		mov	r1, r3
 6852 004c FFF7FEFF 		bl	mWriteByte
1583:../LSM9DS1_Driver.c **** }
 6853              		.loc 1 1583 0
 6854 0050 07F11007 		add	r7, r7, #16
 6855 0054 BD46     		mov	sp, r7
 6856 0056 80BD     		pop	{r7, pc}
 6857              		.cfi_endproc
 6858              	.LFE190:
 6860              		.section	.text.configMagThs,"ax",%progbits
 6861              		.align	2
 6862              		.global	configMagThs
 6863              		.thumb
 6864              		.thumb_func
 6866              	configMagThs:
 6867              	.LFB191:
1584:../LSM9DS1_Driver.c **** 
1585:../LSM9DS1_Driver.c **** 
1586:../LSM9DS1_Driver.c **** void configMagThs(uint16_t threshold)
1587:../LSM9DS1_Driver.c **** {
 6868              		.loc 1 1587 0
 6869              		.cfi_startproc
 6870              		@ args = 0, pretend = 0, frame = 8
 6871              		@ frame_needed = 1, uses_anonymous_args = 0
 6872 0000 80B5     		push	{r7, lr}
 6873              	.LCFI211:
 6874              		.cfi_def_cfa_offset 8
 6875              		.cfi_offset 7, -8
 6876              		.cfi_offset 14, -4
 6877 0002 82B0     		sub	sp, sp, #8
 6878              	.LCFI212:
 6879              		.cfi_def_cfa_offset 16
 6880 0004 00AF     		add	r7, sp, #0
 6881              	.LCFI213:
 6882              		.cfi_def_cfa_register 7
 6883 0006 0346     		mov	r3, r0
 6884 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1588:../LSM9DS1_Driver.c **** 	// Write high eight bits of [threshold] to INT_THS_H_M
1589:../LSM9DS1_Driver.c **** 	mWriteByte(INT_THS_H_M, (uint8_t)((threshold & 0x7F00) >> 8));
 6885              		.loc 1 1589 0
 6886 000a FB88     		ldrh	r3, [r7, #6]
 6887 000c 03F4FE43 		and	r3, r3, #32512
 6888 0010 4FEA2323 		asr	r3, r3, #8
 6889 0014 DBB2     		uxtb	r3, r3
 6890 0016 4FF03300 		mov	r0, #51
 6891 001a 1946     		mov	r1, r3
 6892 001c FFF7FEFF 		bl	mWriteByte
1590:../LSM9DS1_Driver.c **** 	// Write low eight bits of [threshold] to INT_THS_L_M
1591:../LSM9DS1_Driver.c **** 	mWriteByte(INT_THS_L_M, (uint8_t)(threshold & 0x00FF));
 6893              		.loc 1 1591 0
 6894 0020 FB88     		ldrh	r3, [r7, #6]	@ movhi
 6895 0022 DBB2     		uxtb	r3, r3
 6896 0024 4FF03200 		mov	r0, #50
 6897 0028 1946     		mov	r1, r3
 6898 002a FFF7FEFF 		bl	mWriteByte
1592:../LSM9DS1_Driver.c **** }
 6899              		.loc 1 1592 0
 6900 002e 07F10807 		add	r7, r7, #8
 6901 0032 BD46     		mov	sp, r7
 6902 0034 80BD     		pop	{r7, pc}
 6903              		.cfi_endproc
 6904              	.LFE191:
 6906 0036 00BF     		.section	.text.getMagIntSrc,"ax",%progbits
 6907              		.align	2
 6908              		.global	getMagIntSrc
 6909              		.thumb
 6910              		.thumb_func
 6912              	getMagIntSrc:
 6913              	.LFB192:
1593:../LSM9DS1_Driver.c **** 
1594:../LSM9DS1_Driver.c **** uint8_t getMagIntSrc(void)
1595:../LSM9DS1_Driver.c **** {
 6914              		.loc 1 1595 0
 6915              		.cfi_startproc
 6916              		@ args = 0, pretend = 0, frame = 8
 6917              		@ frame_needed = 1, uses_anonymous_args = 0
 6918 0000 80B5     		push	{r7, lr}
 6919              	.LCFI214:
 6920              		.cfi_def_cfa_offset 8
 6921              		.cfi_offset 7, -8
 6922              		.cfi_offset 14, -4
 6923 0002 82B0     		sub	sp, sp, #8
 6924              	.LCFI215:
 6925              		.cfi_def_cfa_offset 16
 6926 0004 00AF     		add	r7, sp, #0
 6927              	.LCFI216:
 6928              		.cfi_def_cfa_register 7
1596:../LSM9DS1_Driver.c **** 	uint8_t intSrc = mReadByte(INT_SRC_M);
 6929              		.loc 1 1596 0
 6930 0006 4FF03000 		mov	r0, #48
 6931 000a FFF7FEFF 		bl	mReadByte
 6932 000e 0346     		mov	r3, r0
 6933 0010 FB71     		strb	r3, [r7, #7]
1597:../LSM9DS1_Driver.c **** 
1598:../LSM9DS1_Driver.c **** 	// Check if the INT (interrupt active) bit is set
1599:../LSM9DS1_Driver.c **** 	if (intSrc & (1<<0))
 6934              		.loc 1 1599 0
 6935 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6936 0014 03F00103 		and	r3, r3, #1
 6937 0018 002B     		cmp	r3, #0
 6938 001a 04D0     		beq	.L279
1600:../LSM9DS1_Driver.c **** 	{
1601:../LSM9DS1_Driver.c **** 		return (intSrc & 0xFE);
 6939              		.loc 1 1601 0
 6940 001c FB79     		ldrb	r3, [r7, #7]
 6941 001e 23F00103 		bic	r3, r3, #1
 6942 0022 DBB2     		uxtb	r3, r3
 6943 0024 01E0     		b	.L280
 6944              	.L279:
1602:../LSM9DS1_Driver.c **** 	}
1603:../LSM9DS1_Driver.c **** 
1604:../LSM9DS1_Driver.c **** 	return 0;
 6945              		.loc 1 1604 0
 6946 0026 4FF00003 		mov	r3, #0
 6947              	.L280:
1605:../LSM9DS1_Driver.c **** }
 6948              		.loc 1 1605 0
 6949 002a 1846     		mov	r0, r3
 6950 002c 07F10807 		add	r7, r7, #8
 6951 0030 BD46     		mov	sp, r7
 6952 0032 80BD     		pop	{r7, pc}
 6953              		.cfi_endproc
 6954              	.LFE192:
 6956              		.section	.text.sleepGyro,"ax",%progbits
 6957              		.align	2
 6958              		.global	sleepGyro
 6959              		.thumb
 6960              		.thumb_func
 6962              	sleepGyro:
 6963              	.LFB193:
1606:../LSM9DS1_Driver.c **** 
1607:../LSM9DS1_Driver.c **** void sleepGyro(bool enable)
1608:../LSM9DS1_Driver.c **** {
 6964              		.loc 1 1608 0
 6965              		.cfi_startproc
 6966              		@ args = 0, pretend = 0, frame = 16
 6967              		@ frame_needed = 1, uses_anonymous_args = 0
 6968 0000 80B5     		push	{r7, lr}
 6969              	.LCFI217:
 6970              		.cfi_def_cfa_offset 8
 6971              		.cfi_offset 7, -8
 6972              		.cfi_offset 14, -4
 6973 0002 84B0     		sub	sp, sp, #16
 6974              	.LCFI218:
 6975              		.cfi_def_cfa_offset 24
 6976 0004 00AF     		add	r7, sp, #0
 6977              	.LCFI219:
 6978              		.cfi_def_cfa_register 7
 6979 0006 0346     		mov	r3, r0
 6980 0008 FB71     		strb	r3, [r7, #7]
1609:../LSM9DS1_Driver.c **** 	uint8_t temp = xgReadByte(CTRL_REG9);
 6981              		.loc 1 1609 0
 6982 000a 4FF02300 		mov	r0, #35
 6983 000e FFF7FEFF 		bl	xgReadByte
 6984 0012 0346     		mov	r3, r0
 6985 0014 FB73     		strb	r3, [r7, #15]
1610:../LSM9DS1_Driver.c **** 	if (enable) temp |= (1<<6);
 6986              		.loc 1 1610 0
 6987 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6988 0018 002B     		cmp	r3, #0
 6989 001a 04D0     		beq	.L282
 6990              		.loc 1 1610 0 is_stmt 0 discriminator 1
 6991 001c FB7B     		ldrb	r3, [r7, #15]
 6992 001e 43F04003 		orr	r3, r3, #64
 6993 0022 FB73     		strb	r3, [r7, #15]
 6994 0024 03E0     		b	.L283
 6995              	.L282:
1611:../LSM9DS1_Driver.c **** 	else temp &= ~(1<<6);
 6996              		.loc 1 1611 0 is_stmt 1
 6997 0026 FB7B     		ldrb	r3, [r7, #15]
 6998 0028 23F04003 		bic	r3, r3, #64
 6999 002c FB73     		strb	r3, [r7, #15]
 7000              	.L283:
1612:../LSM9DS1_Driver.c **** 	xgWriteByte(CTRL_REG9, temp);
 7001              		.loc 1 1612 0
 7002 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7003 0030 4FF02300 		mov	r0, #35
 7004 0034 1946     		mov	r1, r3
 7005 0036 FFF7FEFF 		bl	xgWriteByte
1613:../LSM9DS1_Driver.c **** }
 7006              		.loc 1 1613 0
 7007 003a 07F11007 		add	r7, r7, #16
 7008 003e BD46     		mov	sp, r7
 7009 0040 80BD     		pop	{r7, pc}
 7010              		.cfi_endproc
 7011              	.LFE193:
 7013 0042 00BF     		.section	.text.getFIFOSamples,"ax",%progbits
 7014              		.align	2
 7015              		.global	getFIFOSamples
 7016              		.thumb
 7017              		.thumb_func
 7019              	getFIFOSamples:
 7020              	.LFB194:
1614:../LSM9DS1_Driver.c **** 
1615:../LSM9DS1_Driver.c **** 
1616:../LSM9DS1_Driver.c **** uint8_t getFIFOSamples(void)
1617:../LSM9DS1_Driver.c **** {
 7021              		.loc 1 1617 0
 7022              		.cfi_startproc
 7023              		@ args = 0, pretend = 0, frame = 0
 7024              		@ frame_needed = 1, uses_anonymous_args = 0
 7025 0000 80B5     		push	{r7, lr}
 7026              	.LCFI220:
 7027              		.cfi_def_cfa_offset 8
 7028              		.cfi_offset 7, -8
 7029              		.cfi_offset 14, -4
 7030 0002 00AF     		add	r7, sp, #0
 7031              	.LCFI221:
 7032              		.cfi_def_cfa_register 7
1618:../LSM9DS1_Driver.c **** 	return (xgReadByte(FIFO_SRC) & 0x3F);
 7033              		.loc 1 1618 0
 7034 0004 4FF02F00 		mov	r0, #47
 7035 0008 FFF7FEFF 		bl	xgReadByte
 7036 000c 0346     		mov	r3, r0
 7037 000e 03F03F03 		and	r3, r3, #63
 7038 0012 DBB2     		uxtb	r3, r3
1619:../LSM9DS1_Driver.c **** }
 7039              		.loc 1 1619 0
 7040 0014 1846     		mov	r0, r3
 7041 0016 80BD     		pop	{r7, pc}
 7042              		.cfi_endproc
 7043              	.LFE194:
 7045              		.section	.text.timerHandlerSendMsg,"ax",%progbits
 7046              		.align	2
 7047              		.global	timerHandlerSendMsg
 7048              		.thumb
 7049              		.thumb_func
 7051              	timerHandlerSendMsg:
 7052              	.LFB195:
1620:../LSM9DS1_Driver.c **** 
1621:../LSM9DS1_Driver.c **** void timerHandlerSendMsg(void *T)
1622:../LSM9DS1_Driver.c **** {
 7053              		.loc 1 1622 0
 7054              		.cfi_startproc
 7055              		@ args = 0, pretend = 0, frame = 8
 7056              		@ frame_needed = 1, uses_anonymous_args = 0
 7057 0000 90B5     		push	{r4, r7, lr}
 7058              	.LCFI222:
 7059              		.cfi_def_cfa_offset 12
 7060              		.cfi_offset 4, -12
 7061              		.cfi_offset 7, -8
 7062              		.cfi_offset 14, -4
 7063 0002 83B0     		sub	sp, sp, #12
 7064              	.LCFI223:
 7065              		.cfi_def_cfa_offset 24
 7066 0004 00AF     		add	r7, sp, #0
 7067              	.LCFI224:
 7068              		.cfi_def_cfa_register 7
 7069 0006 7860     		str	r0, [r7, #4]
1623:../LSM9DS1_Driver.c **** 	static int counter = 0;
1624:../LSM9DS1_Driver.c **** 
1625:../LSM9DS1_Driver.c **** 	send(&accelOsX[counter], strlen(&accelOsX[counter]));
 7070              		.loc 1 1625 0
 7071 0008 40F20003 		movw	r3, #:lower16:counter.9989
 7072 000c C0F20003 		movt	r3, #:upper16:counter.9989
 7073 0010 1A68     		ldr	r2, [r3, #0]
 7074 0012 40F20003 		movw	r3, #:lower16:accelOsX
 7075 0016 C0F20003 		movt	r3, #:upper16:accelOsX
 7076 001a D418     		adds	r4, r2, r3
 7077 001c 40F20003 		movw	r3, #:lower16:counter.9989
 7078 0020 C0F20003 		movt	r3, #:upper16:counter.9989
 7079 0024 1A68     		ldr	r2, [r3, #0]
 7080 0026 40F20003 		movw	r3, #:lower16:accelOsX
 7081 002a C0F20003 		movt	r3, #:upper16:accelOsX
 7082 002e D318     		adds	r3, r2, r3
 7083 0030 1846     		mov	r0, r3
 7084 0032 FFF7FEFF 		bl	strlen
 7085 0036 0346     		mov	r3, r0
 7086 0038 2046     		mov	r0, r4
 7087 003a 1946     		mov	r1, r3
 7088 003c FFF7FEFF 		bl	send
1626:../LSM9DS1_Driver.c **** 	send(&accelOsY[counter], strlen(&accelOsY[counter]));
 7089              		.loc 1 1626 0
 7090 0040 40F20003 		movw	r3, #:lower16:counter.9989
 7091 0044 C0F20003 		movt	r3, #:upper16:counter.9989
 7092 0048 1A68     		ldr	r2, [r3, #0]
 7093 004a 40F20003 		movw	r3, #:lower16:accelOsY
 7094 004e C0F20003 		movt	r3, #:upper16:accelOsY
 7095 0052 D418     		adds	r4, r2, r3
 7096 0054 40F20003 		movw	r3, #:lower16:counter.9989
 7097 0058 C0F20003 		movt	r3, #:upper16:counter.9989
 7098 005c 1A68     		ldr	r2, [r3, #0]
 7099 005e 40F20003 		movw	r3, #:lower16:accelOsY
 7100 0062 C0F20003 		movt	r3, #:upper16:accelOsY
 7101 0066 D318     		adds	r3, r2, r3
 7102 0068 1846     		mov	r0, r3
 7103 006a FFF7FEFF 		bl	strlen
 7104 006e 0346     		mov	r3, r0
 7105 0070 2046     		mov	r0, r4
 7106 0072 1946     		mov	r1, r3
 7107 0074 FFF7FEFF 		bl	send
1627:../LSM9DS1_Driver.c **** 	send(&accelOsZ[counter], strlen(&accelOsZ[counter]));
 7108              		.loc 1 1627 0
 7109 0078 40F20003 		movw	r3, #:lower16:counter.9989
 7110 007c C0F20003 		movt	r3, #:upper16:counter.9989
 7111 0080 1A68     		ldr	r2, [r3, #0]
 7112 0082 40F20003 		movw	r3, #:lower16:accelOsZ
 7113 0086 C0F20003 		movt	r3, #:upper16:accelOsZ
 7114 008a D418     		adds	r4, r2, r3
 7115 008c 40F20003 		movw	r3, #:lower16:counter.9989
 7116 0090 C0F20003 		movt	r3, #:upper16:counter.9989
 7117 0094 1A68     		ldr	r2, [r3, #0]
 7118 0096 40F20003 		movw	r3, #:lower16:accelOsZ
 7119 009a C0F20003 		movt	r3, #:upper16:accelOsZ
 7120 009e D318     		adds	r3, r2, r3
 7121 00a0 1846     		mov	r0, r3
 7122 00a2 FFF7FEFF 		bl	strlen
 7123 00a6 0346     		mov	r3, r0
 7124 00a8 2046     		mov	r0, r4
 7125 00aa 1946     		mov	r1, r3
 7126 00ac FFF7FEFF 		bl	send
1628:../LSM9DS1_Driver.c **** 
1629:../LSM9DS1_Driver.c **** 	counter++;
 7127              		.loc 1 1629 0
 7128 00b0 40F20003 		movw	r3, #:lower16:counter.9989
 7129 00b4 C0F20003 		movt	r3, #:upper16:counter.9989
 7130 00b8 1B68     		ldr	r3, [r3, #0]
 7131 00ba 03F10102 		add	r2, r3, #1
 7132 00be 40F20003 		movw	r3, #:lower16:counter.9989
 7133 00c2 C0F20003 		movt	r3, #:upper16:counter.9989
 7134 00c6 1A60     		str	r2, [r3, #0]
1630:../LSM9DS1_Driver.c **** 
1631:../LSM9DS1_Driver.c **** 	if(100 == counter)
1632:../LSM9DS1_Driver.c **** 	{
1633:../LSM9DS1_Driver.c **** 		;
1634:../LSM9DS1_Driver.c **** 	}
1635:../LSM9DS1_Driver.c **** }
 7135              		.loc 1 1635 0
 7136 00c8 07F10C07 		add	r7, r7, #12
 7137 00cc BD46     		mov	sp, r7
 7138 00ce 90BD     		pop	{r4, r7, pc}
 7139              		.cfi_endproc
 7140              	.LFE195:
 7142              		.section	.text.timerHandlerReceiveOneMeasurementEachSensor,"ax",%progbits
 7143              		.align	2
 7144              		.global	timerHandlerReceiveOneMeasurementEachSensor
 7145              		.thumb
 7146              		.thumb_func
 7148              	timerHandlerReceiveOneMeasurementEachSensor:
 7149              	.LFB196:
1636:../LSM9DS1_Driver.c **** 
1637:../LSM9DS1_Driver.c **** void timerHandlerReceiveOneMeasurementEachSensor(void *T)
1638:../LSM9DS1_Driver.c **** {
 7150              		.loc 1 1638 0
 7151              		.cfi_startproc
 7152              		@ args = 0, pretend = 0, frame = 16
 7153              		@ frame_needed = 1, uses_anonymous_args = 0
 7154 0000 80B5     		push	{r7, lr}
 7155              	.LCFI225:
 7156              		.cfi_def_cfa_offset 8
 7157              		.cfi_offset 7, -8
 7158              		.cfi_offset 14, -4
 7159 0002 84B0     		sub	sp, sp, #16
 7160              	.LCFI226:
 7161              		.cfi_def_cfa_offset 24
 7162 0004 00AF     		add	r7, sp, #0
 7163              	.LCFI227:
 7164              		.cfi_def_cfa_register 7
 7165 0006 7860     		str	r0, [r7, #4]
1639:../LSM9DS1_Driver.c **** 	static volatile uint32_t stageOfReading = 0;
1640:../LSM9DS1_Driver.c **** 	static uint8_t whichByte = 0;
1641:../LSM9DS1_Driver.c **** 	static uint8_t whichDevice = 0;
1642:../LSM9DS1_Driver.c **** 	addressAndData *address = (addressAndData*)T;
 7166              		.loc 1 1642 0
 7167 0008 7B68     		ldr	r3, [r7, #4]
 7168 000a FB60     		str	r3, [r7, #12]
1643:../LSM9DS1_Driver.c **** 
1644:../LSM9DS1_Driver.c **** 	if(readingAllowed == TRUE)
 7169              		.loc 1 1644 0
 7170 000c 40F20003 		movw	r3, #:lower16:readingAllowed
 7171 0010 C0F20003 		movt	r3, #:upper16:readingAllowed
 7172 0014 1B78     		ldrb	r3, [r3, #0]
 7173 0016 DBB2     		uxtb	r3, r3
 7174 0018 012B     		cmp	r3, #1
 7175 001a 40F0F980 		bne	.L287
1645:../LSM9DS1_Driver.c **** 	{
1646:../LSM9DS1_Driver.c **** 		if(0 == whichDevice) //accel
 7176              		.loc 1 1646 0
 7177 001e 40F20003 		movw	r3, #:lower16:whichDevice.9997
 7178 0022 C0F20003 		movt	r3, #:upper16:whichDevice.9997
 7179 0026 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7180 0028 002B     		cmp	r3, #0
 7181 002a 47D1     		bne	.L289
1647:../LSM9DS1_Driver.c **** 		{
1648:../LSM9DS1_Driver.c **** 			receiveByte(address->adr.addressDevice[0], (address->adr.subAddress[0] + whichByte), &(address->
 7182              		.loc 1 1648 0
 7183 002c FB68     		ldr	r3, [r7, #12]
 7184 002e 997C     		ldrb	r1, [r3, #18]	@ zero_extendqisi2
 7185 0030 FB68     		ldr	r3, [r7, #12]
 7186 0032 1A7D     		ldrb	r2, [r3, #20]	@ zero_extendqisi2
 7187 0034 40F20003 		movw	r3, #:lower16:whichByte.9996
 7188 0038 C0F20003 		movt	r3, #:upper16:whichByte.9996
 7189 003c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7190 003e D318     		adds	r3, r2, r3
 7191 0040 DAB2     		uxtb	r2, r3
 7192 0042 40F20003 		movw	r3, #:lower16:whichByte.9996
 7193 0046 C0F20003 		movt	r3, #:upper16:whichByte.9996
 7194 004a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7195 004c F868     		ldr	r0, [r7, #12]
 7196 004e C318     		adds	r3, r0, r3
 7197 0050 0846     		mov	r0, r1
 7198 0052 1146     		mov	r1, r2
 7199 0054 1A46     		mov	r2, r3
 7200 0056 FFF7FEFF 		bl	receiveByte
1649:../LSM9DS1_Driver.c **** 			whichByte++;
 7201              		.loc 1 1649 0
 7202 005a 40F20003 		movw	r3, #:lower16:whichByte.9996
 7203 005e C0F20003 		movt	r3, #:upper16:whichByte.9996
 7204 0062 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7205 0064 03F10103 		add	r3, r3, #1
 7206 0068 DAB2     		uxtb	r2, r3
 7207 006a 40F20003 		movw	r3, #:lower16:whichByte.9996
 7208 006e C0F20003 		movt	r3, #:upper16:whichByte.9996
 7209 0072 1A70     		strb	r2, [r3, #0]
1650:../LSM9DS1_Driver.c **** 
1651:../LSM9DS1_Driver.c **** 			if(whichByte == 6)
 7210              		.loc 1 1651 0
 7211 0074 40F20003 		movw	r3, #:lower16:whichByte.9996
 7212 0078 C0F20003 		movt	r3, #:upper16:whichByte.9996
 7213 007c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7214 007e 062B     		cmp	r3, #6
 7215 0080 40F0C680 		bne	.L287
1652:../LSM9DS1_Driver.c **** 			{
1653:../LSM9DS1_Driver.c **** 				//readingAllowed = FALSE;
1654:../LSM9DS1_Driver.c **** 
1655:../LSM9DS1_Driver.c **** 				whichDevice++;
 7216              		.loc 1 1655 0
 7217 0084 40F20003 		movw	r3, #:lower16:whichDevice.9997
 7218 0088 C0F20003 		movt	r3, #:upper16:whichDevice.9997
 7219 008c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7220 008e 03F10103 		add	r3, r3, #1
 7221 0092 DAB2     		uxtb	r2, r3
 7222 0094 40F20003 		movw	r3, #:lower16:whichDevice.9997
 7223 0098 C0F20003 		movt	r3, #:upper16:whichDevice.9997
 7224 009c 1A70     		strb	r2, [r3, #0]
1656:../LSM9DS1_Driver.c **** 
1657:../LSM9DS1_Driver.c **** 				whichByte = 0;
 7225              		.loc 1 1657 0
 7226 009e 40F20003 		movw	r3, #:lower16:whichByte.9996
 7227 00a2 C0F20003 		movt	r3, #:upper16:whichByte.9996
 7228 00a6 4FF00002 		mov	r2, #0
 7229 00aa 1A70     		strb	r2, [r3, #0]
1658:../LSM9DS1_Driver.c **** 				stageOfReading = 0;
 7230              		.loc 1 1658 0
 7231 00ac 40F20003 		movw	r3, #:lower16:stageOfReading.9995
 7232 00b0 C0F20003 		movt	r3, #:upper16:stageOfReading.9995
 7233 00b4 4FF00002 		mov	r2, #0
 7234 00b8 1A60     		str	r2, [r3, #0]
 7235 00ba A9E0     		b	.L287
 7236              	.L289:
1659:../LSM9DS1_Driver.c **** 			}
1660:../LSM9DS1_Driver.c **** 		}
1661:../LSM9DS1_Driver.c **** 		else if(1 == whichDevice) //gyro
 7237              		.loc 1 1661 0
 7238 00bc 40F20003 		movw	r3, #:lower16:whichDevice.9997
 7239 00c0 C0F20003 		movt	r3, #:upper16:whichDevice.9997
 7240 00c4 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7241 00c6 012B     		cmp	r3, #1
 7242 00c8 4DD1     		bne	.L290
1662:../LSM9DS1_Driver.c **** 		{
1663:../LSM9DS1_Driver.c **** 			receiveByte(address->adr.addressDevice[0], (address->adr.subAddress[1] + whichByte), &(address->
 7243              		.loc 1 1663 0
 7244 00ca FB68     		ldr	r3, [r7, #12]
 7245 00cc 997C     		ldrb	r1, [r3, #18]	@ zero_extendqisi2
 7246 00ce FB68     		ldr	r3, [r7, #12]
 7247 00d0 5A7D     		ldrb	r2, [r3, #21]	@ zero_extendqisi2
 7248 00d2 40F20003 		movw	r3, #:lower16:whichByte.9996
 7249 00d6 C0F20003 		movt	r3, #:upper16:whichByte.9996
 7250 00da 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7251 00dc D318     		adds	r3, r2, r3
 7252 00de DAB2     		uxtb	r2, r3
 7253 00e0 40F20003 		movw	r3, #:lower16:whichByte.9996
 7254 00e4 C0F20003 		movt	r3, #:upper16:whichByte.9996
 7255 00e8 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7256 00ea 03F10603 		add	r3, r3, #6
 7257 00ee F868     		ldr	r0, [r7, #12]
 7258 00f0 C318     		adds	r3, r0, r3
 7259 00f2 0846     		mov	r0, r1
 7260 00f4 1146     		mov	r1, r2
 7261 00f6 1A46     		mov	r2, r3
 7262 00f8 FFF7FEFF 		bl	receiveByte
1664:../LSM9DS1_Driver.c **** 			whichByte++;
 7263              		.loc 1 1664 0
 7264 00fc 40F20003 		movw	r3, #:lower16:whichByte.9996
 7265 0100 C0F20003 		movt	r3, #:upper16:whichByte.9996
 7266 0104 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7267 0106 03F10103 		add	r3, r3, #1
 7268 010a DAB2     		uxtb	r2, r3
 7269 010c 40F20003 		movw	r3, #:lower16:whichByte.9996
 7270 0110 C0F20003 		movt	r3, #:upper16:whichByte.9996
 7271 0114 1A70     		strb	r2, [r3, #0]
1665:../LSM9DS1_Driver.c **** 
1666:../LSM9DS1_Driver.c **** 			if(whichByte == 6)
 7272              		.loc 1 1666 0
 7273 0116 40F20003 		movw	r3, #:lower16:whichByte.9996
 7274 011a C0F20003 		movt	r3, #:upper16:whichByte.9996
 7275 011e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7276 0120 062B     		cmp	r3, #6
 7277 0122 75D1     		bne	.L287
1667:../LSM9DS1_Driver.c **** 			{
1668:../LSM9DS1_Driver.c **** 				//readingAllowed = FALSE;
1669:../LSM9DS1_Driver.c **** 
1670:../LSM9DS1_Driver.c **** 				whichDevice++;
 7278              		.loc 1 1670 0
 7279 0124 40F20003 		movw	r3, #:lower16:whichDevice.9997
 7280 0128 C0F20003 		movt	r3, #:upper16:whichDevice.9997
 7281 012c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7282 012e 03F10103 		add	r3, r3, #1
 7283 0132 DAB2     		uxtb	r2, r3
 7284 0134 40F20003 		movw	r3, #:lower16:whichDevice.9997
 7285 0138 C0F20003 		movt	r3, #:upper16:whichDevice.9997
 7286 013c 1A70     		strb	r2, [r3, #0]
1671:../LSM9DS1_Driver.c **** 
1672:../LSM9DS1_Driver.c **** 				whichByte = 0;
 7287              		.loc 1 1672 0
 7288 013e 40F20003 		movw	r3, #:lower16:whichByte.9996
 7289 0142 C0F20003 		movt	r3, #:upper16:whichByte.9996
 7290 0146 4FF00002 		mov	r2, #0
 7291 014a 1A70     		strb	r2, [r3, #0]
1673:../LSM9DS1_Driver.c **** 				stageOfReading++;
 7292              		.loc 1 1673 0
 7293 014c 40F20003 		movw	r3, #:lower16:stageOfReading.9995
 7294 0150 C0F20003 		movt	r3, #:upper16:stageOfReading.9995
 7295 0154 1B68     		ldr	r3, [r3, #0]
 7296 0156 03F10102 		add	r2, r3, #1
 7297 015a 40F20003 		movw	r3, #:lower16:stageOfReading.9995
 7298 015e C0F20003 		movt	r3, #:upper16:stageOfReading.9995
 7299 0162 1A60     		str	r2, [r3, #0]
 7300 0164 54E0     		b	.L287
 7301              	.L290:
1674:../LSM9DS1_Driver.c **** 			}
1675:../LSM9DS1_Driver.c **** 		}
1676:../LSM9DS1_Driver.c **** 		else if(2 == whichDevice)
 7302              		.loc 1 1676 0
 7303 0166 40F20003 		movw	r3, #:lower16:whichDevice.9997
 7304 016a C0F20003 		movt	r3, #:upper16:whichDevice.9997
 7305 016e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7306 0170 022B     		cmp	r3, #2
 7307 0172 4DD1     		bne	.L287
1677:../LSM9DS1_Driver.c **** 		{
1678:../LSM9DS1_Driver.c **** 			receiveByte(address->adr.addressDevice[1], (address->adr.subAddress[2] + whichByte), &(address->
 7308              		.loc 1 1678 0
 7309 0174 FB68     		ldr	r3, [r7, #12]
 7310 0176 D97C     		ldrb	r1, [r3, #19]	@ zero_extendqisi2
 7311 0178 FB68     		ldr	r3, [r7, #12]
 7312 017a 9A7D     		ldrb	r2, [r3, #22]	@ zero_extendqisi2
 7313 017c 40F20003 		movw	r3, #:lower16:whichByte.9996
 7314 0180 C0F20003 		movt	r3, #:upper16:whichByte.9996
 7315 0184 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7316 0186 D318     		adds	r3, r2, r3
 7317 0188 DAB2     		uxtb	r2, r3
 7318 018a 40F20003 		movw	r3, #:lower16:whichByte.9996
 7319 018e C0F20003 		movt	r3, #:upper16:whichByte.9996
 7320 0192 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7321 0194 03F10C03 		add	r3, r3, #12
 7322 0198 F868     		ldr	r0, [r7, #12]
 7323 019a C318     		adds	r3, r0, r3
 7324 019c 0846     		mov	r0, r1
 7325 019e 1146     		mov	r1, r2
 7326 01a0 1A46     		mov	r2, r3
 7327 01a2 FFF7FEFF 		bl	receiveByte
1679:../LSM9DS1_Driver.c **** 			whichByte++;
 7328              		.loc 1 1679 0
 7329 01a6 40F20003 		movw	r3, #:lower16:whichByte.9996
 7330 01aa C0F20003 		movt	r3, #:upper16:whichByte.9996
 7331 01ae 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7332 01b0 03F10103 		add	r3, r3, #1
 7333 01b4 DAB2     		uxtb	r2, r3
 7334 01b6 40F20003 		movw	r3, #:lower16:whichByte.9996
 7335 01ba C0F20003 		movt	r3, #:upper16:whichByte.9996
 7336 01be 1A70     		strb	r2, [r3, #0]
1680:../LSM9DS1_Driver.c **** 
1681:../LSM9DS1_Driver.c **** 			if(whichByte == 6)
 7337              		.loc 1 1681 0
 7338 01c0 40F20003 		movw	r3, #:lower16:whichByte.9996
 7339 01c4 C0F20003 		movt	r3, #:upper16:whichByte.9996
 7340 01c8 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 7341 01ca 062B     		cmp	r3, #6
 7342 01cc 20D1     		bne	.L287
1682:../LSM9DS1_Driver.c **** 			{
1683:../LSM9DS1_Driver.c **** 				readingAllowed = FALSE;
 7343              		.loc 1 1683 0
 7344 01ce 40F20003 		movw	r3, #:lower16:readingAllowed
 7345 01d2 C0F20003 		movt	r3, #:upper16:readingAllowed
 7346 01d6 4FF00002 		mov	r2, #0
 7347 01da 1A70     		strb	r2, [r3, #0]
1684:../LSM9DS1_Driver.c **** 
1685:../LSM9DS1_Driver.c **** 				whichDevice = 0;
 7348              		.loc 1 1685 0
 7349 01dc 40F20003 		movw	r3, #:lower16:whichDevice.9997
 7350 01e0 C0F20003 		movt	r3, #:upper16:whichDevice.9997
 7351 01e4 4FF00002 		mov	r2, #0
 7352 01e8 1A70     		strb	r2, [r3, #0]
1686:../LSM9DS1_Driver.c **** 
1687:../LSM9DS1_Driver.c **** 				whichByte = 0;
 7353              		.loc 1 1687 0
 7354 01ea 40F20003 		movw	r3, #:lower16:whichByte.9996
 7355 01ee C0F20003 		movt	r3, #:upper16:whichByte.9996
 7356 01f2 4FF00002 		mov	r2, #0
 7357 01f6 1A70     		strb	r2, [r3, #0]
1688:../LSM9DS1_Driver.c **** 				stageOfReading++;
 7358              		.loc 1 1688 0
 7359 01f8 40F20003 		movw	r3, #:lower16:stageOfReading.9995
 7360 01fc C0F20003 		movt	r3, #:upper16:stageOfReading.9995
 7361 0200 1B68     		ldr	r3, [r3, #0]
 7362 0202 03F10102 		add	r2, r3, #1
 7363 0206 40F20003 		movw	r3, #:lower16:stageOfReading.9995
 7364 020a C0F20003 		movt	r3, #:upper16:stageOfReading.9995
 7365 020e 1A60     		str	r2, [r3, #0]
 7366              	.L287:
1689:../LSM9DS1_Driver.c **** 			}
1690:../LSM9DS1_Driver.c **** 		}
1691:../LSM9DS1_Driver.c **** 
1692:../LSM9DS1_Driver.c **** 	}
1693:../LSM9DS1_Driver.c **** }
 7367              		.loc 1 1693 0
 7368 0210 07F11007 		add	r7, r7, #16
 7369 0214 BD46     		mov	sp, r7
 7370 0216 80BD     		pop	{r7, pc}
 7371              		.cfi_endproc
 7372              	.LFE196:
 7374              		.section	.text.receiveByte,"ax",%progbits
 7375              		.align	2
 7376              		.global	receiveByte
 7377              		.thumb
 7378              		.thumb_func
 7380              	receiveByte:
 7381              	.LFB197:
1694:../LSM9DS1_Driver.c **** 
1695:../LSM9DS1_Driver.c **** void receiveByte(uint8_t adr, uint8_t subAdr, uint8_t *buffer)
1696:../LSM9DS1_Driver.c **** {
 7382              		.loc 1 1696 0
 7383              		.cfi_startproc
 7384              		@ args = 0, pretend = 0, frame = 40
 7385              		@ frame_needed = 1, uses_anonymous_args = 0
 7386 0000 80B5     		push	{r7, lr}
 7387              	.LCFI228:
 7388              		.cfi_def_cfa_offset 8
 7389              		.cfi_offset 7, -8
 7390              		.cfi_offset 14, -4
 7391 0002 8AB0     		sub	sp, sp, #40
 7392              	.LCFI229:
 7393              		.cfi_def_cfa_offset 48
 7394 0004 00AF     		add	r7, sp, #0
 7395              	.LCFI230:
 7396              		.cfi_def_cfa_register 7
 7397 0006 0B46     		mov	r3, r1
 7398 0008 3A60     		str	r2, [r7, #0]
 7399 000a 0246     		mov	r2, r0
 7400 000c FA71     		strb	r2, [r7, #7]
 7401 000e BB71     		strb	r3, [r7, #6]
1697:../LSM9DS1_Driver.c **** 	clearErrorFlags();
 7402              		.loc 1 1697 0
 7403 0010 FFF7FEFF 		bl	clearErrorFlags
1698:../LSM9DS1_Driver.c **** 
1699:../LSM9DS1_Driver.c **** 	I2C001_DataType data1;
1700:../LSM9DS1_Driver.c **** 	data1.Data1.TDF_Type = I2C_TDF_MStart;
 7404              		.loc 1 1700 0
 7405 0014 4FF00403 		mov	r3, #4
 7406 0018 87F82130 		strb	r3, [r7, #33]
1701:../LSM9DS1_Driver.c **** 
1702:../LSM9DS1_Driver.c **** 	data1.Data1.Data = ((adr << 1) | I2C_WRITE);
 7407              		.loc 1 1702 0
 7408 001c FB79     		ldrb	r3, [r7, #7]
 7409 001e 4FEA4303 		lsl	r3, r3, #1
 7410 0022 DBB2     		uxtb	r3, r3
 7411 0024 87F82030 		strb	r3, [r7, #32]
1703:../LSM9DS1_Driver.c **** 	while(!I2C001_WriteData(&I2C001_Handle0,&data1))
 7412              		.loc 1 1703 0
 7413 0028 01E0     		b	.L292
 7414              	.L293:
1704:../LSM9DS1_Driver.c **** 	{
1705:../LSM9DS1_Driver.c **** 		flushFIFO();
 7415              		.loc 1 1705 0
 7416 002a FFF7FEFF 		bl	flushFIFO
 7417              	.L292:
1703:../LSM9DS1_Driver.c **** 	while(!I2C001_WriteData(&I2C001_Handle0,&data1))
 7418              		.loc 1 1703 0 discriminator 1
 7419 002e 07F12003 		add	r3, r7, #32
 7420 0032 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 7421 0036 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 7422 003a 1946     		mov	r1, r3
 7423 003c FFF7FEFF 		bl	I2C001_WriteData
 7424 0040 0346     		mov	r3, r0
 7425 0042 002B     		cmp	r3, #0
 7426 0044 F1D0     		beq	.L293
1706:../LSM9DS1_Driver.c **** 	}
1707:../LSM9DS1_Driver.c **** 
1708:../LSM9DS1_Driver.c **** 	delay(DELAY);
 7427              		.loc 1 1708 0
 7428 0046 42F6E060 		movw	r0, #12000
 7429 004a FFF7FEFF 		bl	delay
1709:../LSM9DS1_Driver.c **** 
1710:../LSM9DS1_Driver.c **** 	I2C001_DataType data2;
1711:../LSM9DS1_Driver.c **** 	data2.Data1.TDF_Type = I2C_TDF_MTxData;
 7430              		.loc 1 1711 0
 7431 004e 4FF00003 		mov	r3, #0
 7432 0052 7B77     		strb	r3, [r7, #29]
1712:../LSM9DS1_Driver.c **** 
1713:../LSM9DS1_Driver.c **** 	data2.Data1.Data = subAdr;
 7433              		.loc 1 1713 0
 7434 0054 BB79     		ldrb	r3, [r7, #6]
 7435 0056 3B77     		strb	r3, [r7, #28]
1714:../LSM9DS1_Driver.c **** 	while(!I2C001_WriteData(&I2C001_Handle0,&data2))
 7436              		.loc 1 1714 0
 7437 0058 01E0     		b	.L294
 7438              	.L295:
1715:../LSM9DS1_Driver.c **** 	{
1716:../LSM9DS1_Driver.c **** 		flushFIFO();
 7439              		.loc 1 1716 0
 7440 005a FFF7FEFF 		bl	flushFIFO
 7441              	.L294:
1714:../LSM9DS1_Driver.c **** 	while(!I2C001_WriteData(&I2C001_Handle0,&data2))
 7442              		.loc 1 1714 0 discriminator 1
 7443 005e 07F11C03 		add	r3, r7, #28
 7444 0062 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 7445 0066 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 7446 006a 1946     		mov	r1, r3
 7447 006c FFF7FEFF 		bl	I2C001_WriteData
 7448 0070 0346     		mov	r3, r0
 7449 0072 002B     		cmp	r3, #0
 7450 0074 F1D0     		beq	.L295
1717:../LSM9DS1_Driver.c **** 	}
1718:../LSM9DS1_Driver.c **** 
1719:../LSM9DS1_Driver.c **** 	delay(DELAY);
 7451              		.loc 1 1719 0
 7452 0076 42F6E060 		movw	r0, #12000
 7453 007a FFF7FEFF 		bl	delay
1720:../LSM9DS1_Driver.c **** 
1721:../LSM9DS1_Driver.c **** 	I2C001_DataType data3;
1722:../LSM9DS1_Driver.c **** 	data3.Data1.TDF_Type = I2C_TDF_MRStart;
 7454              		.loc 1 1722 0
 7455 007e 4FF00503 		mov	r3, #5
 7456 0082 7B76     		strb	r3, [r7, #25]
1723:../LSM9DS1_Driver.c **** 	//uint8_t adr1 = address->adr.addressDevice;
1724:../LSM9DS1_Driver.c **** 	data3.Data1.Data = ((adr << 1) | I2C_READ);
 7457              		.loc 1 1724 0
 7458 0084 FB79     		ldrb	r3, [r7, #7]
 7459 0086 4FEA4303 		lsl	r3, r3, #1
 7460 008a DBB2     		uxtb	r3, r3
 7461 008c 43F00103 		orr	r3, r3, #1
 7462 0090 DBB2     		uxtb	r3, r3
 7463 0092 3B76     		strb	r3, [r7, #24]
1725:../LSM9DS1_Driver.c **** 	while(!I2C001_WriteData(&I2C001_Handle0,&data3))
 7464              		.loc 1 1725 0
 7465 0094 01E0     		b	.L296
 7466              	.L297:
1726:../LSM9DS1_Driver.c **** 	{
1727:../LSM9DS1_Driver.c **** 		flushFIFO();
 7467              		.loc 1 1727 0
 7468 0096 FFF7FEFF 		bl	flushFIFO
 7469              	.L296:
1725:../LSM9DS1_Driver.c **** 	while(!I2C001_WriteData(&I2C001_Handle0,&data3))
 7470              		.loc 1 1725 0 discriminator 1
 7471 009a 07F11803 		add	r3, r7, #24
 7472 009e 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 7473 00a2 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 7474 00a6 1946     		mov	r1, r3
 7475 00a8 FFF7FEFF 		bl	I2C001_WriteData
 7476 00ac 0346     		mov	r3, r0
 7477 00ae 002B     		cmp	r3, #0
 7478 00b0 F1D0     		beq	.L297
1728:../LSM9DS1_Driver.c **** 	}
1729:../LSM9DS1_Driver.c **** 
1730:../LSM9DS1_Driver.c **** 	delay(DELAY);
 7479              		.loc 1 1730 0
 7480 00b2 42F6E060 		movw	r0, #12000
 7481 00b6 FFF7FEFF 		bl	delay
1731:../LSM9DS1_Driver.c **** 
1732:../LSM9DS1_Driver.c **** 	I2C001_DataType data4;
1733:../LSM9DS1_Driver.c **** 	data4.Data1.TDF_Type = I2C_TDF_MRxAck1;
 7482              		.loc 1 1733 0
 7483 00ba 4FF00303 		mov	r3, #3
 7484 00be 7B75     		strb	r3, [r7, #21]
1734:../LSM9DS1_Driver.c **** 	data4.Data1.Data = ubyteFF;
 7485              		.loc 1 1734 0
 7486 00c0 4FF0FF03 		mov	r3, #255
 7487 00c4 3B75     		strb	r3, [r7, #20]
1735:../LSM9DS1_Driver.c **** 	while(!I2C001_WriteData(&I2C001_Handle0,&data4))
 7488              		.loc 1 1735 0
 7489 00c6 01E0     		b	.L298
 7490              	.L299:
1736:../LSM9DS1_Driver.c **** 	{
1737:../LSM9DS1_Driver.c **** 		flushFIFO();
 7491              		.loc 1 1737 0
 7492 00c8 FFF7FEFF 		bl	flushFIFO
 7493              	.L298:
1735:../LSM9DS1_Driver.c **** 	while(!I2C001_WriteData(&I2C001_Handle0,&data4))
 7494              		.loc 1 1735 0 discriminator 1
 7495 00cc 07F11403 		add	r3, r7, #20
 7496 00d0 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 7497 00d4 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 7498 00d8 1946     		mov	r1, r3
 7499 00da FFF7FEFF 		bl	I2C001_WriteData
 7500 00de 0346     		mov	r3, r0
 7501 00e0 002B     		cmp	r3, #0
 7502 00e2 F1D0     		beq	.L299
1738:../LSM9DS1_Driver.c **** 	}
1739:../LSM9DS1_Driver.c **** 
1740:../LSM9DS1_Driver.c **** 	delay(DELAY);
 7503              		.loc 1 1740 0
 7504 00e4 42F6E060 		movw	r0, #12000
 7505 00e8 FFF7FEFF 		bl	delay
1741:../LSM9DS1_Driver.c **** 
1742:../LSM9DS1_Driver.c **** 	I2C001_DataType data5;
1743:../LSM9DS1_Driver.c **** 	data5.Data1.TDF_Type = I2C_TDF_MStop;
 7506              		.loc 1 1743 0
 7507 00ec 4FF00603 		mov	r3, #6
 7508 00f0 7B74     		strb	r3, [r7, #17]
1744:../LSM9DS1_Driver.c **** 	data5.Data1.Data = ubyteFF;
 7509              		.loc 1 1744 0
 7510 00f2 4FF0FF03 		mov	r3, #255
 7511 00f6 3B74     		strb	r3, [r7, #16]
1745:../LSM9DS1_Driver.c **** 	while(!I2C001_WriteData(&I2C001_Handle0,&data5))
 7512              		.loc 1 1745 0
 7513 00f8 01E0     		b	.L300
 7514              	.L301:
1746:../LSM9DS1_Driver.c **** 	{
1747:../LSM9DS1_Driver.c **** 		flushFIFO();
 7515              		.loc 1 1747 0
 7516 00fa FFF7FEFF 		bl	flushFIFO
 7517              	.L300:
1745:../LSM9DS1_Driver.c **** 	while(!I2C001_WriteData(&I2C001_Handle0,&data5))
 7518              		.loc 1 1745 0 discriminator 1
 7519 00fe 07F11003 		add	r3, r7, #16
 7520 0102 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 7521 0106 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 7522 010a 1946     		mov	r1, r3
 7523 010c FFF7FEFF 		bl	I2C001_WriteData
 7524 0110 0346     		mov	r3, r0
 7525 0112 002B     		cmp	r3, #0
 7526 0114 F1D0     		beq	.L301
1748:../LSM9DS1_Driver.c **** 	}
1749:../LSM9DS1_Driver.c **** 
1750:../LSM9DS1_Driver.c **** 	delay(DELAY);
 7527              		.loc 1 1750 0
 7528 0116 42F6E060 		movw	r0, #12000
 7529 011a FFF7FEFF 		bl	delay
1751:../LSM9DS1_Driver.c **** 
1752:../LSM9DS1_Driver.c **** 	int k = 0;
 7530              		.loc 1 1752 0
 7531 011e 4FF00003 		mov	r3, #0
 7532 0122 7B62     		str	r3, [r7, #36]
1753:../LSM9DS1_Driver.c **** 	uint16_t bufferToRead = 0;
 7533              		.loc 1 1753 0
 7534 0124 4FF00003 		mov	r3, #0
 7535 0128 FB81     		strh	r3, [r7, #14]	@ movhi
1754:../LSM9DS1_Driver.c **** 	if(I2C001_ReadData(&I2C001_Handle0,&bufferToRead))
 7536              		.loc 1 1754 0
 7537 012a 07F10E03 		add	r3, r7, #14
 7538 012e 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 7539 0132 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 7540 0136 1946     		mov	r1, r3
 7541 0138 FFF7FEFF 		bl	I2C001_ReadData
 7542 013c 0346     		mov	r3, r0
 7543 013e 002B     		cmp	r3, #0
 7544 0140 14D0     		beq	.L302
1755:../LSM9DS1_Driver.c **** 	{
1756:../LSM9DS1_Driver.c **** 		I2C001_ClearFlag(&I2C001_Handle0, I2C001_FLAG_RIF);
 7545              		.loc 1 1756 0
 7546 0142 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 7547 0146 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 7548 014a 4FF00401 		mov	r1, #4
 7549 014e FFF7FEFF 		bl	I2C001_ClearFlag
1757:../LSM9DS1_Driver.c **** 		I2C001_ClearFlag(&I2C001_Handle0, I2C001_FLAG_RSIF);
 7550              		.loc 1 1757 0
 7551 0152 40F20000 		movw	r0, #:lower16:I2C001_Handle0
 7552 0156 C0F20000 		movt	r0, #:upper16:I2C001_Handle0
 7553 015a 4FF00001 		mov	r1, #0
 7554 015e FFF7FEFF 		bl	I2C001_ClearFlag
1758:../LSM9DS1_Driver.c **** 		k++;
 7555              		.loc 1 1758 0
 7556 0162 7B6A     		ldr	r3, [r7, #36]
 7557 0164 03F10103 		add	r3, r3, #1
 7558 0168 7B62     		str	r3, [r7, #36]
 7559 016a 03E0     		b	.L303
 7560              	.L302:
1759:../LSM9DS1_Driver.c **** 	}
1760:../LSM9DS1_Driver.c **** 	else
1761:../LSM9DS1_Driver.c **** 	{
1762:../LSM9DS1_Driver.c **** 		k--;
 7561              		.loc 1 1762 0
 7562 016c 7B6A     		ldr	r3, [r7, #36]
 7563 016e 03F1FF33 		add	r3, r3, #-1
 7564 0172 7B62     		str	r3, [r7, #36]
 7565              	.L303:
1763:../LSM9DS1_Driver.c **** 	}
1764:../LSM9DS1_Driver.c **** 
1765:../LSM9DS1_Driver.c **** 	delay(DELAY);
 7566              		.loc 1 1765 0
 7567 0174 42F6E060 		movw	r0, #12000
 7568 0178 FFF7FEFF 		bl	delay
1766:../LSM9DS1_Driver.c **** 	*buffer = (uint8_t)bufferToRead;
 7569              		.loc 1 1766 0
 7570 017c FB89     		ldrh	r3, [r7, #14]
 7571 017e DAB2     		uxtb	r2, r3
 7572 0180 3B68     		ldr	r3, [r7, #0]
 7573 0182 1A70     		strb	r2, [r3, #0]
1767:../LSM9DS1_Driver.c **** 
1768:../LSM9DS1_Driver.c **** }
 7574              		.loc 1 1768 0
 7575 0184 07F12807 		add	r7, r7, #40
 7576 0188 BD46     		mov	sp, r7
 7577 018a 80BD     		pop	{r7, pc}
 7578              		.cfi_endproc
 7579              	.LFE197:
 7581              		.bss
 7582              	whichDevice.9997:
 7583 0051 00       		.space	1
 7584              	whichByte.9996:
 7585 0052 00       		.space	1
 7586 0053 00       		.align	2
 7587              	stageOfReading.9995:
 7588 0054 00000000 		.space	4
 7589              		.align	2
 7590              	counter.9989:
 7591 0058 00000000 		.space	4
 7592              		.text
 7593              	.Letext0:
 7594              		.file 2 "c:\\dave-3.1.10\\arm-gcc\\bin\\../lib/gcc/arm-none-eabi/4.7.4/../../../../arm-none-eabi/i
 7595              		.file 3 "../LSM9DS1_Types.h"
 7596              		.file 4 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 7597              		.file 5 "C:\\DAVE3_workspace\\mojWorkspace\\Bachelor_improved\\Dave\\Generated\\inc\\DAVESupport/.
 7598              		.file 6 "C:\\DAVE3_workspace\\mojWorkspace\\Bachelor_improved\\Dave\\Generated\\inc\\DAVESupport/.
 7599              		.file 7 "C:\\DAVE3_workspace\\mojWorkspace\\Bachelor_improved\\Dave\\Generated\\inc\\DAVESupport/.
 7600              		.file 8 "C:\\DAVE3_workspace\\mojWorkspace\\Bachelor_improved\\Dave\\Generated\\inc\\DAVESupport/.
 7601              		.file 9 "../LSM9DS1_Driver.h"
 7602              		.file 10 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Include/core_cm4.h"
 7603              		.file 11 "C:\\DAVE3_workspace\\mojWorkspace\\Bachelor_improved\\Dave\\Generated\\inc\\DAVESupport/
DEFINED SYMBOLS
                            *ABS*:00000000 LSM9DS1_Driver.c
                            *COM*:00000004 TimerId
                            *COM*:00000004 Status
                            *COM*:00000004 WriteTimerId
                            *COM*:00000004 WriteTimerStatus
                            *COM*:00000004 TimerIdReadBytes
                            *COM*:00000004 StatusReadBytes
                            *COM*:00000028 settings
                            *COM*:0000000c gBias
                            *COM*:0000000c aBias
                            *COM*:0000000c mBias
                            *COM*:00000006 gBiasRaw
                            *COM*:00000006 aBiasRaw
                            *COM*:00000006 mBiasRaw
                            *COM*:00000001 _autoCalc
                            *COM*:00000001 _mAddress
                            *COM*:00000001 _xgAddress
                            *COM*:00000004 gRes
                            *COM*:00000004 aRes
                            *COM*:00000004 mRes
                            *COM*:00000002 gx
                            *COM*:00000002 gy
                            *COM*:00000002 gz
                            *COM*:00000002 ax
                            *COM*:00000002 ay
                            *COM*:00000002 az
                            *COM*:00000002 mx
                            *COM*:00000002 my
                            *COM*:00000002 mz
                            *COM*:00000002 temperature
                            *COM*:00000064 accelOsX
                            *COM*:00000064 accelOsY
                            *COM*:00000064 accelOsZ
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:56     .bss:00000000 TimerIdReadMeasurements
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:53     .bss:00000000 $d
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:63     .data:00000000 StatusTimerReadMeasurements
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:60     .data:00000000 $d
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:68     .data:00000004 readingAllowed
                            *COM*:000004b0 pomiaryAccel
                            *COM*:00000017 adrAndData
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:73     .bss:00000004 sendMsgTimerExpired
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:79     .bss:00000008 TimerIDSendMsg
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:86     .data:00000008 statusTimerSendMsg
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:92     .bss:0000000c sendingInProgress
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:98     .bss:00000010 counter
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:105    .data:0000000c magSensitivity
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:115    .bss:00000014 accelX
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:121    .bss:00000016 accelY
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:127    .bss:00000018 accelZ
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:133    .bss:0000001c accelXf
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:139    .bss:00000020 accelYf
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:145    .bss:00000024 accelZf
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:151    .bss:00000028 gyroX
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:157    .bss:0000002a gyroY
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:163    .bss:0000002c gyroZ
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:169    .bss:00000030 gyroXf
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:175    .bss:00000034 gyroYf
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:181    .bss:00000038 gyroZf
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:187    .bss:0000003c magnetX
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:193    .bss:0000003e magnetY
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:199    .bss:00000040 magnetZ
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:205    .bss:00000044 magnetXf
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:211    .bss:00000048 magnetYf
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:217    .bss:0000004c magnetZf
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:222    .bss:00000050 copied
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:225    .text.getAccelXf:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:230    .text.getAccelXf:00000000 getAccelXf
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:258    .text.getAccelX:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:263    .text.getAccelX:00000000 getAccelX
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:291    .text.getAccelYf:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:296    .text.getAccelYf:00000000 getAccelYf
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:323    .text.getAccelY:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:328    .text.getAccelY:00000000 getAccelY
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:356    .text.getAccelZf:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:361    .text.getAccelZf:00000000 getAccelZf
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:388    .text.getAccelZ:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:393    .text.getAccelZ:00000000 getAccelZ
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:421    .text.getGyroXf:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:426    .text.getGyroXf:00000000 getGyroXf
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:453    .text.getGyroX:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:458    .text.getGyroX:00000000 getGyroX
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:486    .text.getGyroYf:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:491    .text.getGyroYf:00000000 getGyroYf
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:518    .text.getGyroY:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:523    .text.getGyroY:00000000 getGyroY
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:551    .text.getGyroZf:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:556    .text.getGyroZf:00000000 getGyroZf
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:583    .text.getGyroZ:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:588    .text.getGyroZ:00000000 getGyroZ
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:616    .text.getMagnetXf:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:621    .text.getMagnetXf:00000000 getMagnetXf
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:648    .text.getMagnetX:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:653    .text.getMagnetX:00000000 getMagnetX
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:681    .text.getMagnetYf:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:686    .text.getMagnetYf:00000000 getMagnetYf
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:713    .text.getMagnetY:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:718    .text.getMagnetY:00000000 getMagnetY
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:746    .text.getMagnetZf:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:751    .text.getMagnetZf:00000000 getMagnetZf
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:778    .text.getMagnetZ:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:783    .text.getMagnetZ:00000000 getMagnetZ
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:811    .text.startMeasurements:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:816    .text.startMeasurements:00000000 startMeasurements
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:7148   .text.timerHandlerReceiveOneMeasurementEachSensor:00000000 timerHandlerReceiveOneMeasurementEachSensor
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:854    .text.readAndSendMeasurements:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:859    .text.readAndSendMeasurements:00000000 readAndSendMeasurements
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:5722   .text.calcAccel:00000000 calcAccel
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:5679   .text.calcGyro:00000000 calcGyro
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:5064   .text.calcMag:00000000 calcMag
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:1487   .text.initAdrAndSubAdr:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:1492   .text.initAdrAndSubAdr:00000000 initAdrAndSubAdr
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:1539   .text.initLSM9DS1:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:1544   .text.initLSM9DS1:00000000 initLSM9DS1
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:1607   .text.init:00000000 init
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:1887   .text.begin:00000000 begin
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:1602   .text.init:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:1882   .text.begin:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:1996   .text.constrainScales:00000000 constrainScales
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:2156   .text.calcgRes:00000000 calcgRes
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:2240   .text.calcmRes:00000000 calcmRes
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:2198   .text.calcaRes:00000000 calcaRes
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:2102   .text.initI2C:00000000 initI2C
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:2129   .text.initSPI:00000000 initSPI
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:2566   .text.mReadByte:00000000 mReadByte
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:2617   .text.xgReadByte:00000000 xgReadByte
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:2668   .text.initGyro:00000000 initGyro
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:3064   .text.initAccel:00000000 initAccel
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:3244   .text.initMag:00000000 initMag
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:1991   .text.constrainScales:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:2097   .text.initI2C:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:2124   .text.initSPI:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:2151   .text.calcgRes:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:2188   .text.calcgRes:00000030 $d
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:2193   .text.calcaRes:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:2230   .text.calcaRes:00000030 $d
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:2235   .text.calcmRes:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:2265   .text.calcmRes:00000020 $d
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:2280   .text.calcmRes:00000054 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:2327   .text.delay:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:2332   .text.delay:00000000 delay
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:2379   .text.I2CreadByte:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:2384   .text.I2CreadByte:00000000 I2CreadByte
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:2561   .text.mReadByte:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:2612   .text.xgReadByte:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:2663   .text.initGyro:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:2891   .text.xgWriteByte:00000000 xgWriteByte
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:2886   .text.xgWriteByte:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:2942   .text.I2CwriteByte:00000000 I2CwriteByte
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:2937   .text.I2CwriteByte:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:3059   .text.initAccel:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:3239   .text.initMag:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:3409   .text.mWriteByte:00000000 mWriteByte
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:3404   .text.mWriteByte:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:3456   .text.enableFIFO:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:3461   .text.enableFIFO:00000000 enableFIFO
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:3513   .text.setFIFO:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:3518   .text.setFIFO:00000000 setFIFO
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:3569   .text.calibrate:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:3574   .text.calibrate:00000000 calibrate
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:3933   .text.readGyro1:00000000 readGyro1
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:4096   .text.readAccel1:00000000 readAccel1
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:3821   .text.xgReadBytes:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:3826   .text.xgReadBytes:00000000 xgReadBytes
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:4467   .text.I2CreadBytes:00000000 I2CreadBytes
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:3896   .text.SPIreadBytes:00000000 SPIreadBytes
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:3891   .text.SPIreadBytes:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:3928   .text.readGyro1:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:4091   .text.readAccel1:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:4246   .text.readAccelToSensor:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:4251   .text.readAccelToSensor:00000000 readAccelToSensor
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:4462   .text.I2CreadBytes:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:4685   .text.magAvailable:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:4690   .text.magAvailable:00000000 magAvailable
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:4732   .text.readMag1:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:4737   .text.readMag1:00000000 readMag1
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:4827   .text.calibrateMag:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:4832   .text.calibrateMag:00000000 calibrateMag
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:5107   .text.magOffset:00000000 magOffset
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:5059   .text.calcMag:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:5102   .text.magOffset:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:5174   .text.accelAvailable:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:5179   .text.accelAvailable:00000000 accelAvailable
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:5214   .text.gyroAvailable:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:5219   .text.gyroAvailable:00000000 gyroAvailable
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:5255   .text.tempAvailable:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:5260   .text.tempAvailable:00000000 tempAvailable
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:5296   .text.readAccel:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:5301   .text.readAccel:00000000 readAccel
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:5399   .text.readMag:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:5404   .text.readMag:00000000 readMag
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:5485   .text.readTemp:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:5490   .text.readTemp:00000000 readTemp
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:5571   .text.readGyro:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:5576   .text.readGyro:00000000 readGyro
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:5674   .text.calcGyro:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:5717   .text.calcAccel:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:5760   .text.setGyroScale:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:5765   .text.setGyroScale:00000000 setGyroScale
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:5848   .text.setAccelScale:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:5853   .text.setAccelScale:00000000 setAccelScale
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:5949   .text.setMagScale:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:5954   .text.setMagScale:00000000 setMagScale
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:6050   .text.setGyroODR:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:6055   .text.setGyroODR:00000000 setGyroODR
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:6119   .text.setAccelODR:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:6124   .text.setAccelODR:00000000 setAccelODR
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:6188   .text.setMagODR:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:6193   .text.setMagODR:00000000 setMagODR
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:6250   .text.configInt:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:6255   .text.configInt:00000000 configInt
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:6330   .text.configInactivity:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:6335   .text.configInactivity:00000000 configInactivity
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:6392   .text.getInactivity:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:6397   .text.getInactivity:00000000 getInactivity
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:6434   .text.configAccelInt:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:6439   .text.configAccelInt:00000000 configAccelInt
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:6485   .text.configAccelThs:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:6490   .text.configAccelThs:00000000 configAccelThs
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:6545   .text.getAccelIntSrc:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:6550   .text.getAccelIntSrc:00000000 getAccelIntSrc
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:6595   .text.configGyroInt:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:6600   .text.configGyroInt:00000000 configGyroInt
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:6657   .text.configGyroThs:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:6662   .text.configGyroThs:00000000 configGyroThs
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:6739   .text.getGyroIntSrc:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:6744   .text.getGyroIntSrc:00000000 getGyroIntSrc
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:6789   .text.configMagInt:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:6794   .text.configMagInt:00000000 configMagInt
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:6861   .text.configMagThs:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:6866   .text.configMagThs:00000000 configMagThs
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:6907   .text.getMagIntSrc:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:6912   .text.getMagIntSrc:00000000 getMagIntSrc
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:6957   .text.sleepGyro:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:6962   .text.sleepGyro:00000000 sleepGyro
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:7014   .text.getFIFOSamples:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:7019   .text.getFIFOSamples:00000000 getFIFOSamples
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:7046   .text.timerHandlerSendMsg:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:7051   .text.timerHandlerSendMsg:00000000 timerHandlerSendMsg
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:7590   .bss:00000058 counter.9989
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:7143   .text.timerHandlerReceiveOneMeasurementEachSensor:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:7582   .bss:00000051 whichDevice.9997
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:7584   .bss:00000052 whichByte.9996
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:7380   .text.receiveByte:00000000 receiveByte
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:7587   .bss:00000054 stageOfReading.9995
C:\Users\Mateusz\AppData\Local\Temp\ccLjsdat.s:7375   .text.receiveByte:00000000 $t
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.35166846b5321d4273ad8c4248893ac3
                           .group:00000000 wm4.LSM9DS1_Driver.h.9.225085f752270af24a0df342ed7d3479
                           .group:00000000 wm4.LSM9DS1_Registers.h.9.72af380d6da01de607f77d245bf32825
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.7aefdac4826acebbfc9f3822a0aeb14c
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.XMC4500.h.45.215f4b8c79f46c7645c15373868d08c0
                           .group:00000000 wm4.core_cm4.h.47.41af406cb4cda82c972f112a9cd0a024
                           .group:00000000 wm4.core_cmInstr.h.39.3d3d1b4a79aef37532666dc6ee87c6ac
                           .group:00000000 wm4.core_cm4_simd.h.43.b5d1d38735af6366227b4256d330cf13
                           .group:00000000 wm4.core_cm4.h.178.e5ef5ce66d198d7f00f9d0076e267c41
                           .group:00000000 wm4.system_XMC4500.h.29.827f68baa362c84f2abae4ab67dde7c9
                           .group:00000000 wm4.XMC4500.h.198.8e022f279ff353ed081df898dc7b9cf3
                           .group:00000000 wm4.stddef.h.40.50cf36416e06376af8a9dca28536f2e4
                           .group:00000000 wm4.types.h.60.e75c47576398c648cdcf9000ace5e3d8
                           .group:00000000 wm4.MULTIPLEXER.h.46.4a863fbae1c79f0db26da3ce2dc30d02
                           .group:00000000 wm4.CCU8PWMLIB.h.74.725ec81203769525cc7a424597055f47
                           .group:00000000 wm4.MOTORLIB.h.62.951091d95913dd2ff36d761323a1771d
                           .group:00000000 wm4.DBG001.h.116.d6d9e7459a0faa3905c97c1d2edb339d
                           .group:00000000 wm4.IO004.h.53.442ea5eb47ad9eedc675253aa35f3107
                           .group:00000000 wm4.uc_id.h.35.fa57ecd9f559d2767f56c96da2848c12
                           .group:00000000 wm4.CLK001_Const.h.50.e5e9c2ddc89f4cc9e7b93e9648fa94e4
                           .group:00000000 wm4.CLK001_Conf.h.81.82a8db895dc146da001475dd68223522
                           .group:00000000 wm4.Usic.h.54.8af9f733ba5771eeb374435d205ea54b
                           .group:00000000 wm4.UART001_Conf.h.53.ea28968cb6c53b1be9f53a4d9f42a86f
                           .group:00000000 wm4.SYSTM001.h.64.6ecb31c49bc3e7691644fdcdfc11b5cd
                           .group:00000000 wm4.I2C001.h.97.5277d52889d6c741e048ea45ee1277b5
                           .group:00000000 wm4.I2C001_Conf.h.58.e3e909c2ec9c29fee288b93938e533a2
                           .group:00000000 wm4.stdio.h.31.f48311dde756a2aec27351b58a280fb9
                           .group:00000000 wm4.stddef.h.161.e50ff8a9d5d1abbc15641da28ac571bf
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4.stddef.h.161.c6104a0666cf681b6269ddc9b4f516d4
                           .group:00000000 wm4.reent.h.16.9e42f0e588b85e70b2bf6572af57ce64
                           .group:00000000 wm4.types.h.23.0d949686bbcadd1621462d4fa1f884f9
                           .group:00000000 wm4.types.h.2.e9cec8c90ab35f77d9f499e06ae02400
                           .group:00000000 wm4.types.h.80.1f2c84c0d57dd52dd9936095d9ac218e
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.63.dfdea6580b080784d08faace69b6ed76
                           .group:00000000 wm4.inttypes.h.14.da8ab5c14bc76feb3bf694db03b8ec46
                           .group:00000000 wm4.inttypes.h.20.54b7c434bb63171d5145327a6d429f51
                           .group:00000000 wm4.math.h.35.cc9264b0ced3bd063c5784e64e89cf51
                           .group:00000000 wm4.stdlib.h.13.603ed7eb09a1561ab06840b7c0fcff58
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.53.c69c7609933ff56d59c757cec2d13230
                           .group:00000000 wm4.string.h.8.ef946ad0bc9ad5c970c365dcd1fc4b0a
                           .group:00000000 wm4.string.h.86.d5c872ff52e2712c985b588a0ef39f3c

UNDEFINED SYMBOLS
SYSTM001_CreateTimer
SYSTM001_StartTimer
I2C001_Handle0
I2C001_WriteData
I2C001_ReadData
__aeabi_f2d
__aeabi_ddiv
__aeabi_d2iz
strlen
send
clearErrorFlags
flushFIFO
I2C001_ClearFlag
