   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"SendMeasurementsToBt.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	TimerId,4,4
  20              		.comm	Status,4,4
  21              		.comm	WriteTimerId,4,4
  22              		.comm	WriteTimerStatus,4,4
  23              		.comm	TimerIdReadBytes,4,4
  24              		.comm	StatusReadBytes,4,4
  25              		.comm	settings,40,4
  26              		.comm	gBias,12,4
  27              		.comm	aBias,12,4
  28              		.comm	mBias,12,4
  29              		.comm	gBiasRaw,6,4
  30              		.comm	aBiasRaw,6,4
  31              		.comm	mBiasRaw,6,4
  32              		.comm	_autoCalc,1,1
  33              		.comm	_mAddress,1,1
  34              		.comm	_xgAddress,1,1
  35              		.comm	gRes,4,4
  36              		.comm	aRes,4,4
  37              		.comm	mRes,4,4
  38              		.comm	gx,2,2
  39              		.comm	gy,2,2
  40              		.comm	gz,2,2
  41              		.comm	ax,2,2
  42              		.comm	ay,2,2
  43              		.comm	az,2,2
  44              		.comm	mx,2,2
  45              		.comm	my,2,2
  46              		.comm	mz,2,2
  47              		.comm	temperature,2,2
  48              		.comm	device,20,4
  49              		.global	turnedOn
  50              		.bss
  51              		.align	2
  54              	turnedOn:
  55 0000 00000000 		.space	4
  56              		.comm	xAxis,10,4
  57              		.comm	yAxis,10,4
  58              		.comm	zAxis,10,4
  59              		.comm	xAxisf,30,4
  60              		.comm	yAxisf,30,4
  61              		.comm	zAxisf,30,4
  62              		.comm	connectionFailure,1,1
  63              		.comm	TimerIdSentMsg,4,4
  64              		.comm	turnedOnSentTimer,4,4
  65              		.comm	copied,1,1
  66              		.comm	copiedData,1200,4
  67              		.section	.rodata
  68              		.align	2
  69              	.LC0:
  70 0000 4C534D39 		.ascii	"LSM9DS1\000"
  70      44533100 
  71              		.global	__aeabi_f2d
  72              		.align	2
  73              	.LC1:
  74 0008 78252E32 		.ascii	"x%.2f\000"
  74      6600
  75 000e 0000     		.align	2
  76              	.LC2:
  77 0010 79252E32 		.ascii	"y%.2f\000"
  77      6600
  78 0016 0000     		.align	2
  79              	.LC3:
  80 0018 7A252E32 		.ascii	"z%.2f\000"
  80      6600
  81 001e 0000     		.align	2
  82              	.LC4:
  83 0020 44757061 		.ascii	"Dupa\000"
  83      00
  84 0025 000000   		.align	2
  85              	.LC5:
  86 0028 4779726F 		.ascii	"Gyroscope\000"
  86      73636F70 
  86      6500
  87 0032 0000     		.align	2
  88              	.LC6:
  89 0034 4D61676E 		.ascii	"Magnetometer\000"
  89      65746F6D 
  89      65746572 
  89      00
  90 0041 000000   		.section	.text.sendMeasurementsToBt,"ax",%progbits
  91              		.align	2
  92              		.global	sendMeasurementsToBt
  93              		.thumb
  94              		.thumb_func
  96              	sendMeasurementsToBt:
  97              	.LFB112:
  98              		.file 1 "../SendMeasurementsToBt.c"
   1:../SendMeasurementsToBt.c **** /*
   2:../SendMeasurementsToBt.c ****  * SendMeasurementsToBt.c
   3:../SendMeasurementsToBt.c ****  *
   4:../SendMeasurementsToBt.c ****  *  Created on: 12-02-2016
   5:../SendMeasurementsToBt.c ****  *      Author: Mateusz
   6:../SendMeasurementsToBt.c ****  */
   7:../SendMeasurementsToBt.c **** #include "CleanArray.h"
   8:../SendMeasurementsToBt.c **** #include "LSM9DS1_Driver.h"
   9:../SendMeasurementsToBt.c **** #include "BluetoothDriver.h"
  10:../SendMeasurementsToBt.c **** #include "SendMeasurementsToBt.h"
  11:../SendMeasurementsToBt.c **** #include <DAVE3.h>
  12:../SendMeasurementsToBt.c **** #include <string.h>
  13:../SendMeasurementsToBt.c **** 
  14:../SendMeasurementsToBt.c **** char device[20]; //tablica w ktorej przechowujemy wybrany sensor
  15:../SendMeasurementsToBt.c **** int turnedOn = 0; //czy ktorys timer jest wlaczony
  16:../SendMeasurementsToBt.c **** 
  17:../SendMeasurementsToBt.c **** char xAxis[10]/*[50]*/;
  18:../SendMeasurementsToBt.c **** char yAxis[10]/*[50]*/;
  19:../SendMeasurementsToBt.c **** char zAxis[10]/*[50]*/;
  20:../SendMeasurementsToBt.c **** 
  21:../SendMeasurementsToBt.c **** char xAxisf[30]/*[50]*/;
  22:../SendMeasurementsToBt.c **** char yAxisf[30]/*[50]*/;
  23:../SendMeasurementsToBt.c **** char zAxisf[30]/*[50]*/;
  24:../SendMeasurementsToBt.c **** 
  25:../SendMeasurementsToBt.c **** bool connectionFailure; //jesli wystapil problem z polaczeniem bluetooth to trzeba usunac timer, zm
  26:../SendMeasurementsToBt.c **** 
  27:../SendMeasurementsToBt.c **** handle_t TimerIdSentMsg; //id timera do
  28:../SendMeasurementsToBt.c **** int turnedOnSentTimer;
  29:../SendMeasurementsToBt.c **** char copied;
  30:../SendMeasurementsToBt.c **** accel copiedData[100];
  31:../SendMeasurementsToBt.c **** 
  32:../SendMeasurementsToBt.c **** void sendMeasurementsToBt(void)
  33:../SendMeasurementsToBt.c **** {
  99              		.loc 1 33 0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 1, uses_anonymous_args = 0
 103 0000 80B5     		push	{r7, lr}
 104              	.LCFI0:
 105              		.cfi_def_cfa_offset 8
 106              		.cfi_offset 7, -8
 107              		.cfi_offset 14, -4
 108 0002 00AF     		add	r7, sp, #0
 109              	.LCFI1:
 110              		.cfi_def_cfa_register 7
  34:../SendMeasurementsToBt.c **** 	static i = 0;
  35:../SendMeasurementsToBt.c **** 	if(!strcmp(device, "LSM9DS1"))
 111              		.loc 1 35 0
 112 0004 40F20000 		movw	r0, #:lower16:device
 113 0008 C0F20000 		movt	r0, #:upper16:device
 114 000c 40F20001 		movw	r1, #:lower16:.LC0
 115 0010 C0F20001 		movt	r1, #:upper16:.LC0
 116 0014 FFF7FEFF 		bl	strcmp
 117 0018 0346     		mov	r3, r0
 118 001a 002B     		cmp	r3, #0
 119 001c 40F0B781 		bne	.L2
  36:../SendMeasurementsToBt.c **** 	{
  37:../SendMeasurementsToBt.c **** 		if(0 == i){
 120              		.loc 1 37 0
 121 0020 40F20003 		movw	r3, #:lower16:i.9006
 122 0024 C0F20003 		movt	r3, #:upper16:i.9006
 123 0028 1B68     		ldr	r3, [r3, #0]
 124 002a 002B     		cmp	r3, #0
 125 002c 0DD1     		bne	.L3
  38:../SendMeasurementsToBt.c **** 			startMeasurements();
 126              		.loc 1 38 0
 127 002e FFF7FEFF 		bl	startMeasurements
  39:../SendMeasurementsToBt.c **** 			++i;
 128              		.loc 1 39 0
 129 0032 40F20003 		movw	r3, #:lower16:i.9006
 130 0036 C0F20003 		movt	r3, #:upper16:i.9006
 131 003a 1B68     		ldr	r3, [r3, #0]
 132 003c 03F10102 		add	r2, r3, #1
 133 0040 40F20003 		movw	r3, #:lower16:i.9006
 134 0044 C0F20003 		movt	r3, #:upper16:i.9006
 135 0048 1A60     		str	r2, [r3, #0]
 136              	.L3:
  40:../SendMeasurementsToBt.c **** 		}
  41:../SendMeasurementsToBt.c **** 		readAndSendMeasurements(NULL);
 137              		.loc 1 41 0
 138 004a 4FF00000 		mov	r0, #0
 139 004e FFF7FEFF 		bl	readAndSendMeasurements
  42:../SendMeasurementsToBt.c **** 
  43:../SendMeasurementsToBt.c **** 
  44:../SendMeasurementsToBt.c **** 		if(getAccelX() >= 0)
 140              		.loc 1 44 0
 141 0052 FFF7FEFF 		bl	getAccelX
 142 0056 0346     		mov	r3, r0
 143 0058 002B     		cmp	r3, #0
 144 005a 2CDB     		blt	.L4
  45:../SendMeasurementsToBt.c **** 		{
  46:../SendMeasurementsToBt.c **** 			xAxis[0] = 'x';
 145              		.loc 1 46 0
 146 005c 40F20003 		movw	r3, #:lower16:xAxis
 147 0060 C0F20003 		movt	r3, #:upper16:xAxis
 148 0064 4FF07802 		mov	r2, #120
 149 0068 1A70     		strb	r2, [r3, #0]
  47:../SendMeasurementsToBt.c **** 			xAxis[1] = getAccelX() + 48;
 150              		.loc 1 47 0
 151 006a FFF7FEFF 		bl	getAccelX
 152 006e 0346     		mov	r3, r0
 153 0070 DBB2     		uxtb	r3, r3
 154 0072 03F13003 		add	r3, r3, #48
 155 0076 DAB2     		uxtb	r2, r3
 156 0078 40F20003 		movw	r3, #:lower16:xAxis
 157 007c C0F20003 		movt	r3, #:upper16:xAxis
 158 0080 5A70     		strb	r2, [r3, #1]
  48:../SendMeasurementsToBt.c **** 			xAxis[2] = '\0';
 159              		.loc 1 48 0
 160 0082 40F20003 		movw	r3, #:lower16:xAxis
 161 0086 C0F20003 		movt	r3, #:upper16:xAxis
 162 008a 4FF00002 		mov	r2, #0
 163 008e 9A70     		strb	r2, [r3, #2]
  49:../SendMeasurementsToBt.c **** 
  50:../SendMeasurementsToBt.c **** 			sprintf(xAxisf, "x%.2f", getAccelXf());
 164              		.loc 1 50 0
 165 0090 FFF7FEFF 		bl	getAccelXf
 166 0094 0346     		mov	r3, r0	@ float
 167 0096 1846     		mov	r0, r3	@ float
 168 0098 FFF7FEFF 		bl	__aeabi_f2d
 169 009c 0246     		mov	r2, r0
 170 009e 0B46     		mov	r3, r1
 171 00a0 40F20000 		movw	r0, #:lower16:xAxisf
 172 00a4 C0F20000 		movt	r0, #:upper16:xAxisf
 173 00a8 40F20001 		movw	r1, #:lower16:.LC1
 174 00ac C0F20001 		movt	r1, #:upper16:.LC1
 175 00b0 FFF7FEFF 		bl	sprintf
 176 00b4 35E0     		b	.L5
 177              	.L4:
  51:../SendMeasurementsToBt.c **** 		}
  52:../SendMeasurementsToBt.c **** 		else
  53:../SendMeasurementsToBt.c **** 		{
  54:../SendMeasurementsToBt.c **** 			xAxis[0] = 'x';
 178              		.loc 1 54 0
 179 00b6 40F20003 		movw	r3, #:lower16:xAxis
 180 00ba C0F20003 		movt	r3, #:upper16:xAxis
 181 00be 4FF07802 		mov	r2, #120
 182 00c2 1A70     		strb	r2, [r3, #0]
  55:../SendMeasurementsToBt.c **** 			xAxis[1] = '-';
 183              		.loc 1 55 0
 184 00c4 40F20003 		movw	r3, #:lower16:xAxis
 185 00c8 C0F20003 		movt	r3, #:upper16:xAxis
 186 00cc 4FF02D02 		mov	r2, #45
 187 00d0 5A70     		strb	r2, [r3, #1]
  56:../SendMeasurementsToBt.c **** 			xAxis[2] = abs(getAccelX()) + 48;
 188              		.loc 1 56 0
 189 00d2 FFF7FEFF 		bl	getAccelX
 190 00d6 0346     		mov	r3, r0
 191 00d8 002B     		cmp	r3, #0
 192 00da B8BF     		it	lt
 193 00dc 5B42     		rsblt	r3, r3, #0
 194 00de DBB2     		uxtb	r3, r3
 195 00e0 03F13003 		add	r3, r3, #48
 196 00e4 DAB2     		uxtb	r2, r3
 197 00e6 40F20003 		movw	r3, #:lower16:xAxis
 198 00ea C0F20003 		movt	r3, #:upper16:xAxis
 199 00ee 9A70     		strb	r2, [r3, #2]
  57:../SendMeasurementsToBt.c **** 			xAxis[3] = '\0';
 200              		.loc 1 57 0
 201 00f0 40F20003 		movw	r3, #:lower16:xAxis
 202 00f4 C0F20003 		movt	r3, #:upper16:xAxis
 203 00f8 4FF00002 		mov	r2, #0
 204 00fc DA70     		strb	r2, [r3, #3]
  58:../SendMeasurementsToBt.c **** 
  59:../SendMeasurementsToBt.c **** 			sprintf(xAxisf, "x%.2f", getAccelXf());
 205              		.loc 1 59 0
 206 00fe FFF7FEFF 		bl	getAccelXf
 207 0102 0346     		mov	r3, r0	@ float
 208 0104 1846     		mov	r0, r3	@ float
 209 0106 FFF7FEFF 		bl	__aeabi_f2d
 210 010a 0246     		mov	r2, r0
 211 010c 0B46     		mov	r3, r1
 212 010e 40F20000 		movw	r0, #:lower16:xAxisf
 213 0112 C0F20000 		movt	r0, #:upper16:xAxisf
 214 0116 40F20001 		movw	r1, #:lower16:.LC1
 215 011a C0F20001 		movt	r1, #:upper16:.LC1
 216 011e FFF7FEFF 		bl	sprintf
 217              	.L5:
  60:../SendMeasurementsToBt.c **** 		}
  61:../SendMeasurementsToBt.c **** 
  62:../SendMeasurementsToBt.c **** 		if(getAccelY() >= 0)
 218              		.loc 1 62 0
 219 0122 FFF7FEFF 		bl	getAccelY
 220 0126 0346     		mov	r3, r0
 221 0128 002B     		cmp	r3, #0
 222 012a 2CDB     		blt	.L6
  63:../SendMeasurementsToBt.c **** 		{
  64:../SendMeasurementsToBt.c **** 			yAxis[0] = 'y';
 223              		.loc 1 64 0
 224 012c 40F20003 		movw	r3, #:lower16:yAxis
 225 0130 C0F20003 		movt	r3, #:upper16:yAxis
 226 0134 4FF07902 		mov	r2, #121
 227 0138 1A70     		strb	r2, [r3, #0]
  65:../SendMeasurementsToBt.c **** 			yAxis[1] = getAccelY() + 48;
 228              		.loc 1 65 0
 229 013a FFF7FEFF 		bl	getAccelY
 230 013e 0346     		mov	r3, r0
 231 0140 DBB2     		uxtb	r3, r3
 232 0142 03F13003 		add	r3, r3, #48
 233 0146 DAB2     		uxtb	r2, r3
 234 0148 40F20003 		movw	r3, #:lower16:yAxis
 235 014c C0F20003 		movt	r3, #:upper16:yAxis
 236 0150 5A70     		strb	r2, [r3, #1]
  66:../SendMeasurementsToBt.c **** 			yAxis[2] = '\0';
 237              		.loc 1 66 0
 238 0152 40F20003 		movw	r3, #:lower16:yAxis
 239 0156 C0F20003 		movt	r3, #:upper16:yAxis
 240 015a 4FF00002 		mov	r2, #0
 241 015e 9A70     		strb	r2, [r3, #2]
  67:../SendMeasurementsToBt.c **** 
  68:../SendMeasurementsToBt.c **** 			sprintf(yAxisf, "y%.2f", getAccelYf());
 242              		.loc 1 68 0
 243 0160 FFF7FEFF 		bl	getAccelYf
 244 0164 0346     		mov	r3, r0	@ float
 245 0166 1846     		mov	r0, r3	@ float
 246 0168 FFF7FEFF 		bl	__aeabi_f2d
 247 016c 0246     		mov	r2, r0
 248 016e 0B46     		mov	r3, r1
 249 0170 40F20000 		movw	r0, #:lower16:yAxisf
 250 0174 C0F20000 		movt	r0, #:upper16:yAxisf
 251 0178 40F20001 		movw	r1, #:lower16:.LC2
 252 017c C0F20001 		movt	r1, #:upper16:.LC2
 253 0180 FFF7FEFF 		bl	sprintf
 254 0184 35E0     		b	.L7
 255              	.L6:
  69:../SendMeasurementsToBt.c **** 		}
  70:../SendMeasurementsToBt.c **** 		else
  71:../SendMeasurementsToBt.c **** 		{
  72:../SendMeasurementsToBt.c **** 			yAxis[0] = 'y';
 256              		.loc 1 72 0
 257 0186 40F20003 		movw	r3, #:lower16:yAxis
 258 018a C0F20003 		movt	r3, #:upper16:yAxis
 259 018e 4FF07902 		mov	r2, #121
 260 0192 1A70     		strb	r2, [r3, #0]
  73:../SendMeasurementsToBt.c **** 			yAxis[1] = '-';
 261              		.loc 1 73 0
 262 0194 40F20003 		movw	r3, #:lower16:yAxis
 263 0198 C0F20003 		movt	r3, #:upper16:yAxis
 264 019c 4FF02D02 		mov	r2, #45
 265 01a0 5A70     		strb	r2, [r3, #1]
  74:../SendMeasurementsToBt.c **** 			yAxis[2] = abs(getAccelY()) + 48;
 266              		.loc 1 74 0
 267 01a2 FFF7FEFF 		bl	getAccelY
 268 01a6 0346     		mov	r3, r0
 269 01a8 002B     		cmp	r3, #0
 270 01aa B8BF     		it	lt
 271 01ac 5B42     		rsblt	r3, r3, #0
 272 01ae DBB2     		uxtb	r3, r3
 273 01b0 03F13003 		add	r3, r3, #48
 274 01b4 DAB2     		uxtb	r2, r3
 275 01b6 40F20003 		movw	r3, #:lower16:yAxis
 276 01ba C0F20003 		movt	r3, #:upper16:yAxis
 277 01be 9A70     		strb	r2, [r3, #2]
  75:../SendMeasurementsToBt.c **** 			yAxis[3] = '\0';
 278              		.loc 1 75 0
 279 01c0 40F20003 		movw	r3, #:lower16:yAxis
 280 01c4 C0F20003 		movt	r3, #:upper16:yAxis
 281 01c8 4FF00002 		mov	r2, #0
 282 01cc DA70     		strb	r2, [r3, #3]
  76:../SendMeasurementsToBt.c **** 
  77:../SendMeasurementsToBt.c **** 			sprintf(yAxisf, "y%.2f", getAccelYf());
 283              		.loc 1 77 0
 284 01ce FFF7FEFF 		bl	getAccelYf
 285 01d2 0346     		mov	r3, r0	@ float
 286 01d4 1846     		mov	r0, r3	@ float
 287 01d6 FFF7FEFF 		bl	__aeabi_f2d
 288 01da 0246     		mov	r2, r0
 289 01dc 0B46     		mov	r3, r1
 290 01de 40F20000 		movw	r0, #:lower16:yAxisf
 291 01e2 C0F20000 		movt	r0, #:upper16:yAxisf
 292 01e6 40F20001 		movw	r1, #:lower16:.LC2
 293 01ea C0F20001 		movt	r1, #:upper16:.LC2
 294 01ee FFF7FEFF 		bl	sprintf
 295              	.L7:
  78:../SendMeasurementsToBt.c **** 		}
  79:../SendMeasurementsToBt.c **** 
  80:../SendMeasurementsToBt.c **** 		if(getAccelZ() >= 0)
 296              		.loc 1 80 0
 297 01f2 FFF7FEFF 		bl	getAccelZ
 298 01f6 0346     		mov	r3, r0
 299 01f8 002B     		cmp	r3, #0
 300 01fa 39DB     		blt	.L8
  81:../SendMeasurementsToBt.c **** 		{
  82:../SendMeasurementsToBt.c **** 			zAxis[0] = 'z';
 301              		.loc 1 82 0
 302 01fc 40F20003 		movw	r3, #:lower16:zAxis
 303 0200 C0F20003 		movt	r3, #:upper16:zAxis
 304 0204 4FF07A02 		mov	r2, #122
 305 0208 1A70     		strb	r2, [r3, #0]
  83:../SendMeasurementsToBt.c **** 			zAxis[1] = getAccelZ() + 48;
 306              		.loc 1 83 0
 307 020a FFF7FEFF 		bl	getAccelZ
 308 020e 0346     		mov	r3, r0
 309 0210 DBB2     		uxtb	r3, r3
 310 0212 03F13003 		add	r3, r3, #48
 311 0216 DAB2     		uxtb	r2, r3
 312 0218 40F20003 		movw	r3, #:lower16:zAxis
 313 021c C0F20003 		movt	r3, #:upper16:zAxis
 314 0220 5A70     		strb	r2, [r3, #1]
  84:../SendMeasurementsToBt.c **** 			zAxis[2] = '\0';
 315              		.loc 1 84 0
 316 0222 40F20003 		movw	r3, #:lower16:zAxis
 317 0226 C0F20003 		movt	r3, #:upper16:zAxis
 318 022a 4FF00002 		mov	r2, #0
 319 022e 9A70     		strb	r2, [r3, #2]
  85:../SendMeasurementsToBt.c **** 
  86:../SendMeasurementsToBt.c **** 
  87:../SendMeasurementsToBt.c **** 			sprintf(zAxisf, "z%.2f", getAccelZf());
 320              		.loc 1 87 0
 321 0230 FFF7FEFF 		bl	getAccelZf
 322 0234 0346     		mov	r3, r0	@ float
 323 0236 1846     		mov	r0, r3	@ float
 324 0238 FFF7FEFF 		bl	__aeabi_f2d
 325 023c 0246     		mov	r2, r0
 326 023e 0B46     		mov	r3, r1
 327 0240 40F20000 		movw	r0, #:lower16:zAxisf
 328 0244 C0F20000 		movt	r0, #:upper16:zAxisf
 329 0248 40F20001 		movw	r1, #:lower16:.LC3
 330 024c C0F20001 		movt	r1, #:upper16:.LC3
 331 0250 FFF7FEFF 		bl	sprintf
  88:../SendMeasurementsToBt.c **** 			if(zAxis[1] == 48)
 332              		.loc 1 88 0
 333 0254 40F20003 		movw	r3, #:lower16:zAxis
 334 0258 C0F20003 		movt	r3, #:upper16:zAxis
 335 025c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 336 025e 302B     		cmp	r3, #48
 337 0260 3CD1     		bne	.L9
  89:../SendMeasurementsToBt.c **** 			{
  90:../SendMeasurementsToBt.c **** 				printf("Dupa");
 338              		.loc 1 90 0
 339 0262 40F20000 		movw	r0, #:lower16:.LC4
 340 0266 C0F20000 		movt	r0, #:upper16:.LC4
 341 026a FFF7FEFF 		bl	printf
 342 026e 35E0     		b	.L9
 343              	.L8:
  91:../SendMeasurementsToBt.c **** 			}
  92:../SendMeasurementsToBt.c **** 		}
  93:../SendMeasurementsToBt.c **** 		else
  94:../SendMeasurementsToBt.c **** 		{
  95:../SendMeasurementsToBt.c **** 			zAxis[0] = 'z';
 344              		.loc 1 95 0
 345 0270 40F20003 		movw	r3, #:lower16:zAxis
 346 0274 C0F20003 		movt	r3, #:upper16:zAxis
 347 0278 4FF07A02 		mov	r2, #122
 348 027c 1A70     		strb	r2, [r3, #0]
  96:../SendMeasurementsToBt.c **** 			zAxis[1] = '-';
 349              		.loc 1 96 0
 350 027e 40F20003 		movw	r3, #:lower16:zAxis
 351 0282 C0F20003 		movt	r3, #:upper16:zAxis
 352 0286 4FF02D02 		mov	r2, #45
 353 028a 5A70     		strb	r2, [r3, #1]
  97:../SendMeasurementsToBt.c **** 			zAxis[2] = abs(getAccelZ()) + 48;
 354              		.loc 1 97 0
 355 028c FFF7FEFF 		bl	getAccelZ
 356 0290 0346     		mov	r3, r0
 357 0292 002B     		cmp	r3, #0
 358 0294 B8BF     		it	lt
 359 0296 5B42     		rsblt	r3, r3, #0
 360 0298 DBB2     		uxtb	r3, r3
 361 029a 03F13003 		add	r3, r3, #48
 362 029e DAB2     		uxtb	r2, r3
 363 02a0 40F20003 		movw	r3, #:lower16:zAxis
 364 02a4 C0F20003 		movt	r3, #:upper16:zAxis
 365 02a8 9A70     		strb	r2, [r3, #2]
  98:../SendMeasurementsToBt.c **** 			zAxis[3] = '\0';
 366              		.loc 1 98 0
 367 02aa 40F20003 		movw	r3, #:lower16:zAxis
 368 02ae C0F20003 		movt	r3, #:upper16:zAxis
 369 02b2 4FF00002 		mov	r2, #0
 370 02b6 DA70     		strb	r2, [r3, #3]
  99:../SendMeasurementsToBt.c **** 
 100:../SendMeasurementsToBt.c **** 			sprintf(zAxisf, "z%.2f", getAccelZf());
 371              		.loc 1 100 0
 372 02b8 FFF7FEFF 		bl	getAccelZf
 373 02bc 0346     		mov	r3, r0	@ float
 374 02be 1846     		mov	r0, r3	@ float
 375 02c0 FFF7FEFF 		bl	__aeabi_f2d
 376 02c4 0246     		mov	r2, r0
 377 02c6 0B46     		mov	r3, r1
 378 02c8 40F20000 		movw	r0, #:lower16:zAxisf
 379 02cc C0F20000 		movt	r0, #:upper16:zAxisf
 380 02d0 40F20001 		movw	r1, #:lower16:.LC3
 381 02d4 C0F20001 		movt	r1, #:upper16:.LC3
 382 02d8 FFF7FEFF 		bl	sprintf
 383              	.L9:
 101:../SendMeasurementsToBt.c **** 		}
 102:../SendMeasurementsToBt.c **** 
 103:../SendMeasurementsToBt.c **** 		/*xAxis = getAccelX() + 48;
 104:../SendMeasurementsToBt.c **** 		yAxis = getAccelY() + 48;
 105:../SendMeasurementsToBt.c **** 		zAxis = getAccelZ() + 48;*/
 106:../SendMeasurementsToBt.c **** 
 107:../SendMeasurementsToBt.c **** 		if(0 == turnedOnSentTimer)
 384              		.loc 1 107 0
 385 02dc 40F20003 		movw	r3, #:lower16:turnedOnSentTimer
 386 02e0 C0F20003 		movt	r3, #:upper16:turnedOnSentTimer
 387 02e4 1B68     		ldr	r3, [r3, #0]
 388 02e6 002B     		cmp	r3, #0
 389 02e8 20D1     		bne	.L10
 108:../SendMeasurementsToBt.c **** 		{
 109:../SendMeasurementsToBt.c **** 			TimerIdSentMsg = SYSTM001_CreateTimer(30,SYSTM001_PERIODIC,sendMsgLSM9DS1,NULL);
 390              		.loc 1 109 0
 391 02ea 4FF01E00 		mov	r0, #30
 392 02ee 4FF00101 		mov	r1, #1
 393 02f2 40F20002 		movw	r2, #:lower16:sendMsgLSM9DS1
 394 02f6 C0F20002 		movt	r2, #:upper16:sendMsgLSM9DS1
 395 02fa 4FF00003 		mov	r3, #0
 396 02fe FFF7FEFF 		bl	SYSTM001_CreateTimer
 397 0302 0246     		mov	r2, r0
 398 0304 40F20003 		movw	r3, #:lower16:TimerIdSentMsg
 399 0308 C0F20003 		movt	r3, #:upper16:TimerIdSentMsg
 400 030c 1A60     		str	r2, [r3, #0]
 110:../SendMeasurementsToBt.c **** 			SYSTM001_StartTimer(TimerIdSentMsg);
 401              		.loc 1 110 0
 402 030e 40F20003 		movw	r3, #:lower16:TimerIdSentMsg
 403 0312 C0F20003 		movt	r3, #:upper16:TimerIdSentMsg
 404 0316 1B68     		ldr	r3, [r3, #0]
 405 0318 1846     		mov	r0, r3
 406 031a FFF7FEFF 		bl	SYSTM001_StartTimer
 111:../SendMeasurementsToBt.c **** 			turnedOnSentTimer = 1;
 407              		.loc 1 111 0
 408 031e 40F20003 		movw	r3, #:lower16:turnedOnSentTimer
 409 0322 C0F20003 		movt	r3, #:upper16:turnedOnSentTimer
 410 0326 4FF00102 		mov	r2, #1
 411 032a 1A60     		str	r2, [r3, #0]
 412              	.L10:
 112:../SendMeasurementsToBt.c **** 		}
 113:../SendMeasurementsToBt.c **** 
 114:../SendMeasurementsToBt.c **** 		if(1 == turnedOnSentTimer)
 413              		.loc 1 114 0
 414 032c 40F20003 		movw	r3, #:lower16:turnedOnSentTimer
 415 0330 C0F20003 		movt	r3, #:upper16:turnedOnSentTimer
 416 0334 1B68     		ldr	r3, [r3, #0]
 417 0336 012B     		cmp	r3, #1
 418 0338 40F09281 		bne	.L1
 115:../SendMeasurementsToBt.c **** 		{
 116:../SendMeasurementsToBt.c **** 			if(TRUE == connectionFailure)
 419              		.loc 1 116 0
 420 033c 40F20003 		movw	r3, #:lower16:connectionFailure
 421 0340 C0F20003 		movt	r3, #:upper16:connectionFailure
 422 0344 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 423 0346 012B     		cmp	r3, #1
 424 0348 40F08A81 		bne	.L1
 117:../SendMeasurementsToBt.c **** 			{
 118:../SendMeasurementsToBt.c **** 				connectionFailure = FALSE;
 425              		.loc 1 118 0
 426 034c 40F20003 		movw	r3, #:lower16:connectionFailure
 427 0350 C0F20003 		movt	r3, #:upper16:connectionFailure
 428 0354 4FF00002 		mov	r2, #0
 429 0358 1A70     		strb	r2, [r3, #0]
 119:../SendMeasurementsToBt.c **** 				SYSTM001_StopTimer(TimerIdSentMsg);
 430              		.loc 1 119 0
 431 035a 40F20003 		movw	r3, #:lower16:TimerIdSentMsg
 432 035e C0F20003 		movt	r3, #:upper16:TimerIdSentMsg
 433 0362 1B68     		ldr	r3, [r3, #0]
 434 0364 1846     		mov	r0, r3
 435 0366 FFF7FEFF 		bl	SYSTM001_StopTimer
 120:../SendMeasurementsToBt.c **** 
 121:../SendMeasurementsToBt.c **** 				SYSTM001_DeleteTimer(TimerIdSentMsg);
 436              		.loc 1 121 0
 437 036a 40F20003 		movw	r3, #:lower16:TimerIdSentMsg
 438 036e C0F20003 		movt	r3, #:upper16:TimerIdSentMsg
 439 0372 1B68     		ldr	r3, [r3, #0]
 440 0374 1846     		mov	r0, r3
 441 0376 FFF7FEFF 		bl	SYSTM001_DeleteTimer
 122:../SendMeasurementsToBt.c **** 
 123:../SendMeasurementsToBt.c **** 				TimerIdSentMsg = 0;
 442              		.loc 1 123 0
 443 037a 40F20003 		movw	r3, #:lower16:TimerIdSentMsg
 444 037e C0F20003 		movt	r3, #:upper16:TimerIdSentMsg
 445 0382 4FF00002 		mov	r2, #0
 446 0386 1A60     		str	r2, [r3, #0]
 124:../SendMeasurementsToBt.c **** 				cleanArray();
 447              		.loc 1 124 0
 448 0388 FFF7FEFF 		bl	cleanArray
 449 038c 68E1     		b	.L1
 450              	.L2:
 125:../SendMeasurementsToBt.c **** 
 126:../SendMeasurementsToBt.c **** 			}
 127:../SendMeasurementsToBt.c **** 		}
 128:../SendMeasurementsToBt.c **** 	}
 129:../SendMeasurementsToBt.c **** 	else if(!strcmp(device, "Gyroscope"))
 451              		.loc 1 129 0
 452 038e 40F20000 		movw	r0, #:lower16:device
 453 0392 C0F20000 		movt	r0, #:upper16:device
 454 0396 40F20001 		movw	r1, #:lower16:.LC5
 455 039a C0F20001 		movt	r1, #:upper16:.LC5
 456 039e FFF7FEFF 		bl	strcmp
 457 03a2 0346     		mov	r3, r0
 458 03a4 002B     		cmp	r3, #0
 459 03a6 40F0A880 		bne	.L12
 130:../SendMeasurementsToBt.c **** 	{
 131:../SendMeasurementsToBt.c **** 		if(0 == i){
 460              		.loc 1 131 0
 461 03aa 40F20003 		movw	r3, #:lower16:i.9006
 462 03ae C0F20003 		movt	r3, #:upper16:i.9006
 463 03b2 1B68     		ldr	r3, [r3, #0]
 464 03b4 002B     		cmp	r3, #0
 465 03b6 0DD1     		bne	.L13
 132:../SendMeasurementsToBt.c **** 			startMeasurements();
 466              		.loc 1 132 0
 467 03b8 FFF7FEFF 		bl	startMeasurements
 133:../SendMeasurementsToBt.c **** 			++i;
 468              		.loc 1 133 0
 469 03bc 40F20003 		movw	r3, #:lower16:i.9006
 470 03c0 C0F20003 		movt	r3, #:upper16:i.9006
 471 03c4 1B68     		ldr	r3, [r3, #0]
 472 03c6 03F10102 		add	r2, r3, #1
 473 03ca 40F20003 		movw	r3, #:lower16:i.9006
 474 03ce C0F20003 		movt	r3, #:upper16:i.9006
 475 03d2 1A60     		str	r2, [r3, #0]
 476              	.L13:
 134:../SendMeasurementsToBt.c **** 		}
 135:../SendMeasurementsToBt.c **** 		readAndSendMeasurements(NULL);
 477              		.loc 1 135 0
 478 03d4 4FF00000 		mov	r0, #0
 479 03d8 FFF7FEFF 		bl	readAndSendMeasurements
 136:../SendMeasurementsToBt.c **** 
 137:../SendMeasurementsToBt.c **** 
 138:../SendMeasurementsToBt.c **** 		sprintf(xAxisf, "x%.2f", getGyroXf());
 480              		.loc 1 138 0
 481 03dc FFF7FEFF 		bl	getGyroXf
 482 03e0 0346     		mov	r3, r0	@ float
 483 03e2 1846     		mov	r0, r3	@ float
 484 03e4 FFF7FEFF 		bl	__aeabi_f2d
 485 03e8 0246     		mov	r2, r0
 486 03ea 0B46     		mov	r3, r1
 487 03ec 40F20000 		movw	r0, #:lower16:xAxisf
 488 03f0 C0F20000 		movt	r0, #:upper16:xAxisf
 489 03f4 40F20001 		movw	r1, #:lower16:.LC1
 490 03f8 C0F20001 		movt	r1, #:upper16:.LC1
 491 03fc FFF7FEFF 		bl	sprintf
 139:../SendMeasurementsToBt.c **** 
 140:../SendMeasurementsToBt.c **** 		sprintf(yAxisf, "y%.2f", getGyroYf());
 492              		.loc 1 140 0
 493 0400 FFF7FEFF 		bl	getGyroYf
 494 0404 0346     		mov	r3, r0	@ float
 495 0406 1846     		mov	r0, r3	@ float
 496 0408 FFF7FEFF 		bl	__aeabi_f2d
 497 040c 0246     		mov	r2, r0
 498 040e 0B46     		mov	r3, r1
 499 0410 40F20000 		movw	r0, #:lower16:yAxisf
 500 0414 C0F20000 		movt	r0, #:upper16:yAxisf
 501 0418 40F20001 		movw	r1, #:lower16:.LC2
 502 041c C0F20001 		movt	r1, #:upper16:.LC2
 503 0420 FFF7FEFF 		bl	sprintf
 141:../SendMeasurementsToBt.c **** 
 142:../SendMeasurementsToBt.c **** 		sprintf(zAxisf, "z%.2f", getGyroZf());
 504              		.loc 1 142 0
 505 0424 FFF7FEFF 		bl	getGyroZf
 506 0428 0346     		mov	r3, r0	@ float
 507 042a 1846     		mov	r0, r3	@ float
 508 042c FFF7FEFF 		bl	__aeabi_f2d
 509 0430 0246     		mov	r2, r0
 510 0432 0B46     		mov	r3, r1
 511 0434 40F20000 		movw	r0, #:lower16:zAxisf
 512 0438 C0F20000 		movt	r0, #:upper16:zAxisf
 513 043c 40F20001 		movw	r1, #:lower16:.LC3
 514 0440 C0F20001 		movt	r1, #:upper16:.LC3
 515 0444 FFF7FEFF 		bl	sprintf
 143:../SendMeasurementsToBt.c **** 
 144:../SendMeasurementsToBt.c **** 		if(0 == turnedOnSentTimer)
 516              		.loc 1 144 0
 517 0448 40F20003 		movw	r3, #:lower16:turnedOnSentTimer
 518 044c C0F20003 		movt	r3, #:upper16:turnedOnSentTimer
 519 0450 1B68     		ldr	r3, [r3, #0]
 520 0452 002B     		cmp	r3, #0
 521 0454 20D1     		bne	.L14
 145:../SendMeasurementsToBt.c **** 		{
 146:../SendMeasurementsToBt.c **** 			TimerIdSentMsg = SYSTM001_CreateTimer(30,SYSTM001_PERIODIC,sendMsgLSM9DS1,NULL);
 522              		.loc 1 146 0
 523 0456 4FF01E00 		mov	r0, #30
 524 045a 4FF00101 		mov	r1, #1
 525 045e 40F20002 		movw	r2, #:lower16:sendMsgLSM9DS1
 526 0462 C0F20002 		movt	r2, #:upper16:sendMsgLSM9DS1
 527 0466 4FF00003 		mov	r3, #0
 528 046a FFF7FEFF 		bl	SYSTM001_CreateTimer
 529 046e 0246     		mov	r2, r0
 530 0470 40F20003 		movw	r3, #:lower16:TimerIdSentMsg
 531 0474 C0F20003 		movt	r3, #:upper16:TimerIdSentMsg
 532 0478 1A60     		str	r2, [r3, #0]
 147:../SendMeasurementsToBt.c **** 			SYSTM001_StartTimer(TimerIdSentMsg);
 533              		.loc 1 147 0
 534 047a 40F20003 		movw	r3, #:lower16:TimerIdSentMsg
 535 047e C0F20003 		movt	r3, #:upper16:TimerIdSentMsg
 536 0482 1B68     		ldr	r3, [r3, #0]
 537 0484 1846     		mov	r0, r3
 538 0486 FFF7FEFF 		bl	SYSTM001_StartTimer
 148:../SendMeasurementsToBt.c **** 			turnedOnSentTimer = 1;
 539              		.loc 1 148 0
 540 048a 40F20003 		movw	r3, #:lower16:turnedOnSentTimer
 541 048e C0F20003 		movt	r3, #:upper16:turnedOnSentTimer
 542 0492 4FF00102 		mov	r2, #1
 543 0496 1A60     		str	r2, [r3, #0]
 544              	.L14:
 149:../SendMeasurementsToBt.c **** 		}
 150:../SendMeasurementsToBt.c **** 
 151:../SendMeasurementsToBt.c **** 		if(1 == turnedOnSentTimer)
 545              		.loc 1 151 0
 546 0498 40F20003 		movw	r3, #:lower16:turnedOnSentTimer
 547 049c C0F20003 		movt	r3, #:upper16:turnedOnSentTimer
 548 04a0 1B68     		ldr	r3, [r3, #0]
 549 04a2 012B     		cmp	r3, #1
 550 04a4 40F0DC80 		bne	.L1
 152:../SendMeasurementsToBt.c **** 		{
 153:../SendMeasurementsToBt.c **** 			if(TRUE == connectionFailure)
 551              		.loc 1 153 0
 552 04a8 40F20003 		movw	r3, #:lower16:connectionFailure
 553 04ac C0F20003 		movt	r3, #:upper16:connectionFailure
 554 04b0 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 555 04b2 012B     		cmp	r3, #1
 556 04b4 40F0D480 		bne	.L1
 154:../SendMeasurementsToBt.c **** 			{
 155:../SendMeasurementsToBt.c **** 				connectionFailure = FALSE;
 557              		.loc 1 155 0
 558 04b8 40F20003 		movw	r3, #:lower16:connectionFailure
 559 04bc C0F20003 		movt	r3, #:upper16:connectionFailure
 560 04c0 4FF00002 		mov	r2, #0
 561 04c4 1A70     		strb	r2, [r3, #0]
 156:../SendMeasurementsToBt.c **** 				SYSTM001_StopTimer(TimerIdSentMsg);
 562              		.loc 1 156 0
 563 04c6 40F20003 		movw	r3, #:lower16:TimerIdSentMsg
 564 04ca C0F20003 		movt	r3, #:upper16:TimerIdSentMsg
 565 04ce 1B68     		ldr	r3, [r3, #0]
 566 04d0 1846     		mov	r0, r3
 567 04d2 FFF7FEFF 		bl	SYSTM001_StopTimer
 157:../SendMeasurementsToBt.c **** 
 158:../SendMeasurementsToBt.c **** 				SYSTM001_DeleteTimer(TimerIdSentMsg);
 568              		.loc 1 158 0
 569 04d6 40F20003 		movw	r3, #:lower16:TimerIdSentMsg
 570 04da C0F20003 		movt	r3, #:upper16:TimerIdSentMsg
 571 04de 1B68     		ldr	r3, [r3, #0]
 572 04e0 1846     		mov	r0, r3
 573 04e2 FFF7FEFF 		bl	SYSTM001_DeleteTimer
 159:../SendMeasurementsToBt.c **** 
 160:../SendMeasurementsToBt.c **** 				TimerIdSentMsg = 0;
 574              		.loc 1 160 0
 575 04e6 40F20003 		movw	r3, #:lower16:TimerIdSentMsg
 576 04ea C0F20003 		movt	r3, #:upper16:TimerIdSentMsg
 577 04ee 4FF00002 		mov	r2, #0
 578 04f2 1A60     		str	r2, [r3, #0]
 161:../SendMeasurementsToBt.c **** 				cleanArray();
 579              		.loc 1 161 0
 580 04f4 FFF7FEFF 		bl	cleanArray
 581 04f8 B2E0     		b	.L1
 582              	.L12:
 162:../SendMeasurementsToBt.c **** 
 163:../SendMeasurementsToBt.c **** 			}
 164:../SendMeasurementsToBt.c **** 		}
 165:../SendMeasurementsToBt.c **** 	}
 166:../SendMeasurementsToBt.c **** 	else if(!strcmp(device, "Magnetometer"))
 583              		.loc 1 166 0
 584 04fa 40F20000 		movw	r0, #:lower16:device
 585 04fe C0F20000 		movt	r0, #:upper16:device
 586 0502 40F20001 		movw	r1, #:lower16:.LC6
 587 0506 C0F20001 		movt	r1, #:upper16:.LC6
 588 050a FFF7FEFF 		bl	strcmp
 589 050e 0346     		mov	r3, r0
 590 0510 002B     		cmp	r3, #0
 591 0512 40F0A580 		bne	.L1
 167:../SendMeasurementsToBt.c **** 	{
 168:../SendMeasurementsToBt.c **** 		if(0 == i){
 592              		.loc 1 168 0
 593 0516 40F20003 		movw	r3, #:lower16:i.9006
 594 051a C0F20003 		movt	r3, #:upper16:i.9006
 595 051e 1B68     		ldr	r3, [r3, #0]
 596 0520 002B     		cmp	r3, #0
 597 0522 0DD1     		bne	.L15
 169:../SendMeasurementsToBt.c **** 			startMeasurements();
 598              		.loc 1 169 0
 599 0524 FFF7FEFF 		bl	startMeasurements
 170:../SendMeasurementsToBt.c **** 			++i;
 600              		.loc 1 170 0
 601 0528 40F20003 		movw	r3, #:lower16:i.9006
 602 052c C0F20003 		movt	r3, #:upper16:i.9006
 603 0530 1B68     		ldr	r3, [r3, #0]
 604 0532 03F10102 		add	r2, r3, #1
 605 0536 40F20003 		movw	r3, #:lower16:i.9006
 606 053a C0F20003 		movt	r3, #:upper16:i.9006
 607 053e 1A60     		str	r2, [r3, #0]
 608              	.L15:
 171:../SendMeasurementsToBt.c **** 		}
 172:../SendMeasurementsToBt.c **** 		readAndSendMeasurements(NULL);
 609              		.loc 1 172 0
 610 0540 4FF00000 		mov	r0, #0
 611 0544 FFF7FEFF 		bl	readAndSendMeasurements
 173:../SendMeasurementsToBt.c **** 
 174:../SendMeasurementsToBt.c **** 
 175:../SendMeasurementsToBt.c **** 		sprintf(xAxisf, "x%.2f", getMagnetXf());
 612              		.loc 1 175 0
 613 0548 FFF7FEFF 		bl	getMagnetXf
 614 054c 0346     		mov	r3, r0	@ float
 615 054e 1846     		mov	r0, r3	@ float
 616 0550 FFF7FEFF 		bl	__aeabi_f2d
 617 0554 0246     		mov	r2, r0
 618 0556 0B46     		mov	r3, r1
 619 0558 40F20000 		movw	r0, #:lower16:xAxisf
 620 055c C0F20000 		movt	r0, #:upper16:xAxisf
 621 0560 40F20001 		movw	r1, #:lower16:.LC1
 622 0564 C0F20001 		movt	r1, #:upper16:.LC1
 623 0568 FFF7FEFF 		bl	sprintf
 176:../SendMeasurementsToBt.c **** 
 177:../SendMeasurementsToBt.c **** 		sprintf(yAxisf, "y%.2f", getMagnetYf());
 624              		.loc 1 177 0
 625 056c FFF7FEFF 		bl	getMagnetYf
 626 0570 0346     		mov	r3, r0	@ float
 627 0572 1846     		mov	r0, r3	@ float
 628 0574 FFF7FEFF 		bl	__aeabi_f2d
 629 0578 0246     		mov	r2, r0
 630 057a 0B46     		mov	r3, r1
 631 057c 40F20000 		movw	r0, #:lower16:yAxisf
 632 0580 C0F20000 		movt	r0, #:upper16:yAxisf
 633 0584 40F20001 		movw	r1, #:lower16:.LC2
 634 0588 C0F20001 		movt	r1, #:upper16:.LC2
 635 058c FFF7FEFF 		bl	sprintf
 178:../SendMeasurementsToBt.c **** 
 179:../SendMeasurementsToBt.c **** 		sprintf(zAxisf, "z%.2f", getMagnetZf());
 636              		.loc 1 179 0
 637 0590 FFF7FEFF 		bl	getMagnetZf
 638 0594 0346     		mov	r3, r0	@ float
 639 0596 1846     		mov	r0, r3	@ float
 640 0598 FFF7FEFF 		bl	__aeabi_f2d
 641 059c 0246     		mov	r2, r0
 642 059e 0B46     		mov	r3, r1
 643 05a0 40F20000 		movw	r0, #:lower16:zAxisf
 644 05a4 C0F20000 		movt	r0, #:upper16:zAxisf
 645 05a8 40F20001 		movw	r1, #:lower16:.LC3
 646 05ac C0F20001 		movt	r1, #:upper16:.LC3
 647 05b0 FFF7FEFF 		bl	sprintf
 180:../SendMeasurementsToBt.c **** 
 181:../SendMeasurementsToBt.c **** 		if(0 == turnedOnSentTimer)
 648              		.loc 1 181 0
 649 05b4 40F20003 		movw	r3, #:lower16:turnedOnSentTimer
 650 05b8 C0F20003 		movt	r3, #:upper16:turnedOnSentTimer
 651 05bc 1B68     		ldr	r3, [r3, #0]
 652 05be 002B     		cmp	r3, #0
 653 05c0 20D1     		bne	.L16
 182:../SendMeasurementsToBt.c **** 		{
 183:../SendMeasurementsToBt.c **** 			TimerIdSentMsg = SYSTM001_CreateTimer(30,SYSTM001_PERIODIC,sendMsgLSM9DS1,NULL);
 654              		.loc 1 183 0
 655 05c2 4FF01E00 		mov	r0, #30
 656 05c6 4FF00101 		mov	r1, #1
 657 05ca 40F20002 		movw	r2, #:lower16:sendMsgLSM9DS1
 658 05ce C0F20002 		movt	r2, #:upper16:sendMsgLSM9DS1
 659 05d2 4FF00003 		mov	r3, #0
 660 05d6 FFF7FEFF 		bl	SYSTM001_CreateTimer
 661 05da 0246     		mov	r2, r0
 662 05dc 40F20003 		movw	r3, #:lower16:TimerIdSentMsg
 663 05e0 C0F20003 		movt	r3, #:upper16:TimerIdSentMsg
 664 05e4 1A60     		str	r2, [r3, #0]
 184:../SendMeasurementsToBt.c **** 			SYSTM001_StartTimer(TimerIdSentMsg);
 665              		.loc 1 184 0
 666 05e6 40F20003 		movw	r3, #:lower16:TimerIdSentMsg
 667 05ea C0F20003 		movt	r3, #:upper16:TimerIdSentMsg
 668 05ee 1B68     		ldr	r3, [r3, #0]
 669 05f0 1846     		mov	r0, r3
 670 05f2 FFF7FEFF 		bl	SYSTM001_StartTimer
 185:../SendMeasurementsToBt.c **** 			turnedOnSentTimer = 1;
 671              		.loc 1 185 0
 672 05f6 40F20003 		movw	r3, #:lower16:turnedOnSentTimer
 673 05fa C0F20003 		movt	r3, #:upper16:turnedOnSentTimer
 674 05fe 4FF00102 		mov	r2, #1
 675 0602 1A60     		str	r2, [r3, #0]
 676              	.L16:
 186:../SendMeasurementsToBt.c **** 		}
 187:../SendMeasurementsToBt.c **** 
 188:../SendMeasurementsToBt.c **** 		if(1 == turnedOnSentTimer)
 677              		.loc 1 188 0
 678 0604 40F20003 		movw	r3, #:lower16:turnedOnSentTimer
 679 0608 C0F20003 		movt	r3, #:upper16:turnedOnSentTimer
 680 060c 1B68     		ldr	r3, [r3, #0]
 681 060e 012B     		cmp	r3, #1
 682 0610 26D1     		bne	.L1
 189:../SendMeasurementsToBt.c **** 		{
 190:../SendMeasurementsToBt.c **** 			if(TRUE == connectionFailure)
 683              		.loc 1 190 0
 684 0612 40F20003 		movw	r3, #:lower16:connectionFailure
 685 0616 C0F20003 		movt	r3, #:upper16:connectionFailure
 686 061a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 687 061c 012B     		cmp	r3, #1
 688 061e 1FD1     		bne	.L1
 191:../SendMeasurementsToBt.c **** 			{
 192:../SendMeasurementsToBt.c **** 				connectionFailure = FALSE;
 689              		.loc 1 192 0
 690 0620 40F20003 		movw	r3, #:lower16:connectionFailure
 691 0624 C0F20003 		movt	r3, #:upper16:connectionFailure
 692 0628 4FF00002 		mov	r2, #0
 693 062c 1A70     		strb	r2, [r3, #0]
 193:../SendMeasurementsToBt.c **** 				SYSTM001_StopTimer(TimerIdSentMsg);
 694              		.loc 1 193 0
 695 062e 40F20003 		movw	r3, #:lower16:TimerIdSentMsg
 696 0632 C0F20003 		movt	r3, #:upper16:TimerIdSentMsg
 697 0636 1B68     		ldr	r3, [r3, #0]
 698 0638 1846     		mov	r0, r3
 699 063a FFF7FEFF 		bl	SYSTM001_StopTimer
 194:../SendMeasurementsToBt.c **** 
 195:../SendMeasurementsToBt.c **** 				SYSTM001_DeleteTimer(TimerIdSentMsg);
 700              		.loc 1 195 0
 701 063e 40F20003 		movw	r3, #:lower16:TimerIdSentMsg
 702 0642 C0F20003 		movt	r3, #:upper16:TimerIdSentMsg
 703 0646 1B68     		ldr	r3, [r3, #0]
 704 0648 1846     		mov	r0, r3
 705 064a FFF7FEFF 		bl	SYSTM001_DeleteTimer
 196:../SendMeasurementsToBt.c **** 
 197:../SendMeasurementsToBt.c **** 				TimerIdSentMsg = 0;
 706              		.loc 1 197 0
 707 064e 40F20003 		movw	r3, #:lower16:TimerIdSentMsg
 708 0652 C0F20003 		movt	r3, #:upper16:TimerIdSentMsg
 709 0656 4FF00002 		mov	r2, #0
 710 065a 1A60     		str	r2, [r3, #0]
 198:../SendMeasurementsToBt.c **** 				cleanArray();
 711              		.loc 1 198 0
 712 065c FFF7FEFF 		bl	cleanArray
 713              	.L1:
 199:../SendMeasurementsToBt.c **** 
 200:../SendMeasurementsToBt.c **** 			}
 201:../SendMeasurementsToBt.c **** 		}
 202:../SendMeasurementsToBt.c **** 	}
 203:../SendMeasurementsToBt.c **** }
 714              		.loc 1 203 0
 715 0660 80BD     		pop	{r7, pc}
 716              		.cfi_endproc
 717              	.LFE112:
 719 0662 00BF     		.section	.text.sendMsgLSM9DS1,"ax",%progbits
 720              		.align	2
 721              		.global	sendMsgLSM9DS1
 722              		.thumb
 723              		.thumb_func
 725              	sendMsgLSM9DS1:
 726              	.LFB113:
 204:../SendMeasurementsToBt.c **** 
 205:../SendMeasurementsToBt.c **** 
 206:../SendMeasurementsToBt.c **** void sendMsgLSM9DS1(void *T)
 207:../SendMeasurementsToBt.c **** {
 727              		.loc 1 207 0
 728              		.cfi_startproc
 729              		@ args = 0, pretend = 0, frame = 8
 730              		@ frame_needed = 1, uses_anonymous_args = 0
 731 0000 80B5     		push	{r7, lr}
 732              	.LCFI2:
 733              		.cfi_def_cfa_offset 8
 734              		.cfi_offset 7, -8
 735              		.cfi_offset 14, -4
 736 0002 82B0     		sub	sp, sp, #8
 737              	.LCFI3:
 738              		.cfi_def_cfa_offset 16
 739 0004 00AF     		add	r7, sp, #0
 740              	.LCFI4:
 741              		.cfi_def_cfa_register 7
 742 0006 7860     		str	r0, [r7, #4]
 208:../SendMeasurementsToBt.c **** 	static int i = 0;
 209:../SendMeasurementsToBt.c **** 
 210:../SendMeasurementsToBt.c **** 	if(copied == 1){
 743              		.loc 1 210 0
 744 0008 40F20003 		movw	r3, #:lower16:copied
 745 000c C0F20003 		movt	r3, #:upper16:copied
 746 0010 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 747 0012 012B     		cmp	r3, #1
 748 0014 5FD1     		bne	.L17
 211:../SendMeasurementsToBt.c **** 		if(0 == i){/*
 749              		.loc 1 211 0
 750 0016 40F20003 		movw	r3, #:lower16:i.9010
 751 001a C0F20003 		movt	r3, #:upper16:i.9010
 752 001e 1B68     		ldr	r3, [r3, #0]
 753 0020 002B     		cmp	r3, #0
 754 0022 1AD1     		bne	.L19
 212:../SendMeasurementsToBt.c **** 			char xMs[51];
 213:../SendMeasurementsToBt.c **** 
 214:../SendMeasurementsToBt.c **** 			for(int i = 0; i < 50; i++){
 215:../SendMeasurementsToBt.c **** 				xMs[i] = copiedData[i].ax;
 216:../SendMeasurementsToBt.c **** 				xMs[i] += 48; //to 48 to offset
 217:../SendMeasurementsToBt.c **** 			}
 218:../SendMeasurementsToBt.c **** 			xMs[i] = '\0';*/
 219:../SendMeasurementsToBt.c **** 
 220:../SendMeasurementsToBt.c **** 			//send(xAxis, strlen((const char*)xAxis));
 221:../SendMeasurementsToBt.c **** 
 222:../SendMeasurementsToBt.c **** 			send(xAxisf, strlen((const char*)xAxisf));
 755              		.loc 1 222 0
 756 0024 40F20000 		movw	r0, #:lower16:xAxisf
 757 0028 C0F20000 		movt	r0, #:upper16:xAxisf
 758 002c FFF7FEFF 		bl	strlen
 759 0030 0346     		mov	r3, r0
 760 0032 40F20000 		movw	r0, #:lower16:xAxisf
 761 0036 C0F20000 		movt	r0, #:upper16:xAxisf
 762 003a 1946     		mov	r1, r3
 763 003c FFF7FEFF 		bl	send
 223:../SendMeasurementsToBt.c **** 
 224:../SendMeasurementsToBt.c **** 			//send(xMs, strlen(xMs));
 225:../SendMeasurementsToBt.c **** 
 226:../SendMeasurementsToBt.c **** 			i++;
 764              		.loc 1 226 0
 765 0040 40F20003 		movw	r3, #:lower16:i.9010
 766 0044 C0F20003 		movt	r3, #:upper16:i.9010
 767 0048 1B68     		ldr	r3, [r3, #0]
 768 004a 03F10102 		add	r2, r3, #1
 769 004e 40F20003 		movw	r3, #:lower16:i.9010
 770 0052 C0F20003 		movt	r3, #:upper16:i.9010
 771 0056 1A60     		str	r2, [r3, #0]
 772 0058 3DE0     		b	.L17
 773              	.L19:
 227:../SendMeasurementsToBt.c **** 		}
 228:../SendMeasurementsToBt.c **** 		else if(1 == i)
 774              		.loc 1 228 0
 775 005a 40F20003 		movw	r3, #:lower16:i.9010
 776 005e C0F20003 		movt	r3, #:upper16:i.9010
 777 0062 1B68     		ldr	r3, [r3, #0]
 778 0064 012B     		cmp	r3, #1
 779 0066 1AD1     		bne	.L20
 229:../SendMeasurementsToBt.c **** 		{
 230:../SendMeasurementsToBt.c **** 			/*char yMs[51];
 231:../SendMeasurementsToBt.c **** 
 232:../SendMeasurementsToBt.c **** 			for(int i = 0; i < 50; i++){
 233:../SendMeasurementsToBt.c **** 				yMs[i] = copiedData[i].ay;
 234:../SendMeasurementsToBt.c **** 				yMs[i] += 48; //to 48 to offset
 235:../SendMeasurementsToBt.c **** 			}
 236:../SendMeasurementsToBt.c **** 			yMs[i] = '\0';*/
 237:../SendMeasurementsToBt.c **** 
 238:../SendMeasurementsToBt.c **** 			//send(yAxis, strlen((const char*)yAxis));
 239:../SendMeasurementsToBt.c **** 
 240:../SendMeasurementsToBt.c **** 			send(yAxisf, strlen((const char*)yAxisf));
 780              		.loc 1 240 0
 781 0068 40F20000 		movw	r0, #:lower16:yAxisf
 782 006c C0F20000 		movt	r0, #:upper16:yAxisf
 783 0070 FFF7FEFF 		bl	strlen
 784 0074 0346     		mov	r3, r0
 785 0076 40F20000 		movw	r0, #:lower16:yAxisf
 786 007a C0F20000 		movt	r0, #:upper16:yAxisf
 787 007e 1946     		mov	r1, r3
 788 0080 FFF7FEFF 		bl	send
 241:../SendMeasurementsToBt.c **** 			/*send(yMs,strlen(yMs));*/
 242:../SendMeasurementsToBt.c **** 
 243:../SendMeasurementsToBt.c **** 			i++;
 789              		.loc 1 243 0
 790 0084 40F20003 		movw	r3, #:lower16:i.9010
 791 0088 C0F20003 		movt	r3, #:upper16:i.9010
 792 008c 1B68     		ldr	r3, [r3, #0]
 793 008e 03F10102 		add	r2, r3, #1
 794 0092 40F20003 		movw	r3, #:lower16:i.9010
 795 0096 C0F20003 		movt	r3, #:upper16:i.9010
 796 009a 1A60     		str	r2, [r3, #0]
 797 009c 1BE0     		b	.L17
 798              	.L20:
 244:../SendMeasurementsToBt.c **** 		}
 245:../SendMeasurementsToBt.c **** 		else if(2 == i)
 799              		.loc 1 245 0
 800 009e 40F20003 		movw	r3, #:lower16:i.9010
 801 00a2 C0F20003 		movt	r3, #:upper16:i.9010
 802 00a6 1B68     		ldr	r3, [r3, #0]
 803 00a8 022B     		cmp	r3, #2
 804 00aa 14D1     		bne	.L17
 246:../SendMeasurementsToBt.c **** 		{
 247:../SendMeasurementsToBt.c **** 			/*char zMs[51];
 248:../SendMeasurementsToBt.c **** 
 249:../SendMeasurementsToBt.c **** 			for(int i = 0; i < 50; i++){
 250:../SendMeasurementsToBt.c **** 				zMs[i] = copiedData[i].az;
 251:../SendMeasurementsToBt.c **** 				zMs[i] += 48; //to 48 to offset
 252:../SendMeasurementsToBt.c **** 			}
 253:../SendMeasurementsToBt.c **** 			zMs[i] = '\0';*/
 254:../SendMeasurementsToBt.c **** 
 255:../SendMeasurementsToBt.c **** 			//send(zAxis, strlen((const char*)zAxis));
 256:../SendMeasurementsToBt.c **** 
 257:../SendMeasurementsToBt.c **** 			send(zAxisf, strlen((const char*)zAxisf));
 805              		.loc 1 257 0
 806 00ac 40F20000 		movw	r0, #:lower16:zAxisf
 807 00b0 C0F20000 		movt	r0, #:upper16:zAxisf
 808 00b4 FFF7FEFF 		bl	strlen
 809 00b8 0346     		mov	r3, r0
 810 00ba 40F20000 		movw	r0, #:lower16:zAxisf
 811 00be C0F20000 		movt	r0, #:upper16:zAxisf
 812 00c2 1946     		mov	r1, r3
 813 00c4 FFF7FEFF 		bl	send
 258:../SendMeasurementsToBt.c **** 			//copied = 0;
 259:../SendMeasurementsToBt.c **** 			i = 0;
 814              		.loc 1 259 0
 815 00c8 40F20003 		movw	r3, #:lower16:i.9010
 816 00cc C0F20003 		movt	r3, #:upper16:i.9010
 817 00d0 4FF00002 		mov	r2, #0
 818 00d4 1A60     		str	r2, [r3, #0]
 819              	.L17:
 260:../SendMeasurementsToBt.c **** 		}
 261:../SendMeasurementsToBt.c **** 	}
 262:../SendMeasurementsToBt.c **** }
 820              		.loc 1 262 0
 821 00d6 07F10807 		add	r7, r7, #8
 822 00da BD46     		mov	sp, r7
 823 00dc 80BD     		pop	{r7, pc}
 824              		.cfi_endproc
 825              	.LFE113:
 827 00de 00BF     		.bss
 828              		.align	2
 829              	i.9010:
 830 0004 00000000 		.space	4
 831              		.align	2
 832              	i.9006:
 833 0008 00000000 		.space	4
 834              		.text
 835              	.Letext0:
 836              		.file 2 "c:\\dave-3.1.10\\arm-gcc\\bin\\../lib/gcc/arm-none-eabi/4.7.4/../../../../arm-none-eabi/i
 837              		.file 3 "../LSM9DS1_Types.h"
 838              		.file 4 "C:\\DAVE3_workspace\\mojWorkspace\\Bachelor_improved\\Dave\\Generated\\inc\\DAVESupport/.
 839              		.file 5 "C:\\DAVE3_workspace\\mojWorkspace\\Bachelor_improved\\Dave\\Generated\\inc\\DAVESupport/.
 840              		.file 6 "../LSM9DS1_Driver.h"
 841              		.file 7 "C:\\DAVE-3.1.10\\eclipse\\/../CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 SendMeasurementsToBt.c
                            *COM*:00000004 TimerId
                            *COM*:00000004 Status
                            *COM*:00000004 WriteTimerId
                            *COM*:00000004 WriteTimerStatus
                            *COM*:00000004 TimerIdReadBytes
                            *COM*:00000004 StatusReadBytes
                            *COM*:00000028 settings
                            *COM*:0000000c gBias
                            *COM*:0000000c aBias
                            *COM*:0000000c mBias
                            *COM*:00000006 gBiasRaw
                            *COM*:00000006 aBiasRaw
                            *COM*:00000006 mBiasRaw
                            *COM*:00000001 _autoCalc
                            *COM*:00000001 _mAddress
                            *COM*:00000001 _xgAddress
                            *COM*:00000004 gRes
                            *COM*:00000004 aRes
                            *COM*:00000004 mRes
                            *COM*:00000002 gx
                            *COM*:00000002 gy
                            *COM*:00000002 gz
                            *COM*:00000002 ax
                            *COM*:00000002 ay
                            *COM*:00000002 az
                            *COM*:00000002 mx
                            *COM*:00000002 my
                            *COM*:00000002 mz
                            *COM*:00000002 temperature
                            *COM*:00000014 device
C:\Users\Mateusz\AppData\Local\Temp\ccNbWAxc.s:54     .bss:00000000 turnedOn
C:\Users\Mateusz\AppData\Local\Temp\ccNbWAxc.s:51     .bss:00000000 $d
                            *COM*:0000000a xAxis
                            *COM*:0000000a yAxis
                            *COM*:0000000a zAxis
                            *COM*:0000001e xAxisf
                            *COM*:0000001e yAxisf
                            *COM*:0000001e zAxisf
                            *COM*:00000001 connectionFailure
                            *COM*:00000004 TimerIdSentMsg
                            *COM*:00000004 turnedOnSentTimer
                            *COM*:00000001 copied
                            *COM*:000004b0 copiedData
C:\Users\Mateusz\AppData\Local\Temp\ccNbWAxc.s:68     .rodata:00000000 $d
C:\Users\Mateusz\AppData\Local\Temp\ccNbWAxc.s:69     .rodata:00000000 .LC0
C:\Users\Mateusz\AppData\Local\Temp\ccNbWAxc.s:73     .rodata:00000008 .LC1
C:\Users\Mateusz\AppData\Local\Temp\ccNbWAxc.s:76     .rodata:00000010 .LC2
C:\Users\Mateusz\AppData\Local\Temp\ccNbWAxc.s:79     .rodata:00000018 .LC3
C:\Users\Mateusz\AppData\Local\Temp\ccNbWAxc.s:82     .rodata:00000020 .LC4
C:\Users\Mateusz\AppData\Local\Temp\ccNbWAxc.s:85     .rodata:00000028 .LC5
C:\Users\Mateusz\AppData\Local\Temp\ccNbWAxc.s:88     .rodata:00000034 .LC6
C:\Users\Mateusz\AppData\Local\Temp\ccNbWAxc.s:91     .text.sendMeasurementsToBt:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccNbWAxc.s:96     .text.sendMeasurementsToBt:00000000 sendMeasurementsToBt
C:\Users\Mateusz\AppData\Local\Temp\ccNbWAxc.s:832    .bss:00000008 i.9006
C:\Users\Mateusz\AppData\Local\Temp\ccNbWAxc.s:725    .text.sendMsgLSM9DS1:00000000 sendMsgLSM9DS1
C:\Users\Mateusz\AppData\Local\Temp\ccNbWAxc.s:720    .text.sendMsgLSM9DS1:00000000 $t
C:\Users\Mateusz\AppData\Local\Temp\ccNbWAxc.s:829    .bss:00000004 i.9010
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.35166846b5321d4273ad8c4248893ac3
                           .group:00000000 wm4.LSM9DS1_Driver.h.9.225085f752270af24a0df342ed7d3479
                           .group:00000000 wm4.LSM9DS1_Registers.h.9.72af380d6da01de607f77d245bf32825
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.7aefdac4826acebbfc9f3822a0aeb14c
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.XMC4500.h.45.215f4b8c79f46c7645c15373868d08c0
                           .group:00000000 wm4.core_cm4.h.47.41af406cb4cda82c972f112a9cd0a024
                           .group:00000000 wm4.core_cmInstr.h.39.3d3d1b4a79aef37532666dc6ee87c6ac
                           .group:00000000 wm4.core_cm4_simd.h.43.b5d1d38735af6366227b4256d330cf13
                           .group:00000000 wm4.core_cm4.h.178.e5ef5ce66d198d7f00f9d0076e267c41
                           .group:00000000 wm4.system_XMC4500.h.29.827f68baa362c84f2abae4ab67dde7c9
                           .group:00000000 wm4.XMC4500.h.198.8e022f279ff353ed081df898dc7b9cf3
                           .group:00000000 wm4.stddef.h.40.50cf36416e06376af8a9dca28536f2e4
                           .group:00000000 wm4.types.h.60.e75c47576398c648cdcf9000ace5e3d8
                           .group:00000000 wm4.MULTIPLEXER.h.46.4a863fbae1c79f0db26da3ce2dc30d02
                           .group:00000000 wm4.CCU8PWMLIB.h.74.725ec81203769525cc7a424597055f47
                           .group:00000000 wm4.MOTORLIB.h.62.951091d95913dd2ff36d761323a1771d
                           .group:00000000 wm4.DBG001.h.116.d6d9e7459a0faa3905c97c1d2edb339d
                           .group:00000000 wm4.IO004.h.53.442ea5eb47ad9eedc675253aa35f3107
                           .group:00000000 wm4.uc_id.h.35.fa57ecd9f559d2767f56c96da2848c12
                           .group:00000000 wm4.CLK001_Const.h.50.e5e9c2ddc89f4cc9e7b93e9648fa94e4
                           .group:00000000 wm4.CLK001_Conf.h.81.82a8db895dc146da001475dd68223522
                           .group:00000000 wm4.Usic.h.54.8af9f733ba5771eeb374435d205ea54b
                           .group:00000000 wm4.UART001_Conf.h.53.ea28968cb6c53b1be9f53a4d9f42a86f
                           .group:00000000 wm4.SYSTM001.h.64.6ecb31c49bc3e7691644fdcdfc11b5cd
                           .group:00000000 wm4.I2C001.h.97.5277d52889d6c741e048ea45ee1277b5
                           .group:00000000 wm4.I2C001_Conf.h.58.e3e909c2ec9c29fee288b93938e533a2
                           .group:00000000 wm4.stdio.h.31.f48311dde756a2aec27351b58a280fb9
                           .group:00000000 wm4.stddef.h.161.e50ff8a9d5d1abbc15641da28ac571bf
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4._default_types.h.6.5e12cd604db8ce00b62bb2f02708eaf3
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4.stddef.h.161.c6104a0666cf681b6269ddc9b4f516d4
                           .group:00000000 wm4.reent.h.16.9e42f0e588b85e70b2bf6572af57ce64
                           .group:00000000 wm4.types.h.23.0d949686bbcadd1621462d4fa1f884f9
                           .group:00000000 wm4.types.h.2.e9cec8c90ab35f77d9f499e06ae02400
                           .group:00000000 wm4.types.h.80.1f2c84c0d57dd52dd9936095d9ac218e
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.63.dfdea6580b080784d08faace69b6ed76
                           .group:00000000 wm4.stdlib.h.13.603ed7eb09a1561ab06840b7c0fcff58
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.53.c69c7609933ff56d59c757cec2d13230
                           .group:00000000 wm4.string.h.8.ef946ad0bc9ad5c970c365dcd1fc4b0a
                           .group:00000000 wm4.string.h.86.d5c872ff52e2712c985b588a0ef39f3c

UNDEFINED SYMBOLS
__aeabi_f2d
strcmp
startMeasurements
readAndSendMeasurements
getAccelX
getAccelXf
sprintf
getAccelY
getAccelYf
getAccelZ
getAccelZf
printf
SYSTM001_CreateTimer
SYSTM001_StartTimer
SYSTM001_StopTimer
SYSTM001_DeleteTimer
cleanArray
getGyroXf
getGyroYf
getGyroZf
getMagnetXf
getMagnetYf
getMagnetZf
strlen
send
